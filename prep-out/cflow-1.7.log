Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/cflow-1.7
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 46 files out of 46 in compilation database ...
[ 1/46][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpfosx33vd.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-ba.c
[ 2/46][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp8q5qtay_.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/xsize.c
[ 3/46][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp9crpf902.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/getopt1.c
[ 4/46][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpdvtb7l9x.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-pv.c
[ 5/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpmdnjuqrl.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/getprogname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 6/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpkshvn1_i.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-version-etc.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 7/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmplwi8j_dm.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/c.c
[1mc.c:1053:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1053 |                 if ( ! (yy_start) )[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1054 |                         (yy_start) = 1; /* first start state */[0m
      | [0;1;32m                                                               
[0m[1mc.c:1056:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |                 if ( ! yyin )[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1057 | /* %if-c-only */[0m
 1058 |                         yyin = stdin;[0m
      | [0;1;32m                                     
[0m[1mc.c:1063:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1063 |                 if ( ! yyout )[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1064 | /* %if-c-only */[0m
 1065 |                         yyout = stdout;[0m
      | [0;1;32m                                       
[0m[1mc.c:1114:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1114 |                                 if ( yy_current_state >= 191 )[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1115 |                                         yy_c = yy_meta[(unsigned int) yy_c];[0m
      | [0;1;32m                                                                            
[0m[1mc.c:1141:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1141 |                         if ( yy_act == 0 )[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1142 |                                 fprintf( stderr, "--scanner backing up\n" );[0m
 1143 |                         else if ( yy_act < 81 )[0m
      | [0;32m                        } 
[0m[1mc.c:1143:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1143 |                         else if ( yy_act < 81 )[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1144 |                                 fprintf( stderr, "--accepting rule at line %ld (\"%s\")\n",[0m
 1145 |                                          (long)yy_rule_linenum[yy_act], yytext );[0m
 1146 |                         else if ( yy_act == 81 )[0m
      | [0;32m                        } 
[0m[1mc.c:1146:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1146 |                         else if ( yy_act == 81 )[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1147 |                                 fprintf( stderr, "--accepting default rule (\"%s\")\n",[0m
 1148 |                                          yytext );[0m
 1149 |                         else if ( yy_act == 82 )[0m
      | [0;32m                        } 
[0m[1mc.c:1149:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1149 |                         else if ( yy_act == 82 )[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1150 |                                 fprintf( stderr, "--(end of buffer or a NUL)\n" );[0m
 1151 |                         else[0m
      | [0;32m                        } 
[0m[1mc.c:1151:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1151 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1152 |                                 fprintf( stderr, "--EOF (start condition %d)\n", YY_START );[0m
      | [0;1;32m                                                                                            
[0m[1mc.c:1160:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1160 |                         *yy_cp = (yy_hold_char);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1161 |                         yy_cp = (yy_last_accepting_cpos);[0m
 1162 |                         yy_current_state = (yy_last_accepting_state);[0m
 1163 |                         goto yy_find_action;[0m
      | [0;1;32m                                           
[0m      | [0;32m                                           ;} 
[0m[1mc.c:1675:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1675 |                 else switch ( yy_get_next_buffer(  ) )[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m[1mc.c:1700:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1700 |                                         if ( ! (yy_did_buffer_switch_on_eof) )[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1701 |                                                 YY_NEW_FILE;[0m
      | [0;1;32m                                                            
[0m[1mc.c:1707:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1707 |                                 (yy_c_buf_p) =[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1708 |                                         (yytext_ptr) + yy_amount_of_matched_text;[0m
 1709 | [0m
 1710 |                                 yy_current_state = yy_get_previous_state(  );[0m
 1711 | [0m
 1712 |                                 yy_cp = (yy_c_buf_p);[0m
 1713 |                                 yy_bp = (yytext_ptr) + YY_MORE_ADJ;[0m
 1714 |                                 goto yy_match;[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1mc.c:1717:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1717 |                                 (yy_c_buf_p) =[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1718 |                                 &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];[0m
 1719 | [0m
 1720 |                                 yy_current_state = yy_get_previous_state(  );[0m
 1721 | [0m
 1722 |                                 yy_cp = (yy_c_buf_p);[0m
 1723 |                                 yy_bp = (yytext_ptr) + YY_MORE_ADJ;[0m
 1724 |                                 goto yy_find_action;[0m
      | [0;1;32m                                                   
[0m      | [0;32m                                                   ;} 
[0m[1mc.c:1730:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1730 |                 YY_FATAL_ERROR([0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1731 |                         "fatal flex scanner internal error--no action found" );[0m
      | [0;1;32m                                                                              
[0m      | [0;32m                                                                              ;} 
[0m[1mc.c:982:29: [0m[0;1;36mnote: [0mexpanded from macro 'YY_FATAL_ERROR'[0m
  982 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )[0m
      | [0;1;32m                            ^
[0m[1mc.c:1763:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1763 |         if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m 1764 |                 YY_FATAL_ERROR([0m
 1765 |                 "fatal flex scanner internal error--end of buffer missed" );[0m
      | [0;1;32m                                                                            
[0m[1mc.c:1791:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1791 |         for ( i = 0; i < number_to_move; ++i )[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1792 |                 *(dest++) = *(source++);[0m
      | [0;1;32m                                        
[0m[1mc.c:1794:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1794 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m 1795 |                 /* don't do the read, it's not guaranteed to return an EOF,[0m
 1796 |                  * just force an EOF[0m
 1797 |                  */[0m
 1798 |                 YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;[0m
 1799 | [0m
 1800 |         else[0m
      | [0;32m        } 
[0m[1mc.c:1818:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1818 |                                 if ( new_size <= 0 )[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1819 |                                         b->yy_buf_size += b->yy_buf_size / 8;[0m
 1820 |                                 else[0m
      | [0;32m                                } 
[0m[1mc.c:1820:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1820 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1821 |                                         b->yy_buf_size *= 2;[0m
      | [0;1;32m                                                            
[0m[1mc.c:1827:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1827 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1828 |                                 /* Can't grow it, we don't own it. */[0m
 1829 |                                 b->yy_ch_buf = 0;[0m
      | [0;1;32m                                                 
[0m[1mc.c:1831:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1831 |                         if ( ! b->yy_ch_buf )[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1832 |                                 YY_FATAL_ERROR([0m
 1833 |                                 "fatal error - scanner input buffer overflow" );[0m
      | [0;1;32m                                                                                
[0m[1mc.c:1842:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1842 |                 if ( num_to_read > YY_READ_BUF_SIZE )[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1843 |                         num_to_read = YY_READ_BUF_SIZE;[0m
      | [0;1;32m                                                       
[0m[1mc.c:1868:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1868 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1869 |                 ret_val = EOB_ACT_CONTINUE_SCAN;[0m
      | [0;1;32m                                                
[0m[1mc.c:1875:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1875 |                 if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1876 |                         YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );[0m
      | [0;1;32m                                                                                          
[0m[1mc.c:1917:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1917 |                         if ( yy_current_state >= 191 )[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1918 |                                 yy_c = yy_meta[(unsigned int) yy_c];[0m
      | [0;1;32m                                                                    
[0m[1mc.c:1950:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1950 |                 if ( yy_current_state >= 191 )[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1951 |                         yy_c = yy_meta[(unsigned int) yy_c];[0m
      | [0;1;32m                                                            
[0m[1mc.c:1983:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1983 |                 while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1984 |                         *--dest = *--source;[0m
      | [0;1;32m                                            
[0m[1mc.c:1991:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1991 |                 if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1992 |                         YY_FATAL_ERROR( "flex scanner push-back overflow" );[0m
      | [0;1;32m                                                                            
[0m[1mc.c:2030:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2030 |                 if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m 2031 |                         /* This was really a NUL. */[0m
 2032 |                         *(yy_c_buf_p) = '\0';[0m
 2033 | [0m
 2034 |                 else[0m
      | [0;32m                } 
[0m[1mc.c:2053:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2053 |                                         yyrestart(yyin );[0m
      | [0;1;32m                                        ^               
[0m      | [0;32m                                        {               ;} 
[0m[1mc.c:2059:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2059 |                                         if ( yywrap( ) )[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2060 |                                                 return EOF;[0m
      | [0;1;32m                                                           
[0m[1mc.c:2062:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2062 |                                         if ( ! (yy_did_buffer_switch_on_eof) )[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2063 |                                                 YY_NEW_FILE;[0m
      | [0;1;32m                                                            
[0m[1mc.c:2072:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2072 |                                         (yy_c_buf_p) = (yytext_ptr) + offset;[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                        {
[0m 2073 |                                         break;[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1mc.c:2133:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2133 |         if ( YY_CURRENT_BUFFER == new_buffer )[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2134 |                 return;[0m
      | [0;1;32m                       
[0m[1mc.c:2186:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2186 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2187 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );[0m
      | [0;1;32m                                                                                
[0m[1mc.c:2195:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2195 |         if ( ! b->yy_ch_buf )[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2196 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );[0m
      | [0;1;32m                                                                                
[0m[1mc.c:2219:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2219 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2220 |                 return;[0m
      | [0;1;32m                       
[0m[1mc.c:2222:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2222 |         if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2223 |                 YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;[0m
      | [0;1;32m                                                               
[0m[1mc.c:2225:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2225 |         if ( b->yy_is_our_buffer )[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2226 |                 yyfree((void *) b->yy_ch_buf  );[0m
      | [0;1;32m                                                
[0m[1mc.c:2282:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2282 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2283 |                 return;[0m
      | [0;1;32m                       
[0m[1mc.c:2299:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2299 |         if ( b == YY_CURRENT_BUFFER )[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2300 |                 yy_load_buffer_state( );[0m
      | [0;1;32m                                        
[0m[1mc.c:2316:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2316 |         if (new_buffer == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2317 |                 return;[0m
      | [0;1;32m                       
[0m[1mc.c:2331:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2331 |         if (YY_CURRENT_BUFFER)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2332 |                 (yy_buffer_stack_top)++;[0m
      | [0;1;32m                                        
[0m[1mc.c:2352:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2352 |         if (!YY_CURRENT_BUFFER)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2353 |                 return;[0m
      | [0;1;32m                       
[0m[1mc.c:2357:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2357 |         if ((yy_buffer_stack_top) > 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2358 |                 --(yy_buffer_stack_top);[0m
      | [0;1;32m                                        
[0m[1mc.c:2389:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2389 |                 if ( ! (yy_buffer_stack) )[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2390 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );[0m
      | [0;1;32m                                                                                             
[0m[1mc.c:2409:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2409 |                 if ( ! (yy_buffer_stack) )[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2410 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );[0m
      | [0;1;32m                                                                                             
[0m[1mc.c:2432:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2432 |              base[size-1] != YY_END_OF_BUFFER_CHAR )[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2433 |                 /* They forgot to leave room for the EOB's. */[0m
 2434 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mc.c:2437:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2437 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2438 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );[0m
      | [0;1;32m                                                                              
[0m[1mc.c:2490:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2490 |         if ( ! buf )[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2491 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );[0m
      | [0;1;32m                                                                             
[0m[1mc.c:2493:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2493 |         for ( i = 0; i < _yybytes_len; ++i )[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2494 |                 buf[i] = yybytes[i];[0m
      | [0;1;32m                                    
[0m[1mc.c:2499:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2499 |         if ( ! b )[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2500 |                 YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );[0m
      | [0;1;32m                                                                  
[0m[1mc.c:2872:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2872 |           if (!pp_bin)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2873 |                pp_bin = CFLOW_PREPROC;[0m
      | [0;1;32m                                      
[0m[1mc.c:2887:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2887 |      if (!pp_opts)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2888 |           pp_opts = xstrdup(s);[0m
 2889 |      else {[0m
      | [0;32m     } 
[0m[1mc.c:2905:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2905 |      if (opt_stack)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2906 |           pp_finalize();[0m
      | [0;1;32m                        
[0m[1mc.c:2908:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2908 |      if (pp_opts)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2909 |           size += strlen(pp_opts);[0m
      | [0;1;32m                                  
[0m[1mc.c:2912:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2912 |      if (pp_opts)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2913 |           strcat(s, pp_opts);[0m
      | [0;1;32m                             
[0m[1mc.c:2916:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2916 |      if (debug)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2917 |           fprintf(stderr, _("Command line: %s\n"), s);[0m
      | [0;1;32m                                                      
[0m[1mc.c:2919:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2919 |      if (!fp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2920 |           error(0, errno, _("cannot execute `%s'"), s);[0m
      | [0;1;32m                                                       
[0m[1mc.c:2936:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2936 |      if (!yyin)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2937 |           return 1;[0m
      | [0;1;32m                   
[0m[1mc.c:2938:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2938 |      if (preprocess_option)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2939 |           pp_close(yyin);[0m
 2940 |      else[0m
      | [0;32m     } 
[0m[1mc.c:2940:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2940 |      else[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 2941 |           fclose(yyin);[0m
      | [0;1;32m                       
[0m[1mc.c:2957:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2957 |      if (hit_eof)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2958 |           tok = 0;[0m
 2959 |      else {[0m
      | [0;32m     } 
[0m[1mc.c:2962:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2962 |           if (!tok)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2963 |                hit_eof = 1;[0m
      | [0;1;32m                           
[0m[1mc.c:2981:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2981 |           if (!fp)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2982 |                return 1;[0m
      | [0;1;32m                        
[0m[1mc.c:3002:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3002 |           if (isdigit(c = input()))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3003 |                i = c - '0';[0m
 3004 |           else[0m
      | [0;32m          } 
[0m[1mc.c:3004:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3004 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3005 |                i = toupper(c) - 'A' + 10;[0m
      | [0;1;32m                                         
[0m[1mc.c:3021:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3021 |      case 'a':   return '\a';                  [0m
      | [0;1;32m                 ^          
[0m      | [0;32m                 {          ;} 
[0m[1mc.c:3022:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3022 |      case 'b':   return '\b';                  [0m
      | [0;1;32m                 ^          
[0m      | [0;32m                 {          ;} 
[0m[1mc.c:3023:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3023 |      case 'f':   return '\f';                  [0m
      | [0;1;32m                 ^          
[0m      | [0;32m                 {          ;} 
[0m[1mc.c:3024:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3024 |      case 'n':   return '\n';                  [0m
      | [0;1;32m                 ^          
[0m      | [0;32m                 {          ;} 
[0m[1mc.c:3025:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3025 |      case 'r':   return '\r';                  [0m
      | [0;1;32m                 ^          
[0m      | [0;32m                 {          ;} 
[0m[1mc.c:3026:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3026 |      case 't':   return '\t';                  [0m
      | [0;1;32m                 ^          
[0m      | [0;32m                 {          ;} 
[0m[1mc.c:3027:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3027 |      case 'x':   return getnum(16,2);          [0m
      | [0;1;32m                 ^                  
[0m      | [0;32m                 {                  ;} 
[0m[1mc.c:3028:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3028 |      case '0':   return getnum(8,3);           [0m
      | [0;1;32m                 ^                 
[0m      | [0;32m                 {                 ;} 
[0m[1mc.c:3038:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3038 |      for (p = strchr(yytext, '#')+1; *p && isspace(*p); p++)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 3039 |           ;[0m
      | [0;1;32m           
[0m[1mc.c:3040:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3040 |      if (p[0] == 'l') /* line */[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3041 |           p += 4;[0m
      | [0;1;32m                 
[0m[1mc.c:3044:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3044 |      for ( ; *p && isspace(*p); p++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3045 |           ;[0m
      | [0;1;32m           
[0m[1mc.c:3049:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3049 |           for (p++, n = 0; p[n] && p[n] != '"'; n++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3050 |                ;[0m
      | [0;1;32m                
[0m[1mc.c:3055:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3055 |      if (debug > 1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3056 |           fprintf(stderr, _("New location: %s:%d\n"), filename, line_num);[0m
      | [0;1;32m                                                                          
[0m93 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 8/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpnf3c6fjk.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-eexst.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 9/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp07huimre.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-fs-xinl.c
9 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[10/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp1haz5922.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/progname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[11/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp7pe5g9z5.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-pvh.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[12/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpac8os6zu.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/xmalloc.c
[1mxmalloc.c:56:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |   if (!p && (HAVE_GNU_MALLOC || n))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   57 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:75:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   75 |   if (!r && (n || (HAVE_GNU_REALLOC && !p)))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   76 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:114:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |       || (! (p = calloc (n, s)) && (HAVE_GNU_CALLOC || n != 0)))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  115 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:126:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  126 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:126:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  126 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m10 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[13/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpra0p3lqq.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/fd-hook.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[14/46][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpdk98dzxg.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-xinl.c
1 warning generated.
Suppressed 1 warnings (1 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[15/46][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp9_2ofvfq.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/depmap.c
[1mdepmap.c:58:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |                     while (rowj < rend)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m   59 |                          *rowj++ |= *rp++;[0m
      | [0;1;32m                                          
[0m17 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[16/46][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp2k1yjxrr.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/xalloc-die.c
16 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[17/46][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpjxezh8lr.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/posix.c
[1mposix.c:23:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   23 |      if (sym->decl) [0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   24 |           fprintf(outfile, "%s, <%s %d>",[0m
   25 |                   sym->decl,[0m
   26 |                   sym->source,[0m
   27 |                   sym->def_line);[0m
   28 |      else[0m
      | [0;32m     } 
[0m[1mposix.c:24:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   24 |           fprintf(outfile, "%s, <%s %d>",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mposix.c:24:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   24 |           fprintf(outfile, "%s, <%s %d>",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mposix.c:28:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   28 |      else[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   29 |           fprintf(outfile, "<>");[0m
      | [0;1;32m                                 
[0m[1mposix.c:29:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   29 |           fprintf(outfile, "<>");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mposix.c:29:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   29 |           fprintf(outfile, "<>");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mposix.c:36:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   36 |      fprintf(outfile, "%s: ", s->sym->name);[0m
      | [0;1;32m     ^~~~~~~
[0m[1mposix.c:36:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   36 |      fprintf(outfile, "%s: ", s->sym->name);[0m
      | [0;1;32m     ^~~~~~~
[0m[1mposix.c:40:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   40 |                fprintf(outfile, "%d", s->sym->expand_line);[0m
      | [0;1;32m               ^~~~~~~
[0m[1mposix.c:40:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   40 |                fprintf(outfile, "%d", s->sym->expand_line);[0m
      | [0;1;32m               ^~~~~~~
[0m[1mposix.c:42:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |           } else if (s->sym->callee)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   43 |                s->sym->expand_line = line;[0m
      | [0;1;32m                                          
[0m[1mposix.c:57:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   57 |           if (emacs_option)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m   58 |                error(EX_USAGE, 0,[0m
   59 |                      _("--format=posix is not compatible with --emacs"));[0m
   60 |           brief_listing = print_line_numbers = omit_symbol_names_option = 1;[0m
   61 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mposix.c:57:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |           if (emacs_option)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   58 |                error(EX_USAGE, 0,[0m
   59 |                      _("--format=posix is not compatible with --emacs"));[0m
      | [0;1;32m                                                                         
[0m[1mposix.c:67:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |           fprintf(outfile, "\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mposix.c:67:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   67 |           fprintf(outfile, "\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mposix.c:67:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   67 |           fprintf(outfile, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m   68 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mposix.c:70:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   70 |           fprintf(outfile, "%s", (char*) data);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mposix.c:70:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   70 |           fprintf(outfile, "%s", (char*) data);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mposix.c:70:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   70 |           fprintf(outfile, "%s", (char*) data);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m   71 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mposix.c:73:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   73 |           return print_symbol(outfile, line, data);[0m
      | [0;1;32m          ^                                       
[0m      | [0;32m          {                                       ;} 
[0m30 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[18/46][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpkqsk3hid.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/stat-time.c
[19/46][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpmnltln27.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/malloca.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[20/46][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp4bl_zzni.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/exitfail.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[21/46][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpym0p82ge.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-pin.c
[22/46][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp9r579tpm.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/bitrotate.c
[23/46][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpmfaq3qro.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/version-etc.c
[1mversion-etc.c:68:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   if (command_name)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   69 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
   70 |   else[0m
      | [0;32m  } 
[0m[1mversion-etc.c:69:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   69 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:69:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   69 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:70:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   71 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m                                                  
[0m[1mversion-etc.c:71:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   71 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:71:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   71 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:85:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   85 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:85:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   85 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:90:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   90 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:90:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   90 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:104:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  104 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mversion-etc.c:107:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  107 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:107:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  107 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:107:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  107 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  108 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:111:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  111 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:111:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  111 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:111:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  111 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  112 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:115:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  115 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:115:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  115 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:115:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  115 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  116 |                authors[0], authors[1], authors[2]);[0m
  117 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:122:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  122 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:122:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  122 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:122:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  122 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  123 |                authors[0], authors[1], authors[2], authors[3]);[0m
  124 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:129:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  129 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:129:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  129 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:129:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  129 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  130 |                authors[0], authors[1], authors[2], authors[3], authors[4]);[0m
  131 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:136:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  136 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:136:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  136 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:136:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  136 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  137 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  138 |                authors[5]);[0m
  139 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:144:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  144 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:144:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  144 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:144:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  144 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  145 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  146 |                authors[5], authors[6]);[0m
  147 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:152:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  152 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:152:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  152 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:152:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  152 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  153 | Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"),[0m
  154 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  155 |                 authors[5], authors[6], authors[7]);[0m
  156 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:161:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  161 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:161:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  161 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:161:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  161 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  162 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"),[0m
  163 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  164 |                authors[5], authors[6], authors[7], authors[8]);[0m
  165 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:172:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  172 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:172:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  172 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:172:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  172 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  173 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"),[0m
  174 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  175 |                 authors[5], authors[6], authors[7], authors[8]);[0m
  176 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:191:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |   for (n_authors = 0; authors[n_authors]; n_authors++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  192 |     ;[0m
      | [0;1;32m     
[0m[1mversion-etc.c:211:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |        n_authors++)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  212 |     ;[0m
      | [0;1;32m     
[0m39 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[24/46][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpdxte837e.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/fcntl.c
[1mfcntl.c:331:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  331 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:428:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  428 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:432:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  432 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  433 |               void *p = va_arg (arg, void *);[0m
  434 |               result = fcntl (fd, action, p);[0m
  435 |             }[0m
  436 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mfcntl.c:526:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |           if (result >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  527 |             have_dupfd_cloexec = -1;[0m
      | [0;1;32m                                    
[0m[1mfcntl.c:530:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  531 | # endif[0m
  532 |     result = rpl_fcntl_DUPFD (fd, target);[0m
      | [0;1;32m                                          
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[25/46][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp0oi3h4qc.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/cloexec.c
[1mcloexec.c:52:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |           || fcntl (desc, F_SETFD, newflags) != -1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   53 |         return 0;[0m
      | [0;1;32m                 
[0m1 warning generated.

[26/46][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp_1nx6cl1.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/basename-lgpl.c
[1mbasename-lgpl.c:38:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |   while (ISSLASH (*base))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   39 |     base++;[0m
      | [0;1;32m           
[0m[1mbasename-lgpl.c:43:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |       if (ISSLASH (*p))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   44 |         last_was_slash = true;[0m
   45 |       else if (last_was_slash)[0m
      | [0;32m      } 
[0m[1mbasename-lgpl.c:61:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |   for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   62 |     continue;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:65:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |       && ISSLASH (name[0]) && ISSLASH (name[1]) && ! name[2])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   66 |     return 2;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:69:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |       && len == prefix_len && ISSLASH (name[prefix_len]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   70 |     return prefix_len + 1;[0m
      | [0;1;32m                          
[0m5 warnings generated.

[27/46][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpb779nu8g.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/asnprintf.c
[28/46][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpq7qwglxv.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/unistd.c
[29/46][2.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp9rbtazvg.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/dot.c
[1mdot.c:21:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   21 |      fprintf(fp, "digraph cflow {\n");[0m
      | [0;1;32m     ^~~~~~~
[0m[1mdot.c:21:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   21 |      fprintf(fp, "digraph cflow {\n");[0m
      | [0;1;32m     ^~~~~~~
[0m[1mdot.c:22:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   22 |      fprintf(fp, "    node [shape=\"box\"]\n");     [0m
      | [0;1;32m     ^~~~~~~
[0m[1mdot.c:22:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   22 |      fprintf(fp, "    node [shape=\"box\"]\n");     [0m
      | [0;1;32m     ^~~~~~~
[0m[1mdot.c:28:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   28 |      fprintf(fp, "    %s [label=\"", sym->name);[0m
      | [0;1;32m     ^~~~~~~
[0m[1mdot.c:28:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   28 |      fprintf(fp, "    %s [label=\"", sym->name);[0m
      | [0;1;32m     ^~~~~~~
[0m[1mdot.c:29:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   29 |      if (sym->decl)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   30 |           fprintf(fp, "%s\n%s:%d",[0m
   31 |                   sym->decl, sym->source, sym->def_line);[0m
   32 |      else[0m
      | [0;32m     } 
[0m[1mdot.c:30:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   30 |           fprintf(fp, "%s\n%s:%d",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdot.c:30:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   30 |           fprintf(fp, "%s\n%s:%d",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdot.c:32:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |      else[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   33 |           fprintf(fp, "%s()", sym->name);[0m
      | [0;1;32m                                         
[0m[1mdot.c:33:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   33 |           fprintf(fp, "%s()", sym->name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdot.c:33:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   33 |           fprintf(fp, "%s()", sym->name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdot.c:34:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   34 |      fprintf(fp, "\"]\n");[0m
      | [0;1;32m     ^~~~~~~
[0m[1mdot.c:34:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   34 |      fprintf(fp, "\"]\n");[0m
      | [0;1;32m     ^~~~~~~
[0m[1mdot.c:44:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |      if (s->sym->active)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   45 |           return;[0m
      | [0;1;32m                 
[0m[1mdot.c:46:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   46 |      if (s->sym->expand_line)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   47 |           return;[0m
   48 |      else {[0m
      | [0;32m     } 
[0m[1mdot.c:55:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |           if (include_symbol(sym))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   56 |                fprintf(fp, "    %s -> %s\n", s->sym->name, sym->name);[0m
      | [0;1;32m                                                                      
[0m[1mdot.c:56:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   56 |                fprintf(fp, "    %s -> %s\n", s->sym->name, sym->name);[0m
      | [0;1;32m               ^~~~~~~
[0m[1mdot.c:56:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   56 |                fprintf(fp, "    %s -> %s\n", s->sym->name, sym->name);[0m
      | [0;1;32m               ^~~~~~~
[0m[1mdot.c:67:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   67 |           dot_begin(outfile);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m   68 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdot.c:70:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   70 |           fprintf(outfile, "}\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdot.c:70:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   70 |           fprintf(outfile, "}\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mdot.c:70:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   70 |           fprintf(outfile, "}\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m   71 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mdot.c:73:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   73 |           dot_print_symbol(outfile, line, data);[0m
      | [0;1;32m          ^                                    
[0m      | [0;32m          {                                    ;} 
[0m[1mdot.c:75:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   75 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m33 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[30/46][3.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp0l9pvwo3.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/gnu.c
[1mgnu.c:22:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   22 |      fprintf(outfile, "%s", sym->name);[0m
      | [0;1;32m     ^~~~~~~
[0m[1mgnu.c:22:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   22 |      fprintf(outfile, "%s", sym->name);[0m
      | [0;1;32m     ^~~~~~~
[0m[1mgnu.c:23:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   23 |      if (sym->arity >= 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   24 |           fprintf(outfile, "()");[0m
      | [0;1;32m                                 
[0m[1mgnu.c:24:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   24 |           fprintf(outfile, "()");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:24:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   24 |           fprintf(outfile, "()");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:25:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   25 |      if (sym->decl)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   26 |           fprintf(outfile, " <%s at %s:%d>",[0m
   27 |                   sym->decl,[0m
   28 |                   sym->source,[0m
   29 |                   sym->def_line);[0m
      | [0;1;32m                                 
[0m[1mgnu.c:26:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   26 |           fprintf(outfile, " <%s at %s:%d>",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:26:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   26 |           fprintf(outfile, " <%s at %s:%d>",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:31:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   31 |           fprintf(outfile, " (recursive: see %d)", sym->active-1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:31:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   31 |           fprintf(outfile, " (recursive: see %d)", sym->active-1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:34:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   34 |      if (sym->recursive)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   35 |           fprintf(outfile, " (R)");[0m
      | [0;1;32m                                   
[0m[1mgnu.c:35:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   35 |           fprintf(outfile, " (R)");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:35:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   35 |           fprintf(outfile, " (R)");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:36:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |      if (!print_as_tree && has_subtree)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m   37 |           fprintf(outfile, ":");[0m
      | [0;1;32m                                
[0m[1mgnu.c:37:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   37 |           fprintf(outfile, ":");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:37:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   37 |           fprintf(outfile, ":");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:53:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   53 |                fprintf(outfile, " [see %d]", s->sym->expand_line);[0m
      | [0;1;32m               ^~~~~~~
[0m[1mgnu.c:53:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   53 |                fprintf(outfile, " [see %d]", s->sym->expand_line);[0m
      | [0;1;32m               ^~~~~~~
[0m[1mgnu.c:55:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |           } else if (s->sym->callee)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   56 |                s->sym->expand_line = line;[0m
      | [0;1;32m                                          
[0m[1mgnu.c:68:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   68 |           if (emacs_option) {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m   69 |                fprintf(outfile, ";; This file is generated by %s. -*- cflow -*-",[0m
   70 |                        PACKAGE_STRING);[0m
   71 |                newline();[0m
   72 |           }[0m
   73 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mgnu.c:69:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   69 |                fprintf(outfile, ";; This file is generated by %s. -*- cflow -*-",[0m
      | [0;1;32m               ^~~~~~~
[0m[1mgnu.c:69:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   69 |                fprintf(outfile, ";; This file is generated by %s. -*- cflow -*-",[0m
      | [0;1;32m               ^~~~~~~
[0m[1mgnu.c:79:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   79 |           fprintf(outfile, "\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:79:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   79 |           fprintf(outfile, "\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:79:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   79 |           fprintf(outfile, "\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m   80 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mgnu.c:82:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   82 |           fprintf(outfile, "%s", (char*) data);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:82:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   82 |           fprintf(outfile, "%s", (char*) data);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgnu.c:82:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   82 |           fprintf(outfile, "%s", (char*) data);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m   83 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mgnu.c:85:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   85 |           return print_symbol(outfile, line, data);[0m
      | [0;1;32m          ^                                       
[0m      | [0;32m          {                                       ;} 
[0m35 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[31/46][4.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpaucghvgf.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/obstack.c
[1mobstack.c:88:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   88 |   if (h->use_extra_arg)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   89 |     return h->chunkfun.extra (h->extra_arg, size);[0m
   90 |   else[0m
      | [0;32m  } 
[0m[1mobstack.c:90:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   91 |     return h->chunkfun.plain (size);[0m
      | [0;1;32m                                    
[0m[1mobstack.c:97:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |   if (h->use_extra_arg)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   98 |     h->freefun.extra (h->extra_arg, old_chunk);[0m
   99 |   else[0m
      | [0;32m  } 
[0m[1mobstack.c:99:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  100 |     h->freefun.plain (old_chunk);[0m
      | [0;1;32m                                 
[0m[1mobstack.c:116:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |   if (alignment == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  117 |     alignment = DEFAULT_ALIGNMENT;[0m
      | [0;1;32m                                  
[0m[1mobstack.c:139:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  139 |   if (!chunk)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  140 |     (*obstack_alloc_failed_handler) ();[0m
      | [0;1;32m                                       
[0m[1mobstack.c:195:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (new_size < sum2)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  196 |     new_size = sum2;[0m
      | [0;1;32m                    
[0m[1mobstack.c:197:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   if (new_size < h->chunk_size)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  198 |     new_size = h->chunk_size;[0m
      | [0;1;32m                             
[0m[1mobstack.c:201:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |   if (obj_size <= sum1 && sum1 <= sum2)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  202 |     new_chunk = call_chunkfun (h, new_size);[0m
      | [0;1;32m                                            
[0m[1mobstack.c:203:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |   if (!new_chunk)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  204 |     (*obstack_alloc_failed_handler)();[0m
      | [0;1;32m                                      
[0m[1mobstack.c:214:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  214 |   memcpy (object_base, h->object_base, obj_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mobstack.c:214:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  214 |   memcpy (object_base, h->object_base, obj_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mobstack.c:288:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |   else if (obj != 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  289 |     /* obj is not in any of the chunks! */[0m
  290 |     abort ();[0m
      | [0;1;32m             
[0m[1mobstack.c:342:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  342 |   fprintf (stderr, "%s\n", _("memory exhausted"));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mobstack.c:342:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  342 |   fprintf (stderr, "%s\n", _("memory exhausted"));[0m
      | [0;1;32m  ^~~~~~~
[0m25 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[32/46][4.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp99_c3pxt.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/rc.c
[1mrc.c:34:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   34 |      for (i = 0; i < argc; i++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   35 |           (*argv_ptr)[*argc_ptr + i] = xstrdup(argv[i]);[0m
      | [0;1;32m                                                        
[0m[1mrc.c:53:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |      if (stat(name, &st))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   54 |           return;[0m
      | [0;1;32m                 
[0m[1mrc.c:62:6: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
   62 |      buf[size] = 0;[0m
      | [0;1;32m     ^
[0m[1mrc.c:102:10: [0m[0;1;36mnote: [0m'env' is null[0m
  102 |      if (env) {[0m
      | [0;1;32m         ^~~
[0m[1mrc.c:102:6: [0m[0;1;36mnote: [0mTaking false branch[0m
  102 |      if (env) {[0m
      | [0;1;32m     ^
[0m[1mrc.c:114:12: [0m[0;1;36mnote: [0mTaint originated here[0m
  114 |      env = getenv("CFLOWRC");[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~
[0m[1mrc.c:114:12: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  114 |      env = getenv("CFLOWRC");[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~
[0m[1mrc.c:114:12: [0m[0;1;36mnote: [0mAssuming the environment variable exists[0m
  114 |      env = getenv("CFLOWRC");[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~
[0m[1mrc.c:115:10: [0m[0;1;36mnote: [0m'env' is non-null[0m
  115 |      if (env) [0m
      | [0;1;32m         ^~~
[0m[1mrc.c:115:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  115 |      if (env) [0m
      | [0;1;32m     ^
[0m[1mrc.c:116:4: [0m[0;1;36mnote: [0mCalling 'parse_rc'[0m
  116 |           parse_rc(&xargc, &xargv, env);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrc.c:53:6: [0m[0;1;36mnote: [0mTaking false branch[0m
   53 |      if (stat(name, &st))[0m
      | [0;1;32m     ^
[0m[1mrc.c:56:15: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
   56 |      rcfile = fopen(name, "r");[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~
[0m[1mrc.c:56:15: [0m[0;1;36mnote: [0mAssuming that 'fopen' is successful[0m
   56 |      rcfile = fopen(name, "r");[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~
[0m[1mrc.c:57:11: [0m[0;1;36mnote: [0m'rcfile' is non-null[0m
   57 |      if (!rcfile) {[0m
      | [0;1;32m          ^~~~~~
[0m[1mrc.c:57:6: [0m[0;1;36mnote: [0mTaking false branch[0m
   57 |      if (!rcfile) {[0m
      | [0;1;32m     ^
[0m[1mrc.c:61:13: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
   61 |      size = fread(buf, 1, st.st_size, rcfile);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrc.c:61:13: [0m[0;1;36mnote: [0mAssuming that 'fread' fails[0m
   61 |      size = fread(buf, 1, st.st_size, rcfile);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrc.c:62:6: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
   62 |      buf[size] = 0;[0m
      | [0;1;32m     ^~~~~~~~~
[0m[1mrc.c:70:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |           if (wordsplit(p, &ws, wsflags))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   71 |                error(EX_FATAL, 0, "%s:%d: %s",[0m
   72 |                      name, line, wordsplit_strerror(&ws));[0m
      | [0;1;32m                                                          
[0m[1mrc.c:74:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |           if (ws.ws_wordc)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   75 |                expand_argcv(argc_ptr, argv_ptr, ws.ws_wordc, ws.ws_wordv);[0m
      | [0;1;32m                                                                          
[0m[1mrc.c:77:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |      if (wsflags & WRDSF_REUSE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   78 |           wordsplit_free(&ws);[0m
      | [0;1;32m                              
[0m[1mrc.c:106:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |           if (wordsplit(env, &ws, WRDSF_DEFFLAGS | WRDSF_COMMENT))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  107 |                error(EX_FATAL, 0, "failed to parse CFLOW_OPTIONS: %s",[0m
  108 |                      wordsplit_strerror(&ws));[0m
      | [0;1;32m                                              
[0m[1mrc.c:109:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |           if (ws.ws_wordc)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  110 |                expand_argcv(&xargc, &xargv, ws.ws_wordc, ws.ws_wordv);[0m
      | [0;1;32m                                                                      
[0m[1mrc.c:115:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |      if (env) [0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  116 |           parse_rc(&xargc, &xargv, env);[0m
  117 |      else {[0m
      | [0;32m     } 
[0m[1mrc.c:123:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |                if (!buf)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  124 |                     return;[0m
      | [0;1;32m                           
[0m[1mrc.c:125:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  125 |                strcpy(buf, home);[0m
      | [0;1;32m               ^~~~~~
[0m[1mrc.c:125:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  125 |                strcpy(buf, home);[0m
      | [0;1;32m               ^~~~~~
[0m[1mrc.c:126:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |                if (home[len-1] != '/')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  127 |                     buf[len++] = '/';[0m
      | [0;1;32m                                     
[0m[1mrc.c:128:9: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  128 |                strcpy(buf+len, LOCAL_RC);[0m
      | [0;1;32m               ^~~~~~
[0m[1mrc.c:128:9: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  128 |                strcpy(buf+len, LOCAL_RC);[0m
      | [0;1;32m               ^~~~~~
[0m29 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[33/46][4.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpef9kx0tl.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/linked-list.c
[1mlinked-list.c:51:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |      if (list->tail)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   52 |           list->tail->next = entry;[0m
   53 |      else[0m
      | [0;32m     } 
[0m[1mlinked-list.c:53:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |      else[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   54 |           list->head = entry;[0m
      | [0;1;32m                             
[0m[1mlinked-list.c:86:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |                if (list->free_data)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   87 |                     list->free_data(p->data);[0m
      | [0;1;32m                                             
[0m[1mlinked-list.c:101:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |      if ((p = ent->prev))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  102 |           p->next = ent->next;[0m
  103 |      else[0m
      | [0;32m     } 
[0m[1mlinked-list.c:103:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |      else[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  104 |           list->head = ent->next;[0m
      | [0;1;32m                                 
[0m[1mlinked-list.c:106:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |      if ((p = ent->next))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  107 |           p->prev = ent->prev;[0m
  108 |      else[0m
      | [0;32m     } 
[0m[1mlinked-list.c:108:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |      else[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  109 |           list->tail = ent->prev;[0m
      | [0;1;32m                                 
[0m[1mlinked-list.c:110:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |      if (list->free_data)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  111 |           list->free_data(ent->data);[0m
      | [0;1;32m                                     
[0m[1mlinked-list.c:122:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |      if (!*plist)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  123 |           return;[0m
      | [0;1;32m                 
[0m[1mlinked-list.c:128:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |           if (itr(p->data, data))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  129 |                linked_list_unlink(list, p);[0m
      | [0;1;32m                                           
[0m[1mlinked-list.c:132:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  132 |      if (!list->head)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  133 |           linked_list_destroy(&list);[0m
      | [0;1;32m                                     
[0m[1mlinked-list.c:142:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |      for (p = linked_list_head(list); p; p = p->next)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  143 |           if (p->data == data)[0m
  144 |                return 1;[0m
      | [0;1;32m                        
[0m[1mlinked-list.c:143:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |           if (p->data == data)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  144 |                return 1;[0m
      | [0;1;32m                        
[0m[1mlinked-list.c:154:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |           for (p = linked_list_head(list); p; p = p->next)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  155 |                size++;[0m
      | [0;1;32m                      
[0m30 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[34/46][6.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp93lp6j6i.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/printf-args.c
[1mprintf-args.c:43:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |   for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m[1mprintf-args.c:47:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   47 |         ap->a.a_schar = va_arg (args, /*signed char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   48 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:50:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   50 |         ap->a.a_uchar = va_arg (args, /*unsigned char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   51 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:53:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   53 |         ap->a.a_short = va_arg (args, /*short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   54 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:56:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   56 |         ap->a.a_ushort = va_arg (args, /*unsigned short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   57 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:59:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   59 |         ap->a.a_int = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   60 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:62:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   62 |         ap->a.a_uint = va_arg (args, unsigned int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   63 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:65:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   65 |         ap->a.a_longint = va_arg (args, long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   66 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:68:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   68 |         ap->a.a_ulongint = va_arg (args, unsigned long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   69 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:71:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   71 |         ap->a.a_longlongint = va_arg (args, long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   72 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:74:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   74 |         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   75 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:77:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   77 |         ap->a.a_double = va_arg (args, double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   78 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:80:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   80 |         ap->a.a_longdouble = va_arg (args, long double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   81 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:83:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   83 |         ap->a.a_char = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   84 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:90:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   90 |         ap->a.a_wide_char =[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   91 |           (sizeof (wint_t) < sizeof (int)[0m
   92 |            ? (wint_t) va_arg (args, int)[0m
   93 |            : va_arg (args, wint_t));[0m
   94 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:97:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   97 |         ap->a.a_string = va_arg (args, const char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   98 |         /* A null pointer is an invalid argument for "%s", but in practice[0m
   99 |            it occurs quite frequently in printf statements that produce[0m
  100 |            debug output.  Use a fallback in this case.  */[0m
  101 |         if (ap->a.a_string == NULL)[0m
  102 |           ap->a.a_string = "(NULL)";[0m
  103 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:101:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |         if (ap->a.a_string == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  102 |           ap->a.a_string = "(NULL)";[0m
      | [0;1;32m                                    
[0m[1mprintf-args.c:106:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  106 |         ap->a.a_wide_string = va_arg (args, const wchar_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  107 |         /* A null pointer is an invalid argument for "%ls", but in practice[0m
  108 |            it occurs quite frequently in printf statements that produce[0m
  109 |            debug output.  Use a fallback in this case.  */[0m
  110 |         if (ap->a.a_wide_string == NULL)[0m
  111 |           {[0m
  112 |             static const wchar_t wide_null_string[] =[0m
  113 |               {[0m
  114 |                 (wchar_t)'(',[0m
  115 |                 (wchar_t)'N', (wchar_t)'U', (wchar_t)'L', (wchar_t)'L',[0m
  116 |                 (wchar_t)')',[0m
  117 |                 (wchar_t)0[0m
  118 |               };[0m
  119 |             ap->a.a_wide_string = wide_null_string;[0m
  120 |           }[0m
  121 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:124:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  124 |         ap->a.a_pointer = va_arg (args, void *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  125 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:127:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |         ap->a.a_count_schar_pointer = va_arg (args, signed char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  128 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:130:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  130 |         ap->a.a_count_short_pointer = va_arg (args, short *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  131 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:133:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  133 |         ap->a.a_count_int_pointer = va_arg (args, int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  134 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:136:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  136 |         ap->a.a_count_longint_pointer = va_arg (args, long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  137 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:139:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  139 |         ap->a.a_count_longlongint_pointer = va_arg (args, long long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  140 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:182:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  182 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m25 warnings generated.

[35/46][80.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpyaz_43ow.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/printf-parse.c
[1mprintf-parse.c:160:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |               for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  161 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:166:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  167 |                     n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                         
[0m[1mprintf-parse.c:168:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |                   if (n == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  169 |                     /* Positional argument 0.  */[0m
  170 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:171:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |                   if (size_overflow_p (n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  172 |                     /* n too large, would lead to out of memory later.  */[0m
  173 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:219:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  220 |                 break;[0m
      | [0;1;32m                      
[0m[1mprintf-parse.c:229:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |               if (max_width_length < 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  230 |                 max_width_length = 1;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:237:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  238 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:243:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  244 |                         n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                             
[0m[1mprintf-parse.c:245:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |                       if (n == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  246 |                         /* Positional argument 0.  */[0m
  247 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:248:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |                       if (size_overflow_p (n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  249 |                         /* n too large, would lead to out of memory later.  */[0m
  250 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:258:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |                   if (dp->width_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  259 |                     /* arg_posn wrapped around.  */[0m
  260 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:262:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  262 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:124:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  124 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:262:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  262 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:124:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  124 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:269:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |               for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  270 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:273:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |               if (max_width_length < width_length)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  274 |                 max_width_length = width_length;[0m
      | [0;1;32m                                                
[0m[1mprintf-parse.c:286:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |                   if (max_precision_length < 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  287 |                     max_precision_length = 2;[0m
      | [0;1;32m                                             
[0m[1mprintf-parse.c:294:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  295 |                         ;[0m
      | [0;1;32m                         
[0m[1mprintf-parse.c:300:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |                           for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  301 |                             n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                                 
[0m[1mprintf-parse.c:302:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |                           if (n == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  303 |                             /* Positional argument 0.  */[0m
  304 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:305:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                           if (size_overflow_p (n))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  306 |                             /* n too large, would lead to out of memory[0m
  307 |                                later.  */[0m
  308 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:316:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |                       if (dp->precision_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  317 |                         /* arg_posn wrapped around.  */[0m
  318 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:320:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  320 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:124:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  124 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:320:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  320 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:124:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  124 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:327:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  327 |                   for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  328 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:331:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  331 |                   if (max_precision_length < precision_length)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  332 |                     max_precision_length = precision_length;[0m
      | [0;1;32m                                                            
[0m[1mprintf-parse.c:443:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  444 |                     break;[0m
      | [0;1;32m                          
[0m[1mprintf-parse.c:453:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  454 |                     type = TYPE_LONGLONGINT;[0m
  455 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:458:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  459 |                     type = TYPE_LONGINT;[0m
  460 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:460:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  461 |                     type = TYPE_SCHAR;[0m
  462 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:462:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  463 |                     type = TYPE_SHORT;[0m
  464 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:464:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  465 |                     type = TYPE_INT;[0m
      | [0;1;32m                                    
[0m[1mprintf-parse.c:466:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  466 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:469:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  470 |                     type = TYPE_ULONGLONGINT;[0m
  471 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:474:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  475 |                     type = TYPE_ULONGINT;[0m
  476 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:476:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  477 |                     type = TYPE_UCHAR;[0m
  478 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:478:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  478 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  479 |                     type = TYPE_USHORT;[0m
  480 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:480:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  481 |                     type = TYPE_UINT;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:482:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  482 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:485:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  485 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  486 |                     type = TYPE_LONGDOUBLE;[0m
  487 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:487:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  488 |                     type = TYPE_DOUBLE;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:489:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  489 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:491:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  492 | #if HAVE_WINT_T[0m
  493 |                     type = TYPE_WIDE_CHAR;[0m
  494 | #else[0m
  495 |                     goto error;[0m
  496 | #endif[0m
  497 |                   else[0m
  498 |                     type = TYPE_CHAR;[0m
  499 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:491:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  492 | #if HAVE_WINT_T[0m
  493 |                     type = TYPE_WIDE_CHAR;[0m
  494 | #else[0m
  495 |                     goto error;[0m
  496 | #endif[0m
  497 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:497:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  497 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  498 |                     type = TYPE_CHAR;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:502:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  502 |                   type = TYPE_WIDE_CHAR;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  503 |                   c = 'c';[0m
  504 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:507:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  507 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  508 | #if HAVE_WCHAR_T[0m
  509 |                     type = TYPE_WIDE_STRING;[0m
  510 | #else[0m
  511 |                     goto error;[0m
  512 | #endif[0m
  513 |                   else[0m
  514 |                     type = TYPE_STRING;[0m
  515 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:507:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  507 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  508 | #if HAVE_WCHAR_T[0m
  509 |                     type = TYPE_WIDE_STRING;[0m
  510 | #else[0m
  511 |                     goto error;[0m
  512 | #endif[0m
  513 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:513:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  513 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  514 |                     type = TYPE_STRING;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:518:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  518 |                   type = TYPE_WIDE_STRING;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  519 |                   c = 's';[0m
  520 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:523:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  523 |                   type = TYPE_POINTER;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  524 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:527:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  527 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  528 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  529 |                   else[0m
  530 |                   /* If 'long long' is the same as 'long', we parse "lln" into[0m
  531 |                      TYPE_COUNT_LONGINT_POINTER.  */[0m
  532 |                   if (flags >= 8)[0m
  533 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  534 |                   else if (flags & 2)[0m
  535 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  536 |                   else if (flags & 1)[0m
  537 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  538 |                   else[0m
  539 |                     type = TYPE_COUNT_INT_POINTER;[0m
  540 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:527:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  528 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  529 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:532:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  533 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  534 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:534:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  534 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  535 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  536 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:536:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  537 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  538 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:538:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  539 |                     type = TYPE_COUNT_INT_POINTER;[0m
      | [0;1;32m                                                  
[0m[1mprintf-parse.c:553:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  553 |                   type = TYPE_NONE;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  554 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:557:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  557 |                   goto error;[0m
      | [0;1;32m                  ^         
[0m      | [0;32m                  {         ;} 
[0m[1mprintf-parse.c:567:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |                     if (dp->arg_index == ARG_NONE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  568 |                       /* arg_posn wrapped around.  */[0m
  569 |                       goto error;[0m
      | [0;1;32m                                 
[0m[1mprintf-parse.c:571:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  571 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:124:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  124 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:571:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  571 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:124:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  124 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:585:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |               if (size_overflow_p (memory_size))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  586 |                 /* Overflow, would lead to out of memory.  */[0m
  587 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:591:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |               if (memory == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  592 |                 /* Out of memory.  */[0m
  593 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:594:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |               if (d->dir == d->direct_alloc_dir)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  595 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                                                                       
[0m[1mprintf-parse.c:595:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  595 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:595:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  595 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:614:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  615 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:616:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  616 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  617 |     free (d->dir);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:622:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  622 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  623 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:624:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  624 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  625 |     free (d->dir);[0m
      | [0;1;32m                  
[0m68 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[36/46][95.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpy8mwsfqb.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-parse.c
[1margp-parse.c:98:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   98 |       __argp_state_help (state, state->out_stream, ARGP_HELP_STD_HELP);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m   99 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./argp-namefrob.h:44:27: [0m[0;1;36mnote: [0mexpanded from macro '__argp_state_help'[0m
   44 | #define __argp_state_help argp_state_help[0m
      | [0;1;32m                          ^
[0m[1margp-parse.c:101:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  101 |       __argp_state_help (state, state->out_stream,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  102 |                          ARGP_HELP_USAGE | ARGP_HELP_EXIT_OK);[0m
  103 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./argp-namefrob.h:44:27: [0m[0;1;36mnote: [0mexpanded from macro '__argp_state_help'[0m
   44 | #define __argp_state_help argp_state_help[0m
      | [0;1;32m                          ^
[0m[1margp-parse.c:107:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  107 |       program_invocation_name = arg;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1margp-parse.c:121:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |           == ARGP_PARSE_ARGV0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  122 |         /* Update what getopt uses too.  */[0m
  123 |         state->argv[0] = arg;[0m
      | [0;1;32m                             
[0m[1margp-parse.c:128:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  128 |       _argp_hang = atoi (arg ? arg : "3600");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  129 |       while (_argp_hang-- > 0)[0m
  130 |         __sleep (1);[0m
  131 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1margp-parse.c:129:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |       while (_argp_hang-- > 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  130 |         __sleep (1);[0m
      | [0;1;32m                    
[0m[1margp-parse.c:134:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |       return EBADKEY;[0m
      | [0;1;32m      ^             
[0m      | [0;32m      {             ;} 
[0m[1margp-parse.c:155:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  155 |       if (argp_program_version_hook)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  156 |         (*argp_program_version_hook) (state->out_stream, state);[0m
  157 |       else if (argp_program_version)[0m
  158 |         fprintf (state->out_stream, "%s\n", argp_program_version);[0m
  159 |       else[0m
  160 |         __argp_error (state, "%s",[0m
  161 |                       dgettext (state->root_argp->argp_domain,[0m
  162 |                                 "(PROGRAM ERROR) No version known!?"));[0m
  163 |       if (! (state->flags & ARGP_NO_EXIT))[0m
  164 |         exit (0);[0m
  165 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1margp-parse.c:155:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |       if (argp_program_version_hook)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  156 |         (*argp_program_version_hook) (state->out_stream, state);[0m
  157 |       else if (argp_program_version)[0m
      | [0;32m      } 
[0m[1margp-parse.c:157:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |       else if (argp_program_version)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  158 |         fprintf (state->out_stream, "%s\n", argp_program_version);[0m
  159 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:158:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  158 |         fprintf (state->out_stream, "%s\n", argp_program_version);[0m
      | [0;1;32m        ^~~~~~~
[0m[1margp-parse.c:158:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  158 |         fprintf (state->out_stream, "%s\n", argp_program_version);[0m
      | [0;1;32m        ^~~~~~~
[0m[1margp-parse.c:159:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  160 |         __argp_error (state, "%s",[0m
  161 |                       dgettext (state->root_argp->argp_domain,[0m
  162 |                                 "(PROGRAM ERROR) No version known!?"));[0m
      | [0;1;32m                                                                       
[0m[1margp-parse.c:163:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |       if (! (state->flags & ARGP_NO_EXIT))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  164 |         exit (0);[0m
      | [0;1;32m                 
[0m[1margp-parse.c:167:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  167 |       return EBADKEY;[0m
      | [0;1;32m      ^             
[0m      | [0;32m      {             ;} 
[0m[1margp-parse.c:182:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |   while (l->name != NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  183 |     if (name != NULL && strcmp (l->name, name) == 0)[0m
  184 |       return l - long_options;[0m
  185 |     else[0m
  186 |       l++;[0m
      | [0;1;32m          
[0m[1margp-parse.c:183:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  183 |     if (name != NULL && strcmp (l->name, name) == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  184 |       return l - long_options;[0m
  185 |     else[0m
      | [0;32m    } 
[0m[1margp-parse.c:185:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  186 |       l++;[0m
      | [0;1;32m          
[0m[1margp-parse.c:187:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |   if (name == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  188 |     return l - long_options;[0m
  189 |   else[0m
      | [0;32m  } 
[0m[1margp-parse.c:189:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  190 |     return -1;[0m
      | [0;1;32m              
[0m[1margp-parse.c:240:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  241 |     return EBADKEY;[0m
      | [0;1;32m                   
[0m[1margp-parse.c:304:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |       if (real)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m[1margp-parse.c:307:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |             if (! (opt->flags & OPTION_ALIAS))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  308 |               /* OPT isn't an alias, so we can use values from it.  */[0m
  309 |               real = opt;[0m
      | [0;1;32m                         
[0m[1margp-parse.c:321:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |                         if (real->flags & OPTION_ARG_OPTIONAL)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  322 |                           *cvt->short_end++ = ':';[0m
      | [0;1;32m                                                  
[0m[1margp-parse.c:370:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |           while (children[num_children].argp)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  371 |             num_children++;[0m
      | [0;1;32m                           
[0m[1margp-parse.c:378:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  379 |     parent = 0;[0m
      | [0;1;32m               
[0m[1margp-parse.c:384:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |       while (children->argp)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  385 |         group =[0m
  386 |           convert_options (children++->argp, parent, index++, group, cvt);[0m
      | [0;1;32m                                                                          
[0m[1margp-parse.c:403:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |   if (flags & ARGP_IN_ORDER)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  404 |     *cvt.short_end++ = '-';[0m
  405 |   else if (flags & ARGP_NO_ARGS)[0m
      | [0;32m  } 
[0m[1margp-parse.c:405:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |   else if (flags & ARGP_NO_ARGS)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  406 |     *cvt.short_end++ = '+';[0m
      | [0;1;32m                           
[0m[1margp-parse.c:407:3: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  407 |   *cvt.short_end = '\0';[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:887:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  887 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:887:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  887 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:900:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  900 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:900:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  900 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:924:9: [0m[0;1;36mnote: [0mCalling 'parser_init'[0m
  924 |   err = parser_init (&parser, argp, argc, argv, flags, input);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:474:20: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  474 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:474:19: [0m[0;1;36mnote: [0m'?' condition is true[0m
  474 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                  ^
[0m[1margp-parse.c:479:7: [0m[0;1;36mnote: [0mAssuming 'argp' is null[0m
  479 |   if (argp)[0m
      | [0;1;32m      ^~~~
[0m[1margp-parse.c:479:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  479 |   if (argp)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:499:7: [0m[0;1;36mnote: [0mAssuming field 'storage' is non-null[0m
  499 |   if (! parser->storage)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:499:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  499 |   if (! parser->storage)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:510:3: [0m[0;1;36mnote: [0mCalling 'parser_convert'[0m
  510 |   parser_convert (parser, argp, flags);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:403:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  403 |   if (flags & ARGP_IN_ORDER)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:403:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  403 |   if (flags & ARGP_IN_ORDER)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:407:3: [0m[0;1;36mnote: [0mAccess of the heap area at index 105, while it holds only 105 'char' elements[0m
  407 |   *cvt.short_end = '\0';[0m
      | [0;1;32m  ^~~~~~~~~~~~~~
[0m[1margp-parse.c:413:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  413 |   if (argp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  414 |     parser->egroup = convert_options (argp, 0, 0, parser->groups, &cvt);[0m
  415 |   else[0m
      | [0;32m  } 
[0m[1margp-parse.c:415:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  415 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  416 |     parser->egroup = parser->groups; /* No parsers at all! */[0m
      | [0;1;32m                                                             
[0m[1margp-parse.c:444:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |           while (!__option_is_end (opt++))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  445 |             num_opts++;[0m
      | [0;1;32m                       
[0m[1margp-parse.c:451:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  452 |     while (child->argp)[0m
  453 |       {[0m
  454 |         calc_sizes ((child++)->argp, szs);[0m
  455 |         szs->num_child_inputs++;[0m
  456 |       }[0m
      | [0;1;32m       
[0m[1margp-parse.c:479:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |   if (argp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  480 |     calc_sizes (argp, &szs);[0m
      | [0;1;32m                            
[0m[1margp-parse.c:499:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  499 |   if (! parser->storage)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  500 |     return ENOMEM;[0m
      | [0;1;32m                  
[0m[1margp-parse.c:509:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  509 |   memset (parser->child_inputs, 0, clen);[0m
      | [0;1;32m  ^~~~~~
[0m[1margp-parse.c:509:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  509 |   memset (parser->child_inputs, 0, clen);[0m
      | [0;1;32m  ^~~~~~
[0m[1margp-parse.c:512:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  512 |   memset (&parser->state, 0, sizeof (struct argp_state));[0m
      | [0;1;32m  ^~~~~~
[0m[1margp-parse.c:512:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  512 |   memset (&parser->state, 0, sizeof (struct argp_state));[0m
      | [0;1;32m  ^~~~~~
[0m[1margp-parse.c:526:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  527 |     parser->groups->input = input;[0m
      | [0;1;32m                                  
[0m[1margp-parse.c:532:18: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  532 |       if (group->parent)[0m
      | [0;1;32m                 ^
[0m[1margp-parse.c:887:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  887 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:887:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  887 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:900:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  900 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:900:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  900 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:924:9: [0m[0;1;36mnote: [0mCalling 'parser_init'[0m
  924 |   err = parser_init (&parser, argp, argc, argv, flags, input);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:474:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  474 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:474:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  474 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                  ^
[0m[1margp-parse.c:479:7: [0m[0;1;36mnote: [0mAssuming 'argp' is non-null[0m
  479 |   if (argp)[0m
      | [0;1;32m      ^~~~
[0m[1margp-parse.c:479:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  479 |   if (argp)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:499:7: [0m[0;1;36mnote: [0mAssuming field 'storage' is non-null[0m
  499 |   if (! parser->storage)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:499:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  499 |   if (! parser->storage)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:526:15: [0m[0;1;36mnote: [0mField 'groups' is < field 'egroup'[0m
  526 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m              ^
[0m[1margp-parse.c:526:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  526 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:529:8: [0m[0;1;36mnote: [0m'group' is < field 'egroup'[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~
[0m[1margp-parse.c:529:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:529:36: [0m[0;1;36mnote: [0m'err' is 0[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                   ^~~
[0m[1margp-parse.c:529:40: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                       ^
[0m[1margp-parse.c:532:18: [0m[0;1;36mnote: [0mField 'parent' is null[0m
  532 |       if (group->parent)[0m
      | [0;1;32m                 ^
[0m[1margp-parse.c:532:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  532 |       if (group->parent)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:536:19: [0m[0;1;36mnote: [0mField 'parser' is non-null[0m
  536 |       if (!group->parser[0m
      | [0;1;32m                  ^
[0m[1margp-parse.c:537:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  537 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m          ^
[0m[1margp-parse.c:529:8: [0m[0;1;36mnote: [0mAssuming 'group' is < field 'egroup'[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:529:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:529:35: [0m[0;1;36mnote: [0mAssuming 'err' is 0[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                  ^~~~
[0m[1margp-parse.c:529:40: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                       ^
[0m[1margp-parse.c:532:11: [0m[0;1;36mnote: [0mAssuming field 'parent' is null[0m
  532 |       if (group->parent)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1margp-parse.c:532:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  532 |       if (group->parent)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:536:11: [0m[0;1;36mnote: [0mAssuming field 'parser' is null[0m
  536 |       if (!group->parser[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1margp-parse.c:536:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:537:14: [0m[0;1;36mnote: [0mAssuming field 'children' is null[0m
  537 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:537:36: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  537 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m                                   ^
[0m[1margp-parse.c:529:8: [0m[0;1;36mnote: [0mAssuming 'group' is < field 'egroup'[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:529:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:529:36: [0m[0;1;36mnote: [0m'err' is 7[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                   ^~~
[0m[1margp-parse.c:529:35: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                  ^
[0m[1margp-parse.c:528:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  528 |   for (group = parser->groups;[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:532:11: [0m[0;1;36mnote: [0mAssuming field 'parent' is null[0m
  532 |       if (group->parent)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1margp-parse.c:532:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  532 |       if (group->parent)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:536:11: [0m[0;1;36mnote: [0mAssuming field 'parser' is null[0m
  536 |       if (!group->parser[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1margp-parse.c:536:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:537:14: [0m[0;1;36mnote: [0mAssuming field 'children' is null[0m
  537 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:537:36: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  537 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m                                   ^
[0m[1margp-parse.c:529:8: [0m[0;1;36mnote: [0mAssuming 'group' is < field 'egroup'[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:529:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:529:36: [0m[0;1;36mnote: [0m'err' is 7[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                   ^~~
[0m[1margp-parse.c:529:35: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                  ^
[0m[1margp-parse.c:528:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  528 |   for (group = parser->groups;[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:532:18: [0m[0;1;36mnote: [0mAccess of the heap area at byte offset 216, while it holds only 178 bytes[0m
  532 |       if (group->parent)[0m
      | [0;1;32m          ~~~~~~~^~~~~~
[0m[1margp-parse.c:532:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |       if (group->parent)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  533 |         /* If a child parser, get the initial input value from the parent. */[0m
  534 |         group->input = group->parent->child_inputs[group->parent_index];[0m
      | [0;1;32m                                                                        
[0m[1margp-parse.c:537:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  538 |         /* For the special case where no parsing function is supplied for an[0m
  539 |            argp, propagate its input to its first child, if any (this just[0m
  540 |            makes very simple wrapper argps more convenient).  */[0m
  541 |         group->child_inputs[0] = group->input;[0m
      | [0;1;32m                                              
[0m[1margp-parse.c:545:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   if (err == EBADKEY)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  546 |     err = 0;                    /* Some parser didn't understand.  */[0m
      | [0;1;32m                                                                     
[0m[1margp-parse.c:548:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  548 |   if (err)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  549 |     return err;[0m
      | [0;1;32m               
[0m[1margp-parse.c:554:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |       if (parser->state.flags & ARGP_PARSE_ARGV0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  555 |         /* getopt always skips ARGV[0], so we have to fake it out.  As long[0m
  556 |            as OPTERR is 0, then it shouldn't actually try to access it.  */[0m
  557 |         parser->state.argv--, parser->state.argc++;[0m
      | [0;1;32m                                                   
[0m[1margp-parse.c:559:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  560 |     parser->opt_data.opterr = 1;        /* Print error messages.  */[0m
      | [0;1;32m                                                                    
[0m[1margp-parse.c:562:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  562 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  563 |     /* There's an argv[0]; use it for messages.  */[0m
  564 |     parser->state.name = __argp_base_name (argv[0]);[0m
  565 |   else[0m
      | [0;32m  } 
[0m[1margp-parse.c:565:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  565 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  566 |     parser->state.name = __argp_short_program_name ();[0m
      | [0;1;32m                                                      
[0m[1margp-parse.c:578:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  578 |   if (err == EBADKEY && arg_ebadkey)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  579 |     /* Suppress errors generated by unparsed arguments.  */[0m
  580 |     err = 0;[0m
      | [0;1;32m            
[0m[1margp-parse.c:590:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |                group++)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  591 |             if (group->args_processed == 0)[0m
  592 |               err = group_parse (group, &parser->state, ARGP_KEY_NO_ARGS, 0);[0m
      | [0;1;32m                                                                             
[0m[1margp-parse.c:591:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |             if (group->args_processed == 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  592 |               err = group_parse (group, &parser->state, ARGP_KEY_NO_ARGS, 0);[0m
      | [0;1;32m                                                                             
[0m[1margp-parse.c:595:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |                group--)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  596 |             err = group_parse (group, &parser->state, ARGP_KEY_END, 0);[0m
      | [0;1;32m                                                                       
[0m[1margp-parse.c:598:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  598 |           if (err == EBADKEY)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  599 |             err = 0;            /* Some parser didn't understand.  */[0m
      | [0;1;32m                                                                     
[0m[1margp-parse.c:602:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  602 |           if (end_index)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  603 |             *end_index = parser->state.next;[0m
      | [0;1;32m                                            
[0m[1margp-parse.c:605:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |       else if (end_index)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  606 |         /* Return any remaining arguments to the user.  */[0m
  607 |         *end_index = parser->state.next;[0m
  608 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:612:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |               && parser->state.err_stream)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  613 |             fprintf (parser->state.err_stream,[0m
  614 |                      dgettext (parser->argp->argp_domain,[0m
  615 |                                "%s: Too many arguments\n"),[0m
  616 |                      parser->state.name);[0m
      | [0;1;32m                                         
[0m[1margp-parse.c:613:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  613 |             fprintf (parser->state.err_stream,[0m
      | [0;1;32m            ^~~~~~~
[0m[1margp-parse.c:613:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  613 |             fprintf (parser->state.err_stream,[0m
      | [0;1;32m            ^~~~~~~
[0m[1margp-parse.c:627:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  627 |       if (err == EBADKEY)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  628 |         /* An appropriate message describing what the error was should have[0m
  629 |            been printed earlier.  */[0m
  630 |         __argp_state_help (&parser->state, parser->state.err_stream,[0m
  631 |                            ARGP_HELP_STD_ERR);[0m
      | [0;1;32m                                              
[0m[1margp-parse.c:634:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |       for (group = parser->groups; group < parser->egroup; group++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  635 |         group_parse (group, &parser->state, ARGP_KEY_ERROR, 0);[0m
      | [0;1;32m                                                               
[0m[1margp-parse.c:645:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  645 |            ; group--)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  646 |         err = group_parse (group, &parser->state, ARGP_KEY_SUCCESS, 0);[0m
      | [0;1;32m                                                                       
[0m[1margp-parse.c:647:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |       if (err == EBADKEY)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  648 |         err = 0;                /* Some parser didn't understand.  */[0m
      | [0;1;32m                                                                     
[0m[1margp-parse.c:652:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |   for (group = parser->egroup - 1; group >= parser->groups; group--)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  653 |     group_parse (group, &parser->state, ARGP_KEY_FINI, 0);[0m
      | [0;1;32m                                                          
[0m[1margp-parse.c:655:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  655 |   if (err == EBADKEY)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  656 |     err = EINVAL;[0m
      | [0;1;32m                 
[0m[1margp-parse.c:698:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  698 |       if (key == ARGP_KEY_ARGS)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  699 |         /* The default for ARGP_KEY_ARGS is to assume that if NEXT isn't[0m
  700 |            changed by the user, *all* arguments should be considered[0m
  701 |            consumed.  */[0m
  702 |         parser->state.next = parser->state.argc;[0m
      | [0;1;32m                                                
[0m[1margp-parse.c:704:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |       if (parser->state.next > index)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  705 |         /* Remember that we successfully processed a non-option[0m
  706 |            argument -- but only if the user hasn't gotten tricky and set[0m
  707 |            the clock back.  */[0m
  708 |         (--group)->args_processed += (parser->state.next - index);[0m
  709 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:709:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  709 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  710 |         /* The user wants to reparse some args, give getopt another try.  */[0m
  711 |         parser->try_getopt = 1;[0m
      | [0;1;32m                               
[0m[1margp-parse.c:735:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |       if (short_index)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  736 |         for (group = parser->groups; group < parser->egroup; group++)[0m
  737 |           if (group->short_end > short_index)[0m
  738 |             {[0m
  739 |               err = group_parse (group, &parser->state, opt,[0m
  740 |                                  parser->opt_data.optarg);[0m
  741 |               break;[0m
  742 |             }[0m
      | [0;1;32m             
[0m[1margp-parse.c:736:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  736 |         for (group = parser->groups; group < parser->egroup; group++)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  737 |           if (group->short_end > short_index)[0m
  738 |             {[0m
  739 |               err = group_parse (group, &parser->state, opt,[0m
  740 |                                  parser->opt_data.optarg);[0m
  741 |               break;[0m
  742 |             }[0m
      | [0;1;32m             
[0m[1margp-parse.c:762:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  762 |       if (group_key == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  763 |         __argp_error (&parser->state, "-%c: %s", opt,[0m
  764 |                       dgettext (parser->argp->argp_domain, bad_key_err));[0m
  765 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:768:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  768 |           while (long_opt->val != opt && long_opt->name)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  769 |             long_opt++;[0m
      | [0;1;32m                       
[0m[1margp-parse.c:789:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |   if (parser->state.quoted && parser->state.next < parser->state.quoted)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  790 |     /* The next argument pointer has been moved to before the quoted[0m
  791 |        region, so pretend we never saw the quoting "--", and give getopt[0m
  792 |        another chance.  If the user hasn't removed it, getopt will just[0m
  793 |        process it again.  */[0m
  794 |     parser->state.quoted = 0;[0m
      | [0;1;32m                             
[0m[1margp-parse.c:803:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  803 |       if (parser->state.flags & ARGP_LONG_ONLY)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  804 |         opt = _getopt_long_only_r (parser->state.argc, parser->state.argv,[0m
  805 |                                    parser->short_opts, parser->long_opts, 0,[0m
  806 |                                    &parser->opt_data);[0m
  807 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:807:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  808 |         opt = _getopt_long_r (parser->state.argc, parser->state.argv,[0m
  809 |                               parser->short_opts, parser->long_opts, 0,[0m
  810 |                               &parser->opt_data);[0m
      | [0;1;32m                                                 
[0m[1margp-parse.c:808:13: [0m[0;1;35mwarning: [0m[1mPotential memory leak [clang-analyzer-unix.Malloc][0m
  808 |         opt = _getopt_long_r (parser->state.argc, parser->state.argv,[0m
      | [0;1;32m            ^
[0m[1margp-parse.c:887:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  887 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:887:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  887 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:900:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  900 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:900:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  900 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:924:9: [0m[0;1;36mnote: [0mCalling 'parser_init'[0m
  924 |   err = parser_init (&parser, argp, argc, argv, flags, input);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:474:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  474 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:474:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  474 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                  ^
[0m[1margp-parse.c:479:7: [0m[0;1;36mnote: [0mAssuming 'argp' is null[0m
  479 |   if (argp)[0m
      | [0;1;32m      ^~~~
[0m[1margp-parse.c:479:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  479 |   if (argp)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:498:21: [0m[0;1;36mnote: [0mMemory is allocated[0m
  498 |   parser->storage = malloc (ssum);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~
[0m[1margp-parse.c:499:7: [0m[0;1;36mnote: [0mAssuming field 'storage' is non-null[0m
  499 |   if (! parser->storage)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:499:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  499 |   if (! parser->storage)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:526:15: [0m[0;1;36mnote: [0mField 'groups' is >= field 'egroup'[0m
  526 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m              ^
[0m[1margp-parse.c:526:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  526 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:529:8: [0m[0;1;36mnote: [0m'group' is >= field 'egroup'[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~
[0m[1margp-parse.c:529:31: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  529 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                              ^
[0m[1margp-parse.c:545:7: [0m[0;1;36mnote: [0m'err' is not equal to EBADKEY[0m
  545 |   if (err == EBADKEY)[0m
      | [0;1;32m      ^~~
[0m[1margp-parse.c:545:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  545 |   if (err == EBADKEY)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:548:7: [0m[0;1;36mnote: [0m'err' is 0[0m
  548 |   if (err)[0m
      | [0;1;32m      ^~~
[0m[1margp-parse.c:548:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  548 |   if (err)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:551:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  551 |   if (parser->state.flags & ARGP_NO_ERRS)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:551:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  551 |   if (parser->state.flags & ARGP_NO_ERRS)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:562:29: [0m[0;1;36mnote: [0m'argv' is equal to field 'argv'[0m
  562 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m                            ^~~~
[0m[1margp-parse.c:562:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  562 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:562:37: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  562 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m                                    ^~~~~~~
[0m[1margp-parse.c:562:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  562 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:924:9: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  924 |   err = parser_init (&parser, argp, argc, argv, flags, input);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:926:9: [0m[0;1;36mnote: [0m'err' is 0[0m
  926 |   if (! err)[0m
      | [0;1;32m        ^~~
[0m[1margp-parse.c:926:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  926 |   if (! err)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:929:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  929 |       while (! err)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:930:15: [0m[0;1;36mnote: [0mCalling 'parser_parse_next'[0m
  930 |         err = parser_parse_next (&parser, &arg_ebadkey);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:789:7: [0m[0;1;36mnote: [0mAssuming field 'quoted' is 0[0m
  789 |   if (parser->state.quoted && parser->state.next < parser->state.quoted)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:789:28: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  789 |   if (parser->state.quoted && parser->state.next < parser->state.quoted)[0m
      | [0;1;32m                           ^
[0m[1margp-parse.c:796:15: [0m[0;1;36mnote: [0mField 'try_getopt' is 1[0m
  796 |   if (parser->try_getopt && !parser->state.quoted)[0m
      | [0;1;32m              ^
[0m[1margp-parse.c:796:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  796 |   if (parser->try_getopt && !parser->state.quoted)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:796:44: [0m[0;1;36mnote: [0mField 'quoted' is 0[0m
  796 |   if (parser->try_getopt && !parser->state.quoted)[0m
      | [0;1;32m                                           ^
[0m[1margp-parse.c:796:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  796 |   if (parser->try_getopt && !parser->state.quoted)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:803:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  803 |       if (parser->state.flags & ARGP_LONG_ONLY)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:803:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  803 |       if (parser->state.flags & ARGP_LONG_ONLY)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:808:13: [0m[0;1;36mnote: [0mPotential memory leak[0m
  808 |         opt = _getopt_long_r (parser->state.argc, parser->state.argv,[0m
      | [0;1;32m            ^
[0m[1margp-parse.c:821:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  821 |                    == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  822 |             /* Not only is this the end of the options, but it's a[0m
  823 |                "quoted" region, which may have args that *look* like[0m
  824 |                options, so we definitely shouldn't try to use getopt past[0m
  825 |                here, whatever happens.  */[0m
  826 |             parser->state.quoted = parser->state.next;[0m
      | [0;1;32m                                                      
[0m[1margp-parse.c:837:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  837 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  838 |     opt = KEY_END;[0m
      | [0;1;32m                  
[0m[1margp-parse.c:858:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  858 |   if (opt == KEY_ARG)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  859 |     /* A non-option argument; try each parser in turn.  */[0m
  860 |     err = parser_parse_arg (parser, parser->opt_data.optarg);[0m
  861 |   else[0m
      | [0;32m  } 
[0m[1margp-parse.c:861:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  861 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  862 |     err = parser_parse_opt (parser, opt, parser->opt_data.optarg);[0m
      | [0;1;32m                                                                  
[0m[1margp-parse.c:864:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  864 |   if (err == EBADKEY)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  865 |     *arg_ebadkey = (opt == KEY_END || opt == KEY_ARG);[0m
      | [0;1;32m                                                      
[0m[1margp-parse.c:890:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  890 |       if (!program_invocation_name)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  891 |         program_invocation_name = argv[0];[0m
      | [0;1;32m                                          
[0m[1margp-parse.c:894:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  894 |       if (!program_invocation_short_name)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  895 |         program_invocation_short_name = __argp_base_name (argv[0]);[0m
      | [0;1;32m                                                                   
[0m[1margp-parse.c:908:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  908 |       memset (top_argp, 0, sizeof (*top_argp));[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-parse.c:908:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  908 |       memset (top_argp, 0, sizeof (*top_argp));[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-parse.c:911:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  911 |       memset (child, 0, 4 * sizeof (struct argp_child));[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-parse.c:911:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  911 |       memset (child, 0, 4 * sizeof (struct argp_child));[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-parse.c:913:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  913 |       if (argp)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  914 |         (child++)->argp = argp;[0m
      | [0;1;32m                               
[0m[1margp-parse.c:916:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  916 |       if (argp_program_version || argp_program_version_hook)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  917 |         (child++)->argp = &argp_version_argp;[0m
      | [0;1;32m                                             
[0m[1margp-parse.c:929:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  929 |       while (! err)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  930 |         err = parser_parse_next (&parser, &arg_ebadkey);[0m
      | [0;1;32m                                                        
[0m[1margp-parse.c:950:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  950 |       for (group = parser->groups; group < parser->egroup; group++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  951 |         if (group->argp == argp)[0m
  952 |           return group->input;[0m
      | [0;1;32m                              
[0m[1margp-parse.c:951:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  951 |         if (group->argp == argp)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  952 |           return group->input;[0m
      | [0;1;32m                              
[0m101 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[37/46][97.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp9k5dz_o1.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/main.c
[1mmain.c:239:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |      if (len == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  240 |           len = strlen(str);[0m
      | [0;1;32m                            
[0m[1mmain.c:274:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |      if (!ptr)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  275 |           error(EX_USAGE, 0, _("%s: no symbol type supplied"), str);[0m
  276 |      else {[0m
      | [0;32m     } 
[0m[1mmain.c:278:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |           if (!name)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  279 |                xalloc_die();[0m
      | [0;1;32m                            
[0m[1mmain.c:308:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |                if (type == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  309 |                     error(EX_USAGE, 0, _("unknown symbol type: %s"), ptr+1);[0m
      | [0;1;32m                                                                            
[0m[1mmain.c:334:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |           if (isdigit(c))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  335 |                i = c - '0';[0m
  336 |           else[0m
      | [0;32m          } 
[0m[1mmain.c:336:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  337 |                i = toupper(c) - 'A' + 10;[0m
      | [0;1;32m                                         
[0m[1mmain.c:386:6: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  386 |      memset(text, ' ', sizeof(text));[0m
      | [0;1;32m     ^~~~~~
[0m[1mmain.c:386:6: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  386 |      memset(text, ' ', sizeof(text));[0m
      | [0;1;32m     ^~~~~~
[0m[1mmain.c:392:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  392 |                switch (*++str) {[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m[1mmain.c:394:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  394 |                     *p++ = '\a';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  395 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:397:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  397 |                     *p++ = '\b';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  398 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:400:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  400 |                     *p++ = '\033';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  401 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:403:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  403 |                     *p++ = '\f';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  404 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:406:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  406 |                     *p++ = '\n';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  407 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:409:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  409 |                     *p++ = '\r';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  410 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:412:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  412 |                     *p++ = '\t';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  413 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:417:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  417 |                     *p++ = number(&str,16,2);[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  418 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:420:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  420 |                     ++str;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  421 |                     *p++ = number(&str,8,3);[0m
  422 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:424:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  424 |                     *p++ = *str;[0m
      | [0;1;32m                    ^          
[0m      | [0;32m                    {          ;} 
[0m[1mmain.c:429:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  429 |                if (p == text) {[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  430 |                     goto copy;[0m
  431 |                }[0m
  432 |                num = strtol(str+1, (char**)&str, 10);[0m
  433 |                c = p[-1];[0m
  434 |                for (i = 1; i < num; i++) {[0m
  435 |                     *p++ = c;[0m
  436 |                     if (*p == 0)[0m
  437 |                          error(EX_USAGE, 0,[0m
  438 |                                _("level indent string is too long"));[0m
  439 |                }[0m
  440 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mmain.c:436:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |                     if (*p == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  437 |                          error(EX_USAGE, 0,[0m
  438 |                                _("level indent string is too long"));[0m
      | [0;1;32m                                                                     
[0m[1mmain.c:442:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  442 |           copy:[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  443 |                *p++ = *str++;[0m
  444 |                if (*p == 0)[0m
  445 |                     error(EX_USAGE, 0, _("level indent string is too long"));[0m
      | [0;1;32m                                                                            
[0m      | [0;32m                                                                            ;} 
[0m[1mmain.c:444:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |                if (*p == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  445 |                     error(EX_USAGE, 0, _("level indent string is too long"));[0m
      | [0;1;32m                                                                             
[0m[1mmain.c:462:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  462 |           memset(s, ' ', n-1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mmain.c:462:4: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  462 |           memset(s, ' ', n-1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mmain.c:470:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |           if (*p == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  471 |                error(EX_USAGE, 0, _("level-indent syntax"));[0m
      | [0;1;32m                                                            
[0m[1mmain.c:478:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  478 |           parse_level_string(p, &level_begin);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  479 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:481:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  481 |           parse_level_string(p, &level_indent[0]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  482 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:484:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  484 |           parse_level_string(p, &level_indent[1]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  485 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:487:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |           parse_level_string(p, &level_end[0]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  488 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:490:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  490 |           parse_level_string(p, &level_end[1]);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  491 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:493:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  493 |           error(EX_USAGE, 0, _("unknown level indent option: %s"), str);[0m
      | [0;1;32m          ^                                                            
[0m      | [0;32m          {                                                            ;} 
[0m[1mmain.c:507:6: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  507 |      sprintf(opt, "-%c%s", key, arg);[0m
      | [0;1;32m     ^~~~~~~
[0m[1mmain.c:507:6: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  507 |      sprintf(opt, "-%c%s", key, arg);[0m
      | [0;1;32m     ^~~~~~~
[0m[1mmain.c:556:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  556 |           all_functions++;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  557 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:559:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  559 |           strict_ansi = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  560 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:562:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  562 |           strict_ansi = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  563 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:565:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  565 |           debug = arg ? atoi(arg) : 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  566 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:568:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  568 |           use_indentation = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  569 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:571:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  571 |           use_indentation = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  572 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:574:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  574 |           print_as_tree = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  575 |           set_level_indent("0=  "); /* two spaces */[0m
  576 |           set_level_indent("1=| ");[0m
  577 |           set_level_indent("end0=+-");[0m
  578 |           set_level_indent("end1=\\\\-");[0m
  579 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:581:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  581 |           print_as_tree = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  582 |           level_indent[0] = level_indent[1] = NULL;[0m
  583 |           level_end[0] = level_end[1] = NULL;[0m
  584 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:586:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  586 |           brief_listing = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  587 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:589:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  589 |           brief_listing = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  590 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:592:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  592 |           max_depth = atoi(arg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  593 |           if (max_depth < 0)[0m
  594 |                max_depth = 0;[0m
  595 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:593:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |           if (max_depth < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  594 |                max_depth = 0;[0m
      | [0;1;32m                             
[0m[1mmain.c:597:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  597 |           emacs_option = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  598 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:600:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  600 |           emacs_option = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  601 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:603:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  603 |           if (select_output_driver(arg))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  604 |                error(EX_USAGE, 0, _("%s: No such output driver"), optarg);[0m
  605 |           output_init();[0m
  606 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:603:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |           if (select_output_driver(arg))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  604 |                error(EX_USAGE, 0, _("%s: No such output driver"), optarg);[0m
      | [0;1;32m                                                                          
[0m[1mmain.c:608:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  608 |           set_level_indent(arg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  609 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:611:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  611 |           num = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mmain.c:612:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |           for (; *arg; arg++) [0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m[1mmain.c:617:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  617 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mmain.c:619:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  619 |                     num = 1;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  620 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmain.c:626:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |                     if (num)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  627 |                          SYMBOL_INCLUDE(*arg);[0m
  628 |                     else[0m
      | [0;32m                    } 
[0m[1mmain.c:628:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  628 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  629 |                          SYMBOL_EXCLUDE(*arg);[0m
      | [0;1;32m                                              
[0m[1mmain.c:630:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  630 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mmain.c:632:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  632 |                     error(EX_USAGE, 0, _("Unknown symbol class: %c"), *arg);[0m
      | [0;1;32m                    ^                                                      
[0m      | [0;32m                    {                                                      ;} 
[0m[1mmain.c:636:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  636 |           omit_arguments_option = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  637 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:639:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  639 |           omit_arguments_option = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  640 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:642:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  642 |           omit_symbol_names_option = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  643 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:645:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  645 |           omit_symbol_names_option = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  646 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:648:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  648 |           print_levels = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  649 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:651:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  651 |           print_levels = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  652 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:654:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  654 |           install_starter(arg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  655 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:657:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  657 |           clear_starters();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  658 |           no_main_option = 1;[0m
  659 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:661:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  661 |           print_line_numbers = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  662 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:664:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  664 |           print_line_numbers = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  665 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:667:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  667 |           outname = strdup(arg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  668 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:670:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  670 |           num = atoi(arg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  671 |           if (num > 0)[0m
  672 |                token_stack_length = num;[0m
  673 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:671:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |           if (num > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  672 |                token_stack_length = num;[0m
      | [0;1;32m                                        
[0m[1mmain.c:675:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  675 |           reverse_tree = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  676 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:678:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  678 |           reverse_tree = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  679 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:681:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  681 |           symbol_override(arg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  682 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:684:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  684 |           verbose = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  685 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:687:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  687 |           verbose = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  688 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:690:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  690 |           print_option = PRINT_XREF;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  691 |           SYMBOL_EXCLUDE('s'); /* Exclude static symbols by default */[0m
  692 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:694:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  694 |           preprocess_option = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  695 |           set_preprocessor(arg ? arg : CFLOW_PREPROC);[0m
  696 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:698:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  698 |           preprocess_option = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  699 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:701:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  701 |           add_name(arg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  702 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:707:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  707 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mmain.c:709:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  709 |           install_target(arg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  710 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:712:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  712 |           cflow_help(state);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  713 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmain.c:715:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  715 |           return ARGP_ERR_UNKNOWN;[0m
      | [0;1;32m          ^                      
[0m      | [0;32m          {                      ;} 
[0m[1mmain.c:741:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  741 |      if (!sym)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  742 |           return 0;[0m
      | [0;1;32m                   
[0m[1mmain.c:744:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |      if (sym->visible != output_visible)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  745 |           return 0;[0m
      | [0;1;32m                   
[0m[1mmain.c:748:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |           if (sym->name[0] == '_' && !(symbol_map & SM_UNDERSCORE))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  749 |                return 0;[0m
      | [0;1;32m                        
[0m[1mmain.c:751:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |           if (sym->storage == StaticStorage)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  752 |                type |= SM_STATIC;[0m
      | [0;1;32m                                 
[0m[1mmain.c:753:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |           if (sym->arity == -1 && sym->storage != AutoStorage)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  754 |                type |= SM_DATA;[0m
  755 |           else if (sym->arity >= 0)[0m
      | [0;32m          } 
[0m[1mmain.c:755:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |           else if (sym->arity >= 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  756 |                type |= SM_FUNCTIONS;[0m
      | [0;1;32m                                    
[0m[1mmain.c:758:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  758 |           if (!sym->source)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  759 |                type |= SM_UNDEFINED;[0m
      | [0;1;32m                                    
[0m[1mmain.c:762:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  762 |           if (sym->token_type == TYPE && sym->source)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  763 |                type |= SM_TYPEDEF;[0m
  764 |           else[0m
      | [0;32m          } 
[0m[1mmain.c:764:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  764 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  765 |                return 0;[0m
      | [0;1;32m                        
[0m[1mmain.c:780:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |      if (level_indent[0] == NULL) [0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  781 |           level_indent[0] = "    "; /* 4 spaces */[0m
      | [0;1;32m                                                  
[0m[1mmain.c:782:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  782 |      if (level_indent[1] == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  783 |           level_indent[1] = level_indent[0];[0m
      | [0;1;32m                                            
[0m[1mmain.c:784:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |      if (level_end[0] == NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  785 |           level_end[0] = "";[0m
      | [0;1;32m                            
[0m[1mmain.c:786:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  786 |      if (level_end[1] == NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  787 |           level_end[1] = "";[0m
      | [0;1;32m                            
[0m[1mmain.c:828:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  828 |      if (argp_parse(&argp, argc, argv, ARGP_IN_ORDER, &index, NULL))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  829 |           exit(EX_USAGE);[0m
      | [0;1;32m                         
[0m[1mmain.c:831:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |      if (!no_main_option)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  832 |           set_default_starter();[0m
      | [0;1;32m                                
[0m[1mmain.c:834:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  834 |      if (print_option == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  835 |           print_option = PRINT_TREE;[0m
      | [0;1;32m                                    
[0m[1mmain.c:854:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  854 |                if (source(s) == 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  855 |                     yyparse();[0m
      | [0;1;32m                              
[0m[1mmain.c:863:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  863 |           if (source(*argv++) == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  864 |                yyparse();[0m
  865 |           else[0m
      | [0;32m          } 
[0m[1mmain.c:865:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  865 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  866 |                status = EX_SOFT;[0m
      | [0;1;32m                                
[0m[1mmain.c:869:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  869 |      if (input_file_count == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  870 |              error(EX_USAGE, 0, _("no input files"));[0m
      | [0;1;32m                                                     
[0m120 warnings generated.
Suppressed 18 warnings (18 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[38/46][107.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp188y54hw.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/symbol.c
[1msymbol.c:52:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |      if (!t->sym)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   53 |           return ((size_t) data) % n_buckets;[0m
      | [0;1;32m                                             
[0m[1msymbol.c:72:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |      if (!symbol_table)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   73 |           return NULL;[0m
      | [0;1;32m                      
[0m[1msymbol.c:79:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |           while (sym->type == SymToken && sym->flag == symbol_alias)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m   80 |                sym = sym->alias;[0m
      | [0;1;32m                                
[0m[1msymbol.c:81:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   81 |      } else[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   82 |           sym = NULL;[0m
      | [0;1;32m                     
[0m[1msymbol.c:95:6: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   95 |      memset(sym, 0, sizeof(*sym));[0m
      | [0;1;32m     ^~~~~~
[0m[1msymbol.c:95:6: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   95 |      memset(sym, 0, sizeof(*sym));[0m
      | [0;1;32m     ^~~~~~
[0m[1msymbol.c:108:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |      } else[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  109 |           sym->flag = symbol_none;[0m
      | [0;1;32m                                  
[0m[1msymbol.c:115:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |             && (ret = hash_insert (symbol_table, tp))))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  116 |           xalloc_die ();[0m
      | [0;1;32m                        
[0m[1msymbol.c:124:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  124 |           if (ret->sym->type != SymUndefined) [0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  125 |                sym->next = ret->sym;[0m
      | [0;1;32m                                    
[0m[1msymbol.c:136:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |      if (sp->storage == storage)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  137 |           return;[0m
      | [0;1;32m                 
[0m[1msymbol.c:138:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |      if (sp->storage == StaticStorage)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  139 |           /* FIXME */;[0m
      | [0;1;32m                      
[0m[1msymbol.c:143:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  143 |           append_symbol(&static_symbol_list, sp);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  144 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msymbol.c:146:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  146 |           append_symbol(&auto_symbol_list, sp);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  147 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1msymbol.c:149:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  149 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1msymbol.c:191:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |                if (prev)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  192 |                     prev->next = next;[0m
  193 |                else[0m
      | [0;32m               } 
[0m[1msymbol.c:193:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |                else[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  194 |                     tp->sym = next;[0m
      | [0;1;32m                                   
[0m[1msymbol.c:196:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |           } else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  197 |                prev = s;[0m
      | [0;1;32m                        
[0m[1msymbol.c:234:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |      if (!t)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  235 |           return;[0m
      | [0;1;32m                 
[0m[1msymbol.c:248:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |           if (symbol_is_function(sym))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  249 |                linked_list_append(&static_func_list, sym);[0m
      | [0;1;32m                                                          
[0m[1msymbol.c:370:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |      if (snum) [0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  371 |           for (p = linked_list_head(static_func_list); p; p = p->next)[0m
  372 |                symbols[num++] = p->data;[0m
      | [0;1;32m                                        
[0m[1msymbol.c:371:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |           for (p = linked_list_head(static_func_list); p; p = p->next)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  372 |                symbols[num++] = p->data;[0m
      | [0;1;32m                                        
[0m[1msymbol.c:388:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |      if (!t)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  389 |           return 1;[0m
      | [0;1;32m                   
[0m[1msymbol.c:428:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  428 |      if (!data_in_list(sp, start_symbol_list))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  429 |           linked_list_append(&start_symbol_list, sp);[0m
      | [0;1;32m                                                     
[0m[1msymbol.c:436:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |      if (!linked_list_head(start_symbol_list))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  437 |           install_starter("main");[0m
      | [0;1;32m                                  
[0m[1msymbol.c:467:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |      if (!itr)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  468 |           return NULL;[0m
      | [0;1;32m                      
[0m[1msymbol.c:487:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |      if (!data_in_list(sp, target_symbol_list))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  488 |           linked_list_append(&target_symbol_list, sp);[0m
      | [0;1;32m                                                      
[0m[1msymbol.c:497:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  497 |      if (sym->active)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  498 |           return;[0m
      | [0;1;32m                 
[0m[1msymbol.c:515:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |      if (!p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  516 |           return;[0m
      | [0;1;32m                 
[0m43 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[39/46][108.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmplmvyjasf.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/output.c
[1moutput.c:47:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |      if (print_line_numbers) [0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   48 |           fprintf(outfile, "%5d ", out_line);[0m
      | [0;1;32m                                             
[0m[1moutput.c:48:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   48 |           fprintf(outfile, "%5d ", out_line);[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:48:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   48 |           fprintf(outfile, "%5d ", out_line);[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:49:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |      if (print_levels)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   50 |           fprintf(outfile, "{%4d} ", lev);[0m
      | [0;1;32m                                          
[0m[1moutput.c:50:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   50 |           fprintf(outfile, "{%4d} ", lev);[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:50:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   50 |           fprintf(outfile, "{%4d} ", lev);[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:51:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   51 |      fprintf(outfile, "%s", level_begin);[0m
      | [0;1;32m     ^~~~~~~
[0m[1moutput.c:51:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   51 |      fprintf(outfile, "%s", level_begin);[0m
      | [0;1;32m     ^~~~~~~
[0m[1moutput.c:52:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |      for (i = 0; i < lev; i++) [0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   53 |           fprintf(outfile, "%s", level_indent[ level_mark[i] ]);[0m
      | [0;1;32m                                                                
[0m[1moutput.c:53:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   53 |           fprintf(outfile, "%s", level_indent[ level_mark[i] ]);[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:53:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   53 |           fprintf(outfile, "%s", level_indent[ level_mark[i] ]);[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:54:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   54 |      fprintf(outfile, "%s", level_end[last]);[0m
      | [0;1;32m     ^~~~~~~
[0m[1moutput.c:54:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   54 |      fprintf(outfile, "%s", level_end[last]);[0m
      | [0;1;32m     ^~~~~~~
[0m[1moutput.c:79:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |      if (driver_max == MAX_OUTPUT_DRIVERS-1)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   80 |           abort ();[0m
      | [0;1;32m                   
[0m[1moutput.c:91:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |      for (i = 0; i < driver_max; i++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   92 |           if (strcmp(output_driver[i].name, name) == 0) {[0m
   93 |                driver_index = i;[0m
   94 |                return 0;[0m
   95 |           }[0m
      | [0;1;32m           
[0m[1moutput.c:185:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |           if (symp->type == SymIdentifier) [0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  186 |                return symp->storage == ExternStorage ||[0m
  187 |                       symp->storage == StaticStorage;[0m
  188 |           else[0m
      | [0;32m          } 
[0m[1moutput.c:188:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  189 |                return 1;[0m
      | [0;1;32m                        
[0m[1moutput.c:216:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  216 |           fprintf(outfile, "%s   %s:%d\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:216:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  216 |           fprintf(outfile, "%s   %s:%d\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:227:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  227 |           fprintf(outfile, "%s * %s:%d %s\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:227:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  227 |           fprintf(outfile, "%s * %s:%d %s\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:239:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |      if (symp->source)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  240 |           fprintf(outfile, "%s t %s:%d\n",[0m
  241 |                   symp->name,[0m
  242 |                   symp->source,[0m
  243 |                   symp->def_line);[0m
      | [0;1;32m                                  
[0m[1moutput.c:240:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  240 |           fprintf(outfile, "%s t %s:%d\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:240:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  240 |           fprintf(outfile, "%s t %s:%d\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1moutput.c:260:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  260 |                print_function(symp);[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  261 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1moutput.c:263:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  263 |                print_type(symp);[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  264 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1moutput.c:266:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  266 |                break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1moutput.c:291:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |      while ((p = p->next))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  292 |           if (is_printable(p))[0m
  293 |                return 0;[0m
      | [0;1;32m                        
[0m[1moutput.c:292:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |           if (is_printable(p))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  293 |                return 0;[0m
      | [0;1;32m                        
[0m[1moutput.c:307:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |          || !include_symbol(sym))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  308 |           return;[0m
      | [0;1;32m                 
[0m[1moutput.c:312:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |      if (rc || sym->active)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  313 |           return;[0m
      | [0;1;32m                 
[0m[1moutput.c:332:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |          || !include_symbol(sym))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  333 |           return;[0m
      | [0;1;32m                 
[0m[1moutput.c:336:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |      if (rc || sym->active)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  337 |           return;[0m
      | [0;1;32m                 
[0m[1moutput.c:355:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |      for (i = 0; i < num; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  356 |           symbols[i]->ord = i;[0m
      | [0;1;32m                              
[0m[1moutput.c:367:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |                     if (s->ord != -1 && symbol_is_function(s))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  368 |                          depmap_set(depmap, i, s->ord);[0m
      | [0;1;32m                                                       
[0m[1moutput.c:376:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |      for (i = 0; i < num; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  377 |           if (depmap_isset(depmap, i, i))[0m
  378 |                symbols[i]->recursive = 1;[0m
      | [0;1;32m                                         
[0m[1moutput.c:377:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |           if (depmap_isset(depmap, i, i))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  378 |                symbols[i]->recursive = 1;[0m
      | [0;1;32m                                         
[0m[1moutput.c:431:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  431 |           if (!outfile)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  432 |                error(EX_FATAL, errno, _("cannot open file `%s'"), outname);[0m
      | [0;1;32m                                                                           
[0m46 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[40/46][107.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpkjoa7o_1.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/vasnprintf.c
[1mvasnprintf.c:1860:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1860 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1861 |     /* errno is already set.  */[0m
 1862 |     return NULL;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1903:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1903 |         if (size_overflow_p (buf_memsize))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1904 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1906:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1906 |         if (buf == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1907 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1958:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1964:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1964 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1964:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1964 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1969:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1969 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1970 |                   result[length++] = *cp++;[0m
 1971 |                 while (--n > 0);[0m
      | [0;32m                } 
[0m[1mvasnprintf.c:1974:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1974 |         if (i == d.count)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1975 |           break;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1982:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1982 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1983 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:1985:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1985 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1985:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1985 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1986:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1986 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1860:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1860 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:152:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  152 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1860:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1860 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1870:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1870 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   30 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1870:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1870 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1894:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1894 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1894:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1894 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1911:9: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1911 |     if (resultbuf != NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1911:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1911 |     if (resultbuf != NULL)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1951:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1951 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1953:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1953 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1953:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1953 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1929:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1929:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1934:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1934 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1934:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1934 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1935:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1935 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1935:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1935 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1937:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1937 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1938:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1938 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1938:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1938 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1940:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1940 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1940:33: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1940 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m                                ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1944:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1944 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1944:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1944 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1946:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1946 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1946:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1946 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1946:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1946 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1946:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1946 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1962:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1962 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1974:13: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to field 'count'[0m
 1974 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1974:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1974 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1978:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1978 |         if (dp->conversion == '%')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1978:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1978 |         if (dp->conversion == '%')[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1982:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1982 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1982:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1982 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1984:32: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 1984 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:1984:32: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 1984 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1985:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is <= 'allocated'[0m
 1985 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1929:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1985:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1985 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1929:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1986:13: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 1986 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1991:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1991 |             if (!(dp->arg_index != ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1992 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:1999:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1999 |                     *a.arg[dp->arg_index].a.a_count_schar_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2000 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2002:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2002 |                     *a.arg[dp->arg_index].a.a_count_short_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2003 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2005:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2005 |                     *a.arg[dp->arg_index].a.a_count_int_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2006 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2008:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2008 |                     *a.arg[dp->arg_index].a.a_count_longint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2009 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2011:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2011 |                     *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2012 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2014:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2014 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mvasnprintf.c:5026:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5026 |                 if (flags & FLAG_GROUP)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5027 |                   *fbp++ = '\'';[0m
      | [0;1;32m                                
[0m[1mvasnprintf.c:5029:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5029 |                 if (flags & FLAG_LEFT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 5030 |                   *fbp++ = '-';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5031:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5031 |                 if (flags & FLAG_SHOWSIGN)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5032 |                   *fbp++ = '+';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5033:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5033 |                 if (flags & FLAG_SPACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5034 |                   *fbp++ = ' ';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5035:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5035 |                 if (flags & FLAG_ALT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5036 |                   *fbp++ = '#';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5038:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5038 |                 if (flags & FLAG_LOCALIZED)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5039 |                   *fbp++ = 'I';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5043:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5043 |                     if (flags & FLAG_ZERO)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5044 |                       *fbp++ = '0';[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5052:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5052 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5052:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5052 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5058:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5058 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5059 |                               *fbp++ = *mp++;[0m
 5060 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5073:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5073 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5073:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5073 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5079:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5079 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5080 |                               *fbp++ = *mp++;[0m
 5081 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5098:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5098 |                     FALLTHROUGH;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                    {           ;} 
[0m[1m./attribute.h:144:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  144 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:993:36: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
  993 | # define _GL_ATTRIBUTE_FALLTHROUGH __attribute__ ((__fallthrough__))[0m
      | [0;1;32m                                   ^
[0m[1mvasnprintf.c:5108:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5108 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5110:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5110 |                     *fbp++ = 'L';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 5111 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:5113:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5113 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5177:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5177 |                     if (!(a.arg[dp->width_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 5178 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5183:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5183 |                     if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 5184 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5197:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5197 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5197:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5197 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5216:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5216 |                     if (maxlen > INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 5217 |                       maxlen = INT_MAX / TCHARS_PER_DCHAR;[0m
      | [0;1;32m                                                          
[0m[1mvasnprintf.c:5264:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5264 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5265 |                           int arg = a.arg[dp->arg_index].a.a_schar;[0m
 5266 |                           SNPRINTF_BUF (arg);[0m
 5267 |                         }[0m
 5268 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5266:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5266 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5266:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5266 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5270:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5270 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5271 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uchar;[0m
 5272 |                           SNPRINTF_BUF (arg);[0m
 5273 |                         }[0m
 5274 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5272:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5272 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5272:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5272 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5276:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5276 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5277 |                           int arg = a.arg[dp->arg_index].a.a_short;[0m
 5278 |                           SNPRINTF_BUF (arg);[0m
 5279 |                         }[0m
 5280 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5278:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5278 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5278:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5278 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5282:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5282 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5283 |                           unsigned int arg = a.arg[dp->arg_index].a.a_ushort;[0m
 5284 |                           SNPRINTF_BUF (arg);[0m
 5285 |                         }[0m
 5286 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5284:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5284 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5284:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5284 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5288:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5288 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5289 |                           int arg = a.arg[dp->arg_index].a.a_int;[0m
 5290 |                           SNPRINTF_BUF (arg);[0m
 5291 |                         }[0m
 5292 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5290:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5290 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5290:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5290 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5294:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5294 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5295 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uint;[0m
 5296 |                           SNPRINTF_BUF (arg);[0m
 5297 |                         }[0m
 5298 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5296:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5296 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5296:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5296 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5300:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5300 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5301 |                           long int arg = a.arg[dp->arg_index].a.a_longint;[0m
 5302 |                           SNPRINTF_BUF (arg);[0m
 5303 |                         }[0m
 5304 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5302:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5302 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5302:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5302 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5306:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5306 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5307 |                           unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;[0m
 5308 |                           SNPRINTF_BUF (arg);[0m
 5309 |                         }[0m
 5310 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5308:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5308 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5308:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5308 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5312:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5312 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5313 |                           long long int arg = a.arg[dp->arg_index].a.a_longlongint;[0m
 5314 |                           SNPRINTF_BUF (arg);[0m
 5315 |                         }[0m
 5316 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5314:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5314 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5314:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5314 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5318:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5318 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5319 |                           unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;[0m
 5320 |                           SNPRINTF_BUF (arg);[0m
 5321 |                         }[0m
 5322 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5320:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5320 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5320:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5320 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5324:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5324 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5325 |                           double arg = a.arg[dp->arg_index].a.a_double;[0m
 5326 |                           SNPRINTF_BUF (arg);[0m
 5327 |                         }[0m
 5328 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5326:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5326 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5326:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5326 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5330:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5330 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5331 |                           long double arg = a.arg[dp->arg_index].a.a_longdouble;[0m
 5332 |                           SNPRINTF_BUF (arg);[0m
 5333 |                         }[0m
 5334 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5332:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5332 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5332:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5332 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5336:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5336 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5337 |                           int arg = a.arg[dp->arg_index].a.a_char;[0m
 5338 |                           SNPRINTF_BUF (arg);[0m
 5339 |                         }[0m
 5340 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5338:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5338 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5338:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5338 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5343:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5343 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5344 |                           wint_t arg = a.arg[dp->arg_index].a.a_wide_char;[0m
 5345 |                           SNPRINTF_BUF (arg);[0m
 5346 |                         }[0m
 5347 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5345:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5345 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5345:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5345 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5350:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5350 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5351 |                           const char *arg = a.arg[dp->arg_index].a.a_string;[0m
 5352 |                           SNPRINTF_BUF (arg);[0m
 5353 |                         }[0m
 5354 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5352:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5352 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5352:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5352 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5357:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5357 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5358 |                           const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;[0m
 5359 |                           SNPRINTF_BUF (arg);[0m
 5360 |                         }[0m
 5361 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5359:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5359 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5359:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5359 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5364:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5364 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5365 |                           void *arg = a.arg[dp->arg_index].a.a_pointer;[0m
 5366 |                           SNPRINTF_BUF (arg);[0m
 5367 |                         }[0m
 5368 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5366:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5366 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5366:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5366 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5223:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5223 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:201:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  201 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5370:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5370 |                         abort ();[0m
      | [0;1;32m                        ^       
[0m      | [0;32m                        {       ;} 
[0m[1mvasnprintf.c:5383:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5383 |                             && ((TCHAR_T *) (result + length)) [count] != '\0')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5384 |                           abort ();[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5386:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5386 |                         if (retcount > count)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 5387 |                           count = retcount;[0m
      | [0;1;32m                                           
[0m[1mvasnprintf.c:5445:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5445 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5446 |                               count = retcount;[0m
      | [0;1;32m                                               
[0m[1mvasnprintf.c:5459:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5459 |                             if (dp->conversion == 'c' || dp->conversion == 's')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5460 |                               saved_errno = EILSEQ;[0m
 5461 |                             else[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5461:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5461 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5462 |                               saved_errno = EINVAL;[0m
      | [0;1;32m                                                   
[0m[1mvasnprintf.c:5465:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5465 |                         if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 5466 |                           free (result);[0m
      | [0;1;32m                                        
[0m[1mvasnprintf.c:5467:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5467 |                         if (buf_malloced != NULL)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5468 |                           free (buf_malloced);[0m
      | [0;1;32m                                              
[0m[1mvasnprintf.c:5486:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5486 |                         if (maxlen == INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 5487 |                           goto overflow;[0m
 5488 |                         else[0m
      | [0;32m                        } 
[0m[1mvasnprintf.c:5506:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5506 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5506:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5506 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5814:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5814 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5814:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5814 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1947:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1947 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:153:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  153 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5815:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 5815 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1860:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1860 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:152:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  152 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1860:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1860 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1870:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1870 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   30 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1870:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1870 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1894:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1894 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1894:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1894 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1911:9: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1911 |     if (resultbuf != NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1911:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1911 |     if (resultbuf != NULL)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1951:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1951 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1953:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1953 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1953:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1953 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1929:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1929:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1934:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1934 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1934:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1934 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1935:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1935 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1935:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1935 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1937:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1937 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1938:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1938 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1938:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1938 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1940:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1940 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1940:33: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1940 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m                                ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1944:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1944 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1944:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1944 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1946:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1946 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1946:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1946 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1946:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1946 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1958:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1958 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1946:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1946 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1962:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1962 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1974:13: [0m[0;1;36mnote: [0mAssuming 'i' is equal to field 'count'[0m
 1974 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1974:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1974 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1975:11: [0m[0;1;36mnote: [0m Execution continues on line 5814[0m
 1975 |           break;[0m
      | [0;1;32m          ^
[0m[1mvasnprintf.c:5814:24: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 5814 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1929:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:5814:24: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 5814 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1929:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1mvasnprintf.c:5814:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 5814 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1929:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5814:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 5814 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1929:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1929 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:5815:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 5815 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5823:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5823 |         if (memory != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 5824 |           result = memory;[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5827:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5827 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5828 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5839:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5839 |     if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5840 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:5841:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5841 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5842 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5849:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5849 |     if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5850 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:5851:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5851 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5852 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m124 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[41/46][133.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp4_r_1q8g.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/hash.c
[1mhash.c:174:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  175 |             bucket_length++;[0m
      | [0;1;32m                            
[0m[1mhash.c:177:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |           if (bucket_length > max_bucket_length)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  178 |             max_bucket_length = bucket_length;[0m
      | [0;1;32m                                              
[0m[1mhash.c:203:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  204 |             n_entries++;[0m
      | [0;1;32m                        
[0m[1mhash.c:208:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |   if (n_buckets_used == table->n_buckets_used && n_entries == table->n_entries)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  209 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:222:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  222 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  222 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:223:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  223 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:223:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  223 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:224:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  224 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:224:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  224 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:227:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  227 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:227:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  227 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:237:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |   if (! (n < table->n_buckets))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  238 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:248:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  249 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:251:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |   for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  252 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
  253 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:252:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  253 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:265:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |   if (table->n_entries == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  266 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:268:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |   for (bucket = table->bucket; ; bucket++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  269 |     if (! (bucket < table->bucket_limit))[0m
  270 |       abort ();[0m
  271 |     else if (bucket->data)[0m
  272 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:269:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |     if (! (bucket < table->bucket_limit))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  270 |       abort ();[0m
  271 |     else if (bucket->data)[0m
      | [0;32m    } 
[0m[1mhash.c:271:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |     else if (bucket->data)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  272 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:285:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |       if (cursor->data == entry && cursor->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  286 |         return cursor->next->data;[0m
      | [0;1;32m                                  
[0m[1mhash.c:292:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |   while (++bucket < table->bucket_limit)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  293 |     if (bucket->data)[0m
  294 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:293:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |     if (bucket->data)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  294 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:314:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |               if (counter >= buffer_size)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  315 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:338:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |               if (! processor (cursor->data, processor_data))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  339 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:387:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |   for (; (ch = *string); string++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  388 |     value = (value * 31 + ch) % n_buckets;[0m
      | [0;1;32m                                          
[0m[1mhash.c:420:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |   if (candidate < 10)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  421 |     candidate = 10;[0m
      | [0;1;32m                   
[0m[1mhash.c:426:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  426 |   while (SIZE_MAX != candidate && !is_prime (candidate))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  427 |     candidate += 2;[0m
      | [0;1;32m                   
[0m[1mhash.c:470:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |   if (tuning == &default_tuning)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  471 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:486:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |       && tuning->shrink_threshold + epsilon < tuning->growth_threshold)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  487 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:503:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |       if ((float) SIZE_MAX <= new_candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  504 |         return 0;[0m
      | [0;1;32m                 
[0m[1mhash.c:508:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |   if (xalloc_oversized (candidate, sizeof (struct hash_entry *)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  509 |     return 0;[0m
      | [0;1;32m             
[0m[1mhash.c:520:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (hasher == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  521 |     hasher = raw_hasher;[0m
      | [0;1;32m                        
[0m[1mhash.c:522:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |   if (comparator == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  523 |     comparator = raw_comparator;[0m
      | [0;1;32m                                
[0m[1mhash.c:526:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |   if (table == NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  527 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:529:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |   if (!tuning)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  530 |     tuning = &default_tuning;[0m
      | [0;1;32m                             
[0m[1mhash.c:543:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  543 |   if (!table->n_buckets)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  544 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:547:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  547 |   if (table->bucket == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  548 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:583:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |               if (table->data_freer)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  584 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:595:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |           if (table->data_freer)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  596 |             table->data_freer (bucket->data);[0m
      | [0;1;32m                                             
[0m[1mhash.c:620:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  620 |               for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  621 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:710:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  710 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  711 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:776:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  776 |   for (bucket = src->bucket; bucket < src->bucket_limit; bucket++)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m[1mhash.c:816:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  816 |         if (safe)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  817 |           continue;[0m
      | [0;1;32m                   
[0m[1mhash.c:826:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |             if (new_entry == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  827 |               return false;[0m
      | [0;1;32m                           
[0m[1mhash.c:852:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (!new_size)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  853 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:854:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  854 |   if (new_size == table->n_buckets)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  855 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:858:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  858 |   if (new_table->bucket == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  859 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:917:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  917 |          && transfer_entries (table, new_table, false)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  918 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:934:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  934 |   if (! entry)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  935 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:940:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |       if (matched_ent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  941 |         *matched_ent = data;[0m
      | [0;1;32m                            
[0m[1mhash.c:966:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  966 |           if ((float) SIZE_MAX <= candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  967 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:970:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  970 |           if (!hash_rehash (table, candidate))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  971 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:974:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  974 |           if (hash_find_entry (table, entry, &bucket, false) != NULL)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  975 |             abort ();[0m
      | [0;1;32m                     
[0m[1mhash.c:985:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  985 |       if (new_entry == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  986 |         return -1;[0m
      | [0;1;32m                  
[0m[1mhash.c:1023:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |   if (!data)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1024 |     return NULL;[0m
      | [0;1;32m                
[0m54 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[42/46][135.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpy3s_g6zu.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/getopt.c
[1mgetopt.c:208:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |   for (nameend = d->__nextchar; *nameend && *nameend != '='; nameend++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  209 |     /* Do nothing.  */ ;[0m
      | [0;1;32m                        
[0m[1mgetopt.c:214:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |   for (p = longopts, n_options = 0; p->name; p++, n_options++)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  215 |     if (!strncmp (p->name, d->__nextchar, namelen)[0m
  216 |         && namelen == strlen (p->name))[0m
  217 |       {[0m
  218 |         /* Exact match found.  */[0m
  219 |         pfound = p;[0m
  220 |         option_index = n_options;[0m
  221 |         break;[0m
  222 |       }[0m
      | [0;1;32m       
[0m[1mgetopt.c:232:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |       for (p = longopts, option_index = 0; p->name; p++, option_index++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m[1mgetopt.c:249:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |                     if (!print_errors)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  250 |                       /* Don't waste effort tracking the ambig set if[0m
  251 |                          we're not going to print it anyway.  */[0m
  252 |                       ambig_fallback = 1;[0m
  253 |                     else if (!ambig_set)[0m
      | [0;32m                    } 
[0m[1mgetopt.c:255:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  255 |                         if (__libc_use_alloca (n_options))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  256 |                           ambig_set = alloca (n_options);[0m
  257 |                         else if ((ambig_set = malloc (n_options)) == NULL)[0m
      | [0;32m                        } 
[0m[1mgetopt.c:257:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |                         else if ((ambig_set = malloc (n_options)) == NULL)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  258 |                           /* Fall back to simpler error message.  */[0m
  259 |                           ambig_fallback = 1;[0m
  260 |                         else[0m
      | [0;32m                        } 
[0m[1mgetopt.c:260:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  261 |                           ambig_malloced = 1;[0m
      | [0;1;32m                                             
[0m[1mgetopt.c:265:8: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  265 |                             memset (ambig_set, 0, n_options);[0m
      | [0;1;32m                            ^~~~~~
[0m[1mgetopt.c:265:8: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  265 |                             memset (ambig_set, 0, n_options);[0m
      | [0;1;32m                            ^~~~~~
[0m[1mgetopt.c:269:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |                     if (ambig_set)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  270 |                       ambig_set[option_index] = 1;[0m
      | [0;1;32m                                                  
[0m[1mgetopt.c:279:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |               if (ambig_fallback)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  280 |                 fprintf (stderr, _("%s: option '%s%s' is ambiguous\n"),[0m
  281 |                          argv[0], prefix, d->__nextchar);[0m
  282 |               else[0m
      | [0;32m              } 
[0m[1mgetopt.c:280:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  280 |                 fprintf (stderr, _("%s: option '%s%s' is ambiguous\n"),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mgetopt.c:280:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  280 |                 fprintf (stderr, _("%s: option '%s%s' is ambiguous\n"),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mgetopt.c:285:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  285 |                   fprintf (stderr,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:285:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  285 |                   fprintf (stderr,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:289:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                   for (option_index = 0; option_index < n_options; option_index++)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  290 |                     if (ambig_set[option_index])[0m
  291 |                       fprintf (stderr, " '%s%s'",[0m
  292 |                                prefix, longopts[option_index].name);[0m
      | [0;1;32m                                                                    
[0m[1mgetopt.c:290:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |                     if (ambig_set[option_index])[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  291 |                       fprintf (stderr, " '%s%s'",[0m
  292 |                                prefix, longopts[option_index].name);[0m
      | [0;1;32m                                                                    
[0m[1mgetopt.c:291:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  291 |                       fprintf (stderr, " '%s%s'",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mgetopt.c:291:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  291 |                       fprintf (stderr, " '%s%s'",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mgetopt.c:297:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  297 |                   fprintf (stderr, "\n");[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:297:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  297 |                   fprintf (stderr, "\n");[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:301:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |           if (ambig_malloced)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  302 |             free (ambig_set);[0m
      | [0;1;32m                             
[0m[1mgetopt.c:320:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |           if (print_errors)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  321 |             fprintf (stderr, _("%s: unrecognized option '%s%s'\n"),[0m
  322 |                      argv[0], prefix, d->__nextchar);[0m
      | [0;1;32m                                                     
[0m[1mgetopt.c:321:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  321 |             fprintf (stderr, _("%s: unrecognized option '%s%s'\n"),[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:321:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  321 |             fprintf (stderr, _("%s: unrecognized option '%s%s'\n"),[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:341:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |       if (pfound->has_arg)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  342 |         d->optarg = nameend + 1;[0m
  343 |       else[0m
      | [0;32m      } 
[0m[1mgetopt.c:345:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |           if (print_errors)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  346 |             fprintf (stderr,[0m
  347 |                      _("%s: option '%s%s' doesn't allow an argument\n"),[0m
  348 |                      argv[0], prefix, pfound->name);[0m
      | [0;1;32m                                                    
[0m[1mgetopt.c:346:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  346 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:346:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  346 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:356:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |       if (d->optind < argc)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  357 |         d->optarg = argv[d->optind++];[0m
  358 |       else[0m
      | [0;32m      } 
[0m[1mgetopt.c:360:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |           if (print_errors)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  361 |             fprintf (stderr,[0m
  362 |                      _("%s: option '%s%s' requires an argument\n"),[0m
  363 |                      argv[0], prefix, pfound->name);[0m
      | [0;1;32m                                                    
[0m[1mgetopt.c:361:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  361 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:361:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  361 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:370:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |   if (longind != NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  371 |     *longind = option_index;[0m
      | [0;1;32m                            
[0m[1mgetopt.c:390:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |   if (d->optind == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  391 |     d->optind = 1;[0m
      | [0;1;32m                  
[0m[1mgetopt.c:407:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |   else if (posixly_correct || !!getenv ("POSIXLY_CORRECT"))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  408 |     d->__ordering = REQUIRE_ORDER;[0m
  409 |   else[0m
      | [0;32m  } 
[0m[1mgetopt.c:409:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  409 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  410 |     d->__ordering = PERMUTE;[0m
      | [0;1;32m                            
[0m[1mgetopt.c:479:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |   if (argc < 1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  480 |     return -1;[0m
      | [0;1;32m              
[0m[1mgetopt.c:484:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |   if (d->optind == 0 || !d->__initialized)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  485 |     optstring = _getopt_initialize (argc, argv, optstring, d, posixly_correct);[0m
  486 |   else if (optstring[0] == '-' || optstring[0] == '+')[0m
      | [0;32m  } 
[0m[1mgetopt.c:486:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |   else if (optstring[0] == '-' || optstring[0] == '+')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  487 |     optstring++;[0m
      | [0;1;32m                
[0m[1mgetopt.c:489:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  489 |   if (optstring[0] == ':')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  490 |     print_errors = 0;[0m
      | [0;1;32m                     
[0m[1mgetopt.c:501:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if (d->__last_nonopt > d->optind)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  502 |         d->__last_nonopt = d->optind;[0m
      | [0;1;32m                                     
[0m[1mgetopt.c:503:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |       if (d->__first_nonopt > d->optind)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  504 |         d->__first_nonopt = d->optind;[0m
      | [0;1;32m                                      
[0m[1mgetopt.c:512:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  512 |               && d->__last_nonopt != d->optind)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  513 |             exchange (argv, d);[0m
  514 |           else if (d->__last_nonopt != d->optind)[0m
      | [0;32m          } 
[0m[1mgetopt.c:514:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  514 |           else if (d->__last_nonopt != d->optind)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  515 |             d->__first_nonopt = d->optind;[0m
      | [0;1;32m                                          
[0m[1mgetopt.c:520:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |           while (d->optind < argc && NONOPTION_P)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  521 |             d->optind++;[0m
      | [0;1;32m                        
[0m[1mgetopt.c:535:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |               && d->__last_nonopt != d->optind)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  536 |             exchange (argv, d);[0m
  537 |           else if (d->__first_nonopt == d->__last_nonopt)[0m
      | [0;32m          } 
[0m[1mgetopt.c:537:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |           else if (d->__first_nonopt == d->__last_nonopt)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  538 |             d->__first_nonopt = d->optind;[0m
      | [0;1;32m                                          
[0m[1mgetopt.c:551:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |           if (d->__first_nonopt != d->__last_nonopt)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  552 |             d->optind = d->__first_nonopt;[0m
      | [0;1;32m                                          
[0m[1mgetopt.c:561:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  561 |           if (d->__ordering == REQUIRE_ORDER)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  562 |             return -1;[0m
      | [0;1;32m                      
[0m[1mgetopt.c:601:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |               if (code != -1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  602 |                 return code;[0m
      | [0;1;32m                            
[0m[1mgetopt.c:617:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  617 |     if (*d->__nextchar == '\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  618 |       ++d->optind;[0m
      | [0;1;32m                  
[0m[1mgetopt.c:622:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  622 |         if (print_errors)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  623 |           fprintf (stderr, _("%s: invalid option -- '%c'\n"), argv[0], c);[0m
      | [0;1;32m                                                                          
[0m[1mgetopt.c:623:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  623 |           fprintf (stderr, _("%s: invalid option -- '%c'\n"), argv[0], c);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgetopt.c:623:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  623 |           fprintf (stderr, _("%s: invalid option -- '%c'\n"), argv[0], c);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgetopt.c:632:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |         if (*d->__nextchar != '\0')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  633 |           d->optarg = d->__nextchar;[0m
  634 |         else if (d->optind == argc)[0m
      | [0;32m        } 
[0m[1mgetopt.c:636:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |             if (print_errors)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  637 |               fprintf (stderr,[0m
  638 |                        _("%s: option requires an argument -- '%c'\n"),[0m
  639 |                        argv[0], c);[0m
      | [0;1;32m                                   
[0m[1mgetopt.c:637:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  637 |               fprintf (stderr,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mgetopt.c:637:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  637 |               fprintf (stderr,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mgetopt.c:642:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |             if (optstring[0] == ':')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  643 |               c = ':';[0m
  644 |             else[0m
      | [0;32m            } 
[0m[1mgetopt.c:644:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  645 |               c = '?';[0m
      | [0;1;32m                      
[0m[1mgetopt.c:648:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  649 |           d->optarg = argv[d->optind];[0m
      | [0;1;32m                                      
[0m[1mgetopt.c:666:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  666 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  667 |               d->optarg = NULL;[0m
      | [0;1;32m                               
[0m[1mgetopt.c:682:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |                 if (print_errors)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  683 |                   fprintf (stderr,[0m
  684 |                            _("%s: option requires an argument -- '%c'\n"),[0m
  685 |                            argv[0], c);[0m
      | [0;1;32m                                       
[0m[1mgetopt.c:683:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  683 |                   fprintf (stderr,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:683:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  683 |                   fprintf (stderr,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:688:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |                 if (optstring[0] == ':')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  689 |                   c = ':';[0m
  690 |                 else[0m
      | [0;32m                } 
[0m[1mgetopt.c:690:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  690 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  691 |                   c = '?';[0m
      | [0;1;32m                          
[0m[1mgetopt.c:693:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  694 |               /* We already incremented 'optind' once;[0m
  695 |                  increment it again when taking next ARGV-elt as argument.  */[0m
  696 |               d->optarg = argv[d->optind++];[0m
      | [0;1;32m                                            
[0m70 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[43/46][152.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpd9fpx0ln.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-fmtstream.c
[1margp-fmtstream.c:142:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |               memmove (buf + pad, buf, fs->p - buf);[0m
      | [0;1;32m              ^~~~~~~
[0m[1margp-fmtstream.c:142:15: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  142 |               memmove (buf + pad, buf, fs->p - buf);[0m
      | [0;1;32m              ^~~~~~~
[0m[1margp-fmtstream.c:144:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  144 |               memset (buf, ' ', pad); /* Fill in the spaces.  */[0m
      | [0;1;32m              ^~~~~~
[0m[1margp-fmtstream.c:144:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  144 |               memset (buf, ' ', pad); /* Fill in the spaces.  */[0m
      | [0;1;32m              ^~~~~~
[0m[1margp-fmtstream.c:167:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  167 |       if (fs->point_col < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  168 |         fs->point_col = 0;[0m
      | [0;1;32m                          
[0m[1margp-fmtstream.c:182:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  183 |             /* Set the end-of-line pointer for the code below to[0m
  184 |                the end of the buffer.  */[0m
  185 |             nl = fs->p;[0m
      | [0;1;32m                       
[0m[1margp-fmtstream.c:205:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  205 |               memmove (buf + (r - fs->point_col), nl, fs->p - nl);[0m
      | [0;1;32m              ^~~~~~~
[0m[1margp-fmtstream.c:205:15: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  205 |               memmove (buf + (r - fs->point_col), nl, fs->p - nl);[0m
      | [0;1;32m              ^~~~~~~
[0m[1margp-fmtstream.c:231:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |           while (p >= buf && !isblank ((unsigned char) *p))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  232 |             --p;[0m
      | [0;1;32m                
[0m[1margp-fmtstream.c:238:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |               if (p >= buf)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  239 |                 do[0m
  240 |                   --p;[0m
  241 |                 while (p >= buf && isblank ((unsigned char) *p));[0m
      | [0;1;32m                                                                 
[0m[1margp-fmtstream.c:239:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  240 |                   --p;[0m
  241 |                 while (p >= buf && isblank ((unsigned char) *p));[0m
      | [0;32m                } 
[0m[1margp-fmtstream.c:250:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |               if (p < nl)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  251 |                 do[0m
  252 |                   ++p;[0m
  253 |                 while (p < nl && !isblank ((unsigned char) *p));[0m
      | [0;1;32m                                                                
[0m[1margp-fmtstream.c:251:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  252 |                   ++p;[0m
  253 |                 while (p < nl && !isblank ((unsigned char) *p));[0m
      | [0;32m                } 
[0m[1margp-fmtstream.c:264:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |               do[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  265 |                 ++p;[0m
  266 |               while (isblank ((unsigned char) *p));[0m
      | [0;32m              } 
[0m[1margp-fmtstream.c:286:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  286 |                   memmove (nl + 1 + fs->wmargin, nextline, mv);[0m
      | [0;1;32m                  ^~~~~~~
[0m[1margp-fmtstream.c:286:19: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  286 |                   memmove (nl + 1 + fs->wmargin, nextline, mv);[0m
      | [0;1;32m                  ^~~~~~~
[0m[1margp-fmtstream.c:298:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |                   if (nl > fs->buf)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  299 |                     fwrite_unlocked (fs->buf, 1, nl - fs->buf, fs->stream);[0m
      | [0;1;32m                                                                           
[0m[1margp-fmtstream.c:307:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  308 |             /* We can fit the newline and blanks in before[0m
  309 |                the next word.  */[0m
  310 |             *nl++ = '\n';[0m
      | [0;1;32m                         
[0m[1margp-fmtstream.c:313:83: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |               || (nextline == buf + len + 1 && fs->end - nextline >= fs->wmargin))[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  314 |             /* Add blanks up to the wrap margin column.  */[0m
  315 |             for (i = 0; i < fs->wmargin; ++i)[0m
  316 |               *nl++ = ' ';[0m
  317 |           else[0m
      | [0;32m          } 
[0m[1margp-fmtstream.c:315:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |             for (i = 0; i < fs->wmargin; ++i)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  316 |               *nl++ = ' ';[0m
      | [0;1;32m                          
[0m[1margp-fmtstream.c:317:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  318 |             for (i = 0; i < fs->wmargin; ++i)[0m
  319 | #ifdef _LIBC[0m
  320 |               if (_IO_fwide (fs->stream, 0) > 0)[0m
  321 |                 putwc_unlocked (L' ', fs->stream);[0m
  322 |               else[0m
  323 | #endif[0m
  324 |                 putc_unlocked (' ', fs->stream);[0m
      | [0;1;32m                                                
[0m[1margp-fmtstream.c:318:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |             for (i = 0; i < fs->wmargin; ++i)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  319 | #ifdef _LIBC[0m
  320 |               if (_IO_fwide (fs->stream, 0) > 0)[0m
  321 |                 putwc_unlocked (L' ', fs->stream);[0m
  322 |               else[0m
  323 | #endif[0m
  324 |                 putc_unlocked (' ', fs->stream);[0m
      | [0;1;32m                                                
[0m[1margp-fmtstream.c:328:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |           if (nl < nextline)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  329 |             memmove (nl, nextline, buf + len - nextline);[0m
      | [0;1;32m                                                         
[0m[1margp-fmtstream.c:329:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  329 |             memmove (nl, nextline, buf + len - nextline);[0m
      | [0;1;32m            ^~~~~~~
[0m[1margp-fmtstream.c:329:13: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  329 |             memmove (nl, nextline, buf + len - nextline);[0m
      | [0;1;32m            ^~~~~~~
[0m[1margp-fmtstream.c:376:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  376 |           memmove (fs->buf, fs->buf + wrote, fs->p - fs->buf);[0m
      | [0;1;32m          ^~~~~~~
[0m[1margp-fmtstream.c:376:11: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  376 |           memmove (fs->buf, fs->buf + wrote, fs->p - fs->buf);[0m
      | [0;1;32m          ^~~~~~~
[0m[1margp-fmtstream.c:413:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  413 |       if (! __argp_fmtstream_ensure (fs, size_guess))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  414 |         return -1;[0m
      | [0;1;32m                  
[0m[1margp-fmtstream.c:418:13: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  418 |       out = __vsnprintf (fs->p, avail, fmt, args);[0m
      | [0;1;32m            ^
[0m[1m./argp-namefrob.h:98:21: [0m[0;1;36mnote: [0mexpanded from macro '__vsnprintf'[0m
   98 | #define __vsnprintf vsnprintf[0m
      | [0;1;32m                    ^~~~~~~~~
[0m[1margp-fmtstream.c:418:13: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
  418 |       out = __vsnprintf (fs->p, avail, fmt, args);[0m
      | [0;1;32m            ^
[0m[1m./argp-namefrob.h:98:21: [0m[0;1;36mnote: [0mexpanded from macro '__vsnprintf'[0m
   98 | #define __vsnprintf vsnprintf[0m
      | [0;1;32m                    ^~~~~~~~~
[0m[1margp-fmtstream.c:420:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |       if ((size_t) out >= avail)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  421 |         size_guess = out + 1;[0m
      | [0;1;32m                             
[0m35 warnings generated.
Suppressed 11 warnings (11 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[44/46][206.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp_8q7bkso.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/gnu/argp-help.c
[1margp-help.c:147:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |           || up->uparams_offs == offsetof (struct uparams, rmargin))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  148 |         continue;[0m
      | [0;1;32m                 
[0m[1margp-help.c:177:11: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  177 |           SKIPWS (var);[0m
      | [0;1;32m          ^
[0m[1margp-help.c:170:31: [0m[0;1;36mnote: [0mexpanded from macro 'SKIPWS'[0m
  170 | #define SKIPWS(p) do { while (isspace ((unsigned char) *p)) p++; } while (0);[0m
      | [0;1;32m                              ^
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1692:5: [0m[0;1;36mnote: [0mCalling 'fill_in_uparams'[0m
 1692 |     fill_in_uparams (state);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:167:21: [0m[0;1;36mnote: [0mTaint originated here[0m
  167 |   const char *var = getenv ("ARGP_HELP_FMT");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:167:21: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  167 |   const char *var = getenv ("ARGP_HELP_FMT");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:167:21: [0m[0;1;36mnote: [0mAssuming the environment variable exists[0m
  167 |   const char *var = getenv ("ARGP_HELP_FMT");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:172:7: [0m[0;1;36mnote: [0m'var' is non-null[0m
  172 |   if (var)[0m
      | [0;1;32m      ^~~
[0m[1margp-help.c:172:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  172 |   if (var)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:175:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  175 |       while (*var)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:177:11: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  177 |           SKIPWS (var);[0m
      | [0;1;32m          ^
[0m[1margp-help.c:170:31: [0m[0;1;36mnote: [0mexpanded from macro 'SKIPWS'[0m
  170 | #define SKIPWS(p) do { while (isspace ((unsigned char) *p)) p++; } while (0);[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:186:83: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |               while (isalnum ((unsigned char) *arg) || *arg == '-' || *arg == '_')[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  187 |                 arg++;[0m
      | [0;1;32m                      
[0m[1margp-help.c:192:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |               if (*arg == '\0' || *arg == ',')[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  193 |                 unspec = 1;[0m
  194 |               else if (*arg == '=')[0m
      | [0;32m              } 
[0m[1margp-help.c:208:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  209 |                     val = 1;[0m
      | [0;1;32m                            
[0m[1margp-help.c:214:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |                   while (isdigit ((unsigned char) *arg))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  215 |                     arg++;[0m
      | [0;1;32m                          
[0m[1margp-help.c:221:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |                    un++)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  222 |                 if (strlen (un->name) == var_len[0m
  223 |                     && strncmp (var, un->name, var_len) == 0)[0m
  224 |                   {[0m
  225 |                     if (unspec && !un->is_bool)[0m
  226 |                       __argp_failure (state, 0, 0,[0m
  227 |                                       dgettext (state == NULL ? NULL[0m
  228 |                                                 : state->root_argp->argp_domain,[0m
  229 |                                                 "\[0m
  230 | %.*s: ARGP_HELP_FMT parameter requires a value"),[0m
  231 |                                       (int) var_len, var);[0m
  232 |                     else[0m
  233 |                       *(int *)((char *)&new_params + un->uparams_offs) = val;[0m
  234 |                     break;[0m
  235 |                   }[0m
      | [0;1;32m                   
[0m[1margp-help.c:225:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |                     if (unspec && !un->is_bool)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  226 |                       __argp_failure (state, 0, 0,[0m
  227 |                                       dgettext (state == NULL ? NULL[0m
  228 |                                                 : state->root_argp->argp_domain,[0m
  229 |                                                 "\[0m
  230 | %.*s: ARGP_HELP_FMT parameter requires a value"),[0m
  231 |                                       (int) var_len, var);[0m
  232 |                     else[0m
      | [0;32m                    } 
[0m[1margp-help.c:232:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  233 |                       *(int *)((char *)&new_params + un->uparams_offs) = val;[0m
      | [0;1;32m                                                                             
[0m[1margp-help.c:236:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |               if (un == uparam_names + nuparam_names)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  237 |                 __argp_failure (state, 0, 0,[0m
  238 |                                 dgettext (state == NULL ? NULL[0m
  239 |                                           : state->root_argp->argp_domain, "\[0m
  240 | %.*s: Unknown ARGP_HELP_FMT parameter"),[0m
  241 |                                 (int) var_len, var);[0m
      | [0;1;32m                                                    
[0m[1margp-help.c:244:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |               if (*var == ',')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  245 |                 var++;[0m
      | [0;1;32m                      
[0m[1margp-help.c:349:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |   while (beg < end)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  350 |     if (*beg == ch)[0m
  351 |       return 1;[0m
  352 |     else[0m
  353 |       beg++;[0m
      | [0;1;32m            
[0m[1margp-help.c:350:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  350 |     if (*beg == ch)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  351 |       return 1;[0m
  352 |     else[0m
      | [0;32m    } 
[0m[1margp-help.c:352:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  353 |       beg++;[0m
      | [0;1;32m            
[0m[1margp-help.c:466:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |           if (! oalias (o))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  467 |             hol->num_entries++;[0m
      | [0;1;32m                               
[0m[1margp-help.c:468:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |           if (oshort (o))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  469 |             num_short_options++;        /* This is an upper bound.  */[0m
      | [0;1;32m                                                                      
[0m[1margp-help.c:472:22: [0m[0;1;35mwarning: [0m[1mCall to 'malloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI][0m
  472 |       hol->entries = malloc (sizeof (struct hol_entry) * hol->num_entries);[0m
      | [0;1;32m                     ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1695:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1695 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1695:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1703:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1705:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1705 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1034:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1034 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:451:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  451 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:451:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  451 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:453:3: [0m[0;1;36mnote: [0mThe value 0 is assigned to field 'num_entries'[0m
  453 |   hol->num_entries = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:456:7: [0m[0;1;36mnote: [0mAssuming 'opts' is non-null[0m
  456 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:456:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  456 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:461:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  461 |       assert (! oalias (opts));[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:461:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  461 |       assert (! oalias (opts));[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:464:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 472[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:472:22: [0m[0;1;36mnote: [0mCall to 'malloc' has an allocation size of 0 bytes[0m
  472 |       hol->entries = malloc (sizeof (struct hol_entry) * hol->num_entries);[0m
      | [0;1;32m                     ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:476:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |       if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  477 |         assert (hol->num_entries <= SIZE_MAX / sizeof (struct hol_entry));[0m
      | [0;1;32m                                                                          
[0m[1margp-help.c:483:18: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  483 |           entry->opt = o;[0m
      | [0;1;32m                 ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1695:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1695 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1695:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1703:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1705:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1705 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1035:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1035 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1035:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1035 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1036:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1036 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1039:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1039:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1045:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1045 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1035:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1035 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1035:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1035 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1036:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1036 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1039:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1039:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1045:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1045 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1034:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1034 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:451:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  451 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:451:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  451 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:456:7: [0m[0;1;36mnote: [0mAssuming 'opts' is non-null[0m
  456 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:456:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  456 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:461:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  461 |       assert (! oalias (opts));[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:461:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  461 |       assert (! oalias (opts));[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:464:22: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:464:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:466:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  466 |           if (! oalias (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:468:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  468 |           if (oshort (o))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:468:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  468 |           if (oshort (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:464:22: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:464:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 472[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:475:15: [0m[0;1;36mnote: [0mAssuming field 'entries' is non-null[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:475:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1margp-help.c:475:31: [0m[0;1;36mnote: [0mAssuming field 'short_options' is non-null[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m                              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:475:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:476:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  476 |       if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:481:44: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:481:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:487:13: [0m[0;1;36mnote: [0mAssuming field 'group' is not equal to 0[0m
  487 |             o->group[0m
      | [0;1;32m            ^~~~~~~~
[0m[1margp-help.c:487:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1margp-help.c:498:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:498:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                             ^
[0m[1margp-help.c:503:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  503 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1margp-help.c:503:29: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  503 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                            ^
[0m[1margp-help.c:495:11: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  495 |           do[0m
      | [0;1;32m          ^
[0m[1margp-help.c:481:44: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:481:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:483:18: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'struct hol_entry' element[0m
  483 |           entry->opt = o;[0m
      | [0;1;32m          ~~~~~~~^~~
[0m[1margp-help.c:498:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  499 |                 /* O has a valid short option which hasn't already been used.*/[0m
  500 |                 *so++ = o->key;[0m
      | [0;1;32m                               
[0m[1margp-help.c:500:17: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  500 |                 *so++ = o->key;[0m
      | [0;1;32m                ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1695:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1695 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1695:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1703:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1705:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1705 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1035:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1035 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1035:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1035 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1036:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1036 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1039:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1039:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1045:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1045 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1035:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1035 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1035:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1035 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1036:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1036 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1039:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1039:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1045:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1045 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1034:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1034 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:451:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  451 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:451:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  451 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:456:7: [0m[0;1;36mnote: [0mAssuming 'opts' is non-null[0m
  456 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:456:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  456 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:461:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  461 |       assert (! oalias (opts));[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:461:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  461 |       assert (! oalias (opts));[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:464:22: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:464:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:466:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  466 |           if (! oalias (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:468:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  468 |           if (oshort (o))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:468:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  468 |           if (oshort (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:464:22: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:464:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 472[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:475:15: [0m[0;1;36mnote: [0mAssuming field 'entries' is non-null[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:475:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1margp-help.c:475:31: [0m[0;1;36mnote: [0mAssuming field 'short_options' is non-null[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m                              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:475:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:476:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  476 |       if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:481:44: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:481:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:487:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
  487 |             o->group[0m
      | [0;1;32m            ^~~~~~~~
[0m[1margp-help.c:487:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1margp-help.c:489:17: [0m[0;1;36mnote: [0mAssuming field 'name' is non-null[0m
  489 |             : ((!o->name && !o->key)[0m
      | [0;1;32m                ^~~~~~~~
[0m[1margp-help.c:489:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  489 |             : ((!o->name && !o->key)[0m
      | [0;1;32m                         ^
[0m[1margp-help.c:498:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:498:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:498:33: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:498:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:503:18: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  503 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1margp-help.c:503:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-help.c:495:11: [0m[0;1;36mnote: [0mLoop condition is true. Execution continues on line 497[0m
  495 |           do[0m
      | [0;1;32m          ^
[0m[1margp-help.c:498:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:498:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:498:33: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:498:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:500:17: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'char' element[0m
  500 |                 *so++ = o->key;[0m
      | [0;1;32m                ^~~~~
[0m[1margp-help.c:505:7: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  505 |       *so = '\0';               /* null terminated so we can find the length */[0m
      | [0;1;32m      ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1695:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1695 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1695:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1703:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1705:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1705 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1035:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1035 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1035:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1035 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1036:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1036 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1039:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1039:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1045:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1045 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1035:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1035 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1035:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1035 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1036:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1036 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1039:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1039:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1039:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1039 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1045:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1045 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1034:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1034 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:451:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  451 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:451:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  451 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:456:7: [0m[0;1;36mnote: [0mAssuming 'opts' is non-null[0m
  456 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:456:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  456 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:461:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  461 |       assert (! oalias (opts));[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:461:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  461 |       assert (! oalias (opts));[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:464:22: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:464:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:466:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  466 |           if (! oalias (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:468:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  468 |           if (oshort (o))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:468:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  468 |           if (oshort (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:464:22: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:464:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 472[0m
  464 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:475:15: [0m[0;1;36mnote: [0mAssuming field 'entries' is non-null[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:475:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1margp-help.c:475:31: [0m[0;1;36mnote: [0mAssuming field 'short_options' is non-null[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m                              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:475:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  475 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:476:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  476 |       if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:481:44: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:481:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:487:13: [0m[0;1;36mnote: [0mAssuming field 'group' is not equal to 0[0m
  487 |             o->group[0m
      | [0;1;32m            ^~~~~~~~
[0m[1margp-help.c:487:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1margp-help.c:498:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:498:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:279:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  279 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^
[0m[1m./argp-namefrob.h:32:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   32 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:498:33: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:498:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  498 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:503:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  503 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1margp-help.c:503:29: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  503 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                            ^
[0m[1margp-help.c:495:11: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  495 |           do[0m
      | [0;1;32m          ^
[0m[1margp-help.c:481:44: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:481:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 505[0m
  481 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:505:7: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'char' element[0m
  505 |       *so = '\0';               /* null terminated so we can find the length */[0m
      | [0;1;32m      ^~~
[0m[1margp-help.c:572:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |   for (opt = real, nopts = entry->num; nopts > 0 && !val; opt++, nopts--)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  573 |     if (oshort (opt) && *so == opt->key)[0m
  574 |       {[0m
  575 |         if (!oalias (opt))[0m
  576 |           real = opt;[0m
  577 |         if (ovisible (opt))[0m
  578 |           val = (*func)(opt, real, domain, cookie);[0m
  579 |         so++;[0m
  580 |       }[0m
      | [0;1;32m       
[0m[1margp-help.c:575:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |         if (!oalias (opt))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  576 |           real = opt;[0m
      | [0;1;32m                     
[0m[1margp-help.c:577:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  577 |         if (ovisible (opt))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  578 |           val = (*func)(opt, real, domain, cookie);[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:602:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  602 |   for (opt = real, nopts = entry->num; nopts > 0 && !val; opt++, nopts--)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  603 |     if (opt->name)[0m
  604 |       {[0m
  605 |         if (!oalias (opt))[0m
  606 |           real = opt;[0m
  607 |         if (ovisible (opt))[0m
  608 |           val = (*func)(opt, real, domain, cookie);[0m
  609 |       }[0m
      | [0;1;32m       
[0m[1margp-help.c:605:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |         if (!oalias (opt))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  606 |           real = opt;[0m
      | [0;1;32m                     
[0m[1margp-help.c:607:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |         if (ovisible (opt))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  608 |           val = (*func)(opt, real, domain, cookie);[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:636:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |   for (opt = entry->opt, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  637 |     if (opt->name && ovisible (opt))[0m
  638 |       return opt->name;[0m
      | [0;1;32m                       
[0m[1margp-help.c:637:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  637 |     if (opt->name && ovisible (opt))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  638 |       return opt->name;[0m
      | [0;1;32m                       
[0m[1margp-help.c:647:3: [0m[0;1;35mwarning: [0m[1mAssigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign][0m
  647 |   struct hol_entry *entry = hol->entries;[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1695:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1695 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1695:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1703:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1705:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1705 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1034:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1034 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:449:21: [0m[0;1;36mnote: [0mUninitialized value stored to field 'entries'[0m
  449 |   struct hol *hol = malloc (sizeof (struct hol));[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:451:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  451 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:451:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  451 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:456:7: [0m[0;1;36mnote: [0mAssuming 'opts' is null[0m
  456 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:456:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1034:21: [0m[0;1;36mnote: [0mReturning from 'make_hol'[0m
 1034 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1035:7: [0m[0;1;36mnote: [0mAssuming 'child' is null[0m
 1035 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1035:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1035 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1705:13: [0m[0;1;36mnote: [0mReturning from 'argp_hol'[0m
 1705 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1708:7: [0m[0;1;36mnote: [0mCalling 'hol_set_group'[0m
 1708 |       hol_set_group (hol, "help", -1);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:672:29: [0m[0;1;36mnote: [0mCalling 'hol_find_entry'[0m
  672 |   struct hol_entry *entry = hol_find_entry (hol, name);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:647:3: [0m[0;1;36mnote: [0mAssigned value is garbage or undefined[0m
  647 |   struct hol_entry *entry = hol->entries;[0m
      | [0;1;32m  ^                         ~~~~~~~~~~~~
[0m[1margp-help.c:655:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  655 |       while (num_opts-- > 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  656 |         if (opt->name && ovisible (opt) && strcmp (opt->name, name) == 0)[0m
  657 |           return entry;[0m
  658 |         else[0m
  659 |           opt++;[0m
      | [0;1;32m                
[0m[1margp-help.c:656:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |         if (opt->name && ovisible (opt) && strcmp (opt->name, name) == 0)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  657 |           return entry;[0m
  658 |         else[0m
      | [0;32m        } 
[0m[1margp-help.c:658:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  658 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  659 |           opt++;[0m
      | [0;1;32m                
[0m[1margp-help.c:673:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  673 |   if (entry)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  674 |     entry->group = group;[0m
      | [0;1;32m                         
[0m[1margp-help.c:684:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |   if ((group1 < 0 && group2 < 0) || (group1 >= 0 && group2 >= 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  685 |     return group1 - group2;[0m
  686 |   else[0m
      | [0;32m  } 
[0m[1margp-help.c:686:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  686 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  687 |     /* Return > 0 if group1 < 0 <= group2.[0m
  688 |        Return < 0 if group2 < 0 <= group1.  */[0m
  689 |     return group2 - group1;[0m
      | [0;1;32m                           
[0m[1margp-help.c:700:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  700 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  701 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:713:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  713 |   if (cl1->parent == cl2->parent)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  714 |     return hol_sibling_cluster_cmp (cl1, cl2);[0m
  715 |   else[0m
      | [0;32m  } 
[0m[1margp-help.c:719:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  719 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  720 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:724:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  724 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  725 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:742:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  742 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  743 |         cl1 = cl1->parent;[0m
  744 |       while (cl1->depth > cl2->depth);[0m
      | [0;32m      } 
[0m[1margp-help.c:746:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  746 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  747 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:753:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  754 |         cl2 = cl2->parent;[0m
  755 |       while (cl1->depth < cl2->depth);[0m
      | [0;32m      } 
[0m[1margp-help.c:757:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  757 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  758 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:762:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  762 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  763 |     return hol_cousin_cluster_cmp (cl1, cl2);[0m
      | [0;1;32m                                             
[0m[1margp-help.c:771:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  771 |   while (cl->parent)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  772 |     cl = cl->parent;[0m
      | [0;1;32m                    
[0m[1margp-help.c:784:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |   while (isspace ((unsigned char) **name))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  785 |     (*name)++;[0m
      | [0;1;32m              
[0m[1margp-help.c:789:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |   while (**name && !isalnum ((unsigned char) **name))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  790 |     (*name)++;[0m
      | [0;1;32m              
[0m[1margp-help.c:819:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  820 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:826:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  827 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:833:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  834 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:840:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  840 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  841 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:854:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  854 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  855 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:871:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  871 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  872 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:876:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  876 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  877 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:883:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  883 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  884 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:890:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  890 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  891 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:896:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  896 |           if (cmp != 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  897 |             return cmp;[0m
      | [0;1;32m                       
[0m[1margp-help.c:923:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  923 |       for (i = 0, e = hol->entries; i < hol->num_entries; i++, e++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  924 |         e->ord = i;[0m
      | [0;1;32m                   
[0m[1margp-help.c:942:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  942 |   while (*cl_end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  943 |     cl_end = &(*cl_end)->next;[0m
      | [0;1;32m                              
[0m[1margp-help.c:972:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |           if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  973 |             assert (num_entries <= SIZE_MAX / sizeof (struct hol_entry));[0m
      | [0;1;32m                                                                         
[0m[1margp-help.c:983:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |           for (e = entries, left = hol->num_entries; left > 0; e++, left--)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  984 |             e->short_options[0m
  985 |               = short_options + (e->short_options - hol->short_options);[0m
      | [0;1;32m                                                                        
[0m[1margp-help.c:1005:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1005 |                                        short_options + hol_so_len))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1006 |                         /* The short option CH isn't shadowed by HOL's options,[0m
 1007 |                            so add it to the sum.  */[0m
 1008 |                         *so++ = ch;[0m
      | [0;1;32m                                   
[0m[1margp-help.c:1035:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1035 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1036 |     while (child->argp)[0m
 1037 |       {[0m
 1038 |         struct hol_cluster *child_cluster =[0m
 1039 |           ((child->group || child->header)[0m
 1040 |            /* Put CHILD->argp within its own cluster.  */[0m
 1041 |            ? hol_add_cluster (hol, child->group, child->header,[0m
 1042 |                               child - argp->children, cluster, argp)[0m
 1043 |            /* Just merge it into the parent's cluster.  */[0m
 1044 |            : cluster);[0m
 1045 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
 1046 |         child++;[0m
 1047 |       }[0m
      | [0;1;32m       
[0m[1margp-help.c:1059:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1059 |   while (needed-- > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1060 |     __argp_fmtstream_putc (stream, ' ');[0m
      | [0;1;32m                                        
[0m[1margp-help.c:1069:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1069 |       >= __argp_fmtstream_rmargin (stream))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1070 |     __argp_fmtstream_putc (stream, '\n');[0m
 1071 |   else[0m
      | [0;32m  } 
[0m[1margp-help.c:1071:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1071 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1072 |     __argp_fmtstream_putc (stream, ' ');[0m
      | [0;1;32m                                        
[0m[1margp-help.c:1084:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1084 |       if (real->flags & OPTION_ARG_OPTIONAL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1085 |         __argp_fmtstream_printf (stream, opt_fmt,[0m
 1086 |                                  dgettext (domain, real->arg));[0m
 1087 |       else[0m
      | [0;32m      } 
[0m[1margp-help.c:1087:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1087 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1088 |         __argp_fmtstream_printf (stream, req_fmt,[0m
 1089 |                                  dgettext (domain, real->arg));[0m
      | [0;1;32m                                                               
[0m[1margp-help.c:1137:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1137 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1138 |     /* No filter.  */[0m
 1139 |     return doc;[0m
      | [0;1;32m               
[0m[1margp-help.c:1158:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1158 |           if (pest->hhstate->prev_entry)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1159 |             /* Precede with a blank line.  */[0m
 1160 |             __argp_fmtstream_putc (pest->stream, '\n');[0m
      | [0;1;32m                                                       
[0m[1margp-help.c:1172:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1172 |   if (fstr != tstr)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1173 |     free ((char *) fstr);[0m
      | [0;1;32m                         
[0m[1margp-help.c:1181:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1181 |   while (cl1 && cl1 != cl2)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1182 |     cl1 = cl1->parent;[0m
      | [0;1;32m                      
[0m[1margp-help.c:1198:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1198 |       if (pest->hhstate->sep_groups && pe && pest->entry->group != pe->group)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1199 |         __argp_fmtstream_putc (pest->stream, '\n');[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:1217:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1217 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1218 |     __argp_fmtstream_puts (pest->stream, ", ");[0m
      | [0;1;32m                                               
[0m[1margp-help.c:1239:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1239 |   if (! odoc (real))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1240 |     for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
 1241 |       if (opt->name && ovisible (opt))[0m
 1242 |         {[0m
 1243 |           have_long_opt = 1;[0m
 1244 |           break;[0m
 1245 |         }[0m
      | [0;1;32m         
[0m[1margp-help.c:1240:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1240 |     for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1241 |       if (opt->name && ovisible (opt))[0m
 1242 |         {[0m
 1243 |           have_long_opt = 1;[0m
 1244 |           break;[0m
 1245 |         }[0m
      | [0;1;32m         
[0m[1margp-help.c:1249:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1249 |   for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m[1margp-help.c:1258:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1258 |             if (!have_long_opt || uparams.dup_args)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1259 |               arg (real, " %s", "[%s]",[0m
 1260 |                    state == NULL ? NULL : state->root_argp->argp_domain,[0m
 1261 |                    stream);[0m
 1262 |             else if (real->arg)[0m
      | [0;32m            } 
[0m[1margp-help.c:1262:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1262 |             else if (real->arg)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1263 |               hhstate->suppressed_dup_arg = 1;[0m
      | [0;1;32m                                              
[0m[1margp-help.c:1273:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1273 |       for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1274 |         if (opt->name && ovisible (opt))[0m
 1275 |           {[0m
 1276 |             comma (uparams.doc_opt_col, &pest);[0m
 1277 |             /* Calling dgettext here isn't quite right, since sorting will[0m
 1278 |                have been done on the original; but documentation options[0m
 1279 |                should be pretty rare anyway...  */[0m
 1280 |             __argp_fmtstream_puts (stream,[0m
 1281 |                                    dgettext (state == NULL ? NULL[0m
 1282 |                                              : state->root_argp->argp_domain,[0m
 1283 |                                              opt->name));[0m
 1284 |           }[0m
      | [0;1;32m           
[0m[1margp-help.c:1290:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1290 |       for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1291 |         if (opt->name && ovisible (opt))[0m
 1292 |           {[0m
 1293 |             comma (uparams.long_opt_col, &pest);[0m
 1294 |             __argp_fmtstream_printf (stream, "--%s", opt->name);[0m
 1295 |             arg (real, "=%s", "[=%s]",[0m
 1296 |                  state == NULL ? NULL : state->root_argp->argp_domain, stream);[0m
 1297 |           }[0m
      | [0;1;32m           
[0m[1margp-help.c:1306:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1306 |       if (!oshort (real) && !real->name)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1307 |         /* This is a group header, print it nicely.  */[0m
 1308 |         print_header (real->doc, entry->argp, &pest);[0m
 1309 |       else[0m
      | [0;32m      } 
[0m[1margp-help.c:1309:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1309 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1310 |         /* Just a totally shadowed option or null header; print nothing.  */[0m
 1311 |         goto cleanup;           /* Just return, after cleaning up.  */[0m
      | [0;1;32m                                                                      
[0m[1margp-help.c:1326:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1326 |           if (col > (unsigned int) (uparams.opt_doc_col + 3))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1327 |             __argp_fmtstream_putc (stream, '\n');[0m
 1328 |           else if (col >= (unsigned int) uparams.opt_doc_col)[0m
      | [0;32m          } 
[0m[1margp-help.c:1328:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1328 |           else if (col >= (unsigned int) uparams.opt_doc_col)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1329 |             __argp_fmtstream_puts (stream, "   ");[0m
 1330 |           else[0m
      | [0;32m          } 
[0m[1margp-help.c:1330:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1330 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1331 |             indent_to (stream, uparams.opt_doc_col);[0m
      | [0;1;32m                                                    
[0m[1margp-help.c:1335:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1335 |       if (fstr && fstr != tstr)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1336 |         free ((char *) fstr);[0m
      | [0;1;32m                             
[0m[1margp-help.c:1359:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1359 |   for (entry = hol->entries, num = hol->num_entries; num > 0; entry++, num--)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1360 |     hol_entry_help (entry, state, stream, &hhstate);[0m
      | [0;1;32m                                                    
[0m[1margp-help.c:1376:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1376 |       if (fstr && fstr != tstr)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1377 |         free ((char *) fstr);[0m
      | [0;1;32m                             
[0m[1margp-help.c:1392:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1392 |       && !((opt->flags | real->flags) & OPTION_NO_USAGE))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1393 |     *(*snao_end)++ = opt->key;[0m
      | [0;1;32m                              
[0m[1margp-help.c:1408:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1408 |   if (! arg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1409 |     arg = real->arg;[0m
      | [0;1;32m                    
[0m[1margp-help.c:1415:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1415 |       if (flags & OPTION_ARG_OPTIONAL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1416 |         __argp_fmtstream_printf (stream, " [-%c[%s]]", opt->key, arg);[0m
 1417 |       else[0m
      | [0;32m      } 
[0m[1margp-help.c:1440:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1440 |   if (! arg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1441 |     arg = real->arg;[0m
      | [0;1;32m                    
[0m[1margp-help.c:1448:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1448 |           if (flags & OPTION_ARG_OPTIONAL)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1449 |             __argp_fmtstream_printf (stream, " [--%s[=%s]]", opt->name, arg);[0m
 1450 |           else[0m
      | [0;32m          } 
[0m[1margp-help.c:1450:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1450 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1451 |             __argp_fmtstream_printf (stream, " [--%s=%s]", opt->name, arg);[0m
      | [0;1;32m                                                                           
[0m[1margp-help.c:1453:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1453 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1454 |         __argp_fmtstream_printf (stream, " [--%s]", opt->name);[0m
      | [0;1;32m                                                               
[0m[1margp-help.c:1464:7: [0m[0;1;35mwarning: [0m[1mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol') [clang-analyzer-core.NullDereference][0m
 1464 |   if (hol->num_entries > 0)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1681:3: [0m[0;1;36mnote: [0m'hol' initialized to a null pointer value[0m
 1681 |   struct hol *hol = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1695:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1695 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1695:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1703:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1714:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1714 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1714:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1714 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1729:15: [0m[0;1;36mnote: [0m'first_pattern' is 1[0m
 1729 |           if (first_pattern)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1margp-help.c:1729:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1729 |           if (first_pattern)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1742:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1742 |           if (flags & ARGP_HELP_SHORT_USAGE)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1742:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1742 |           if (flags & ARGP_HELP_SHORT_USAGE)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1752:26: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 'hol'[0m
 1752 |               hol_usage (hol, fs);[0m
      | [0;1;32m                         ^~~
[0m[1margp-help.c:1752:15: [0m[0;1;36mnote: [0mCalling 'hol_usage'[0m
 1752 |               hol_usage (hol, fs);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1464:7: [0m[0;1;36mnote: [0mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol')[0m
 1464 |   if (hol->num_entries > 0)[0m
      | [0;1;32m      ^~~
[0m[1margp-help.c:1474:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1474 |            ; entry++, nentries--)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1475 |         hol_entry_short_iterate (entry, add_argless_short_opt,[0m
 1476 |                                  entry->argp->argp_domain, &snao_end);[0m
      | [0;1;32m                                                                      
[0m[1margp-help.c:1486:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1486 |            ; entry++, nentries--)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1487 |         hol_entry_short_iterate (entry, usage_argful_short_opt,[0m
 1488 |                                  entry->argp->argp_domain, stream);[0m
      | [0;1;32m                                                                   
[0m[1margp-help.c:1493:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1493 |            ; entry++, nentries--)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1494 |         hol_entry_long_iterate (entry, usage_long_opt,[0m
 1495 |                                 entry->argp->argp_domain, stream);[0m
      | [0;1;32m                                                                  
[0m[1margp-help.c:1507:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1507 |   if (argp->args_doc && strchr (argp->args_doc, '\n'))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1508 |     levels++;[0m
      | [0;1;32m             
[0m[1margp-help.c:1510:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1510 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1511 |     while (child->argp)[0m
 1512 |       levels += argp_args_levels ((child++)->argp);[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:1511:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1511 |     while (child->argp)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1512 |       levels += argp_args_levels ((child++)->argp);[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:1544:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1544 |           for (i = 0; i < *our_level; i++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1545 |             cp = nl + 1, nl = __strchrnul (cp, '\n');[0m
      | [0;1;32m                                                     
[0m[1margp-help.c:1555:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1555 |   if (fdoc && fdoc != tdoc)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1556 |     free ((char *)fdoc);        /* Free user's modified doc string.  */[0m
      | [0;1;32m                                                                       
[0m[1margp-help.c:1558:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1558 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1559 |     while (child->argp)[0m
 1560 |       advance = !argp_args_usage ((child++)->argp, state, levels, advance, stream);[0m
      | [0;1;32m                                                                                   
[0m[1margp-help.c:1559:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1559 |     while (child->argp)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1560 |       advance = !argp_args_usage ((child++)->argp, state, levels, advance, stream);[0m
      | [0;1;32m                                                                                   
[0m[1margp-help.c:1571:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1571 |       else if (*our_level > 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1572 |         /* We had multiple levels, but used them up; reset to zero.  */[0m
 1573 |         *our_level = 0;[0m
      | [0;1;32m                       
[0m[1margp-help.c:1605:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1605 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1606 |     inp_text = 0;[0m
      | [0;1;32m                 
[0m[1margp-help.c:1611:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1611 |       if (inp_text_limit)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1612 |         /* Copy INP_TEXT so that it's nul-terminated.  */[0m
 1613 |         inp_text = __strndup (inp_text, inp_text_limit);[0m
      | [0;1;32m                                                        
[0m[1margp-help.c:1621:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1621 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1622 |     text = (const char *) inp_text;[0m
      | [0;1;32m                                   
[0m[1margp-help.c:1626:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1626 |       if (pre_blank)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1627 |         __argp_fmtstream_putc (stream, '\n');[0m
      | [0;1;32m                                             
[0m[1margp-help.c:1629:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1629 |       if (text == inp_text && inp_text_limit)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1630 |         __argp_fmtstream_write (stream, inp_text, inp_text_limit);[0m
 1631 |       else[0m
      | [0;32m      } 
[0m[1margp-help.c:1631:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1631 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1632 |         __argp_fmtstream_puts (stream, text);[0m
      | [0;1;32m                                             
[0m[1margp-help.c:1634:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1634 |       if (__argp_fmtstream_point (stream) > __argp_fmtstream_lmargin (stream))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1635 |         __argp_fmtstream_putc (stream, '\n');[0m
      | [0;1;32m                                             
[0m[1margp-help.c:1640:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1640 |   if (text && text != inp_text)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1641 |     free ((char *) text);       /* Free TEXT returned from the help filter.  */[0m
      | [0;1;32m                                                                               
[0m[1margp-help.c:1642:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1642 |   if (inp_text && inp_text_limit && argp->help_filter)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1643 |     free ((char *) inp_text);   /* We copied INP_TEXT, so free it now.  */[0m
      | [0;1;32m                                                                          
[0m[1margp-help.c:1651:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1651 |           if (anything || pre_blank)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1652 |             __argp_fmtstream_putc (stream, '\n');[0m
      | [0;1;32m                                                 
[0m[1margp-help.c:1656:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1656 |               > __argp_fmtstream_lmargin (stream))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1657 |             __argp_fmtstream_putc (stream, '\n');[0m
      | [0;1;32m                                                 
[0m[1margp-help.c:1662:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1662 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1663 |     while (child->argp && !(first_only && anything))[0m
 1664 |       anything |=[0m
 1665 |         argp_doc ((child++)->argp, state,[0m
 1666 |                   post, anything || pre_blank, first_only,[0m
 1667 |                   stream);[0m
      | [0;1;32m                          
[0m[1margp-help.c:1663:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1663 |     while (child->argp && !(first_only && anything))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1664 |       anything |=[0m
 1665 |         argp_doc ((child++)->argp, state,[0m
 1666 |                   post, anything || pre_blank, first_only,[0m
 1667 |                   stream);[0m
      | [0;1;32m                          
[0m[1margp-help.c:1684:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1684 |   if (! stream)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1685 |     return;[0m
      | [0;1;32m           
[0m[1margp-help.c:1691:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1692 |     fill_in_uparams (state);[0m
      | [0;1;32m                            
[0m[1margp-help.c:1719:30: [0m[0;1;35mwarning: [0m[1mCall to 'alloca' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI][0m
 1719 |       char *pattern_levels = alloca (num_pattern_levels);[0m
      | [0;1;32m                             ^
[0m[1m./alloca.h:51:18: [0m[0;1;36mnote: [0mexpanded from macro 'alloca'[0m
   51 | #  define alloca __builtin_alloca[0m
      | [0;1;32m                 ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1695:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1695 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1695:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1703:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1714:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1714 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1714:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1714 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1718:35: [0m[0;1;36mnote: [0mCalling 'argp_args_levels'[0m
 1718 |       size_t num_pattern_levels = argp_args_levels (argp);[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1504:3: [0m[0;1;36mnote: [0m'levels' initialized to 0[0m
 1504 |   size_t levels = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1margp-help.c:1507:7: [0m[0;1;36mnote: [0mAssuming field 'args_doc' is null[0m
 1507 |   if (argp->args_doc && strchr (argp->args_doc, '\n'))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1margp-help.c:1507:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1507 |   if (argp->args_doc && strchr (argp->args_doc, '\n'))[0m
      | [0;1;32m                     ^
[0m[1margp-help.c:1510:7: [0m[0;1;36mnote: [0mAssuming 'child' is null[0m
 1510 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1510:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1510 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1514:3: [0m[0;1;36mnote: [0mReturning zero (loaded from 'levels')[0m
 1514 |   return levels;[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1margp-help.c:1718:35: [0m[0;1;36mnote: [0mReturning from 'argp_args_levels'[0m
 1718 |       size_t num_pattern_levels = argp_args_levels (argp);[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1718:7: [0m[0;1;36mnote: [0m'num_pattern_levels' initialized to 0[0m
 1718 |       size_t num_pattern_levels = argp_args_levels (argp);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1719:30: [0m[0;1;36mnote: [0mCall to 'alloca' has an allocation size of 0 bytes[0m
 1719 |       char *pattern_levels = alloca (num_pattern_levels);[0m
      | [0;1;32m                             ^       ~~~~~~~~~~~~~~~~~~
[0m[1m./alloca.h:51:18: [0m[0;1;36mnote: [0mexpanded from macro 'alloca'[0m
   51 | #  define alloca __builtin_alloca[0m
      | [0;1;32m                 ^
[0m[1margp-help.c:1721:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1721 |       memset (pattern_levels, 0, num_pattern_levels);[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-help.c:1721:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1721 |       memset (pattern_levels, 0, num_pattern_levels);[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-help.c:1729:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1729 |           if (first_pattern)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1730 |             __argp_fmtstream_printf (fs, "%s %s",[0m
 1731 |                                      dgettext (argp->argp_domain, "Usage:"),[0m
 1732 |                                      name);[0m
 1733 |           else[0m
      | [0;32m          } 
[0m[1margp-help.c:1733:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1733 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1734 |             __argp_fmtstream_printf (fs, "%s %s",[0m
 1735 |                                      dgettext (argp->argp_domain, "  or: "),[0m
 1736 |                                      name);[0m
      | [0;1;32m                                           
[0m[1margp-help.c:1745:19: [0m[0;1;35mwarning: [0m[1mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol') [clang-analyzer-core.NullDereference][0m
 1745 |               if (hol->num_entries > 0)[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1681:3: [0m[0;1;36mnote: [0m'hol' initialized to a null pointer value[0m
 1681 |   struct hol *hol = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1695:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1695 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1695:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1703:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1714:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1714 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1714:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1714 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1729:15: [0m[0;1;36mnote: [0m'first_pattern' is 1[0m
 1729 |           if (first_pattern)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1margp-help.c:1729:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1729 |           if (first_pattern)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1742:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1742 |           if (flags & ARGP_HELP_SHORT_USAGE)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1742:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1742 |           if (flags & ARGP_HELP_SHORT_USAGE)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1745:19: [0m[0;1;36mnote: [0mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol')[0m
 1745 |               if (hol->num_entries > 0)[0m
      | [0;1;32m                  ^~~
[0m[1margp-help.c:1745:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1745 |               if (hol->num_entries > 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1746 |                 __argp_fmtstream_puts (fs, dgettext (argp->argp_domain,[0m
 1747 |                                                      " [OPTION...]"));[0m
      | [0;1;32m                                                                      
[0m[1margp-help.c:1769:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1769 |   if (flags & ARGP_HELP_PRE_DOC)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1770 |     anything |= argp_doc (argp, state, 0, 0, 1, fs);[0m
      | [0;1;32m                                                    
[0m[1margp-help.c:1784:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol') [clang-analyzer-core.NullDereference][0m
 1784 |       if (hol->num_entries > 0)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1822:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1822 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1681:3: [0m[0;1;36mnote: [0m'hol' initialized to a null pointer value[0m
 1681 |   struct hol *hol = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1684:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1684 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1684:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1684 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1691:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1691:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1691 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1695:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1695 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1695:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1695 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1703:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1703 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1714:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1714 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1714:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1714 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1769:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1769 |   if (flags & ARGP_HELP_PRE_DOC)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1769:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1769 |   if (flags & ARGP_HELP_PRE_DOC)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1772:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1772 |   if (flags & ARGP_HELP_SEE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1772:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1772 |   if (flags & ARGP_HELP_SEE)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1780:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1780 |   if (flags & ARGP_HELP_LONG)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1780:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1780 |   if (flags & ARGP_HELP_LONG)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1784:11: [0m[0;1;36mnote: [0mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol')[0m
 1784 |       if (hol->num_entries > 0)[0m
      | [0;1;32m          ^~~
[0m[1margp-help.c:1786:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1786 |           if (anything)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1787 |             __argp_fmtstream_putc (fs, '\n');[0m
      | [0;1;32m                                             
[0m[1margp-help.c:1793:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1793 |   if (flags & ARGP_HELP_POST_DOC)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1794 |     /* Print any documentation strings at the end.  */[0m
 1795 |     anything |= argp_doc (argp, state, 1, anything, 0, fs);[0m
      | [0;1;32m                                                           
[0m[1margp-help.c:1799:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1799 |       if (anything)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1800 |         __argp_fmtstream_putc (fs, '\n');[0m
      | [0;1;32m                                         
[0m[1margp-help.c:1804:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'anything' is never read [clang-analyzer-deadcode.DeadStores][0m
 1804 |       anything = 1;[0m
      | [0;1;32m      ^          ~
[0m[1margp-help.c:1804:7: [0m[0;1;36mnote: [0mValue stored to 'anything' is never read[0m
 1804 |       anything = 1;[0m
      | [0;1;32m      ^          ~
[0m[1margp-help.c:1811:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1811 |   if (hol)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1812 |     hol_free (hol);[0m
      | [0;1;32m                   
[0m[1margp-help.c:1854:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1854 |       if (state && (state->flags & ARGP_LONG_ONLY))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1855 |         flags |= ARGP_HELP_LONG_ONLY;[0m
      | [0;1;32m                                     
[0m[1margp-help.c:1862:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1862 |           if (flags & ARGP_HELP_EXIT_ERR)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1863 |             exit (argp_err_exit_status);[0m
      | [0;1;32m                                        
[0m[1margp-help.c:1864:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1864 |           if (flags & ARGP_HELP_EXIT_OK)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1865 |             exit (0);[0m
      | [0;1;32m                     
[0m[1margp-help.c:2001:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2001 |               if (! s && ! (s = strerror (errnum)))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2002 |                 s = dgettext (state->root_argp->argp_domain,[0m
 2003 |                               "Unknown system error");[0m
      | [0;1;32m                                                      
[0m[1margp-help.c:2019:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2019 |           if (status && (!state || !(state->flags & ARGP_NO_EXIT)))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 2020 |             exit (status);[0m
      | [0;1;32m                          
[0m165 warnings generated.
Suppressed 22 warnings (22 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[45/46][240.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmp6ee3jyl4.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/parser.c
[1mparser.c:89:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   89 |           fprintf(stderr, "`%s'", tokptr->token);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:89:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   89 |           fprintf(stderr, "`%s'", tokptr->token);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:90:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   90 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mparser.c:93:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   93 |           fprintf(stderr, "`{'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:93:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   93 |           fprintf(stderr, "`{'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:94:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   94 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mparser.c:97:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   97 |           fprintf(stderr, "`}'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:97:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   97 |           fprintf(stderr, "`}'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:98:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   98 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mparser.c:100:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  100 |           fprintf(stderr, "`extern'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:100:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  100 |           fprintf(stderr, "`extern'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:100:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  100 |           fprintf(stderr, "`extern'");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  101 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mparser.c:103:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  103 |           fprintf(stderr, "`static'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:103:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  103 |           fprintf(stderr, "`static'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:103:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  103 |           fprintf(stderr, "`static'");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  104 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mparser.c:106:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  106 |           fprintf(stderr, "`typedef'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:106:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  106 |           fprintf(stderr, "`typedef'");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:106:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  106 |           fprintf(stderr, "`typedef'");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  107 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mparser.c:109:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  109 |           fprintf(stderr, "\"%s\"", tokptr->token);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:109:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  109 |           fprintf(stderr, "\"%s\"", tokptr->token);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:109:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |           fprintf(stderr, "\"%s\"", tokptr->token);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  110 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mparser.c:112:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  112 |           fprintf(stderr, "`%c'", tokptr->type);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:112:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  112 |           fprintf(stderr, "`%c'", tokptr->type);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:112:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  112 |           fprintf(stderr, "`%c'", tokptr->type);[0m
      | [0;1;32m          ^                                    
[0m      | [0;32m          {                                    ;} 
[0m[1mparser.c:122:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  122 |           return "EOF";[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1mparser.c:124:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  124 |           return "WORD";[0m
      | [0;1;32m          ^            
[0m      | [0;32m          {            ;} 
[0m[1mparser.c:126:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  126 |           return "'{'";[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1mparser.c:128:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  128 |           return "'}'";[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1mparser.c:130:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  130 |           return "IDENTIFIER";[0m
      | [0;1;32m          ^                  
[0m      | [0;32m          {                  ;} 
[0m[1mparser.c:132:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  132 |           return "EXTERN";[0m
      | [0;1;32m          ^              
[0m      | [0;32m          {              ;} 
[0m[1mparser.c:134:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |           return "STATIC";[0m
      | [0;1;32m          ^              
[0m      | [0;32m          {              ;} 
[0m[1mparser.c:136:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  136 |           return "TYPEDEF";[0m
      | [0;1;32m          ^               
[0m      | [0;32m          {               ;} 
[0m[1mparser.c:138:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  138 |           return "STRUCT";[0m
      | [0;1;32m          ^              
[0m      | [0;32m          {              ;} 
[0m[1mparser.c:140:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  140 |           return "MODIFIER";[0m
      | [0;1;32m          ^                
[0m      | [0;32m          {                ;} 
[0m[1mparser.c:142:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  142 |           return "OP";[0m
      | [0;1;32m          ^          
[0m      | [0;32m          {          ;} 
[0m[1mparser.c:144:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  144 |           return "UNION";[0m
      | [0;1;32m          ^             
[0m      | [0;32m          {             ;} 
[0m[1mparser.c:146:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  146 |           return "ENUM";[0m
      | [0;1;32m          ^            
[0m      | [0;32m          {            ;} 
[0m[1mparser.c:148:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  148 |           return "' {'";[0m
      | [0;1;32m          ^            
[0m      | [0;32m          {            ;} 
[0m[1mparser.c:150:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |           return "' }'";[0m
      | [0;1;32m          ^            
[0m      | [0;32m          {            ;} 
[0m[1mparser.c:152:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  152 |           return "MEMBER_OF";[0m
      | [0;1;32m          ^                 
[0m      | [0;32m          {                 ;} 
[0m[1mparser.c:154:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  154 |           return "TYPE";[0m
      | [0;1;32m          ^            
[0m      | [0;32m          {            ;} 
[0m[1mparser.c:156:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |           return "STRING";[0m
      | [0;1;32m          ^              
[0m      | [0;32m          {              ;} 
[0m[1mparser.c:158:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  158 |           return "PARM_WRAPPER";[0m
      | [0;1;32m          ^                    
[0m      | [0;32m          {                    ;} 
[0m[1mparser.c:160:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  160 |           return "QUALIFIER";[0m
      | [0;1;32m          ^                 
[0m      | [0;32m          {                 ;} 
[0m[1mparser.c:162:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |      if (isprint(t))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  163 |           snprintf(buf, sizeof(buf), "'%c'(%d)", t, t);[0m
  164 |      else[0m
      | [0;32m     } 
[0m[1mparser.c:163:4: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  163 |           snprintf(buf, sizeof(buf), "'%c'(%d)", t, t);[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mparser.c:163:4: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  163 |           snprintf(buf, sizeof(buf), "'%c'(%d)", t, t);[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mparser.c:164:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |      else[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  165 |           snprintf(buf, sizeof(buf), "%d", t);[0m
      | [0;1;32m                                              
[0m[1mparser.c:165:4: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  165 |           snprintf(buf, sizeof(buf), "%d", t);[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mparser.c:165:4: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  165 |           snprintf(buf, sizeof(buf), "%d", t);[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mparser.c:172:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |      if (delim)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  173 |           fputc(delim, stderr);[0m
      | [0;1;32m                               
[0m[1mparser.c:174:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  174 |      fprintf(stderr, "{ %s ", token_type_str(t->type));[0m
      | [0;1;32m     ^~~~~~~
[0m[1mparser.c:174:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  174 |      fprintf(stderr, "{ %s ", token_type_str(t->type));[0m
      | [0;1;32m     ^~~~~~~
[0m[1mparser.c:175:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |      if (t->type)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  176 |           fprintf(stderr, ", %s, %d ", t->token ? t->token : "NULL", t->line);[0m
      | [0;1;32m                                                                              
[0m[1mparser.c:176:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  176 |           fprintf(stderr, ", %s, %d ", t->token ? t->token : "NULL", t->line);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:176:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  176 |           fprintf(stderr, ", %s, %d ", t->token ? t->token : "NULL", t->line);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:191:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  191 |                fprintf(stderr, ": ");[0m
      | [0;1;32m               ^~~~~~~
[0m[1mparser.c:191:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  191 |                fprintf(stderr, ": ");[0m
      | [0;1;32m               ^~~~~~~
[0m[1mparser.c:195:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  195 |                fprintf(stderr, "; ");[0m
      | [0;1;32m               ^~~~~~~
[0m[1mparser.c:195:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  195 |                fprintf(stderr, "; ");[0m
      | [0;1;32m               ^~~~~~~
[0m[1mparser.c:197:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  197 |           fprintf(stderr, "%d: {", curs);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:197:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  197 |           fprintf(stderr, "%d: {", curs);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:198:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |           for (i = curs; i < tos; i++)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  199 |                dbgtok(token_stack + i, i == curs ? 0 : ',');[0m
      | [0;1;32m                                                            
[0m[1mparser.c:200:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  200 |           fprintf(stderr, "}\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:200:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  200 |           fprintf(stderr, "}\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:207:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  207 |     fprintf(stderr, "%s:%d: %s", filename, tok.line, msg);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mparser.c:207:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  207 |     fprintf(stderr, "%s:%d: %s", filename, tok.line, msg);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mparser.c:209:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  209 |         fprintf(stderr, _(" near "));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mparser.c:209:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  209 |         fprintf(stderr, _(" near "));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mparser.c:212:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  212 |     fprintf(stderr, "\n");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mparser.c:212:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  212 |     fprintf(stderr, "\n");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mparser.c:219:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |      if (debug > 1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  220 |           fprintf(stderr, "marking stack at %d\n", curs);[0m
      | [0;1;32m                                                         
[0m[1mparser.c:220:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  220 |           fprintf(stderr, "marking stack at %d\n", curs);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:220:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  220 |           fprintf(stderr, "marking stack at %d\n", curs);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:237:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |           if (end < tos)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  238 |                memmove(token_stack + beg, token_stack + end + 1,[0m
  239 |                        (tos - end - 1) * sizeof(token_stack[0]));[0m
      | [0;1;32m                                                                 
[0m[1mparser.c:238:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  238 |                memmove(token_stack + beg, token_stack + end + 1,[0m
      | [0;1;32m               ^~~~~~~
[0m[1mparser.c:238:9: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  238 |                memmove(token_stack + beg, token_stack + end + 1,[0m
      | [0;1;32m               ^~~~~~~
[0m[1mparser.c:252:6: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  252 |      memmove(token_stack + pos + 1, token_stack + pos,[0m
      | [0;1;32m     ^~~~~~~
[0m[1mparser.c:252:6: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  252 |      memmove(token_stack + pos + 1, token_stack + pos,[0m
      | [0;1;32m     ^~~~~~~
[0m[1mparser.c:278:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |      if (delta > 0) [0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  279 |           memmove(token_stack, token_stack+curs, delta*sizeof(token_stack[0]));[0m
  280 |      else if (delta < 0) /* Invalid input */[0m
      | [0;32m     } 
[0m[1mparser.c:279:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  279 |           memmove(token_stack, token_stack+curs, delta*sizeof(token_stack[0]));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:279:4: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  279 |           memmove(token_stack, token_stack+curs, delta*sizeof(token_stack[0]));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:280:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |      else if (delta < 0) /* Invalid input */[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  281 |           delta = 0;[0m
      | [0;1;32m                    
[0m[1mparser.c:318:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |      } else[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  319 |           tok.type = 0;[0m
      | [0;1;32m                       
[0m[1mparser.c:344:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |           if (need_space) [0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  345 |                obstack_1grow(&text_stk, ' ');[0m
      | [0;1;32m                                             
[0m[1mparser.c:346:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  346 |           len = strlen(tokptr->token);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  347 |           obstack_grow(&text_stk, tokptr->token, len);[0m
  348 |           need_space = 1;[0m
  349 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mparser.c:347:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  347 |           obstack_grow(&text_stk, tokptr->token, len);[0m
      | [0;1;32m          ^
[0m[1m../gnu/obstack.h:333:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_grow'[0m
  333 |        memcpy (__o->next_free, where, __len);                                 \[0m
      | [0;1;32m       ^~~~~~
[0m[1mparser.c:347:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  347 |           obstack_grow(&text_stk, tokptr->token, len);[0m
      | [0;1;32m          ^
[0m[1m../gnu/obstack.h:333:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_grow'[0m
  333 |        memcpy (__o->next_free, where, __len);                                 \[0m
      | [0;1;32m       ^~~~~~
[0m[1mparser.c:351:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  351 |           if (need_space) [0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  352 |                obstack_1grow(&text_stk, ' ');[0m
  353 |           if (tokptr->token[0] == '*') [0m
  354 |                need_space = 0;[0m
  355 |           else[0m
  356 |                need_space = 1;[0m
  357 |           len = strlen(tokptr->token);[0m
  358 |           obstack_grow(&text_stk, tokptr->token, len);[0m
  359 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mparser.c:351:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |           if (need_space) [0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  352 |                obstack_1grow(&text_stk, ' ');[0m
      | [0;1;32m                                             
[0m[1mparser.c:353:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |           if (tokptr->token[0] == '*') [0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  354 |                need_space = 0;[0m
  355 |           else[0m
      | [0;32m          } 
[0m[1mparser.c:355:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  356 |                need_space = 1;[0m
      | [0;1;32m                              
[0m[1mparser.c:358:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  358 |           obstack_grow(&text_stk, tokptr->token, len);[0m
      | [0;1;32m          ^
[0m[1m../gnu/obstack.h:333:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_grow'[0m
  333 |        memcpy (__o->next_free, where, __len);                                 \[0m
      | [0;1;32m       ^~~~~~
[0m[1mparser.c:358:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  358 |           obstack_grow(&text_stk, tokptr->token, len);[0m
      | [0;1;32m          ^
[0m[1m../gnu/obstack.h:333:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_grow'[0m
  333 |        memcpy (__o->next_free, where, __len);                                 \[0m
      | [0;1;32m       ^~~~~~
[0m[1mparser.c:364:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  364 |           obstack_1grow(&text_stk, ',');[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  365 |           need_space = 1;[0m
  366 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m../gnu/obstack.h:349:3: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_1grow'[0m
  349 |   __extension__                                                               \[0m
      | [0;1;32m  ^
[0m[1mparser.c:368:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  368 |           if (need_space) [0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  369 |                obstack_1grow(&text_stk, ' ');[0m
  370 |           obstack_1grow(&text_stk, tokptr->type);[0m
  371 |           need_space = 0;[0m
  372 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mparser.c:368:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |           if (need_space) [0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  369 |                obstack_1grow(&text_stk, ' ');[0m
      | [0;1;32m                                             
[0m[1mparser.c:374:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  374 |           obstack_1grow(&text_stk, tokptr->type);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  375 |           need_space = 1;[0m
  376 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m../gnu/obstack.h:349:3: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_1grow'[0m
  349 |   __extension__                                                               \[0m
      | [0;1;32m  ^
[0m[1mparser.c:380:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  380 |           need_space = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  381 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mparser.c:384:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |           if (need_space) [0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  385 |                obstack_1grow(&text_stk, ' ');[0m
      | [0;1;32m                                             
[0m[1mparser.c:386:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  386 |           obstack_1grow(&text_stk, '{');[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  387 |           need_space = 1;[0m
  388 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m../gnu/obstack.h:349:3: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_1grow'[0m
  349 |   __extension__                                                               \[0m
      | [0;1;32m  ^
[0m[1mparser.c:391:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |           if (need_space) [0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  392 |                obstack_1grow(&text_stk, ' ');[0m
      | [0;1;32m                                             
[0m[1mparser.c:393:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  393 |           obstack_1grow(&text_stk, '}');[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  394 |           need_space = 1;[0m
  395 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m../gnu/obstack.h:349:3: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_1grow'[0m
  349 |   __extension__                                                               \[0m
      | [0;1;32m  ^
[0m[1mparser.c:397:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  397 |           obstack_1grow(&text_stk, ' ');[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  398 |           obstack_grow(&text_stk, tokptr->token, strlen(tokptr->token));[0m
  399 |           need_space = 1;[0m
  400 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m../gnu/obstack.h:349:3: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_1grow'[0m
  349 |   __extension__                                                               \[0m
      | [0;1;32m  ^
[0m[1mparser.c:398:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  398 |           obstack_grow(&text_stk, tokptr->token, strlen(tokptr->token));[0m
      | [0;1;32m          ^
[0m[1m../gnu/obstack.h:333:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_grow'[0m
  333 |        memcpy (__o->next_free, where, __len);                                 \[0m
      | [0;1;32m       ^~~~~~
[0m[1mparser.c:398:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  398 |           obstack_grow(&text_stk, tokptr->token, strlen(tokptr->token));[0m
      | [0;1;32m          ^
[0m[1m../gnu/obstack.h:333:8: [0m[0;1;36mnote: [0mexpanded from macro 'obstack_grow'[0m
  333 |        memcpy (__o->next_free, where, __len);                                 \[0m
      | [0;1;32m       ^~~~~~
[0m[1mparser.c:402:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  402 |           if (verbose)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  403 |                file_error(_("unrecognized definition"), tokptr);[0m
      | [0;1;32m                                                               
[0m      | [0;32m                                                               ;} 
[0m[1mparser.c:402:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |           if (verbose)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  403 |                file_error(_("unrecognized definition"), tokptr);[0m
      | [0;1;32m                                                                
[0m[1mparser.c:440:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  440 |                if (omit_arguments_option) {[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  441 |                     if (level == 0) {[0m
  442 |                          save_token(token_stack+i);[0m
  443 |                     }[0m
  444 |                     level++;[0m
  445 |                }[0m
  446 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:448:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  448 |                if (omit_arguments_option) [0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  449 |                     level--;[0m
  450 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:448:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |                if (omit_arguments_option) [0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  449 |                     level--;[0m
      | [0;1;32m                            
[0m[1mparser.c:452:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  452 |                if (!found_ident && strcmp (name, token_stack[i].token) == 0) {[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  453 |                     need_space = 1;[0m
  454 |                     found_ident = 1;[0m
  455 |                     continue;[0m
  456 |                }[0m
      | [0;1;32m                
[0m      | [0;32m                ;} 
[0m[1mparser.c:458:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |           if (level == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  459 |                save_token(token_stack+i);[0m
      | [0;1;32m                                         
[0m[1mparser.c:469:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |           if (tok.type == c)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  470 |                break;[0m
      | [0;1;32m                     
[0m[1mparser.c:484:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |           if (tok.type == LBRACE0 && open_tok == '{')[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  485 |                tok.type = '{';[0m
  486 |           else if (tok.type == RBRACE0 && close_tok == '}')[0m
      | [0;32m          } 
[0m[1mparser.c:486:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |           else if (tok.type == RBRACE0 && close_tok == '}')[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  487 |                tok.type = '}';[0m
      | [0;1;32m                              
[0m[1mparser.c:489:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  489 |           if (tok.type == open_tok) [0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  490 |                level++;[0m
  491 |           else if (tok.type == close_tok) {[0m
      | [0;32m          } 
[0m[1mparser.c:513:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  513 |                return 0;[0m
      | [0;1;32m               ^       
[0m      | [0;32m               {       ;} 
[0m[1mparser.c:515:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  515 |                continue;[0m
      | [0;1;32m               ^       
[0m      | [0;32m               {       ;} 
[0m[1mparser.c:517:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  517 |                parse_typedef();[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  518 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:520:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  520 |                identifier.storage = ExplicitExternStorage;[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  521 |                parse_declaration(&identifier, 0);[0m
  522 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:524:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  524 |                identifier.storage = StaticStorage;[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  525 |                nexttoken();[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1mparser.c:528:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  528 |                parse_declaration(&identifier, 0);[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  529 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:555:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  555 |                continue;[0m
      | [0;1;32m               ^       
[0m      | [0;32m               {       ;} 
[0m[1mparser.c:557:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  557 |                if (skip_balanced('(', ')', 0) == -1)[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  558 |                     file_error(_("unexpected end of file in declaration"),[0m
  559 |                                NULL);[0m
  560 |                continue;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mparser.c:557:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  557 |                if (skip_balanced('(', ')', 0) == -1)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  558 |                     file_error(_("unexpected end of file in declaration"),[0m
  559 |                                NULL);[0m
      | [0;1;32m                                     
[0m[1mparser.c:562:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  562 |                res = nexttoken() != MODIFIER;[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  563 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:565:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  565 |                break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mparser.c:577:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  577 |      if (is_function()) [0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  578 |           parse_function_declaration(ident, parm);[0m
  579 |      else[0m
      | [0;32m     } 
[0m[1mparser.c:579:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  579 |      else[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  580 |           parse_variable_declaration(ident, parm);[0m
      | [0;1;32m                                                  
[0m[1mparser.c:596:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  596 |                return;[0m
      | [0;1;32m               ^     
[0m      | [0;32m               {     ;} 
[0m[1mparser.c:598:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  598 |                if (skip_balanced('(', ')', 0) == -1) {[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  599 |                     file_error(_("unexpected end of file in expression"),[0m
  600 |                                NULL);[0m
  601 |                     return;[0m
  602 |                }[0m
  603 |                putback();[0m
  604 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:610:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  610 |                return;[0m
      | [0;1;32m               ^     
[0m      | [0;32m               {     ;} 
[0m[1mparser.c:612:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  612 |                if (parens_lev == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  613 |                     return;[0m
  614 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:612:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |                if (parens_lev == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  613 |                     return;[0m
      | [0;1;32m                           
[0m[1mparser.c:616:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  616 |                if (verbose)[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  617 |                     file_error(_("unexpected end of file in expression"),[0m
  618 |                                NULL);[0m
  619 |                return;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mparser.c:616:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  616 |                if (verbose)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  617 |                     file_error(_("unexpected end of file in expression"),[0m
  618 |                                NULL);[0m
      | [0;1;32m                                     
[0m[1mparser.c:622:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  622 |                name = tok.token;[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m[1mparser.c:648:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  648 |                if (nexttoken() == TYPE || tok.type == STRUCT) {[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m[1mparser.c:667:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  667 |                parens_lev--;[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  668 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:670:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  670 |                nexttoken();[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  671 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:687:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  687 |           if (parm)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  688 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:687:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  687 |           if (parm)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  688 |                break;[0m
      | [0;1;32m                     
[0m[1mparser.c:691:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  691 |           if (error_recovery) [0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  692 |                nexttoken();[0m
  693 |           else {[0m
  694 |                if (verbose) [0m
  695 |                     file_error(_("expected `;'"), &tok);[0m
  696 |                error_recovery = 1;[0m
  697 |           }[0m
  698 |           goto restart;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mparser.c:691:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  691 |           if (error_recovery) [0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  692 |                nexttoken();[0m
  693 |           else {[0m
      | [0;32m          } 
[0m[1mparser.c:694:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  694 |                if (verbose) [0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  695 |                     file_error(_("expected `;'"), &tok);[0m
      | [0;1;32m                                                        
[0m[1mparser.c:708:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |                    (caller->storage == AutoStorage || caller->flag == symbol_target))[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m  709 |                     caller = NULL;[0m
      | [0;1;32m                                  
[0m[1mparser.c:712:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  712 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mparser.c:714:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  714 |           if (verbose)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  715 |                file_error(_("unexpected end of file in declaration"), NULL);[0m
      | [0;1;32m                                                                           
[0m      | [0;32m                                                                           ;} 
[0m[1mparser.c:714:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |           if (verbose)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  715 |                file_error(_("unexpected end of file in declaration"), NULL);[0m
      | [0;1;32m                                                                            
[0m[1mparser.c:731:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  731 |           } else if (tok.type == '(')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  732 |                return 0;[0m
  733 |           else if (tok.type != ';')[0m
      | [0;32m          } 
[0m[1mparser.c:733:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |           else if (tok.type != ';')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  734 |                file_error(_("missing `;' after struct declaration"), &tok);[0m
      | [0;1;32m                                                                           
[0m[1mparser.c:753:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |           while (tok.type == MODIFIER || tok.type == QUALIFIER)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  754 |                nexttoken();[0m
      | [0;1;32m                           
[0m[1mparser.c:765:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  765 |                if (tok.type == ';')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  766 |                     return;[0m
      | [0;1;32m                           
[0m[1mparser.c:776:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  776 |           if (parm)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  777 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:776:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  776 |           if (parm)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  777 |                break;[0m
      | [0;1;32m                     
[0m[1mparser.c:780:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  780 |           if (verbose) [0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  781 |                file_error(_("expected `;'"), &tok);[0m
      | [0;1;32m                                                  
[0m      | [0;32m                                                  ;} 
[0m[1mparser.c:780:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |           if (verbose) [0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  781 |                file_error(_("expected `;'"), &tok);[0m
      | [0;1;32m                                                   
[0m[1mparser.c:785:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  785 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mparser.c:787:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  787 |           if (parm)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  788 |                break;[0m
  789 |           tos = ident->type_end;[0m
  790 |           restore(sp);[0m
  791 |           goto again;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:787:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  787 |           if (parm)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  788 |                break;[0m
      | [0;1;32m                     
[0m[1mparser.c:793:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  793 |           nexttoken();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  794 |           if (tok.type == LBRACE || tok.type == LBRACE0)[0m
  795 |                initializer_list();[0m
  796 |           else[0m
  797 |                expression();[0m
  798 |           goto select;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mparser.c:794:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  794 |           if (tok.type == LBRACE || tok.type == LBRACE0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  795 |                initializer_list();[0m
  796 |           else[0m
      | [0;32m          } 
[0m[1mparser.c:796:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  796 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  797 |                expression();[0m
      | [0;1;32m                            
[0m[1mparser.c:802:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  802 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mparser.c:804:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  804 |           if (verbose)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  805 |                file_error(_("unexpected end of file in declaration"), NULL);[0m
      | [0;1;32m                                                                           
[0m      | [0;32m                                                                           ;} 
[0m[1mparser.c:804:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  804 |           if (verbose)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  805 |                file_error(_("unexpected end of file in declaration"), NULL);[0m
      | [0;1;32m                                                                            
[0m[1mparser.c:818:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  818 |                break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mparser.c:825:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  825 |                break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mparser.c:827:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  827 |                file_error(_("unexpected end of file in initializer list"),[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  828 |                           NULL);[0m
  829 |                return;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mparser.c:831:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  831 |                break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mparser.c:833:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  833 |                expression();[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m  834 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:852:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |      } else if (tok.type == ';')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  853 |           return;[0m
      | [0;1;32m                 
[0m[1mparser.c:882:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  882 |      if (!fake_struct(&ident))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  883 |           putback();[0m
      | [0;1;32m                    
[0m[1mparser.c:886:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  886 |      if (ident.name) [0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  887 |           declare_type(&ident);[0m
      | [0;1;32m                               
[0m[1mparser.c:898:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  898 |      if (ident->name)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  899 |           declare(ident, maybe_knr);[0m
  900 |      else [0m
      | [0;32m     } 
[0m[1mparser.c:900:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  900 |      else [0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  901 |           undo_save_stack();[0m
      | [0;1;32m                            
[0m[1mparser.c:909:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  909 |                if (idptr && idptr->type_end == -1)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  910 |                     idptr->type_end = curs-1;[0m
      | [0;1;32m                                             
[0m[1mparser.c:921:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |                while (tok.type == IDENTIFIER)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  922 |                     nexttoken();[0m
      | [0;1;32m                                
[0m[1mparser.c:926:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  926 |                      type == MODIFIER || type == QUALIFIER))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  927 |                     break;[0m
      | [0;1;32m                          
[0m[1mparser.c:932:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  932 |      if (idptr && idptr->type_end == -1)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  933 |           idptr->type_end = curs-1;[0m
      | [0;1;32m                                   
[0m[1mparser.c:960:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  960 |      } else[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  961 |           putback();[0m
      | [0;1;32m                    
[0m[1mparser.c:964:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |           if (tok.type == '[') [0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  965 |                skip_to(']');[0m
  966 |           else {[0m
      | [0;32m          } 
[0m[1mparser.c:974:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  974 |      if (wrapper)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  975 |           nexttoken(); /* read ')' */[0m
      | [0;1;32m                                     
[0m[1mparser.c:978:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  978 |           if (skip_balanced('(', ')', 0) == -1)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  979 |                file_error(_("unexpected end of file in function declaration"),[0m
  980 |                           NULL);[0m
      | [0;1;32m                                
[0m[1mparser.c:993:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  993 |                if (idptr && idptr->type_end == -1)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  994 |                     idptr->type_end = curs-1;[0m
      | [0;1;32m                                             
[0m[1mparser.c:996:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  996 |                while (tok.type == IDENTIFIER)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  997 |                     nexttoken();[0m
      | [0;1;32m                                
[0m[1mparser.c:1000:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1000 |                if (type != MODIFIER) [0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1001 |                     break;[0m
      | [0;1;32m                          
[0m[1mparser.c:1002:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1002 |           } else if (tok.type == ')' || tok.type == ',') [0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1003 |                return 0;[0m
      | [0;1;32m                        
[0m[1mparser.c:1005:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1005 |      if (idptr && idptr->type_end == -1)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1006 |           idptr->type_end = curs-1;[0m
      | [0;1;32m                                   
[0m[1mparser.c:1022:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1022 |                if (parm_cnt_return)[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1023 |                     *parm_cnt_return = parmcnt;[0m
 1024 |                parm_level--;[0m
 1025 |                return;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mparser.c:1022:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1022 |                if (parm_cnt_return)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1023 |                     *parm_cnt_return = parmcnt;[0m
      | [0;1;32m                                               
[0m[1mparser.c:1027:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1027 |                break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mparser.c:1035:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1035 |                ident.storage = AutoStorage;[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1036 |                parse_declaration(&ident, 1);[0m
 1037 |                putback();[0m
 1038 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:1040:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1040 |                if (verbose)[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1041 |                     file_error(_("unexpected token in parameter list"),[0m
 1042 |                                &tok);[0m
 1043 |                level = 0;[0m
 1044 |                do {[0m
 1045 |                     if (tok.type == '(') [0m
 1046 |                          level++;[0m
 1047 |                     else if (tok.type == ')') {[0m
 1048 |                          if (level-- == 0)[0m
 1049 |                               break;[0m
 1050 |                     }[0m
 1051 |                } while (nexttoken());[0m
 1052 |                     ;[0m
 1053 |                putback();[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mparser.c:1040:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |                if (verbose)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1041 |                     file_error(_("unexpected token in parameter list"),[0m
 1042 |                                &tok);[0m
      | [0;1;32m                                     
[0m[1mparser.c:1045:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1045 |                     if (tok.type == '(') [0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1046 |                          level++;[0m
 1047 |                     else if (tok.type == ')') {[0m
      | [0;32m                    } 
[0m[1mparser.c:1048:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1048 |                          if (level-- == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1049 |                               break;[0m
      | [0;1;32m                                    
[0m[1mparser.c:1056:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |      if (verbose)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1057 |           file_error(_("unexpected end of file in parameter list"), NULL);[0m
      | [0;1;32m                                                                          
[0m[1mparser.c:1072:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1072 |                expression();[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1073 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:1075:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1075 |                ident.storage = StaticStorage;[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1076 |                nexttoken();[0m
 1077 |                parse_variable_declaration(&ident, 0);[0m
 1078 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:1082:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1082 |                parse_variable_declaration(&ident, 0);[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1083 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:1085:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1085 |                ident.storage = ExplicitExternStorage;[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1086 |                parse_declaration(&ident, 0);[0m
 1087 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:1091:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1091 |                break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mparser.c:1093:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1093 |                if (use_indentation) {[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1094 |                     if (verbose && level != 1)[0m
 1095 |                          file_error(_("forced function body close"), NULL);[0m
 1096 |                     for ( ; level; level--) {[0m
 1097 |                          delete_autos(level);[0m
 1098 |                     }[0m
 1099 |                     break;[0m
 1100 |                }[0m
      | [0;1;32m                
[0m      | [0;32m                ;} 
[0m[1mparser.c:1094:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1094 |                     if (verbose && level != 1)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1095 |                          file_error(_("forced function body close"), NULL);[0m
      | [0;1;32m                                                                           
[0m[1mparser.c:1104:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1104 |                delete_autos(level);[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1105 |                level--;[0m
 1106 |                break;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:1108:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1108 |                if (verbose)[0m
      | [0;1;32m               ^
[0m      | [0;32m               {
[0m 1109 |                     file_error(_("unexpected end of file in function body"),[0m
 1110 |                                NULL);[0m
 1111 |                goto end;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mparser.c:1108:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1108 |                if (verbose)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1109 |                     file_error(_("unexpected end of file in function body"),[0m
 1110 |                                NULL);[0m
      | [0;1;32m                                     
[0m[1mparser.c:1133:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1133 |           parmcnt = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mparser.c:1142:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1142 |                     stop = 1;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1143 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mparser.c:1149:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1149 |                     mark(new_sp);[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1150 |                     if (dcl(&id) == 0) {[0m
 1151 |                          parmcnt++;[0m
 1152 |                          if (tok.type == ',') {[0m
 1153 |                               do {[0m
 1154 |                                    tos = id.type_end; /* ouch! */[0m
 1155 |                                    restore(new_sp);[0m
 1156 |                                    dcl(&id);[0m
 1157 |                               } while (tok.type == ',');[0m
 1158 |                          } else if (tok.type != ';')[0m
 1159 |                               putback();[0m
 1160 |                          break;[0m
 1161 |                     }[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mparser.c:1158:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1158 |                          } else if (tok.type != ';')[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1159 |                               putback();[0m
      | [0;1;32m                                        
[0m[1mparser.c:1165:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1165 |                     restore(sp);[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1166 |                     return 1;[0m
      | [0;1;32m                            
[0m      | [0;32m                            ;} 
[0m[1mparser.c:1184:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1184 |           } else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1185 |                sp->level = level;[0m
      | [0;1;32m                                 
[0m[1mparser.c:1207:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1207 |                if (sp->arity >= 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1208 |                     error_at_line(0, 0, filename, ident->line, [0m
 1209 |                                   _("%s/%d redefined"),[0m
 1210 |                                   ident->name, sp->arity);[0m
 1211 |                else[0m
      | [0;32m               } 
[0m[1mparser.c:1211:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1211 |                else[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1212 |                     error_at_line(0, 0, filename, ident->line, [0m
 1213 |                                   _("%s redefined"),[0m
 1214 |                                   ident->name);[0m
      | [0;1;32m                                               
[0m[1mparser.c:1229:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1229 |      if (debug)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1230 |           fprintf(stderr, _("%s:%d: %s/%d defined to %s\n"),[0m
 1231 |                  filename,[0m
 1232 |                  line_num,[0m
 1233 |                  ident->name, ident->parmcnt,[0m
 1234 |                  sp->decl);[0m
      | [0;1;32m                           
[0m[1mparser.c:1230:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1230 |           fprintf(stderr, _("%s:%d: %s/%d defined to %s\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:1230:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1230 |           fprintf(stderr, _("%s:%d: %s/%d defined to %s\n"),[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:1244:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1244 |      for ( ; sp; sp = sp->next)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1245 |           if (sp->type == SymToken && sp->token_type == TYPE)[0m
 1246 |                break;[0m
      | [0;1;32m                     
[0m[1mparser.c:1245:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1245 |           if (sp->type == SymToken && sp->token_type == TYPE)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1246 |                break;[0m
      | [0;1;32m                     
[0m[1mparser.c:1247:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1247 |      if (!sp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1248 |           sp = install(ident->name, INSTALL_UNIT_LOCAL);[0m
      | [0;1;32m                                                        
[0m[1mparser.c:1254:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1254 |      if (debug)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1255 |           fprintf(stderr, _("%s:%d: type %s\n"), filename, line_num,[0m
 1256 |                   ident->name);[0m
      | [0;1;32m                               
[0m[1mparser.c:1255:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1255 |           fprintf(stderr, _("%s:%d: type %s\n"), filename, line_num,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:1255:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1255 |           fprintf(stderr, _("%s:%d: type %s\n"), filename, line_num,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:1268:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1268 |                    sp->type == SymIdentifier)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1269 |                     break;[0m
      | [0;1;32m                          
[0m[1mparser.c:1289:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1289 |          || (sp->storage == StaticStorage && globals_only()))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1290 |           return NULL;[0m
      | [0;1;32m                      
[0m[1mparser.c:1294:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1294 |      if (!sp->ref_line)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1295 |           sp->ref_line = linked_list_create(free);[0m
      | [0;1;32m                                                  
[0m[1mparser.c:1307:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1307 |      if (!sp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1308 |           return;[0m
      | [0;1;32m                 
[0m[1mparser.c:1309:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1309 |      if (sp->arity < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1310 |           sp->arity = 0;[0m
      | [0;1;32m                        
[0m[1mparser.c:1312:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1312 |           if (!data_in_list(caller, sp->caller))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1313 |                linked_list_append(&sp->caller, caller);[0m
      | [0;1;32m                                                       
[0m[1mparser.c:1314:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1314 |           if (!data_in_list(sp, caller->callee))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1315 |                linked_list_append(&caller->callee, sp);[0m
      | [0;1;32m                                                       
[0m[1mparser.c:1323:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1323 |      if (!sp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1324 |           return;[0m
      | [0;1;32m                 
[0m[1mparser.c:1326:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1326 |           if (!data_in_list(caller, sp->caller))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1327 |                linked_list_append(&sp->caller, caller);[0m
      | [0;1;32m                                                       
[0m[1mparser.c:1328:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1328 |           if (!data_in_list(sp, caller->callee))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1329 |                linked_list_append(&caller->callee, sp);[0m
      | [0;1;32m                                                       
[0m[1mparser.c:1340:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1340 |          (caller->storage == StaticStorage || caller->flag == symbol_local))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1341 |           caller = NULL;[0m
      | [0;1;32m                        
[0m225 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[46/46][299.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cflow-1.7/tidy-fixes/tmpt2114xbc.yaml -p=/itch/common/crepos/cu-to-rtu/c/cflow-1.7 /itch/common/crepos/cu-to-rtu/c/cflow-1.7/src/wordsplit/wordsplit.c
[1mwordsplit/wordsplit.c:100:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  101 |     wordsplit_perror (wsp);[0m
      | [0;1;32m                           
[0m[1mwordsplit/wordsplit.c:102:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |   if (ec == WRDSE_USAGE)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  103 |     errno = EINVAL;[0m
      | [0;1;32m                   
[0m[1mwordsplit/wordsplit.c:112:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   if (wsp->ws_flags & WRDSF_ENOMEMABRT)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  113 |     wsp->ws_alloc_die (wsp);[0m
      | [0;1;32m                            
[0m[1mwordsplit/wordsplit.c:114:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  115 |     wordsplit_perror (wsp);[0m
      | [0;1;32m                           
[0m[1mwordsplit/wordsplit.c:116:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |   if (!(wsp->ws_flags & WRDSF_REUSE))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  117 |     wordsplit_free (wsp);[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:134:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  134 |       memcpy (wsp->ws_errctx, str, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:134:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  134 |       memcpy (wsp->ws_errctx, str, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:194:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |   if (rc)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  195 |     return rc;[0m
      | [0;1;32m              
[0m[1mwordsplit/wordsplit.c:215:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |   if (wsp->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  216 |     free (wsp->ws_usererr);[0m
      | [0;1;32m                           
[0m[1mwordsplit/wordsplit.c:236:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |       if (!(wsp->ws_flags & WRDSF_APPEND))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  237 |         wordsplit_free_words (wsp);[0m
      | [0;1;32m                                   
[0m[1mwordsplit/wordsplit.c:258:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  259 |     wsp->ws_alloc_die = _wsplt_alloc_die;[0m
      | [0;1;32m                                         
[0m[1mwordsplit/wordsplit.c:260:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  261 |     wsp->ws_error = _wsplt_error;[0m
      | [0;1;32m                                 
[0m[1mwordsplit/wordsplit.c:272:11: [0m[0;1;35mwarning: [0m[1mBranch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch][0m
  272 |       if (!wsp->ws_command)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1940:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1940 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1943:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1943:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1944:6: [0m[0;1;36mnote: [0mCalling 'node_expand'[0m
 1944 |         if (node_expand (wsp, p, begin_cmd_p, expcmd))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is < 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1757:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1757:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1762:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1766:8: [0m[0;1;36mnote: [0m'tail' is equal to 'node'[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m              ^~~~
[0m[1mwordsplit/wordsplit.c:1766:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1768:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1768 |           if (node_split_prefix (wsp, &tail, node, off, n, _WSNF_JOIN))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1771:8: [0m[0;1;36mnote: [0mCalling 'expcmd'[0m
 1771 |           if (ws_exp_fn (wsp, p, slen - n, &tail, &p,[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1772 |                          node->flags & (_WSNF_JOIN | _WSNF_QUOTE)))[0m
      | [0;1;32m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1856:8: [0m[0;1;36mnote: [0mCalling '_wsplt_subsplit'[0m
 1856 |   rc = _wsplt_subsplit (wsp, &ws, str, j, WRDSF_WS | WRDSF_QUOTE, 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:167:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  167 |   if (!(flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:173:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:173:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:178:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:178:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:193:8: [0m[0;1;36mnote: [0mCalling 'wordsplit_init'[0m
  193 |   rc = wordsplit_init (wss, str, len, flags);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:260:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:260:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:263:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:263:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:270:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:270:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:272:11: [0m[0;1;36mnote: [0mBranch condition evaluates to a garbage value[0m
  272 |       if (!wsp->ws_command)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:272:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |       if (!wsp->ws_command)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  273 |         return _wsplt_seterr (wsp, WRDSE_USAGE);[0m
      | [0;1;32m                                                
[0m[1mwordsplit/wordsplit.c:280:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |           if (wsp->ws_flags & WRDSF_ERROR)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  281 |             wsp->ws_debug = wsp->ws_error;[0m
  282 |           else if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;32m          } 
[0m[1mwordsplit/wordsplit.c:282:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |           else if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  283 |             wsp->ws_debug = _wsplt_error;[0m
  284 |           else[0m
      | [0;32m          } 
[0m[1mwordsplit/wordsplit.c:284:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  284 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  285 |             wsp->ws_flags &= ~WRDSF_SHOWDBG;[0m
      | [0;1;32m                                            
[0m[1mwordsplit/wordsplit.c:292:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |   if (!(wsp->ws_flags & WRDSF_DOOFFS))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  293 |     wsp->ws_offs = 0;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:295:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |   if (!(wsp->ws_flags & WRDSF_DELIM))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  296 |     wsp->ws_delim = " \t\n";[0m
      | [0;1;32m                            
[0m[1mwordsplit/wordsplit.c:301:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |   if (!(wsp->ws_flags & WRDSF_COMMENT))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  302 |     wsp->ws_comment = NULL;[0m
      | [0;1;32m                           
[0m[1mwordsplit/wordsplit.c:304:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |   if (!(wsp->ws_flags & WRDSF_CLOSURE))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  305 |     wsp->ws_closure = NULL;[0m
      | [0;1;32m                           
[0m[1mwordsplit/wordsplit.c:307:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |   if (!(wsp->ws_flags & WRDSF_OPTIONS))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  308 |     wsp->ws_options = 0;[0m
      | [0;1;32m                        
[0m[1mwordsplit/wordsplit.c:312:11: [0m[0;1;35mwarning: [0m[1mBranch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch][0m
  312 |       if (!wsp->ws_escape[WRDSX_WORD])[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1940:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1940 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1943:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1943:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1944:6: [0m[0;1;36mnote: [0mCalling 'node_expand'[0m
 1944 |         if (node_expand (wsp, p, begin_cmd_p, expcmd))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is < 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1757:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1757:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1762:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1766:8: [0m[0;1;36mnote: [0m'tail' is equal to 'node'[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m              ^~~~
[0m[1mwordsplit/wordsplit.c:1766:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1768:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1768 |           if (node_split_prefix (wsp, &tail, node, off, n, _WSNF_JOIN))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1771:8: [0m[0;1;36mnote: [0mCalling 'expcmd'[0m
 1771 |           if (ws_exp_fn (wsp, p, slen - n, &tail, &p,[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1772 |                          node->flags & (_WSNF_JOIN | _WSNF_QUOTE)))[0m
      | [0;1;32m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1856:8: [0m[0;1;36mnote: [0mCalling '_wsplt_subsplit'[0m
 1856 |   rc = _wsplt_subsplit (wsp, &ws, str, j, WRDSF_WS | WRDSF_QUOTE, 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:167:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  167 |   if (!(flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:173:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:173:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:178:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:178:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:193:8: [0m[0;1;36mnote: [0mCalling 'wordsplit_init'[0m
  193 |   rc = wordsplit_init (wss, str, len, flags);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:260:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:260:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:263:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:263:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:270:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:270:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:276:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  276 |   if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:276:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  276 |   if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:292:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  292 |   if (!(wsp->ws_flags & WRDSF_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:292:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  292 |   if (!(wsp->ws_flags & WRDSF_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:295:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  295 |   if (!(wsp->ws_flags & WRDSF_DELIM))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  295 |   if (!(wsp->ws_flags & WRDSF_DELIM))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:301:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  301 |   if (!(wsp->ws_flags & WRDSF_COMMENT))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:301:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  301 |   if (!(wsp->ws_flags & WRDSF_COMMENT))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:304:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  304 |   if (!(wsp->ws_flags & WRDSF_CLOSURE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:304:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  304 |   if (!(wsp->ws_flags & WRDSF_CLOSURE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:307:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  307 |   if (!(wsp->ws_flags & WRDSF_OPTIONS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:307:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  307 |   if (!(wsp->ws_flags & WRDSF_OPTIONS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:310:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  310 |   if (wsp->ws_flags & WRDSF_ESCAPE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:310:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  310 |   if (wsp->ws_flags & WRDSF_ESCAPE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:312:11: [0m[0;1;36mnote: [0mBranch condition evaluates to a garbage value[0m
  312 |       if (!wsp->ws_escape[WRDSX_WORD])[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:312:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |       if (!wsp->ws_escape[WRDSX_WORD])[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  313 |         wsp->ws_escape[WRDSX_WORD] = "";[0m
      | [0;1;32m                                        
[0m[1mwordsplit/wordsplit.c:314:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |       if (!wsp->ws_escape[WRDSX_QUOTE])[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  315 |         wsp->ws_escape[WRDSX_QUOTE] = "";[0m
      | [0;1;32m                                         
[0m[1mwordsplit/wordsplit.c:344:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |       if (wsp->ws_namechar[strcspn(wsp->ws_namechar, "${}*@-+?=")])[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  345 |         return _wsplt_seterr (wsp, WRDSE_USAGE);[0m
      | [0;1;32m                                                
[0m[1mwordsplit/wordsplit.c:347:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  348 |     wsp->ws_namechar = NULL;[0m
      | [0;1;32m                            
[0m[1mwordsplit/wordsplit.c:353:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |   if (wsp->ws_flags & WRDSF_REUSE)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  354 |     wordsplit_free_nodes (wsp);[0m
      | [0;1;32m                               
[0m[1mwordsplit/wordsplit.c:382:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  383 |     return 0;[0m
      | [0;1;32m             
[0m[1mwordsplit/wordsplit.c:390:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  391 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m                              
[0m[1mwordsplit/wordsplit.c:431:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  431 |   if (flags & _WSNF_WORD)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  432 |     *p++ = 'w';[0m
  433 |   else if (flags & _WSNF_NULL)[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:433:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |   else if (flags & _WSNF_NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  434 |     *p++ = 'n';[0m
  435 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:435:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  435 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  436 |     *p++ = '-';[0m
      | [0;1;32m               
[0m[1mwordsplit/wordsplit.c:437:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |   if (flags & _WSNF_QUOTE)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  438 |     *p++ = 'q';[0m
  439 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:439:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  439 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  440 |     *p++ = '-';[0m
      | [0;1;32m               
[0m[1mwordsplit/wordsplit.c:441:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |   if (flags & _WSNF_NOEXPAND)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  442 |     *p++ = 'E';[0m
  443 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:443:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  444 |     *p++ = '-';[0m
      | [0;1;32m               
[0m[1mwordsplit/wordsplit.c:445:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  445 |   if (flags & _WSNF_JOIN)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  446 |     *p++ = 'j';[0m
  447 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:447:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  448 |     *p++ = '-';[0m
      | [0;1;32m               
[0m[1mwordsplit/wordsplit.c:449:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |   if (flags & _WSNF_SEXP)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  450 |     *p++ = 's';[0m
  451 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:451:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  452 |     *p++ = '-';[0m
      | [0;1;32m               
[0m[1mwordsplit/wordsplit.c:453:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |   if (flags & _WSNF_DELIM)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  454 |     *p++ = 'd';[0m
  455 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:455:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  456 |     *p++ = '-';[0m
      | [0;1;32m               
[0m[1mwordsplit/wordsplit.c:464:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |   if (p->flags & _WSNF_NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  465 |     return "";[0m
  466 |   else if (p->flags & _WSNF_WORD)[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:466:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |   else if (p->flags & _WSNF_WORD)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  467 |     return p->v.word;[0m
  468 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:468:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  469 |     return wsp->ws_input + p->v.segm.beg;[0m
      | [0;1;32m                                         
[0m[1mwordsplit/wordsplit.c:475:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  475 |   if (p->flags & _WSNF_NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  476 |     return 0;[0m
  477 |   else if (p->flags & _WSNF_WORD)[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:477:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |   else if (p->flags & _WSNF_WORD)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  478 |     return strlen (p->v.word);[0m
  479 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:479:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  480 |     return p->v.segm.end - p->v.segm.beg;[0m
      | [0;1;32m                                         
[0m[1mwordsplit/wordsplit.c:487:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |   if (!node)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m                              
[0m[1mwordsplit/wordsplit.c:496:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |   if ((p->flags & (_WSNF_WORD|_WSNF_CONST)) == _WSNF_WORD)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  497 |     free (p->v.word);[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:506:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |   if (wsp->ws_tail)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  507 |     wsp->ws_tail->next = node;[0m
  508 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:508:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  509 |     wsp->ws_head = node;[0m
      | [0;1;32m                        
[0m[1mwordsplit/wordsplit.c:522:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |       if (!node->next)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  523 |         p->flags &= ~_WSNF_JOIN;[0m
      | [0;1;32m                                
[0m[1mwordsplit/wordsplit.c:525:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  525 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  526 |     wsp->ws_head = node->next;[0m
      | [0;1;32m                              
[0m[1mwordsplit/wordsplit.c:529:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |   if (p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  530 |     p->prev = node->prev;[0m
  531 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:531:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  532 |     wsp->ws_tail = node->prev;[0m
      | [0;1;32m                              
[0m[1mwordsplit/wordsplit.c:540:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |   while (p && p->next)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  541 |     p = p->next;[0m
      | [0;1;32m                
[0m[1mwordsplit/wordsplit.c:551:31: [0m[0;1;35mwarning: [0m[1mAccess to field 'prev' results in a dereference of a null pointer (loaded from variable 'node') [clang-analyzer-core.NullDereference][0m
  551 |       node->next = node->prev = NULL;[0m
      | [0;1;32m                              ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1414:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1414:48: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1414:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1429:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1429 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '*')[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1429:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1429 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '*')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1429:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1429 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '*')[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1431:14: [0m[0;1;36mnote: [0mCalling 'expand_paramv'[0m
 1431 |       return expand_paramv (wsp, ptail, flg, 0);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:3: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:41: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m                                        ^
[0m[1mwordsplit/wordsplit.c:1320:11: [0m[0;1;36mnote: [0m'q' is 0[0m
 1320 |               | (q ? WRDSF_NOSPLIT : 0);[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:1320:11: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwordsplit/wordsplit.c:1324:15: [0m[0;1;36mnote: [0mAssuming 'i' is < field 'ws_paramc'[0m
 1324 |   for (i = 0; i < wsp->ws_paramc; i++)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1324:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1324 |   for (i = 0; i < wsp->ws_paramc; i++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1327:16: [0m[0;1;36mnote: [0mValue assigned to 'ws.ws_head'[0m
 1327 |       int rc = _wsplt_subsplit (wsp, &ws,[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1328 |                                 wsp->ws_paramv[i], strlen (wsp->ws_paramv[i]),[0m
      | [0;1;32m                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1329 |                                 wsflags, q);[0m
      | [0;1;32m                                ~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1330:11: [0m[0;1;36mnote: [0mAssuming 'rc' is 0[0m
 1330 |       if (rc)[0m
      | [0;1;32m          ^~
[0m[1mwordsplit/wordsplit.c:1330:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1330 |       if (rc)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1337:11: [0m[0;1;36mnote: [0m'q' is 0[0m
 1337 |       if (q)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1337:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1337 |       if (q)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1350:26: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
 1350 |           for (np = ws.ws_head; np; np = np->next)[0m
      | [0;1;32m                                ^~
[0m[1mwordsplit/wordsplit.c:1350:4: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1352[0m
 1350 |           for (np = ws.ws_head; np; np = np->next)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1352:24: [0m[0;1;36mnote: [0mPassing null pointer value via 2nd parameter 'node'[0m
 1352 |           wsnode_insert (wsp, ws.ws_head, *ptail, 0);[0m
      | [0;1;32m                              ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1352:4: [0m[0;1;36mnote: [0mCalling 'wsnode_insert'[0m
 1352 |           wsnode_insert (wsp, ws.ws_head, *ptail, 0);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:549:7: [0m[0;1;36mnote: [0mAssuming field 'ws_head' is null[0m
  549 |   if (!wsp->ws_head)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:549:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  549 |   if (!wsp->ws_head)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:551:31: [0m[0;1;36mnote: [0mAccess to field 'prev' results in a dereference of a null pointer (loaded from variable 'node')[0m
  551 |       node->next = node->prev = NULL;[0m
      | [0;1;32m                   ~~~~       ^
[0m[1mwordsplit/wordsplit.c:556:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  556 |       if (anchor->prev)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  557 |         wsnode_insert (wsp, node, anchor->prev, 0);[0m
  558 |       else[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:573:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  573 |       if (p)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  574 |         p->prev = tail;[0m
  575 |       else[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:575:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  576 |         wsp->ws_tail = tail;[0m
      | [0;1;32m                            
[0m[1mwordsplit/wordsplit.c:589:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |   if (end == beg && !(flg & _WSNF_EMPTYOK))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  590 |     return 0;[0m
      | [0;1;32m             
[0m[1mwordsplit/wordsplit.c:592:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  592 |   if (rc)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  593 |     return rc;[0m
      | [0;1;32m              
[0m[1mwordsplit/wordsplit.c:594:15: [0m[0;1;35mwarning: [0m[1mAccess to field 'flags' results in a dereference of an undefined pointer value (loaded from variable 'node') [clang-analyzer-core.NullDereference][0m
  594 |   node->flags = flg & ~(_WSNF_WORD | _WSNF_EMPTYOK);[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2748:34: [0m[0;1;36mnote: [0mAssuming 'command' is null[0m
 2748 |   return wordsplit_len (command, command ? strlen (command) : 0, ws, flags);[0m
      | [0;1;32m                                 ^~~~~~~
[0m[1mwordsplit/wordsplit.c:2748:34: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwordsplit/wordsplit.c:2748:10: [0m[0;1;36mnote: [0mCalling 'wordsplit_len'[0m
 2748 |   return wordsplit_len (command, command ? strlen (command) : 0, ws, flags);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2742:10: [0m[0;1;36mnote: [0mCalling 'wordsplit_run'[0m
 2742 |   return wordsplit_run (command, length, wsp, flags, 0);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2708:8: [0m[0;1;36mnote: [0m'command' is null[0m
 2708 |   if (!command)[0m
      | [0;1;32m       ^~~~~~~
[0m[1mwordsplit/wordsplit.c:2708:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2708 |   if (!command)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2710:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2710 |       if (!(flags & WRDSF_INCREMENTAL))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2710:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2710 |       if (!(flags & WRDSF_INCREMENTAL))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2713:11: [0m[0;1;36mnote: [0mAssuming field 'ws_head' is non-null[0m
 2713 |       if (wsp->ws_head)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2713:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2713 |       if (wsp->ws_head)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2714:9: [0m[0;1;36mnote: [0mCalling 'wordsplit_finish'[0m
 2714 |         return wordsplit_finish (wsp);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:800:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  800 |   while (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:803:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  803 |       if (p->flags & _WSNF_DELIM)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:803:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  803 |       if (p->flags & _WSNF_DELIM)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:805:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  805 |           if (wsp->ws_flags & WRDSF_RETURN_DELIMS)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:805:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  805 |           if (wsp->ws_flags & WRDSF_RETURN_DELIMS)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:807:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  807 |               if (wsp->ws_flags & WRDSF_SQUEEZE_DELIMS)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:807:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  807 |               if (wsp->ws_flags & WRDSF_SQUEEZE_DELIMS)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:810:9: [0m[0;1;36mnote: [0m'delim' is 0[0m
  810 |                   if (delim)[0m
      | [0;1;32m                      ^~~~~
[0m[1mwordsplit/wordsplit.c:810:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  810 |                   if (delim)[0m
      | [0;1;32m                  ^
[0m[1mwordsplit/wordsplit.c:828:9: [0m[0;1;36mnote: [0m Execution continues on line 800[0m
  828 |                       continue;[0m
      | [0;1;32m                      ^
[0m[1mwordsplit/wordsplit.c:800:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 861[0m
  800 |   while (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:861:7: [0m[0;1;36mnote: [0m'p' is null[0m
  861 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:861:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  861 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:871:7: [0m[0;1;36mnote: [0m'n' is equal to 0[0m
  871 |   if (n == 0)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:871:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  871 |   if (n == 0)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:874:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  874 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:874:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  874 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:894:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  894 |       if (wsp->ws_flags & WRDSF_NOSPLIT)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:894:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  894 |       if (wsp->ws_flags & WRDSF_NOSPLIT)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:896:8: [0m[0;1;36mnote: [0mCalling 'wordsplit_add_segm'[0m
  896 |           if (wordsplit_add_segm (wsp, 0, 0, _WSNF_EMPTYOK))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:586:3: [0m[0;1;36mnote: [0m'node' declared without an initial value[0m
  586 |   struct wordsplit_node *node;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:589:7: [0m[0;1;36mnote: [0m'end' is equal to 'beg'[0m
  589 |   if (end == beg && !(flg & _WSNF_EMPTYOK))[0m
      | [0;1;32m      ^~~
[0m[1mwordsplit/wordsplit.c:589:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:589:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  589 |   if (end == beg && !(flg & _WSNF_EMPTYOK))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:591:8: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
  591 |   rc = wsnode_new (wsp, &node);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null, which participates in a condition later[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning value, which participates in a condition later[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:591:8: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
  591 |   rc = wsnode_new (wsp, &node);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:592:7: [0m[0;1;36mnote: [0mAssuming 'rc' is 0[0m
  592 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:592:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  592 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:594:15: [0m[0;1;36mnote: [0mAccess to field 'flags' results in a dereference of an undefined pointer value (loaded from variable 'node')[0m
  594 |   node->flags = flg & ~(_WSNF_WORD | _WSNF_EMPTYOK);[0m
      | [0;1;32m  ~~~~        ^
[0m[1mwordsplit/wordsplit.c:608:37: [0m[0;1;35mwarning: [0m[1mUse of memory after it is freed [clang-analyzer-unix.Malloc][0m
  608 |       struct wordsplit_node *next = p->next;[0m
      | [0;1;32m                                    ^
[0m[1mwordsplit/wordsplit.c:1817:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1817 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1820:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1820:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1821:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m        ^
[0m[1mwordsplit/wordsplit.c:1817:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1817 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1820:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1820:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1821:6: [0m[0;1;36mnote: [0mCalling 'node_expand'[0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is < 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1757:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1757:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1762:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is >= 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1778[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1778:7: [0m[0;1;36mnote: [0mAssuming 'p' is > 'str'[0m
 1778 |   if (p > str)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1778:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1778 |   if (p > str)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1780:11: [0m[0;1;36mnote: [0m'tail' is equal to 'node'[0m
 1780 |       if (tail != node)[0m
      | [0;1;32m          ^~~~
[0m[1mwordsplit/wordsplit.c:1780:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1780 |       if (tail != node)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1782:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1782 |       if (node_split_prefix (wsp, &tail, node, off, p - str,[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1786:7: [0m[0;1;36mnote: [0m'tail' is not equal to 'node'[0m
 1786 |   if (tail != node)[0m
      | [0;1;32m      ^~~~
[0m[1mwordsplit/wordsplit.c:1786:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1786 |   if (tail != node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1788:7: [0m[0;1;36mnote: [0mCalling 'wsnode_remove'[0m
 1788 |       wsnode_remove (wsp, node);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:519:7: [0m[0;1;36mnote: [0mAssuming 'p' is non-null[0m
  519 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:519:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  519 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:522:18: [0m[0;1;36mnote: [0mField 'next' is non-null[0m
  522 |       if (!node->next)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:522:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  522 |       if (!node->next)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:529:7: [0m[0;1;36mnote: [0m'p' is non-null[0m
  529 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:529:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  529 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:534:3: [0m[0;1;36mnote: [0mCalling 'wsnode_free'[0m
  534 |   wsnode_free (node);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:496:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  496 |   if ((p->flags & (_WSNF_WORD|_WSNF_CONST)) == _WSNF_WORD)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:496:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  496 |   if ((p->flags & (_WSNF_WORD|_WSNF_CONST)) == _WSNF_WORD)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:498:3: [0m[0;1;36mnote: [0mMemory is released[0m
  498 |   free (p);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:534:3: [0m[0;1;36mnote: [0mReturning; memory was released via 1st parameter[0m
  534 |   wsnode_free (node);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1788:7: [0m[0;1;36mnote: [0mReturning; memory was released via 2nd parameter[0m
 1788 |       wsnode_remove (wsp, node);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1821:6: [0m[0;1;36mnote: [0mReturning; memory was released via 2nd parameter[0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1821:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m        ^
[0m[1mwordsplit/wordsplit.c:1817:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1817 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1820:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1820:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1821:6: [0m[0;1;36mnote: [0mCalling 'node_expand'[0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1757:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1757:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1760:4: [0m[0;1;36mnote: [0m Execution continues on line 1755[0m
 1760 |           continue;[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is >= 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1778[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1778:7: [0m[0;1;36mnote: [0m'p' is > 'str'[0m
 1778 |   if (p > str)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1778:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1778 |   if (p > str)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1780:11: [0m[0;1;36mnote: [0m'tail' is equal to 'node'[0m
 1780 |       if (tail != node)[0m
      | [0;1;32m          ^~~~
[0m[1mwordsplit/wordsplit.c:1780:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1780 |       if (tail != node)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1782:11: [0m[0;1;36mnote: [0mCalling 'node_split_prefix'[0m
 1782 |       if (node_split_prefix (wsp, &tail, node, off, p - str,[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1783 |                              node->flags & (_WSNF_JOIN|_WSNF_QUOTE)))[0m
      | [0;1;32m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:970:7: [0m[0;1;36mnote: [0mAssuming 'len' is not equal to 0[0m
  970 |   if (len == 0)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:970:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  970 |   if (len == 0)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:972:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  972 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:975:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  975 |   if (node->flags & _WSNF_WORD)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:979:11: [0m[0;1;36mnote: [0mAssuming 'newstr' is null[0m
  979 |       if (!newstr)[0m
      | [0;1;32m          ^~~~~~~
[0m[1mwordsplit/wordsplit.c:979:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  979 |       if (!newstr)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:980:9: [0m[0;1;36mnote: [0mCalling '_wsplt_nomem'[0m
  980 |         return _wsplt_nomem (wsp);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:112:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  112 |   if (wsp->ws_flags & WRDSF_ENOMEMABRT)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:112:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  112 |   if (wsp->ws_flags & WRDSF_ENOMEMABRT)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:114:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  114 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:114:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  114 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:116:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  116 |   if (!(wsp->ws_flags & WRDSF_REUSE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:116:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  116 |   if (!(wsp->ws_flags & WRDSF_REUSE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:118:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_nodes'[0m
  118 |   wordsplit_free_nodes (wsp);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:606:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  606 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:606:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mwordsplit/wordsplit.c:608:37: [0m[0;1;36mnote: [0mUse of memory after it is freed[0m
  608 |       struct wordsplit_node *next = p->next;[0m
      | [0;1;32m                                    ^~~~~~~
[0m[1mwordsplit/wordsplit.c:623:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |       if (p->flags & _WSNF_WORD)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  624 |         wsp->ws_debug ("(%02d) %4d: %p: %#04x (%s):%s;",[0m
  625 |                        wsp->ws_lvl,[0m
  626 |                        n, p, p->flags, wsnode_flagstr (p->flags), p->v.word);[0m
  627 |       else[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:627:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  627 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  628 |         wsp->ws_debug ("(%02d) %4d: %p: %#04x (%s):%.*s;",[0m
  629 |                        wsp->ws_lvl,[0m
  630 |                        n, p, p->flags, wsnode_flagstr (p->flags),[0m
  631 |                        (int) (p->v.segm.end - p->v.segm.beg),[0m
  632 |                        wsp->ws_input + p->v.segm.beg);[0m
      | [0;1;32m                                                      
[0m[1mwordsplit/wordsplit.c:644:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |   if (!(node->flags & _WSNF_JOIN))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  645 |     return 0;[0m
      | [0;1;32m             
[0m[1mwordsplit/wordsplit.c:651:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  651 |   if (p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  652 |     len += wsnode_len (p);[0m
      | [0;1;32m                          
[0m[1mwordsplit/wordsplit.c:656:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |   if (!buf)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  657 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m                              
[0m[1mwordsplit/wordsplit.c:663:37: [0m[0;1;35mwarning: [0m[1mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'p') [clang-analyzer-core.NullDereference][0m
  663 |       struct wordsplit_node *next = p->next;[0m
      | [0;1;32m                                    ^
[0m[1mwordsplit/wordsplit.c:2748:34: [0m[0;1;36mnote: [0mAssuming 'command' is null[0m
 2748 |   return wordsplit_len (command, command ? strlen (command) : 0, ws, flags);[0m
      | [0;1;32m                                 ^~~~~~~
[0m[1mwordsplit/wordsplit.c:2748:34: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwordsplit/wordsplit.c:2748:10: [0m[0;1;36mnote: [0mCalling 'wordsplit_len'[0m
 2748 |   return wordsplit_len (command, command ? strlen (command) : 0, ws, flags);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2742:10: [0m[0;1;36mnote: [0mCalling 'wordsplit_run'[0m
 2742 |   return wordsplit_run (command, length, wsp, flags, 0);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2708:8: [0m[0;1;36mnote: [0m'command' is null[0m
 2708 |   if (!command)[0m
      | [0;1;32m       ^~~~~~~
[0m[1mwordsplit/wordsplit.c:2708:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2708 |   if (!command)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2710:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2710 |       if (!(flags & WRDSF_INCREMENTAL))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2710:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2710 |       if (!(flags & WRDSF_INCREMENTAL))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2713:11: [0m[0;1;36mnote: [0mAssuming field 'ws_head' is non-null[0m
 2713 |       if (wsp->ws_head)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2713:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2713 |       if (wsp->ws_head)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2714:9: [0m[0;1;36mnote: [0mCalling 'wordsplit_finish'[0m
 2714 |         return wordsplit_finish (wsp);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:800:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  800 |   while (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:803:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  803 |       if (p->flags & _WSNF_DELIM)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:803:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  803 |       if (p->flags & _WSNF_DELIM)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:841:8: [0m[0;1;36mnote: [0m'delim' is 0[0m
  841 |           if (delim)[0m
      | [0;1;32m              ^~~~~
[0m[1mwordsplit/wordsplit.c:841:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  841 |           if (delim)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:848:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  848 |           if (wsp->ws_options & WRDSO_MAXWORDS)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:848:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  848 |           if (wsp->ws_options & WRDSO_MAXWORDS)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:850:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  850 |               if (wsp->ws_wordi + n + 1 == wsp->ws_maxwords)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:850:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  850 |               if (wsp->ws_wordi + n + 1 == wsp->ws_maxwords)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:851:3: [0m[0;1;36mnote: [0m Execution continues on line 861[0m
  851 |                 break;[0m
      | [0;1;32m                ^
[0m[1mwordsplit/wordsplit.c:861:7: [0m[0;1;36mnote: [0m'p' is non-null[0m
  861 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:861:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  861 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:866:11: [0m[0;1;36mnote: [0mCalling 'wsnode_tail_coalesce'[0m
  866 |       if (wsnode_tail_coalesce (wsp, p))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:747:7: [0m[0;1;36mnote: [0mAssuming field 'next' is non-null[0m
  747 |   if (p->next)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mwordsplit/wordsplit.c:747:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  747 |   if (p->next)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:750:14: [0m[0;1;36mnote: [0m'np' is non-null[0m
  750 |       while (np && np->next)[0m
      | [0;1;32m             ^~
[0m[1mwordsplit/wordsplit.c:750:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:750:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  750 |       while (np && np->next)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:750:14: [0m[0;1;36mnote: [0m'np' is non-null[0m
  750 |       while (np && np->next)[0m
      | [0;1;32m             ^~
[0m[1mwordsplit/wordsplit.c:750:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:750:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 755[0m
  750 |       while (np && np->next)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:755:11: [0m[0;1;36mnote: [0mCalling 'coalesce_segment'[0m
  755 |       if (coalesce_segment (wsp, p))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:644:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  644 |   if (!(node->flags & _WSNF_JOIN))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:644:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  644 |   if (!(node->flags & _WSNF_JOIN))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:647:18: [0m[0;1;36mnote: [0m'p' is non-null[0m
  647 |   for (p = node; p && (p->flags & _WSNF_JOIN); p = p->next)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:647:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:647:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  647 |   for (p = node; p && (p->flags & _WSNF_JOIN); p = p->next)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:649:14: [0m[0;1;36mnote: [0mValue assigned to field 'next'[0m
  649 |       len += wsnode_len (p);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:647:18: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
  647 |   for (p = node; p && (p->flags & _WSNF_JOIN); p = p->next)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:647:18: [0m[0;1;36mnote: [0mAssuming 'p' is null[0m
  647 |   for (p = node; p && (p->flags & _WSNF_JOIN); p = p->next)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:647:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  647 |   for (p = node; p && (p->flags & _WSNF_JOIN); p = p->next)[0m
      | [0;1;32m                   ^
[0m[1mwordsplit/wordsplit.c:651:7: [0m[0;1;36mnote: [0m'p' is null[0m
  651 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:651:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  651 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:656:7: [0m[0;1;36mnote: [0mAssuming 'buf' is non-null[0m
  656 |   if (!buf)[0m
      | [0;1;32m      ^~~~
[0m[1mwordsplit/wordsplit.c:656:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  656 |   if (!buf)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:661:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  661 |   for (stop = 0; !stop;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:663:7: [0m[0;1;36mnote: [0m'next' initialized to a null pointer value[0m
  663 |       struct wordsplit_node *next = p->next;[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:669:11: [0m[0;1;36mnote: [0m'p' is equal to 'node'[0m
  669 |       if (p != node)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:669:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  669 |       if (p != node)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:675:7: [0m[0;1;36mnote: [0mNull pointer value stored to 'p'[0m
  675 |       p = next;[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:661:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  661 |   for (stop = 0; !stop;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:663:37: [0m[0;1;36mnote: [0mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'p')[0m
  663 |       struct wordsplit_node *next = p->next;[0m
      | [0;1;32m                                    ^
[0m[1mwordsplit/wordsplit.c:667:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  667 |       memcpy (cur, str, slen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:667:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  667 |       memcpy (cur, str, slen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:682:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |   if (node->flags & _WSNF_WORD)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  683 |     free (node->v.word);[0m
  684 |   else[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:684:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  685 |     node->flags |= _WSNF_WORD;[0m
      | [0;1;32m                              
[0m[1mwordsplit/wordsplit.c:705:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  705 |       if (wsp->ws_flags & WRDSF_QUOTE)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  706 |         unquote = !(p->flags & _WSNF_NOEXPAND);[0m
  707 |       else[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:707:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  707 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  708 |         unquote = 0;[0m
      | [0;1;32m                    
[0m[1mwordsplit/wordsplit.c:715:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  715 |               if (!newstr)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  716 |                 return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                          
[0m[1mwordsplit/wordsplit.c:717:8: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  717 |               memcpy (newstr, str, slen);[0m
      | [0;1;32m              ^~~~~~
[0m[1mwordsplit/wordsplit.c:717:8: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  717 |               memcpy (newstr, str, slen);[0m
      | [0;1;32m              ^~~~~~
[0m[1mwordsplit/wordsplit.c:737:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  737 |       if (p->flags & _WSNF_JOIN)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  738 |         if (coalesce_segment (wsp, p))[0m
  739 |           return 1;[0m
      | [0;1;32m                   
[0m[1mwordsplit/wordsplit.c:738:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  738 |         if (coalesce_segment (wsp, p))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  739 |           return 1;[0m
      | [0;1;32m                   
[0m[1mwordsplit/wordsplit.c:755:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |       if (coalesce_segment (wsp, p))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  756 |         return 1;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:850:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  850 |               if (wsp->ws_wordi + n + 1 == wsp->ws_maxwords)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  851 |                 break;[0m
      | [0;1;32m                      
[0m[1mwordsplit/wordsplit.c:855:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  855 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  856 |         p = NULL; /* Break the loop */[0m
  857 |       else[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:857:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  857 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  858 |         p = next;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:866:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  866 |       if (wsnode_tail_coalesce (wsp, p))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  867 |         return wsp->ws_errno;[0m
      | [0;1;32m                             
[0m[1mwordsplit/wordsplit.c:880:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  880 |               if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  881 |                 wsp->ws_debug (_("Restarting"));[0m
      | [0;1;32m                                                
[0m[1mwordsplit/wordsplit.c:883:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  883 |               if (rc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  884 |                 return rc;[0m
      | [0;1;32m                          
[0m[1mwordsplit/wordsplit.c:896:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  896 |           if (wordsplit_add_segm (wsp, 0, 0, _WSNF_EMPTYOK))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  897 |             return wsp->ws_errno;[0m
      | [0;1;32m                                 
[0m[1mwordsplit/wordsplit.c:902:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  902 |   if (alloc_space (wsp, n + 1))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  903 |     return wsp->ws_errno;[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:907:25: [0m[0;1;35mwarning: [0m[1mUse of memory after it is freed [clang-analyzer-unix.Malloc][0m
  907 |       const char *str = wsnode_ptr (wsp, wsp->ws_head);[0m
      | [0;1;32m                        ^
[0m[1mwordsplit/wordsplit.c:2748:34: [0m[0;1;36mnote: [0mAssuming 'command' is null[0m
 2748 |   return wordsplit_len (command, command ? strlen (command) : 0, ws, flags);[0m
      | [0;1;32m                                 ^~~~~~~
[0m[1mwordsplit/wordsplit.c:2748:34: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwordsplit/wordsplit.c:2748:10: [0m[0;1;36mnote: [0mCalling 'wordsplit_len'[0m
 2748 |   return wordsplit_len (command, command ? strlen (command) : 0, ws, flags);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2742:10: [0m[0;1;36mnote: [0mCalling 'wordsplit_run'[0m
 2742 |   return wordsplit_run (command, length, wsp, flags, 0);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2708:8: [0m[0;1;36mnote: [0m'command' is null[0m
 2708 |   if (!command)[0m
      | [0;1;32m       ^~~~~~~
[0m[1mwordsplit/wordsplit.c:2708:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2708 |   if (!command)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2710:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2710 |       if (!(flags & WRDSF_INCREMENTAL))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2710:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2710 |       if (!(flags & WRDSF_INCREMENTAL))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2713:11: [0m[0;1;36mnote: [0mAssuming field 'ws_head' is non-null[0m
 2713 |       if (wsp->ws_head)[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2713:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2713 |       if (wsp->ws_head)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2714:9: [0m[0;1;36mnote: [0mCalling 'wordsplit_finish'[0m
 2714 |         return wordsplit_finish (wsp);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:800:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  800 |   while (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:803:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  803 |       if (p->flags & _WSNF_DELIM)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:803:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  803 |       if (p->flags & _WSNF_DELIM)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:841:8: [0m[0;1;36mnote: [0m'delim' is 0[0m
  841 |           if (delim)[0m
      | [0;1;32m              ^~~~~
[0m[1mwordsplit/wordsplit.c:841:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  841 |           if (delim)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:848:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  848 |           if (wsp->ws_options & WRDSO_MAXWORDS)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:848:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  848 |           if (wsp->ws_options & WRDSO_MAXWORDS)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:850:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  850 |               if (wsp->ws_wordi + n + 1 == wsp->ws_maxwords)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:850:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  850 |               if (wsp->ws_wordi + n + 1 == wsp->ws_maxwords)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:851:3: [0m[0;1;36mnote: [0m Execution continues on line 861[0m
  851 |                 break;[0m
      | [0;1;32m                ^
[0m[1mwordsplit/wordsplit.c:861:7: [0m[0;1;36mnote: [0m'p' is non-null[0m
  861 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:861:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  861 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:866:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  866 |       if (wsnode_tail_coalesce (wsp, p))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:871:7: [0m[0;1;36mnote: [0m'n' is not equal to 0[0m
  871 |   if (n == 0)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:871:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  871 |   if (n == 0)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:902:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  902 |   if (alloc_space (wsp, n + 1))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:905:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  905 |   while (wsp->ws_head)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:915:11: [0m[0;1;36mnote: [0mAssuming 'newstr' is non-null[0m
  915 |       if (!newstr)[0m
      | [0;1;32m          ^~~~~~~
[0m[1mwordsplit/wordsplit.c:915:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  915 |       if (!newstr)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:920:7: [0m[0;1;36mnote: [0mCalling 'wsnode_remove'[0m
  920 |       wsnode_remove (wsp, wsp->ws_head);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:519:7: [0m[0;1;36mnote: [0mAssuming 'p' is non-null[0m
  519 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:519:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  519 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:522:18: [0m[0;1;36mnote: [0mField 'next' is null[0m
  522 |       if (!node->next)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:522:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  522 |       if (!node->next)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:529:7: [0m[0;1;36mnote: [0m'p' is null[0m
  529 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:529:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  529 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:534:3: [0m[0;1;36mnote: [0mCalling 'wsnode_free'[0m
  534 |   wsnode_free (node);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:496:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  496 |   if ((p->flags & (_WSNF_WORD|_WSNF_CONST)) == _WSNF_WORD)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:496:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  496 |   if ((p->flags & (_WSNF_WORD|_WSNF_CONST)) == _WSNF_WORD)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:498:3: [0m[0;1;36mnote: [0mMemory is released[0m
  498 |   free (p);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:534:3: [0m[0;1;36mnote: [0mReturning; memory was released via 1st parameter[0m
  534 |   wsnode_free (node);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:920:7: [0m[0;1;36mnote: [0mReturning; memory was released via 2nd parameter[0m
  920 |       wsnode_remove (wsp, wsp->ws_head);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:925:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  925 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:925:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  925 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:905:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  905 |   while (wsp->ws_head)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:907:25: [0m[0;1;36mnote: [0mUse of memory after it is freed[0m
  907 |       const char *str = wsnode_ptr (wsp, wsp->ws_head);[0m
      | [0;1;32m                        ^                ~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:915:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  915 |       if (!newstr)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  916 |         return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                  
[0m[1mwordsplit/wordsplit.c:917:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  917 |       memcpy (newstr, str, slen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:917:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  917 |       memcpy (newstr, str, slen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:925:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  925 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  926 |         break;[0m
      | [0;1;32m              
[0m[1mwordsplit/wordsplit.c:939:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |   if (rc)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  940 |     return rc;[0m
      | [0;1;32m              
[0m[1mwordsplit/wordsplit.c:954:55: [0m[0;1;35mwarning: [0m[1mArray access (via field 'ws_wordv') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
  954 |       wsp->ws_wordv[wsp->ws_offs + wsp->ws_wordc + i] = newstr;[0m
      | [0;1;32m           ~~~~~~~~                                   ^
[0m[1mwordsplit/wordsplit.c:938:8: [0m[0;1;36mnote: [0mCalling 'alloc_space'[0m
  938 |   rc = alloc_space (wsp, wsp->ws_wordc + argc + 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:367:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  367 |   size_t offs = (wsp->ws_flags & WRDSF_DOOFFS) ? wsp->ws_offs : 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:367:17: [0m[0;1;36mnote: [0m'?' condition is false[0m
  367 |   size_t offs = (wsp->ws_flags & WRDSF_DOOFFS) ? wsp->ws_offs : 0;[0m
      | [0;1;32m                ^
[0m[1mwordsplit/wordsplit.c:371:7: [0m[0;1;36mnote: [0mAssuming field 'ws_wordv' is not equal to NULL[0m
  371 |   if (wsp->ws_wordv == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:371:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  371 |   if (wsp->ws_wordv == NULL)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:376:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  376 |   else if (wsp->ws_wordn < offs + wsp->ws_wordc + count)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:376:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  376 |   else if (wsp->ws_wordn < offs + wsp->ws_wordc + count)[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:379:3: [0m[0;1;36mnote: [0mAssuming 'count' is <= ALLOC_INCR[0m
  379 |         (count > ALLOC_INCR ? count : ALLOC_INCR);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:379:3: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwordsplit/wordsplit.c:385:7: [0m[0;1;36mnote: [0mAssuming 'ptr' is null[0m
  385 |   if (ptr)[0m
      | [0;1;32m      ^~~
[0m[1mwordsplit/wordsplit.c:385:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  385 |   if (ptr)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:391:12: [0m[0;1;36mnote: [0mCalling '_wsplt_nomem'[0m
  391 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:112:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  112 |   if (wsp->ws_flags & WRDSF_ENOMEMABRT)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:112:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  112 |   if (wsp->ws_flags & WRDSF_ENOMEMABRT)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:114:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  114 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:114:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  114 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:116:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  116 |   if (!(wsp->ws_flags & WRDSF_REUSE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:116:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  116 |   if (!(wsp->ws_flags & WRDSF_REUSE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:117:5: [0m[0;1;36mnote: [0mCalling 'wordsplit_free'[0m
  117 |     wordsplit_free (wsp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2818:11: [0m[0;1;36mnote: [0mField 'ws_errno' is not equal to WRDSE_USAGE[0m
 2818 |   if (ws->ws_errno == WRDSE_USAGE)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2818:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2818 |   if (ws->ws_errno == WRDSE_USAGE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2822:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_clearerr'[0m
 2822 |   wordsplit_clearerr (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2805:11: [0m[0;1;36mnote: [0mField 'ws_errno' is not equal to WRDSE_USERERR[0m
 2805 |   if (ws->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2805:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2805 |   if (ws->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2812:3: [0m[0;1;36mnote: [0mThe value 0 is assigned to field 'ws_errno', which participates in a condition later[0m
 2812 |   ws->ws_errno = WRDSE_OK;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2822:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_clearerr'[0m
 2822 |   wordsplit_clearerr (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2823:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_nodes'[0m
 2823 |   wordsplit_free_nodes (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:606:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 612[0m
  606 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2823:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_nodes'[0m
 2823 |   wordsplit_free_nodes (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2824:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_words'[0m
 2824 |   wordsplit_free_words (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2756:15: [0m[0;1;36mnote: [0mAssuming 'i' is >= field 'ws_wordc'[0m
 2756 |   for (i = 0; i < ws->ws_wordc; i++)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2756:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2765[0m
 2756 |   for (i = 0; i < ws->ws_wordc; i++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2824:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_words'[0m
 2824 |   wordsplit_free_words (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2826:3: [0m[0;1;36mnote: [0mNull pointer value stored to field 'ws_wordv'[0m
 2826 |   ws->ws_wordv = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2827:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_envbuf'[0m
 2827 |   wordsplit_free_envbuf (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2771:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2771 |   if (!(ws->ws_flags & WRDSF_ENV))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2771:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2771 |   if (!(ws->ws_flags & WRDSF_ENV))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2827:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_envbuf'[0m
 2827 |   wordsplit_free_envbuf (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2828:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_parambuf'[0m
 2828 |   wordsplit_free_parambuf (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2788:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2788 |   if (!(ws->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2788:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2788 |   if (!(ws->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2828:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_parambuf'[0m
 2828 |   wordsplit_free_parambuf (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:117:5: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free'[0m
  117 |     wordsplit_free (wsp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:118:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_nodes'[0m
  118 |   wordsplit_free_nodes (wsp);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:606:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 612[0m
  606 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:118:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_nodes'[0m
  118 |   wordsplit_free_nodes (wsp);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:119:3: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  119 |   return wsp->ws_errno;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:391:12: [0m[0;1;36mnote: [0mReturning from '_wsplt_nomem'[0m
  391 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:391:5: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  391 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:938:8: [0m[0;1;36mnote: [0mReturning from 'alloc_space'[0m
  938 |   rc = alloc_space (wsp, wsp->ws_wordc + argc + 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:939:7: [0m[0;1;36mnote: [0m'rc' is 0[0m
  939 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:939:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  939 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:941:15: [0m[0;1;36mnote: [0mAssuming 'i' is < 'argc'[0m
  941 |   for (i = 0; i < argc; i++)[0m
      | [0;1;32m              ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:941:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  941 |   for (i = 0; i < argc; i++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:944:11: [0m[0;1;36mnote: [0mAssuming 'newstr' is non-null[0m
  944 |       if (!newstr)[0m
      | [0;1;32m          ^~~~~~~
[0m[1mwordsplit/wordsplit.c:944:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  944 |       if (!newstr)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:954:55: [0m[0;1;36mnote: [0mArray access (via field 'ws_wordv') results in a null pointer dereference[0m
  954 |       wsp->ws_wordv[wsp->ws_offs + wsp->ws_wordc + i] = newstr;[0m
      | [0;1;32m           ~~~~~~~~                                   ^
[0m[1mwordsplit/wordsplit.c:957:47: [0m[0;1;35mwarning: [0m[1mArray access (via field 'ws_wordv') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
  957 |   wsp->ws_wordv[wsp->ws_offs + wsp->ws_wordc] = NULL;[0m
      | [0;1;32m       ~~~~~~~~                               ^
[0m[1mwordsplit/wordsplit.c:938:8: [0m[0;1;36mnote: [0mCalling 'alloc_space'[0m
  938 |   rc = alloc_space (wsp, wsp->ws_wordc + argc + 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:367:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  367 |   size_t offs = (wsp->ws_flags & WRDSF_DOOFFS) ? wsp->ws_offs : 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:367:17: [0m[0;1;36mnote: [0m'?' condition is false[0m
  367 |   size_t offs = (wsp->ws_flags & WRDSF_DOOFFS) ? wsp->ws_offs : 0;[0m
      | [0;1;32m                ^
[0m[1mwordsplit/wordsplit.c:371:7: [0m[0;1;36mnote: [0mAssuming field 'ws_wordv' is not equal to NULL[0m
  371 |   if (wsp->ws_wordv == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:371:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  371 |   if (wsp->ws_wordv == NULL)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:376:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  376 |   else if (wsp->ws_wordn < offs + wsp->ws_wordc + count)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:376:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  376 |   else if (wsp->ws_wordn < offs + wsp->ws_wordc + count)[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:379:3: [0m[0;1;36mnote: [0mAssuming 'count' is <= ALLOC_INCR[0m
  379 |         (count > ALLOC_INCR ? count : ALLOC_INCR);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:379:3: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwordsplit/wordsplit.c:385:7: [0m[0;1;36mnote: [0mAssuming 'ptr' is null[0m
  385 |   if (ptr)[0m
      | [0;1;32m      ^~~
[0m[1mwordsplit/wordsplit.c:385:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  385 |   if (ptr)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:391:12: [0m[0;1;36mnote: [0mCalling '_wsplt_nomem'[0m
  391 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:112:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  112 |   if (wsp->ws_flags & WRDSF_ENOMEMABRT)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:112:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  112 |   if (wsp->ws_flags & WRDSF_ENOMEMABRT)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:114:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  114 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:114:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  114 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:116:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  116 |   if (!(wsp->ws_flags & WRDSF_REUSE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:116:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  116 |   if (!(wsp->ws_flags & WRDSF_REUSE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:117:5: [0m[0;1;36mnote: [0mCalling 'wordsplit_free'[0m
  117 |     wordsplit_free (wsp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2818:11: [0m[0;1;36mnote: [0mField 'ws_errno' is not equal to WRDSE_USAGE[0m
 2818 |   if (ws->ws_errno == WRDSE_USAGE)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2818:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2818 |   if (ws->ws_errno == WRDSE_USAGE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2822:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_clearerr'[0m
 2822 |   wordsplit_clearerr (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2805:11: [0m[0;1;36mnote: [0mField 'ws_errno' is not equal to WRDSE_USERERR[0m
 2805 |   if (ws->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2805:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2805 |   if (ws->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2812:3: [0m[0;1;36mnote: [0mThe value 0 is assigned to field 'ws_errno', which participates in a condition later[0m
 2812 |   ws->ws_errno = WRDSE_OK;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2822:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_clearerr'[0m
 2822 |   wordsplit_clearerr (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2823:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_nodes'[0m
 2823 |   wordsplit_free_nodes (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:606:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 612[0m
  606 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2823:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_nodes'[0m
 2823 |   wordsplit_free_nodes (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2824:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_words'[0m
 2824 |   wordsplit_free_words (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2756:15: [0m[0;1;36mnote: [0mAssuming 'i' is >= field 'ws_wordc'[0m
 2756 |   for (i = 0; i < ws->ws_wordc; i++)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2756:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2765[0m
 2756 |   for (i = 0; i < ws->ws_wordc; i++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2824:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_words'[0m
 2824 |   wordsplit_free_words (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2826:3: [0m[0;1;36mnote: [0mNull pointer value stored to field 'ws_wordv'[0m
 2826 |   ws->ws_wordv = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2827:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_envbuf'[0m
 2827 |   wordsplit_free_envbuf (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2771:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2771 |   if (!(ws->ws_flags & WRDSF_ENV))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2771:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2771 |   if (!(ws->ws_flags & WRDSF_ENV))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2827:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_envbuf'[0m
 2827 |   wordsplit_free_envbuf (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2828:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_parambuf'[0m
 2828 |   wordsplit_free_parambuf (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2788:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2788 |   if (!(ws->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2788:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2788 |   if (!(ws->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2828:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_parambuf'[0m
 2828 |   wordsplit_free_parambuf (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:117:5: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free'[0m
  117 |     wordsplit_free (wsp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:118:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_nodes'[0m
  118 |   wordsplit_free_nodes (wsp);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:606:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 612[0m
  606 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:118:3: [0m[0;1;36mnote: [0mReturning from 'wordsplit_free_nodes'[0m
  118 |   wordsplit_free_nodes (wsp);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:119:3: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  119 |   return wsp->ws_errno;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:391:12: [0m[0;1;36mnote: [0mReturning from '_wsplt_nomem'[0m
  391 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:391:5: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  391 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:938:8: [0m[0;1;36mnote: [0mReturning from 'alloc_space'[0m
  938 |   rc = alloc_space (wsp, wsp->ws_wordc + argc + 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:939:7: [0m[0;1;36mnote: [0m'rc' is 0[0m
  939 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:939:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  939 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:941:15: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'argc'[0m
  941 |   for (i = 0; i < argc; i++)[0m
      | [0;1;32m              ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:941:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 956[0m
  941 |   for (i = 0; i < argc; i++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:957:47: [0m[0;1;36mnote: [0mArray access (via field 'ws_wordv') results in a null pointer dereference[0m
  957 |   wsp->ws_wordv[wsp->ws_offs + wsp->ws_wordc] = NULL;[0m
      | [0;1;32m       ~~~~~~~~                               ^
[0m[1mwordsplit/wordsplit.c:970:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  970 |   if (len == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  971 |     return 0;[0m
      | [0;1;32m             
[0m[1mwordsplit/wordsplit.c:972:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  973 |     return 1;[0m
      | [0;1;32m             
[0m[1mwordsplit/wordsplit.c:974:3: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
  974 |   wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1817:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1817 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1820:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1820:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1821:6: [0m[0;1;36mnote: [0mCalling 'node_expand'[0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1757:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1757:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1762:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is >= 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1778[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1778:7: [0m[0;1;36mnote: [0m'p' is > 'str'[0m
 1778 |   if (p > str)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1778:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1778 |   if (p > str)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1780:11: [0m[0;1;36mnote: [0m'tail' is equal to 'node'[0m
 1780 |       if (tail != node)[0m
      | [0;1;32m          ^~~~
[0m[1mwordsplit/wordsplit.c:1780:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1780 |       if (tail != node)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1782:11: [0m[0;1;36mnote: [0mCalling 'node_split_prefix'[0m
 1782 |       if (node_split_prefix (wsp, &tail, node, off, p - str,[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1783 |                              node->flags & (_WSNF_JOIN|_WSNF_QUOTE)))[0m
      | [0;1;32m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:968:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
  968 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:970:7: [0m[0;1;36mnote: [0mAssuming 'len' is not equal to 0[0m
  970 |   if (len == 0)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:970:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  970 |   if (len == 0)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:972:7: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
  972 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:972:7: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
  972 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:972:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  972 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:972:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  972 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:974:3: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
  974 |   wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m  ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:979:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  979 |       if (!newstr)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  980 |         return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                  
[0m[1mwordsplit/wordsplit.c:981:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  981 |       memcpy (newstr, str + beg, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:981:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  981 |       memcpy (newstr, str + beg, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:1008:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1008 |           switch (str[i])[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mwordsplit/wordsplit.c:1011:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1011 |               if (str[i] == paren[0])[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1012 |                 {[0m
 1013 |                   level++;[0m
 1014 |                   break;[0m
 1015 |                 }[0m
 1016 |               else if (str[i] == paren[1])[0m
 1017 |                 {[0m
 1018 |                   if (--level == 0)[0m
 1019 |                     {[0m
 1020 |                       *poff = i;[0m
 1021 |                       return 0;[0m
 1022 |                     }[0m
 1023 |                   break;[0m
 1024 |                 }[0m
 1025 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mwordsplit/wordsplit.c:1028:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1028 |               state = st_dquote;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1029 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mwordsplit/wordsplit.c:1032:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1032 |               state = st_squote;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1033 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mwordsplit/wordsplit.c:1038:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1038 |           if (str[i] == '\'')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1039 |             state = st_init;[0m
 1040 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mwordsplit/wordsplit.c:1038:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1038 |           if (str[i] == '\'')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1039 |             state = st_init;[0m
      | [0;1;32m                            
[0m[1mwordsplit/wordsplit.c:1043:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1043 |           if (str[i] == '\\')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1044 |             i++;[0m
 1045 |           else if (str[i] == '"')[0m
 1046 |             state = st_init;[0m
 1047 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mwordsplit/wordsplit.c:1043:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1043 |           if (str[i] == '\\')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1044 |             i++;[0m
 1045 |           else if (str[i] == '"')[0m
      | [0;32m          } 
[0m[1mwordsplit/wordsplit.c:1045:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1045 |           else if (str[i] == '"')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1046 |             state = st_init;[0m
      | [0;1;32m                            
[0m[1mwordsplit/wordsplit.c:1058:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1058 |   if (!wsp->ws_env)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1059 |     return NULL;[0m
      | [0;1;32m                
[0m[1mwordsplit/wordsplit.c:1066:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1066 |           if (elen == len && memcmp (wsp->ws_env[i], name, elen) == 0)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1067 |             return wsp->ws_env[i + 1];[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:1070:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |           if (wsp->ws_env[i] == NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1071 |             break;[0m
      | [0;1;32m                  
[0m[1mwordsplit/wordsplit.c:1082:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1082 |           for (j = 0; j < len; j++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1083 |             if (name[j] != var[j])[0m
 1084 |               break;[0m
      | [0;1;32m                    
[0m[1mwordsplit/wordsplit.c:1083:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1083 |             if (name[j] != var[j])[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1084 |               break;[0m
      | [0;1;32m                    
[0m[1mwordsplit/wordsplit.c:1085:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1085 |           if (j == len && var[j] == '=')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1086 |             return var + j + 1;[0m
      | [0;1;32m                               
[0m[1mwordsplit/wordsplit.c:1102:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |           if (!retval)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1103 |             return WRDSE_NOSPACE;[0m
      | [0;1;32m                                 
[0m[1mwordsplit/wordsplit.c:1138:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1138 |                   for (; wsp->ws_env[i]; i++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1139 |                     ;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:1145:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1145 |               if (!newenv)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1146 |                 return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                          
[0m[1mwordsplit/wordsplit.c:1153:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1153 |                       for (; j > 1; j--)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1154 |                         free (newenv[j-1]);[0m
      | [0;1;32m                                           
[0m[1mwordsplit/wordsplit.c:1169:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1169 |               if (!newenv)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1170 |                 return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                          
[0m[1mwordsplit/wordsplit.c:1182:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1182 |           if ((size_t) -1 / 3 * 2 / sizeof (wsp->ws_envbuf[0]) <= n)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1183 |             return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:1186:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1186 |           if (!newenv)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1187 |             return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:1198:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1198 |       if (!p)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1199 |         return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                  
[0m[1mwordsplit/wordsplit.c:1200:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1200 |       memcpy (p, name, namelen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:1200:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1200 |       memcpy (p, name, namelen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:1215:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1215 |       if (!v)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1216 |         return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                  
[0m[1mwordsplit/wordsplit.c:1217:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1217 |       memcpy (v, name, namelen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:1217:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1217 |       memcpy (v, name, namelen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:1219:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1219 |       strcpy(v + namelen, value);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:1219:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1219 |       strcpy(v + namelen, value);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:1231:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1231 |   if (param_idx < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1232 |     return _wsplt_seterr (wsp, WRDSE_BADPARAM);[0m
      | [0;1;32m                                               
[0m[1mwordsplit/wordsplit.c:1241:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1241 |           if (!parambuf)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1242 |             return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:1249:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1249 |                   for (; i > 1; i--)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1250 |                     free (parambuf[i-1]);[0m
      | [0;1;32m                                         
[0m[1mwordsplit/wordsplit.c:1264:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1264 |           if ((size_t) -1 / 3 * 2 / sizeof (wsp->ws_parambuf[0]) <= n)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1265 |             return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:1268:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1268 |           if (!parambuf)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1269 |             return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:1278:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1278 |   else if (param_idx > wsp->ws_paramc)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1279 |     return _wsplt_seterr (wsp, WRDSE_BADPARAM);[0m
      | [0;1;32m                                               
[0m[1mwordsplit/wordsplit.c:1282:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1282 |   if (!v)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 1283 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m                              
[0m[1mwordsplit/wordsplit.c:1298:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1298 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1299 |     return 1;[0m
      | [0;1;32m             
[0m[1mwordsplit/wordsplit.c:1300:3: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1300 |   wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1414:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1429:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1429 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '*')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1433:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1433 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '@')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1438:5: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1438 |            && (ISVARBEG (str[1])[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1498:14: [0m[0;1;36mnote: [0mCalling 'expvar_recover'[0m
 1498 |       return expvar_recover (wsp, str, ptail, pend, flg);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1296:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1296 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1298:7: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1298 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1298:7: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1298 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1298:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1298 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1298:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1298 |   if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1300:3: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1300 |   wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m  ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1304:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1304 |   if (!newnode->v.word)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1305 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m                              
[0m[1mwordsplit/wordsplit.c:1339:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1339 |           if (wsnode_new (wsp, &np))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1340 |             return 1;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:1341:4: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1341 |           wsnode_insert (wsp, np, *ptail, 0);[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:48: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1414:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1414:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1429:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1429 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '*')[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1429:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1429 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '*')[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1433:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1433 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '@')[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1433:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1433 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '@')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1433:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1433 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '@')[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1435:14: [0m[0;1;36mnote: [0mCalling 'expand_paramv'[0m
 1435 |       return expand_paramv (wsp, ptail, flg, 1);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:3: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:3: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:45: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:2: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m ^
[0m[1mwordsplit/wordsplit.c:1320:11: [0m[0;1;36mnote: [0m'q' is 1[0m
 1320 |               | (q ? WRDSF_NOSPLIT : 0);[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:1320:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mwordsplit/wordsplit.c:1324:15: [0m[0;1;36mnote: [0mAssuming 'i' is < field 'ws_paramc'[0m
 1324 |   for (i = 0; i < wsp->ws_paramc; i++)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1324:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1324 |   for (i = 0; i < wsp->ws_paramc; i++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1326:7: [0m[0;1;36mnote: [0m'np' declared without an initial value[0m
 1326 |       struct wordsplit_node *np;[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1330:11: [0m[0;1;36mnote: [0mAssuming 'rc' is 0[0m
 1330 |       if (rc)[0m
      | [0;1;32m          ^~
[0m[1mwordsplit/wordsplit.c:1330:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1330 |       if (rc)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1337:11: [0m[0;1;36mnote: [0m'q' is 1[0m
 1337 |       if (q)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1337:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1337 |       if (q)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1339:8: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1339 |           if (wsnode_new (wsp, &np))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1339:8: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1339 |           if (wsnode_new (wsp, &np))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1339:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1339 |           if (wsnode_new (wsp, &np))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1339:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1339 |           if (wsnode_new (wsp, &np))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1341:4: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1341 |           wsnode_insert (wsp, np, *ptail, 0);[0m
      | [0;1;32m          ^                   ~~
[0m[1mwordsplit/wordsplit.c:1350:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1350 |           for (np = ws.ws_head; np; np = np->next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1351 |             np->flags = _WSNF_WORD | _WSNF_NOEXPAND | flg;[0m
      | [0;1;32m                                                          
[0m[1mwordsplit/wordsplit.c:1359:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1359 |   if (wsflags & WRDSF_REUSE)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1360 |     wordsplit_free (&ws);[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:1373:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1373 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1374 |             return 1;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:1375:19: [0m[0;1;35mwarning: [0m[1mAccess to field 'flags' results in a dereference of an undefined pointer value (loaded from variable 'newnode') [clang-analyzer-core.NullDereference][0m
 1375 |           newnode->flags = _WSNF_WORD | _WSNF_CONST | _WSNF_NOEXPAND | _WSNF_JOIN;[0m
      | [0;1;32m                         ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1414:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1414:48: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1414:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1429:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1429 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '*')[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1429:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1429 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '*')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1429:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1429 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '*')[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1431:14: [0m[0;1;36mnote: [0mCalling 'expand_paramv'[0m
 1431 |       return expand_paramv (wsp, ptail, flg, 0);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:3: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:3: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:45: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1319:11: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1319 |               | (WSP_RETURN_DELIMS (wsp) ? WRDSF_RETURN_DELIMS : 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:65:2: [0m[0;1;36mnote: [0mexpanded from macro 'WSP_RETURN_DELIMS'[0m
   65 |  ((wsp)->ws_flags & WRDSF_RETURN_DELIMS || ((wsp)->ws_options & WRDSO_MAXWORDS))[0m
      | [0;1;32m ^
[0m[1mwordsplit/wordsplit.c:1320:11: [0m[0;1;36mnote: [0m'q' is 0[0m
 1320 |               | (q ? WRDSF_NOSPLIT : 0);[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:1320:11: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwordsplit/wordsplit.c:1324:15: [0m[0;1;36mnote: [0mAssuming 'i' is >= field 'ws_paramc'[0m
 1324 |   for (i = 0; i < wsp->ws_paramc; i++)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1324:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1359[0m
 1324 |   for (i = 0; i < wsp->ws_paramc; i++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1359:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1359 |   if (wsflags & WRDSF_REUSE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1362:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1362 |   if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1362:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1362 |   if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1366:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1366 |       while (tail != *ptail)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1366:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1366 |       while (tail != *ptail)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1369:4: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1369 |           struct wordsplit_node *newnode;[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1373:8: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1373 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1373:8: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1373 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1373:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1373 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1373:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1373 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1375:19: [0m[0;1;36mnote: [0mAccess to field 'flags' results in a dereference of an undefined pointer value (loaded from variable 'newnode')[0m
 1375 |           newnode->flags = _WSNF_WORD | _WSNF_CONST | _WSNF_NOEXPAND | _WSNF_JOIN;[0m
      | [0;1;32m          ~~~~~~~        ^
[0m[1mwordsplit/wordsplit.c:1402:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1402 |       for (i = 1; i < len; i++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1403 |         if (!is_name_char (wsp, str[i]))[0m
 1404 |           break;[0m
      | [0;1;32m                
[0m[1mwordsplit/wordsplit.c:1403:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1403 |         if (!is_name_char (wsp, str[i]))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1404 |           break;[0m
      | [0;1;32m                
[0m[1mwordsplit/wordsplit.c:1417:7: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1417 |       snprintf (b, sizeof(b), "%d", (int) wsp->ws_paramc);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:1417:7: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1417 |       snprintf (b, sizeof(b), "%d", (int) wsp->ws_paramc);[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:1419:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1419 |       if (!value)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1420 |         return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                  
[0m[1mwordsplit/wordsplit.c:1421:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1421 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1422 |         return 1;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:1422:9: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'value' [clang-analyzer-unix.Malloc][0m
 1422 |         return 1;[0m
      | [0;1;32m               ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1414:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1414:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1414:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1418:15: [0m[0;1;36mnote: [0mMemory is allocated[0m
 1418 |       value = strdup (b);[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1419:11: [0m[0;1;36mnote: [0mAssuming 'value' is non-null[0m
 1419 |       if (!value)[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:1419:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1419 |       if (!value)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1421:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1421 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1422:9: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'value'[0m
 1422 |         return 1;[0m
      | [0;1;32m               ^
[0m[1mwordsplit/wordsplit.c:1423:7: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1423 |       wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m      ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1393:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1393 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1414:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1414:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1414:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1414 |   else if ((wsp->ws_options & WRDSO_PARAMV) && str[0] == '#')[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1419:11: [0m[0;1;36mnote: [0mAssuming 'value' is non-null[0m
 1419 |       if (!value)[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:1419:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1419 |       if (!value)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1421:11: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1421 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1421:11: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1421 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1421:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1421 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1423:7: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1423 |       wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m      ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1461:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1461 |               if (find_closing_paren (str, i, len, &j, "{}"))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1462 |                 return _wsplt_seterr (wsp, WRDSE_CBRACE);[0m
      | [0;1;32m                                                         
[0m[1mwordsplit/wordsplit.c:1463:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1463 |               if (i > i0 + 1 && str[i-1] == ':')[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1464 |                 i--;[0m
      | [0;1;32m                    
[0m[1mwordsplit/wordsplit.c:1474:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1474 |                       || param_idx > INT_MAX)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1475 |                     return expvar_recover (wsp, str - 1, ptail, pend, flg);[0m
      | [0;1;32m                                                                           
[0m[1mwordsplit/wordsplit.c:1484:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1484 |               if (str[i] == ':' && i + 1 < len && strchr ("-+?=", str[i+1]))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1485 |                 continue;[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:1490:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1490 |       if (is_param && str[0] == '-')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1491 |         param_idx = wsp->ws_paramc - param_idx;[0m
      | [0;1;32m                                               
[0m[1mwordsplit/wordsplit.c:1493:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1493 |       if (i == len)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1494 |         return _wsplt_seterr (wsp, WRDSE_CBRACE);[0m
      | [0;1;32m                                                 
[0m[1mwordsplit/wordsplit.c:1511:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1511 |           if (!value)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1512 |             rc = WRDSE_NOSPACE;[0m
 1513 |           else[0m
      | [0;32m          } 
[0m[1mwordsplit/wordsplit.c:1513:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1513 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1514 |             rc = WRDSE_OK;[0m
      | [0;1;32m                          
[0m[1mwordsplit/wordsplit.c:1516:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1516 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1517 |         rc = WRDSE_UNDEF;[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:1526:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1526 |               if (rc == WRDSE_UNDEF)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1527 |                 rc = wsplt_env_lookup (wsp, str, i, &value);[0m
      | [0;1;32m                                                            
[0m[1mwordsplit/wordsplit.c:1532:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1532 |               if (rc == WRDSE_UNDEF)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1533 |                 rc = wsplt_env_getvar (wsp, str, i, &value);[0m
      | [0;1;32m                                                            
[0m[1mwordsplit/wordsplit.c:1536:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1536 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1537 |         rc = wsplt_env_lookup (wsp, str, i, &value);[0m
      | [0;1;32m                                                    
[0m[1mwordsplit/wordsplit.c:1551:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1551 |       if (defstr && *defstr == '+')[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1552 |         {[0m
 1553 |           size_t size = *pend - ++defstr;[0m
 1554 | [0m
 1555 |           rc = _wsplt_subsplit (wsp, &ws, defstr, size,[0m
 1556 |                                 WRDSF_NOSPLIT | WRDSF_WS | WRDSF_QUOTE |[0m
 1557 |                                 (wsp->ws_flags &[0m
 1558 |                                  (WRDSF_NOVAR | WRDSF_NOCMD)), 1);[0m
 1559 |           if (rc)[0m
 1560 |             return rc;[0m
 1561 |           free (value);[0m
 1562 |           value = ws.ws_wordv[0];[0m
 1563 |           ws.ws_wordv[0] = NULL;[0m
 1564 |           wordsplit_free (&ws);[0m
 1565 |         }[0m
 1566 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mwordsplit/wordsplit.c:1559:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1559 |           if (rc)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1560 |             return rc;[0m
      | [0;1;32m                      
[0m[1mwordsplit/wordsplit.c:1569:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1569 |       if (defstr)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mwordsplit/wordsplit.c:1581:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1581 |               if (rc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1582 |                 return rc;[0m
      | [0;1;32m                          
[0m[1mwordsplit/wordsplit.c:1590:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1590 |                   if (is_param)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1591 |                     rc = wsplt_assign_param (wsp, param_idx, value);[0m
 1592 |                   else[0m
      | [0;32m                  } 
[0m[1mwordsplit/wordsplit.c:1592:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1592 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1593 |                     rc = wsplt_assign_var (wsp, str, i, value);[0m
      | [0;1;32m                                                               
[0m[1mwordsplit/wordsplit.c:1606:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1606 |                   if (size == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1607 |                     wsp->ws_error (_("%.*s: variable null or not set"),[0m
 1608 |                                    (int) i, str);[0m
 1609 |                   else[0m
      | [0;32m                  } 
[0m[1mwordsplit/wordsplit.c:1617:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1617 |                       if (rc == 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1618 |                         wsp->ws_error ("%.*s: %s",[0m
 1619 |                                        (int) i, str, ws.ws_wordv[0]);[0m
 1620 |                       else[0m
      | [0;32m                      } 
[0m[1mwordsplit/wordsplit.c:1620:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1620 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1621 |                         wsp->ws_error ("%.*s: %.*s",[0m
 1622 |                                        (int) i, str, (int) size, defstr);[0m
      | [0;1;32m                                                                         
[0m[1mwordsplit/wordsplit.c:1636:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1636 |           if (wsp->ws_flags & WRDSF_WARNUNDEF)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1637 |             wsp->ws_error (_("warning: undefined variable `%.*s'"),[0m
 1638 |                            (int) i, str);[0m
      | [0;1;32m                                         
[0m[1mwordsplit/wordsplit.c:1639:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1639 |           if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1640 |             value = NULL;[0m
 1641 |           else[0m
      | [0;32m          } 
[0m[1mwordsplit/wordsplit.c:1644:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1644 |               if (!value)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1645 |                 return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                          
[0m[1mwordsplit/wordsplit.c:1651:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1651 |       return _wsplt_nomem (wsp);[0m
      | [0;1;32m      ^                        
[0m      | [0;32m      {                        ;} 
[0m[1mwordsplit/wordsplit.c:1654:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1654 |       if (wsp->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1655 |         free (wsp->ws_usererr);[0m
 1656 |       wsp->ws_usererr = value;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mwordsplit/wordsplit.c:1654:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1654 |       if (wsp->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1655 |         free (wsp->ws_usererr);[0m
      | [0;1;32m                               
[0m[1mwordsplit/wordsplit.c:1659:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1659 |       _wsplt_seterr (wsp, rc);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1660 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mwordsplit/wordsplit.c:1667:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1667 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1668 |             return 1;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:1668:13: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'value' [clang-analyzer-unix.Malloc][0m
 1668 |             return 1;[0m
      | [0;1;32m                   ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:48: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1412:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1412 |       param_idx = to_num (str[0]);[0m
      | [0;1;32m                  ^
[0m[1mwordsplit/wordsplit.c:68:4: [0m[0;1;36mnote: [0mexpanded from macro 'to_num'[0m
   68 |   (ISDIGIT(c) ? c - '0' : (ISXDIGIT(c) ? toupper(c) - 'A' + 10 : 255 ))[0m
      | [0;1;32m   ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1412:19: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1412 |       param_idx = to_num (str[0]);[0m
      | [0;1;32m                  ^
[0m[1mwordsplit/wordsplit.c:68:4: [0m[0;1;36mnote: [0mexpanded from macro 'to_num'[0m
   68 |   (ISDIGIT(c) ? c - '0' : (ISXDIGIT(c) ? toupper(c) - 'A' + 10 : 255 ))[0m
      | [0;1;32m   ^
[0m[1mwordsplit/wordsplit.c:49:20: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                   ^
[0m[1mwordsplit/wordsplit.c:1506:7: [0m[0;1;36mnote: [0m'is_param' is 1[0m
 1506 |   if (is_param)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:1506:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1506 |   if (is_param)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1508:11: [0m[0;1;36mnote: [0m'param_idx' is >= 0[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1508:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1508:29: [0m[0;1;36mnote: [0mAssuming 'param_idx' is >= field 'ws_paramc'[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1508:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1540:7: [0m[0;1;36mnote: [0m'rc' is not equal to WRDSE_OK[0m
 1540 |   if (rc == WRDSE_OK[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:1541:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1541 |       && (!value || value[0] == 0)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1548:3: [0m[0;1;36mnote: [0mControl jumps to 'case 5:'  at line 1568[0m
 1548 |   switch (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1569:11: [0m[0;1;36mnote: [0m'defstr' is null[0m
 1569 |       if (defstr)[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:1569:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1569 |       if (defstr)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1629:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1629 |       else if (wsp->ws_flags & WRDSF_UNDEF)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1629:12: [0m[0;1;36mnote: [0mTaking false branch[0m
 1629 |       else if (wsp->ws_flags & WRDSF_UNDEF)[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1636:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1636 |           if (wsp->ws_flags & WRDSF_WARNUNDEF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1636:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1636 |           if (wsp->ws_flags & WRDSF_WARNUNDEF)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1639:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1639 |           if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1639:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1639 |           if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1643:16: [0m[0;1;36mnote: [0mMemory is allocated[0m
 1643 |               value = strdup ("");[0m
      | [0;1;32m                      ^~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1644:12: [0m[0;1;36mnote: [0mAssuming 'value' is non-null[0m
 1644 |               if (!value)[0m
      | [0;1;32m                  ^~~~~~
[0m[1mwordsplit/wordsplit.c:1644:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1644 |               if (!value)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:1648:7: [0m[0;1;36mnote: [0m Execution continues on line 1663[0m
 1648 |       break;[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1663:7: [0m[0;1;36mnote: [0m'value' is non-null[0m
 1663 |   if (value)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:1663:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1663 |   if (value)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1665:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1665 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1665:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1665 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1667:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1667 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1668:13: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'value'[0m
 1668 |             return 1;[0m
      | [0;1;32m                   ^
[0m[1mwordsplit/wordsplit.c:1669:4: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1669 |           wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m          ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1393:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1393 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:48: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1412:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1412 |       param_idx = to_num (str[0]);[0m
      | [0;1;32m                  ^
[0m[1mwordsplit/wordsplit.c:68:4: [0m[0;1;36mnote: [0mexpanded from macro 'to_num'[0m
   68 |   (ISDIGIT(c) ? c - '0' : (ISXDIGIT(c) ? toupper(c) - 'A' + 10 : 255 ))[0m
      | [0;1;32m   ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1412:19: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1412 |       param_idx = to_num (str[0]);[0m
      | [0;1;32m                  ^
[0m[1mwordsplit/wordsplit.c:68:4: [0m[0;1;36mnote: [0mexpanded from macro 'to_num'[0m
   68 |   (ISDIGIT(c) ? c - '0' : (ISXDIGIT(c) ? toupper(c) - 'A' + 10 : 255 ))[0m
      | [0;1;32m   ^
[0m[1mwordsplit/wordsplit.c:49:20: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                   ^
[0m[1mwordsplit/wordsplit.c:1506:7: [0m[0;1;36mnote: [0m'is_param' is 1[0m
 1506 |   if (is_param)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:1506:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1506 |   if (is_param)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1508:11: [0m[0;1;36mnote: [0m'param_idx' is >= 0[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1508:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1508:29: [0m[0;1;36mnote: [0mAssuming 'param_idx' is >= field 'ws_paramc'[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1508:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1540:7: [0m[0;1;36mnote: [0m'rc' is not equal to WRDSE_OK[0m
 1540 |   if (rc == WRDSE_OK[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:1541:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1541 |       && (!value || value[0] == 0)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1548:3: [0m[0;1;36mnote: [0mControl jumps to 'case 5:'  at line 1568[0m
 1548 |   switch (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1569:11: [0m[0;1;36mnote: [0m'defstr' is null[0m
 1569 |       if (defstr)[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:1569:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1569 |       if (defstr)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1629:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1629 |       else if (wsp->ws_flags & WRDSF_UNDEF)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1629:12: [0m[0;1;36mnote: [0mTaking false branch[0m
 1629 |       else if (wsp->ws_flags & WRDSF_UNDEF)[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1636:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1636 |           if (wsp->ws_flags & WRDSF_WARNUNDEF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1636:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1636 |           if (wsp->ws_flags & WRDSF_WARNUNDEF)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1639:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1639 |           if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1639:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1639 |           if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1644:12: [0m[0;1;36mnote: [0mAssuming 'value' is non-null[0m
 1644 |               if (!value)[0m
      | [0;1;32m                  ^~~~~~
[0m[1mwordsplit/wordsplit.c:1644:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1644 |               if (!value)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:1648:7: [0m[0;1;36mnote: [0m Execution continues on line 1663[0m
 1648 |       break;[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1663:7: [0m[0;1;36mnote: [0m'value' is non-null[0m
 1663 |   if (value)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:1663:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1663 |   if (value)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1665:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1665 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1665:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1665 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1667:8: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1667 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1667:8: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1667 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1667:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1667 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1669:4: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1669 |           wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m          ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1678:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1678 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1679 |             return 1;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:1680:4: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1680 |           wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m          ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1393:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1393 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:48: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1412:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1412 |       param_idx = to_num (str[0]);[0m
      | [0;1;32m                  ^
[0m[1mwordsplit/wordsplit.c:68:4: [0m[0;1;36mnote: [0mexpanded from macro 'to_num'[0m
   68 |   (ISDIGIT(c) ? c - '0' : (ISXDIGIT(c) ? toupper(c) - 'A' + 10 : 255 ))[0m
      | [0;1;32m   ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1412:19: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1412 |       param_idx = to_num (str[0]);[0m
      | [0;1;32m                  ^
[0m[1mwordsplit/wordsplit.c:68:4: [0m[0;1;36mnote: [0mexpanded from macro 'to_num'[0m
   68 |   (ISDIGIT(c) ? c - '0' : (ISXDIGIT(c) ? toupper(c) - 'A' + 10 : 255 ))[0m
      | [0;1;32m   ^
[0m[1mwordsplit/wordsplit.c:49:20: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                   ^
[0m[1mwordsplit/wordsplit.c:1506:7: [0m[0;1;36mnote: [0m'is_param' is 1[0m
 1506 |   if (is_param)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:1506:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1506 |   if (is_param)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1508:11: [0m[0;1;36mnote: [0m'param_idx' is >= 0[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1508:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1508:29: [0m[0;1;36mnote: [0mAssuming 'param_idx' is >= field 'ws_paramc'[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1508:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1540:7: [0m[0;1;36mnote: [0m'rc' is not equal to WRDSE_OK[0m
 1540 |   if (rc == WRDSE_OK[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:1541:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1541 |       && (!value || value[0] == 0)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1548:3: [0m[0;1;36mnote: [0mControl jumps to 'case 5:'  at line 1568[0m
 1548 |   switch (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1569:11: [0m[0;1;36mnote: [0m'defstr' is null[0m
 1569 |       if (defstr)[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:1569:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1569 |       if (defstr)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1629:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1629 |       else if (wsp->ws_flags & WRDSF_UNDEF)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1629:12: [0m[0;1;36mnote: [0mTaking false branch[0m
 1629 |       else if (wsp->ws_flags & WRDSF_UNDEF)[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1636:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1636 |           if (wsp->ws_flags & WRDSF_WARNUNDEF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1636:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1636 |           if (wsp->ws_flags & WRDSF_WARNUNDEF)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1639:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1639 |           if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1639:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1639 |           if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1644:12: [0m[0;1;36mnote: [0mAssuming 'value' is non-null[0m
 1644 |               if (!value)[0m
      | [0;1;32m                  ^~~~~~
[0m[1mwordsplit/wordsplit.c:1644:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1644 |               if (!value)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:1648:7: [0m[0;1;36mnote: [0m Execution continues on line 1663[0m
 1648 |       break;[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1663:7: [0m[0;1;36mnote: [0m'value' is non-null[0m
 1663 |   if (value)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:1663:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1663 |   if (value)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1665:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1665 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1665:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1665 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1674:16: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1674 |       else if (*value == 0)[0m
      | [0;1;32m               ^~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1674:12: [0m[0;1;36mnote: [0mTaking true branch[0m
 1674 |       else if (*value == 0)[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1678:8: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1678 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1678:8: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1678 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1678:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1678 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1680:4: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1680 |           wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m          ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1711:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1711 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1712 |         return 1;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:1713:7: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1713 |       wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m      ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1393:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1393 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:35: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                                  ^
[0m[1mwordsplit/wordsplit.c:47:45: [0m[0;1;36mnote: [0mexpanded from macro 'ISLOWER'[0m
   47 | #define ISLOWER(c) ('a' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'z')[0m
      | [0;1;32m                                            ^
[0m[1mwordsplit/wordsplit.c:1400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1407:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1407:48: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m                                               ^
[0m[1mwordsplit/wordsplit.c:49:48: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1407:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1407 |   else if ((wsp->ws_options & WRDSO_PARAMV) && ISDIGIT (str[0]))[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1412:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1412 |       param_idx = to_num (str[0]);[0m
      | [0;1;32m                  ^
[0m[1mwordsplit/wordsplit.c:68:4: [0m[0;1;36mnote: [0mexpanded from macro 'to_num'[0m
   68 |   (ISDIGIT(c) ? c - '0' : (ISXDIGIT(c) ? toupper(c) - 'A' + 10 : 255 ))[0m
      | [0;1;32m   ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1412:19: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1412 |       param_idx = to_num (str[0]);[0m
      | [0;1;32m                  ^
[0m[1mwordsplit/wordsplit.c:68:4: [0m[0;1;36mnote: [0mexpanded from macro 'to_num'[0m
   68 |   (ISDIGIT(c) ? c - '0' : (ISXDIGIT(c) ? toupper(c) - 'A' + 10 : 255 ))[0m
      | [0;1;32m   ^
[0m[1mwordsplit/wordsplit.c:49:20: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                   ^
[0m[1mwordsplit/wordsplit.c:1506:7: [0m[0;1;36mnote: [0m'is_param' is 1[0m
 1506 |   if (is_param)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:1506:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1506 |   if (is_param)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1508:11: [0m[0;1;36mnote: [0m'param_idx' is >= 0[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1508:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1508:29: [0m[0;1;36mnote: [0mAssuming 'param_idx' is >= field 'ws_paramc'[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1508:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1508 |       if (param_idx >= 0 && param_idx < wsp->ws_paramc)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1540:7: [0m[0;1;36mnote: [0m'rc' is not equal to WRDSE_OK[0m
 1540 |   if (rc == WRDSE_OK[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:1541:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1541 |       && (!value || value[0] == 0)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1548:3: [0m[0;1;36mnote: [0mControl jumps to 'case 5:'  at line 1568[0m
 1548 |   switch (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1569:11: [0m[0;1;36mnote: [0m'defstr' is null[0m
 1569 |       if (defstr)[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:1569:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1569 |       if (defstr)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1629:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1629 |       else if (wsp->ws_flags & WRDSF_UNDEF)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1629:12: [0m[0;1;36mnote: [0mTaking false branch[0m
 1629 |       else if (wsp->ws_flags & WRDSF_UNDEF)[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1636:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1636 |           if (wsp->ws_flags & WRDSF_WARNUNDEF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1636:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1636 |           if (wsp->ws_flags & WRDSF_WARNUNDEF)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1639:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1639 |           if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1639:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1639 |           if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1648:7: [0m[0;1;36mnote: [0m Execution continues on line 1663[0m
 1648 |       break;[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1663:7: [0m[0;1;36mnote: [0m'value' is null[0m
 1663 |   if (value)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:1663:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1663 |   if (value)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1707:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1707 |   else if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1711:11: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1711 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1711:11: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1711 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1711:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1711 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1713:7: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1713 |       wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m      ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1717:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1717 |       if (!newnode->v.word)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1718 |         return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                  
[0m[1mwordsplit/wordsplit.c:1719:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1719 |       memcpy (newnode->v.word, start, size);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:1719:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1719 |       memcpy (newnode->v.word, start, size);[0m
      | [0;1;32m      ^~~~~~
[0m[1mwordsplit/wordsplit.c:1724:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1724 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1725 |         return 1;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:1726:7: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1726 |       wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m      ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1393:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1393 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:46:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:48:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:46:48: [0m[0;1;36mnote: [0mexpanded from macro 'ISUPPER'[0m
   46 | #define ISUPPER(c) ('A' <= ((unsigned) (c)) && ((unsigned) (c)) <= 'Z')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1400:7: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1400 |   if (ISVARBEG (str[0]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:54:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISVARBEG'[0m
   54 | #define ISVARBEG(c) (ISALPHA(c) || c == '_')[0m
      | [0;1;32m                     ^
[0m[1mwordsplit/wordsplit.c:48:32: [0m[0;1;36mnote: [0mexpanded from macro 'ISALPHA'[0m
   48 | #define ISALPHA(c) (ISUPPER(c) || ISLOWER(c))[0m
      | [0;1;32m                               ^
[0m[1mwordsplit/wordsplit.c:1402:19: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'len'[0m
 1402 |       for (i = 1; i < len; i++)[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1402:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1405[0m
 1402 |       for (i = 1; i < len; i++)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1506:7: [0m[0;1;36mnote: [0m'is_param' is 0[0m
 1506 |   if (is_param)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:1506:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1506 |   if (is_param)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1521:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1521 |       if (wsp->ws_flags & WRDSF_GETVAR)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1521:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1521 |       if (wsp->ws_flags & WRDSF_GETVAR)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1523:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1523 |           if (wsp->ws_options & WRDSO_GETVARPREF)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1523:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1523 |           if (wsp->ws_options & WRDSO_GETVARPREF)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1531:13: [0m[0;1;36mnote: [0mCalling 'wsplt_env_lookup'[0m
 1531 |               rc = wsplt_env_lookup (wsp, str, i, &value);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1096:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1096 |   if (wsp->ws_flags & WRDSF_ENV)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1096:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1096 |   if (wsp->ws_flags & WRDSF_ENV)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1108:3: [0m[0;1;36mnote: [0mReturning without writing to '*ret', which participates in a condition later[0m
 1108 |   return WRDSE_UNDEF;[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1531:13: [0m[0;1;36mnote: [0mReturning from 'wsplt_env_lookup'[0m
 1531 |               rc = wsplt_env_lookup (wsp, str, i, &value);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1532:12: [0m[0;1;36mnote: [0m'rc' is equal to WRDSE_UNDEF[0m
 1532 |               if (rc == WRDSE_UNDEF)[0m
      | [0;1;32m                  ^~
[0m[1mwordsplit/wordsplit.c:1532:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1532 |               if (rc == WRDSE_UNDEF)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:1533:8: [0m[0;1;36mnote: [0mCalling 'wsplt_env_getvar'[0m
 1533 |                 rc = wsplt_env_getvar (wsp, str, i, &value);[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1115:10: [0m[0;1;36mnote: [0mValue assigned to 'value', which participates in a condition later[0m
 1115 |   return wsp->ws_getvar (ret, name, len, wsp->ws_closure);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1115:3: [0m[0;1;36mnote: [0mReturning value, which participates in a condition later[0m
 1115 |   return wsp->ws_getvar (ret, name, len, wsp->ws_closure);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1533:8: [0m[0;1;36mnote: [0mReturning from 'wsplt_env_getvar'[0m
 1533 |                 rc = wsplt_env_getvar (wsp, str, i, &value);[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1540:7: [0m[0;1;36mnote: [0mAssuming 'rc' is equal to WRDSE_OK[0m
 1540 |   if (rc == WRDSE_OK[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1540:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1541:11: [0m[0;1;36mnote: [0mAssuming 'value' is null[0m
 1541 |       && (!value || value[0] == 0)[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:1541:18: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1541 |       && (!value || value[0] == 0)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:1542:10: [0m[0;1;36mnote: [0m'defstr' is null[0m
 1542 |       && defstr && defstr[-1] == ':')[0m
      | [0;1;32m         ^~~~~~
[0m[1mwordsplit/wordsplit.c:1542:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1542 |       && defstr && defstr[-1] == ':')[0m
      | [0;1;32m                ^
[0m[1mwordsplit/wordsplit.c:1548:3: [0m[0;1;36mnote: [0mControl jumps to 'case 0:'  at line 1550[0m
 1548 |   switch (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1551:11: [0m[0;1;36mnote: [0m'defstr' is null[0m
 1551 |       if (defstr && *defstr == '+')[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:1551:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1551 |       if (defstr && *defstr == '+')[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:1566:7: [0m[0;1;36mnote: [0m Execution continues on line 1663[0m
 1566 |       break;[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1663:7: [0m[0;1;36mnote: [0m'value' is null[0m
 1663 |   if (value)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:1663:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1663 |   if (value)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1707:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1707 |   else if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1707:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1707 |   else if (wsp->ws_flags & WRDSF_KEEPUNDEF)[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1724:11: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1724 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1724:11: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1724 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1724:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1724 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1726:7: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1726 |       wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m      ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1766:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1766 |           if (tail != node)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1767 |             tail->flags |= _WSNF_JOIN;[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:1768:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1768 |           if (node_split_prefix (wsp, &tail, node, off, n, _WSNF_JOIN))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 1769 |             return 1;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:1772:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1772 |                          node->flags & (_WSNF_JOIN | _WSNF_QUOTE)))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1773 |             return 1;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:1780:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1780 |       if (tail != node)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1781 |         tail->flags |= _WSNF_JOIN;[0m
      | [0;1;32m                                  
[0m[1mwordsplit/wordsplit.c:1783:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1783 |                              node->flags & (_WSNF_JOIN|_WSNF_QUOTE)))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1784 |         return 1;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:1801:37: [0m[0;1;35mwarning: [0m[1mUse of memory after it is freed [clang-analyzer-unix.Malloc][0m
 1801 |       struct wordsplit_node *next = p->next;[0m
      | [0;1;32m                                    ^
[0m[1mwordsplit/wordsplit.c:1817:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1817 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1820:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1820:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1821:6: [0m[0;1;36mnote: [0mCalling 'node_expand'[0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is < 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1757:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1757:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1762:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is >= 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1778[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1778:7: [0m[0;1;36mnote: [0mAssuming 'p' is > 'str'[0m
 1778 |   if (p > str)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1778:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1778 |   if (p > str)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1780:11: [0m[0;1;36mnote: [0m'tail' is equal to 'node'[0m
 1780 |       if (tail != node)[0m
      | [0;1;32m          ^~~~
[0m[1mwordsplit/wordsplit.c:1780:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1780 |       if (tail != node)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1782:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1782 |       if (node_split_prefix (wsp, &tail, node, off, p - str,[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1786:7: [0m[0;1;36mnote: [0m'tail' is not equal to 'node'[0m
 1786 |   if (tail != node)[0m
      | [0;1;32m      ^~~~
[0m[1mwordsplit/wordsplit.c:1786:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1786 |   if (tail != node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1788:7: [0m[0;1;36mnote: [0mCalling 'wsnode_remove'[0m
 1788 |       wsnode_remove (wsp, node);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:519:7: [0m[0;1;36mnote: [0mAssuming 'p' is non-null[0m
  519 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:519:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  519 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:522:18: [0m[0;1;36mnote: [0mField 'next' is non-null[0m
  522 |       if (!node->next)[0m
      | [0;1;32m                 ^
[0m[1mwordsplit/wordsplit.c:522:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  522 |       if (!node->next)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:529:7: [0m[0;1;36mnote: [0m'p' is non-null[0m
  529 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:529:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  529 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:534:3: [0m[0;1;36mnote: [0mCalling 'wsnode_free'[0m
  534 |   wsnode_free (node);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:496:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  496 |   if ((p->flags & (_WSNF_WORD|_WSNF_CONST)) == _WSNF_WORD)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:496:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  496 |   if ((p->flags & (_WSNF_WORD|_WSNF_CONST)) == _WSNF_WORD)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:498:3: [0m[0;1;36mnote: [0mMemory is released[0m
  498 |   free (p);[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:534:3: [0m[0;1;36mnote: [0mReturning; memory was released via 1st parameter[0m
  534 |   wsnode_free (node);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1788:7: [0m[0;1;36mnote: [0mReturning; memory was released via 2nd parameter[0m
 1788 |       wsnode_remove (wsp, node);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1821:6: [0m[0;1;36mnote: [0mReturning; memory was released via 2nd parameter[0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1821:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m        ^
[0m[1mwordsplit/wordsplit.c:1817:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1826[0m
 1817 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1826:3: [0m[0;1;36mnote: [0mCalling 'wsnode_nullelim'[0m
 1826 |   wsnode_nullelim (wsp);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1799:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1799 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1801:37: [0m[0;1;36mnote: [0mUse of memory after it is freed[0m
 1801 |       struct wordsplit_node *next = p->next;[0m
      | [0;1;32m                                    ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1802:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1802 |       if (p->flags & _WSNF_DELIM && p->prev)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1803 |         p->prev->flags &= ~_WSNF_JOIN;[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:1820:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1820 |       if (!(p->flags & (_WSNF_NOEXPAND|_WSNF_DELIM)))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
 1822 |           return 1;[0m
      | [0;1;32m                   
[0m[1mwordsplit/wordsplit.c:1821:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1821 |         if (node_expand (wsp, p, begin_var_p, expvar))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1822 |           return 1;[0m
      | [0;1;32m                   
[0m[1mwordsplit/wordsplit.c:1866:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1866 |   if (rc == WRDSE_NOSPACE)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1867 |     return _wsplt_nomem (wsp);[0m
 1868 |   else if (rc)[0m
      | [0;32m  } 
[0m[1mwordsplit/wordsplit.c:1872:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1872 |           if (wsp->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1873 |             free (wsp->ws_usererr);[0m
      | [0;1;32m                                   
[0m[1mwordsplit/wordsplit.c:1884:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1884 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1885 |             return 1;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:1886:4: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1886 |           wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1940:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1940 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1943:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1943:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1944:6: [0m[0;1;36mnote: [0mCalling 'node_expand'[0m
 1944 |         if (node_expand (wsp, p, begin_cmd_p, expcmd))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is < 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1757:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1757:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1762:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1766:8: [0m[0;1;36mnote: [0m'tail' is equal to 'node'[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m              ^~~~
[0m[1mwordsplit/wordsplit.c:1766:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1768:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1768 |           if (node_split_prefix (wsp, &tail, node, off, n, _WSNF_JOIN))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1771:8: [0m[0;1;36mnote: [0mCalling 'expcmd'[0m
 1771 |           if (ws_exp_fn (wsp, p, slen - n, &tail, &p,[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1772 |                          node->flags & (_WSNF_JOIN | _WSNF_QUOTE)))[0m
      | [0;1;32m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1843:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1843 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1856:8: [0m[0;1;36mnote: [0mCalling '_wsplt_subsplit'[0m
 1856 |   rc = _wsplt_subsplit (wsp, &ws, str, j, WRDSF_WS | WRDSF_QUOTE, 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:167:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  167 |   if (!(flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:173:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:173:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:178:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:178:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:193:8: [0m[0;1;36mnote: [0mCalling 'wordsplit_init'[0m
  193 |   rc = wordsplit_init (wss, str, len, flags);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:260:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:260:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:263:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:263:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:270:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:270:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:276:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  276 |   if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:276:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  276 |   if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:292:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  292 |   if (!(wsp->ws_flags & WRDSF_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:292:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  292 |   if (!(wsp->ws_flags & WRDSF_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:295:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  295 |   if (!(wsp->ws_flags & WRDSF_DELIM))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  295 |   if (!(wsp->ws_flags & WRDSF_DELIM))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:301:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  301 |   if (!(wsp->ws_flags & WRDSF_COMMENT))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:301:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  301 |   if (!(wsp->ws_flags & WRDSF_COMMENT))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:304:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  304 |   if (!(wsp->ws_flags & WRDSF_CLOSURE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:304:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  304 |   if (!(wsp->ws_flags & WRDSF_CLOSURE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:307:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  307 |   if (!(wsp->ws_flags & WRDSF_OPTIONS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:307:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  307 |   if (!(wsp->ws_flags & WRDSF_OPTIONS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:310:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  310 |   if (wsp->ws_flags & WRDSF_ESCAPE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:310:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  310 |   if (wsp->ws_flags & WRDSF_ESCAPE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:319:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  319 |       if (wsp->ws_flags & WRDSF_CESCAPES)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:319:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  319 |       if (wsp->ws_flags & WRDSF_CESCAPES)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:334:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  334 |   if (!(wsp->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:334:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |   if (!(wsp->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:342:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  342 |   if (wsp->ws_options & WRDSO_NAMECHAR)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:342:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  342 |   if (wsp->ws_options & WRDSO_NAMECHAR)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:353:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  353 |   if (wsp->ws_flags & WRDSF_REUSE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:353:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  353 |   if (wsp->ws_flags & WRDSF_REUSE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:361:3: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  361 |   return 0;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:193:8: [0m[0;1;36mnote: [0mReturning from 'wordsplit_init'[0m
  193 |   rc = wordsplit_init (wss, str, len, flags);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:194:7: [0m[0;1;36mnote: [0m'rc' is 0[0m
  194 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  194 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:198:7: [0m[0;1;36mnote: [0mAssuming 'rc' is 0[0m
  198 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:203:7: [0m[0;1;36mnote: [0m'finalize' is 1[0m
  203 |   if (finalize)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:203:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  203 |   if (finalize)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:205:12: [0m[0;1;36mnote: [0mCalling 'wordsplit_finish'[0m
  205 |       rc = wordsplit_finish (wss);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:800:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 861[0m
  800 |   while (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:861:7: [0m[0;1;36mnote: [0m'p' is null[0m
  861 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:861:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  861 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:871:7: [0m[0;1;36mnote: [0m'n' is equal to 0[0m
  871 |   if (n == 0)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:871:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  871 |   if (n == 0)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:874:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  874 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:874:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  874 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:894:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  894 |       if (wsp->ws_flags & WRDSF_NOSPLIT)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:894:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  894 |       if (wsp->ws_flags & WRDSF_NOSPLIT)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:902:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  902 |   if (alloc_space (wsp, n + 1))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:902:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  902 |   if (alloc_space (wsp, n + 1))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:905:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 928[0m
  905 |   while (wsp->ws_head)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:929:3: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  929 |   return 0;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:205:12: [0m[0;1;36mnote: [0mReturning from 'wordsplit_finish'[0m
  205 |       rc = wordsplit_finish (wss);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:208:3: [0m[0;1;36mnote: [0mReturning zero (loaded from 'rc'), which participates in a condition later[0m
  208 |   return rc;[0m
      | [0;1;32m  ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1856:8: [0m[0;1;36mnote: [0mReturning from '_wsplt_subsplit'[0m
 1856 |   rc = _wsplt_subsplit (wsp, &ws, str, j, WRDSF_WS | WRDSF_QUOTE, 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1857:7: [0m[0;1;36mnote: [0m'rc' is 0[0m
 1857 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:1857:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1857 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1866:7: [0m[0;1;36mnote: [0mAssuming 'rc' is not equal to WRDSE_NOSPACE[0m
 1866 |   if (rc == WRDSE_NOSPACE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1866:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1866 |   if (rc == WRDSE_NOSPACE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1868:12: [0m[0;1;36mnote: [0mAssuming 'rc' is 0[0m
 1868 |   else if (rc)[0m
      | [0;1;32m           ^~
[0m[1mwordsplit/wordsplit.c:1868:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1868 |   else if (rc)[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1880:7: [0m[0;1;36mnote: [0mAssuming 'value' is non-null[0m
 1880 |   if (value)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:1880:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1880 |   if (value)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1882:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1882 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1882:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1882 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1884:8: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1884 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1884:8: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1884 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1884:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1884 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1884:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1884 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1886:4: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1886 |           wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m          ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1895:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1895 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1896 |             return 1;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:1897:4: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1897 |           wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1940:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1940 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1943:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1943:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1944:6: [0m[0;1;36mnote: [0mCalling 'node_expand'[0m
 1944 |         if (node_expand (wsp, p, begin_cmd_p, expcmd))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is < 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1757:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1757:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1762:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1766:8: [0m[0;1;36mnote: [0m'tail' is equal to 'node'[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m              ^~~~
[0m[1mwordsplit/wordsplit.c:1766:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1768:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1768 |           if (node_split_prefix (wsp, &tail, node, off, n, _WSNF_JOIN))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1771:8: [0m[0;1;36mnote: [0mCalling 'expcmd'[0m
 1771 |           if (ws_exp_fn (wsp, p, slen - n, &tail, &p,[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1772 |                          node->flags & (_WSNF_JOIN | _WSNF_QUOTE)))[0m
      | [0;1;32m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1843:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1843 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1856:8: [0m[0;1;36mnote: [0mCalling '_wsplt_subsplit'[0m
 1856 |   rc = _wsplt_subsplit (wsp, &ws, str, j, WRDSF_WS | WRDSF_QUOTE, 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:167:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  167 |   if (!(flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:173:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:173:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:178:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:178:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:193:8: [0m[0;1;36mnote: [0mCalling 'wordsplit_init'[0m
  193 |   rc = wordsplit_init (wss, str, len, flags);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:260:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:260:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:263:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:263:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:270:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:270:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:276:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  276 |   if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:276:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  276 |   if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:292:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  292 |   if (!(wsp->ws_flags & WRDSF_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:292:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  292 |   if (!(wsp->ws_flags & WRDSF_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:295:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  295 |   if (!(wsp->ws_flags & WRDSF_DELIM))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  295 |   if (!(wsp->ws_flags & WRDSF_DELIM))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:301:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  301 |   if (!(wsp->ws_flags & WRDSF_COMMENT))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:301:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  301 |   if (!(wsp->ws_flags & WRDSF_COMMENT))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:304:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  304 |   if (!(wsp->ws_flags & WRDSF_CLOSURE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:304:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  304 |   if (!(wsp->ws_flags & WRDSF_CLOSURE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:307:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  307 |   if (!(wsp->ws_flags & WRDSF_OPTIONS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:307:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  307 |   if (!(wsp->ws_flags & WRDSF_OPTIONS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:310:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  310 |   if (wsp->ws_flags & WRDSF_ESCAPE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:310:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  310 |   if (wsp->ws_flags & WRDSF_ESCAPE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:319:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  319 |       if (wsp->ws_flags & WRDSF_CESCAPES)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:319:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  319 |       if (wsp->ws_flags & WRDSF_CESCAPES)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:334:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  334 |   if (!(wsp->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:334:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |   if (!(wsp->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:342:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  342 |   if (wsp->ws_options & WRDSO_NAMECHAR)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:342:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  342 |   if (wsp->ws_options & WRDSO_NAMECHAR)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:353:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  353 |   if (wsp->ws_flags & WRDSF_REUSE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:353:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  353 |   if (wsp->ws_flags & WRDSF_REUSE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:361:3: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  361 |   return 0;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:193:8: [0m[0;1;36mnote: [0mReturning from 'wordsplit_init'[0m
  193 |   rc = wordsplit_init (wss, str, len, flags);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:194:7: [0m[0;1;36mnote: [0m'rc' is 0[0m
  194 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  194 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:198:7: [0m[0;1;36mnote: [0mAssuming 'rc' is 0[0m
  198 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:203:7: [0m[0;1;36mnote: [0m'finalize' is 1[0m
  203 |   if (finalize)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:203:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  203 |   if (finalize)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:205:12: [0m[0;1;36mnote: [0mCalling 'wordsplit_finish'[0m
  205 |       rc = wordsplit_finish (wss);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:800:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 861[0m
  800 |   while (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:861:7: [0m[0;1;36mnote: [0m'p' is null[0m
  861 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:861:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  861 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:871:7: [0m[0;1;36mnote: [0m'n' is equal to 0[0m
  871 |   if (n == 0)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:871:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  871 |   if (n == 0)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:874:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  874 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:874:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  874 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:894:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  894 |       if (wsp->ws_flags & WRDSF_NOSPLIT)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:894:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  894 |       if (wsp->ws_flags & WRDSF_NOSPLIT)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:902:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  902 |   if (alloc_space (wsp, n + 1))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:902:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  902 |   if (alloc_space (wsp, n + 1))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:905:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 928[0m
  905 |   while (wsp->ws_head)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:929:3: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  929 |   return 0;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:205:12: [0m[0;1;36mnote: [0mReturning from 'wordsplit_finish'[0m
  205 |       rc = wordsplit_finish (wss);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:208:3: [0m[0;1;36mnote: [0mReturning zero (loaded from 'rc'), which participates in a condition later[0m
  208 |   return rc;[0m
      | [0;1;32m  ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1856:8: [0m[0;1;36mnote: [0mReturning from '_wsplt_subsplit'[0m
 1856 |   rc = _wsplt_subsplit (wsp, &ws, str, j, WRDSF_WS | WRDSF_QUOTE, 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1857:7: [0m[0;1;36mnote: [0m'rc' is 0[0m
 1857 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:1857:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1857 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1866:7: [0m[0;1;36mnote: [0mAssuming 'rc' is not equal to WRDSE_NOSPACE[0m
 1866 |   if (rc == WRDSE_NOSPACE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1866:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1866 |   if (rc == WRDSE_NOSPACE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1868:12: [0m[0;1;36mnote: [0mAssuming 'rc' is 0[0m
 1868 |   else if (rc)[0m
      | [0;1;32m           ^~
[0m[1mwordsplit/wordsplit.c:1868:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1868 |   else if (rc)[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1880:7: [0m[0;1;36mnote: [0mAssuming 'value' is non-null[0m
 1880 |   if (value)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:1880:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1880 |   if (value)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1882:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1882 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1882:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1882 |       if (flg & _WSNF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1891:16: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1891 |       else if (*value == 0)[0m
      | [0;1;32m               ^~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1891:12: [0m[0;1;36mnote: [0mTaking true branch[0m
 1891 |       else if (*value == 0)[0m
      | [0;1;32m           ^
[0m[1mwordsplit/wordsplit.c:1895:8: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1895 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1895:8: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1895 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1895:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1895 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1895:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1895 |           if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1897:4: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1897 |           wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m          ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1926:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1926 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1927 |         return 1;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:1928:7: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1928 |       wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1940:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1940 |   for (p = wsp->ws_head; p;)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1943:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1943:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1944:6: [0m[0;1;36mnote: [0mCalling 'node_expand'[0m
 1944 |         if (node_expand (wsp, p, begin_cmd_p, expcmd))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:17: [0m[0;1;36mnote: [0mAssuming 'p' is < 'end'[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwordsplit/wordsplit.c:1755:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1755 |   for (p = str; p < end; p++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1757:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1757:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1757 |       if (*p == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1762:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwordsplit/wordsplit.c:1762:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1762 |       if (*p == '$' && beg_p (p[1]))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1766:8: [0m[0;1;36mnote: [0m'tail' is equal to 'node'[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m              ^~~~
[0m[1mwordsplit/wordsplit.c:1766:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1766 |           if (tail != node)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1768:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1768 |           if (node_split_prefix (wsp, &tail, node, off, n, _WSNF_JOIN))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:1771:8: [0m[0;1;36mnote: [0mCalling 'expcmd'[0m
 1771 |           if (ws_exp_fn (wsp, p, slen - n, &tail, &p,[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1772 |                          node->flags & (_WSNF_JOIN | _WSNF_QUOTE)))[0m
      | [0;1;32m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1843:3: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 1843 |   struct wordsplit_node *newnode;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1849:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1849 |   if (find_closing_paren (str, 0, len, &j, "()"))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1856:8: [0m[0;1;36mnote: [0mCalling '_wsplt_subsplit'[0m
 1856 |   rc = _wsplt_subsplit (wsp, &ws, str, j, WRDSF_WS | WRDSF_QUOTE, 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:167:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  167 |   if (!(flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:173:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:173:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |   if (!(flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:178:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:178:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  178 |   if ((flags & (WRDSF_NOVAR|WRDSF_NOCMD)) != (WRDSF_NOVAR|WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:193:8: [0m[0;1;36mnote: [0mCalling 'wordsplit_init'[0m
  193 |   rc = wordsplit_init (wss, str, len, flags);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:258:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  258 |   if (!(wsp->ws_flags & WRDSF_ALLOC_DIE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:260:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:260:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  260 |   if (!(wsp->ws_flags & WRDSF_ERROR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:263:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:263:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  263 |   if (!(wsp->ws_flags & WRDSF_NOVAR))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:270:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:270:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  270 |   if (!(wsp->ws_flags & WRDSF_NOCMD))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:276:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  276 |   if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:276:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  276 |   if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:292:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  292 |   if (!(wsp->ws_flags & WRDSF_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:292:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  292 |   if (!(wsp->ws_flags & WRDSF_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:295:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  295 |   if (!(wsp->ws_flags & WRDSF_DELIM))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  295 |   if (!(wsp->ws_flags & WRDSF_DELIM))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:301:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  301 |   if (!(wsp->ws_flags & WRDSF_COMMENT))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:301:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  301 |   if (!(wsp->ws_flags & WRDSF_COMMENT))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:304:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  304 |   if (!(wsp->ws_flags & WRDSF_CLOSURE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:304:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  304 |   if (!(wsp->ws_flags & WRDSF_CLOSURE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:307:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  307 |   if (!(wsp->ws_flags & WRDSF_OPTIONS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:307:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  307 |   if (!(wsp->ws_flags & WRDSF_OPTIONS))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:310:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  310 |   if (wsp->ws_flags & WRDSF_ESCAPE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:310:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  310 |   if (wsp->ws_flags & WRDSF_ESCAPE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:319:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  319 |       if (wsp->ws_flags & WRDSF_CESCAPES)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:319:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  319 |       if (wsp->ws_flags & WRDSF_CESCAPES)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:334:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  334 |   if (!(wsp->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:334:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |   if (!(wsp->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:342:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  342 |   if (wsp->ws_options & WRDSO_NAMECHAR)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:342:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  342 |   if (wsp->ws_options & WRDSO_NAMECHAR)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:353:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  353 |   if (wsp->ws_flags & WRDSF_REUSE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:353:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  353 |   if (wsp->ws_flags & WRDSF_REUSE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:361:3: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  361 |   return 0;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:193:8: [0m[0;1;36mnote: [0mReturning from 'wordsplit_init'[0m
  193 |   rc = wordsplit_init (wss, str, len, flags);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:194:7: [0m[0;1;36mnote: [0m'rc' is 0[0m
  194 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  194 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:198:7: [0m[0;1;36mnote: [0mAssuming 'rc' is 0[0m
  198 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:203:7: [0m[0;1;36mnote: [0m'finalize' is 1[0m
  203 |   if (finalize)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:203:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  203 |   if (finalize)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:205:12: [0m[0;1;36mnote: [0mCalling 'wordsplit_finish'[0m
  205 |       rc = wordsplit_finish (wss);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:800:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 861[0m
  800 |   while (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:861:7: [0m[0;1;36mnote: [0m'p' is null[0m
  861 |   if (p)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:861:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  861 |   if (p)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:871:7: [0m[0;1;36mnote: [0m'n' is equal to 0[0m
  871 |   if (n == 0)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:871:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  871 |   if (n == 0)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:874:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  874 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:874:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  874 |       if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:894:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  894 |       if (wsp->ws_flags & WRDSF_NOSPLIT)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:894:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  894 |       if (wsp->ws_flags & WRDSF_NOSPLIT)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:902:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  902 |   if (alloc_space (wsp, n + 1))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:902:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  902 |   if (alloc_space (wsp, n + 1))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:905:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 928[0m
  905 |   while (wsp->ws_head)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:929:3: [0m[0;1;36mnote: [0mReturning zero, which participates in a condition later[0m
  929 |   return 0;[0m
      | [0;1;32m  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:205:12: [0m[0;1;36mnote: [0mReturning from 'wordsplit_finish'[0m
  205 |       rc = wordsplit_finish (wss);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:208:3: [0m[0;1;36mnote: [0mReturning zero (loaded from 'rc'), which participates in a condition later[0m
  208 |   return rc;[0m
      | [0;1;32m  ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1856:8: [0m[0;1;36mnote: [0mReturning from '_wsplt_subsplit'[0m
 1856 |   rc = _wsplt_subsplit (wsp, &ws, str, j, WRDSF_WS | WRDSF_QUOTE, 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1857:7: [0m[0;1;36mnote: [0m'rc' is 0[0m
 1857 |   if (rc)[0m
      | [0;1;32m      ^~
[0m[1mwordsplit/wordsplit.c:1857:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1857 |   if (rc)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1866:7: [0m[0;1;36mnote: [0mAssuming 'rc' is not equal to WRDSE_NOSPACE[0m
 1866 |   if (rc == WRDSE_NOSPACE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1866:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1866 |   if (rc == WRDSE_NOSPACE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1868:12: [0m[0;1;36mnote: [0mAssuming 'rc' is 0[0m
 1868 |   else if (rc)[0m
      | [0;1;32m           ^~
[0m[1mwordsplit/wordsplit.c:1868:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1868 |   else if (rc)[0m
      | [0;1;32m       ^
[0m[1mwordsplit/wordsplit.c:1880:7: [0m[0;1;36mnote: [0mAssuming 'value' is null[0m
 1880 |   if (value)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:1880:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1880 |   if (value)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:1926:11: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 1926 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:1926:11: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 1926 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1926:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1926 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:1926:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1926 |       if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:1928:7: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1928 |       wsnode_insert (wsp, newnode, *ptail, 0);[0m
      | [0;1;32m      ^                   ~~~~~~~
[0m[1mwordsplit/wordsplit.c:1943:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1943 |       if (!(p->flags & _WSNF_NOEXPAND))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1944 |         if (node_expand (wsp, p, begin_cmd_p, expcmd))[0m
 1945 |           return 1;[0m
      | [0;1;32m                   
[0m[1mwordsplit/wordsplit.c:1944:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1944 |         if (node_expand (wsp, p, begin_cmd_p, expcmd))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1945 |           return 1;[0m
      | [0;1;32m                   
[0m[1mwordsplit/wordsplit.c:1969:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1969 |                n++)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1970 |             ;[0m
      | [0;1;32m             
[0m[1mwordsplit/wordsplit.c:1974:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1974 |       while (p->next && (p->flags & _WSNF_JOIN))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1975 |         p = p->next;[0m
      | [0;1;32m                    
[0m[1mwordsplit/wordsplit.c:1977:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1977 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1978 |         continue;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:1982:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1982 |            n > p->v.segm.beg && ISWS (wsp->ws_input[n - 1]); n--);[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m[1mwordsplit/wordsplit.c:1984:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1984 |       if (p->v.segm.beg == p->v.segm.end)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1985 |         p->flags |= _WSNF_NULL;[0m
      | [0;1;32m                               
[0m[1mwordsplit/wordsplit.c:2003:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2003 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2004 |         continue;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:2014:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2014 |           for (i = 1; i < slen && str[i] != '/'; i++)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2015 |             ;[0m
      | [0;1;32m             
[0m[1mwordsplit/wordsplit.c:2016:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2016 |           if (i == slen)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2017 |             continue;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:2032:8: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2032 |               memcpy (uname, str + 1, i);[0m
      | [0;1;32m              ^~~~~~
[0m[1mwordsplit/wordsplit.c:2032:8: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2032 |               memcpy (uname, str + 1, i);[0m
      | [0;1;32m              ^~~~~~
[0m[1mwordsplit/wordsplit.c:2036:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2036 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2037 |             pw = getpwuid (getuid ());[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:2039:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2039 |           if (!pw)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2040 |             continue;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:2052:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2052 |           memcpy (newstr, pw->pw_dir, dlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:2052:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2052 |           memcpy (newstr, pw->pw_dir, dlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:2053:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2053 |           memcpy (newstr + dlen, str + i + 1, slen - i - 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:2053:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2053 |           memcpy (newstr + dlen, str + i + 1, slen - i - 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:2055:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2055 |           if (p->flags & _WSNF_WORD)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2056 |             free (p->v.word);[0m
      | [0;1;32m                             
[0m[1mwordsplit/wordsplit.c:2070:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2070 |       if (strchr ("*?[", *s++))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2071 |         return 1;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:2086:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2086 |   if (wsp->ws_options & WRDSO_DOTGLOB)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2087 |     flags = GLOB_PERIOD;[0m
      | [0;1;32m                        
[0m[1mwordsplit/wordsplit.c:2096:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2096 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2097 |         continue;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:2111:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2111 |               if (!p)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2112 |                 return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                          
[0m[1mwordsplit/wordsplit.c:2116:4: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 2116 |           memcpy (pattern, str, slen);[0m
      | [0;1;32m          ^       ~~~~~~~
[0m[1mwordsplit/wordsplit.c:2080:3: [0m[0;1;36mnote: [0m'pattern' initialized to a null pointer value[0m
 2080 |   char *pattern = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2086:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2086 |   if (wsp->ws_options & WRDSO_DOTGLOB)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2086:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2086 |   if (wsp->ws_options & WRDSO_DOTGLOB)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2090:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2090 |   for (p = wsp->ws_head; p; p = next)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2096:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2096 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2096:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2096 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2102:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2102 |       if (isglob (str, slen))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2108:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2108 |           if (slen + 1 > patsize)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2108:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 2108 |           if (slen + 1 > patsize)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2116:4: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 2116 |           memcpy (pattern, str, slen);[0m
      | [0;1;32m          ^       ~~~~~~~
[0m[1mwordsplit/wordsplit.c:2116:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2116 |           memcpy (pattern, str, slen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:2116:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2116 |           memcpy (pattern, str, slen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mwordsplit/wordsplit.c:2122:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2122 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mwordsplit/wordsplit.c:2125:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2125 |               free (pattern);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 2126 |               return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mwordsplit/wordsplit.c:2129:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2129 |               if (wsp->ws_options & WRDSO_NULLGLOB)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mwordsplit/wordsplit.c:2136:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2136 |                   if (wsp->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2137 |                     free (wsp->ws_usererr);[0m
      | [0;1;32m                                           
[0m[1mwordsplit/wordsplit.c:2138:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2138 |                   snprintf (buf, sizeof (buf), _("no files match pattern %s"),[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:2138:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 2138 |                   snprintf (buf, sizeof (buf), _("no files match pattern %s"),[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:2142:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2142 |                   if (!wsp->ws_usererr)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2143 |                     return _wsplt_nomem (wsp);[0m
 2144 |                   else[0m
      | [0;32m                  } 
[0m[1mwordsplit/wordsplit.c:2144:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2144 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2145 |                     return _wsplt_seterr (wsp, WRDSE_USERERR);[0m
      | [0;1;32m                                                              
[0m[1mwordsplit/wordsplit.c:2150:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2150 |               free (pattern);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 2151 |               return _wsplt_setctxerr (wsp, WRDSE_GLOBERR, pattern, slen);[0m
      | [0;1;32m                                                                         
[0m      | [0;32m                                                                         ;} 
[0m[1mwordsplit/wordsplit.c:2151:15: [0m[0;1;35mwarning: [0m[1mUse of memory after it is freed [clang-analyzer-unix.Malloc][0m
 2151 |               return _wsplt_setctxerr (wsp, WRDSE_GLOBERR, pattern, slen);[0m
      | [0;1;32m                     ^                                     ~~~~~~~
[0m[1mwordsplit/wordsplit.c:2086:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2086 |   if (wsp->ws_options & WRDSO_DOTGLOB)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2086:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2086 |   if (wsp->ws_options & WRDSO_DOTGLOB)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2090:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2090 |   for (p = wsp->ws_head; p; p = next)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2096:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2096 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2096:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2096 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2102:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2102 |       if (isglob (str, slen))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2108:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 2108 |           if (slen + 1 > patsize)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2110:18: [0m[0;1;36mnote: [0mMemory is allocated[0m
 2110 |               char *p = realloc (pattern, slen + 1);[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2111:12: [0m[0;1;36mnote: [0mAssuming 'p' is non-null[0m
 2111 |               if (!p)[0m
      | [0;1;32m                  ^~
[0m[1mwordsplit/wordsplit.c:2111:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 2111 |               if (!p)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2119:4: [0m[0;1;36mnote: [0mControl jumps to the 'default' case at line 2149[0m
 2119 |           switch (glob (pattern, flags, NULL, &g))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2150:8: [0m[0;1;36mnote: [0mMemory is released[0m
 2150 |               free (pattern);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2151:15: [0m[0;1;36mnote: [0mUse of memory after it is freed[0m
 2151 |               return _wsplt_setctxerr (wsp, WRDSE_GLOBERR, pattern, slen);[0m
      | [0;1;32m                     ^                                     ~~~~~~~
[0m[1mwordsplit/wordsplit.c:2160:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2160 |               if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2161 |                 return 1;[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:2163:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2163 |               if (!newstr)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2164 |                 return _wsplt_nomem (wsp);[0m
      | [0;1;32m                                          
[0m[1mwordsplit/wordsplit.c:2164:10: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'newnode' [clang-analyzer-unix.Malloc][0m
 2164 |                 return _wsplt_nomem (wsp);[0m
      | [0;1;32m                       ^
[0m[1mwordsplit/wordsplit.c:2086:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2086 |   if (wsp->ws_options & WRDSO_DOTGLOB)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2086:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2086 |   if (wsp->ws_options & WRDSO_DOTGLOB)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2090:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2090 |   for (p = wsp->ws_head; p; p = next)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2096:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2096 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2096:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2096 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2102:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2102 |       if (isglob (str, slen))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2108:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 2108 |           if (slen + 1 > patsize)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2111:12: [0m[0;1;36mnote: [0mAssuming 'p' is non-null[0m
 2111 |               if (!p)[0m
      | [0;1;32m                  ^~
[0m[1mwordsplit/wordsplit.c:2111:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 2111 |               if (!p)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2119:4: [0m[0;1;36mnote: [0mControl jumps to 'case 0:'  at line 2121[0m
 2119 |           switch (glob (pattern, flags, NULL, &g))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2122:8: [0m[0;1;36mnote: [0m Execution continues on line 2154[0m
 2122 |               break;[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2155:16: [0m[0;1;36mnote: [0mAssuming 'i' is < field 'gl_pathc'[0m
 2155 |           for (i = 0; i < g.gl_pathc; i++)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2155:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2155 |           for (i = 0; i < g.gl_pathc; i++)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2160:12: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 2160 |               if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:486:33: [0m[0;1;36mnote: [0mMemory is allocated[0m
  486 |   struct wordsplit_node *node = calloc (1, sizeof (*node));[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is non-null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2160:12: [0m[0;1;36mnote: [0mReturned allocated memory via 2nd parameter[0m
 2160 |               if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2160:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 2160 |               if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2163:12: [0m[0;1;36mnote: [0mAssuming 'newstr' is null[0m
 2163 |               if (!newstr)[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mwordsplit/wordsplit.c:2163:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 2163 |               if (!newstr)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2164:10: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'newnode'[0m
 2164 |                 return _wsplt_nomem (wsp);[0m
      | [0;1;32m                       ^
[0m[1mwordsplit/wordsplit.c:2165:24: [0m[0;1;35mwarning: [0m[1mDereference of undefined pointer value [clang-analyzer-core.NullDereference][0m
 2165 |               newnode->v.word = newstr;[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~^~~~~~~~
[0m[1mwordsplit/wordsplit.c:2086:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2086 |   if (wsp->ws_options & WRDSO_DOTGLOB)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2086:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2086 |   if (wsp->ws_options & WRDSO_DOTGLOB)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2090:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2090 |   for (p = wsp->ws_head; p; p = next)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2096:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2096 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2096:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2096 |       if (p->flags & _WSNF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2102:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2102 |       if (isglob (str, slen))[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2108:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2108 |           if (slen + 1 > patsize)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2108:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 2108 |           if (slen + 1 > patsize)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2111:12: [0m[0;1;36mnote: [0mAssuming 'p' is non-null[0m
 2111 |               if (!p)[0m
      | [0;1;32m                  ^~
[0m[1mwordsplit/wordsplit.c:2111:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 2111 |               if (!p)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2119:4: [0m[0;1;36mnote: [0mControl jumps to 'case 0:'  at line 2121[0m
 2119 |           switch (glob (pattern, flags, NULL, &g))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2122:8: [0m[0;1;36mnote: [0m Execution continues on line 2154[0m
 2122 |               break;[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2155:16: [0m[0;1;36mnote: [0mAssuming 'i' is < field 'gl_pathc'[0m
 2155 |           for (i = 0; i < g.gl_pathc; i++)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2155:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2155 |           for (i = 0; i < g.gl_pathc; i++)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2157:8: [0m[0;1;36mnote: [0m'newnode' declared without an initial value[0m
 2157 |               struct wordsplit_node *newnode;[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2160:12: [0m[0;1;36mnote: [0mCalling 'wsnode_new'[0m
 2160 |               if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:487:7: [0m[0;1;36mnote: [0mAssuming 'node' is null[0m
  487 |   if (!node)[0m
      | [0;1;32m      ^~~~~
[0m[1mwordsplit/wordsplit.c:487:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  487 |   if (!node)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:488:5: [0m[0;1;36mnote: [0mReturning without writing to '*pnode'[0m
  488 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m    ^
[0m[1mwordsplit/wordsplit.c:2160:12: [0m[0;1;36mnote: [0mReturning from 'wsnode_new'[0m
 2160 |               if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2160:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 2160 |               if (wsnode_new (wsp, &newnode))[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2163:12: [0m[0;1;36mnote: [0mAssuming 'newstr' is non-null[0m
 2163 |               if (!newstr)[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mwordsplit/wordsplit.c:2163:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 2163 |               if (!newstr)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2165:24: [0m[0;1;36mnote: [0mDereference of undefined pointer value[0m
 2165 |               newnode->v.word = newstr;[0m
      | [0;1;32m              ~~~~~~~~~~~~~~~~^~~~~~~~
[0m[1mwordsplit/wordsplit.c:2188:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2188 |       if (command[i] == ';')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2189 |         i++;[0m
      | [0;1;32m            
[0m[1mwordsplit/wordsplit.c:2190:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2190 |       if (!(command[i] == 's' && i + 3 < len && ISPUNCT (command[i + 1])))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 2191 |         break;[0m
      | [0;1;32m              
[0m[1mwordsplit/wordsplit.c:2199:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2199 |               if (command[i] == delim || !ISALNUM (command[i]))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2200 |                 break;[0m
      | [0;1;32m                      
[0m[1mwordsplit/wordsplit.c:2202:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2202 |           else if (command[i] == '\\')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2203 |             i++;[0m
 2204 |           else if (command[i] == delim)[0m
      | [0;32m          } 
[0m[1mwordsplit/wordsplit.c:2204:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2204 |           else if (command[i] == delim)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2205 |             state++;[0m
      | [0;1;32m                    
[0m[1mwordsplit/wordsplit.c:2244:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2244 |   for (j = start + 1; j < len && command[j] != q; j++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2245 |     if (q == '"' && command[j] == '\\')[0m
 2246 |       j++;[0m
      | [0;1;32m          
[0m[1mwordsplit/wordsplit.c:2245:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2245 |     if (q == '"' && command[j] == '\\')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2246 |       j++;[0m
      | [0;1;32m          
[0m[1mwordsplit/wordsplit.c:2250:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2250 |       if (q == '\'')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2251 |         flags |= _WSNF_NOEXPAND;[0m
      | [0;1;32m                                
[0m[1mwordsplit/wordsplit.c:2252:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2252 |       if (wordsplit_add_segm (wsp, start + 1, j, flags))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2253 |         return _WRDS_ERR;[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:2298:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2298 |               for (j = i + 1; j < len && command[j] != '\n'; j++)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2299 |                 ;[0m
      | [0;1;32m                 
[0m[1mwordsplit/wordsplit.c:2300:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2300 |               if (wordsplit_add_segm (wsp, start, i, 0))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2301 |                 return _WRDS_ERR;[0m
      | [0;1;32m                                 
[0m[1mwordsplit/wordsplit.c:2310:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2310 |                   if (++i == len)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2311 |                     break;[0m
      | [0;1;32m                          
[0m[1mwordsplit/wordsplit.c:2319:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2319 |                   if (join && wsp->ws_tail)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2320 |                     wsp->ws_tail->flags |= _WSNF_JOIN;[0m
      | [0;1;32m                                                      
[0m[1mwordsplit/wordsplit.c:2321:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2321 |                   if (wordsplit_add_segm (wsp, start, i, _WSNF_JOIN))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 2322 |                     return _WRDS_ERR;[0m
      | [0;1;32m                                     
[0m[1mwordsplit/wordsplit.c:2323:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2323 |                   if (scan_qstring (wsp, i, &i))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2324 |                     return _WRDS_ERR;[0m
      | [0;1;32m                                     
[0m[1mwordsplit/wordsplit.c:2335:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2335 |                   && find_closing_paren (command, i + 2, len, &i, "{}") == 0)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 2336 |                 continue;[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:2340:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2340 |                   && find_closing_paren (command, i + 2, len, &i, "()") == 0)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 2341 |                 continue;[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:2344:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2344 |           if (!consume_all && ISDELIM (wsp, command[i]))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2345 |             break;[0m
 2346 |           else[0m
      | [0;32m          } 
[0m[1mwordsplit/wordsplit.c:2346:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2346 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2347 |             i++;[0m
      | [0;1;32m                
[0m[1mwordsplit/wordsplit.c:2355:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2355 |   else if (!(wsp->ws_flags & WRDSF_SQUEEZE_DELIMS))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2356 |     flags |= _WSNF_EMPTYOK;[0m
      | [0;1;32m                           
[0m[1mwordsplit/wordsplit.c:2358:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2358 |   if (join && i > start && wsp->ws_tail)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2359 |     wsp->ws_tail->flags |= _WSNF_JOIN;[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:2360:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2360 |   if (wordsplit_add_segm (wsp, start, i, flags))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2361 |     return _WRDS_ERR;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:2363:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2363 |   if (wsp->ws_flags & WRDSF_INCREMENTAL)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2364 |     return _WRDS_EOF;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:2368:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2368 |       if (!np)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2369 |         np = wsp->ws_head;[0m
      | [0;1;32m                          
[0m[1mwordsplit/wordsplit.c:2388:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2388 |       if (n > 127 || (n = to_num (n)) >= base)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2389 |         break;[0m
      | [0;1;32m              
[0m[1mwordsplit/wordsplit.c:2404:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2404 |       if (strchr (" \"", *str))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2405 |         *quote = 1;[0m
      | [0;1;32m                   
[0m[1mwordsplit/wordsplit.c:2407:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2407 |       if (*str == ' ')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2408 |         len++;[0m
 2409 |       else if (*str == '"')[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:2409:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2409 |       else if (*str == '"')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2410 |         len += 2;[0m
 2411 |       else if (*str != '\t' && *str != '\\' && ISPRINT (*str))[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:2411:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2411 |       else if (*str != '\t' && *str != '\\' && ISPRINT (*str))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2412 |         len++;[0m
 2413 |       else if (quote_hex)[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:2413:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2413 |       else if (quote_hex)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2414 |         len += 3;[0m
 2415 |       else[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:2417:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2417 |           if (wordsplit_c_quote_char (*str))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2418 |             len += 2;[0m
 2419 |           else[0m
      | [0;32m          } 
[0m[1mwordsplit/wordsplit.c:2419:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2419 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2420 |             len += 4;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:2431:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2431 |       if (*transtab++ == c)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2432 |         return *transtab;[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:2443:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2443 |       if (transtab[1] == c)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2444 |         return *transtab;[0m
      | [0;1;32m                         
[0m[1mwordsplit/wordsplit.c:2528:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2528 |               if (WRDSO_ESC_TEST (ws, inquote, WRDSO_BSKEEP))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2529 |                 *dst++ = '\\';[0m
      | [0;1;32m                              
[0m[1mwordsplit/wordsplit.c:2533:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2533 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2534 |         *dst++ = src[i++];[0m
      | [0;1;32m                          
[0m[1mwordsplit/wordsplit.c:2536:3: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 2536 |   *dst = 0;[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:699:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  699 |   for (p = wsp->ws_head; p; p = p->next)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:705:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  705 |       if (wsp->ws_flags & WRDSF_QUOTE)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:705:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  705 |       if (wsp->ws_flags & WRDSF_QUOTE)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:706:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  706 |         unquote = !(p->flags & _WSNF_NOEXPAND);[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:710:11: [0m[0;1;36mnote: [0m'unquote' is 1[0m
  710 |       if (unquote)[0m
      | [0;1;32m          ^~~~~~~
[0m[1mwordsplit/wordsplit.c:710:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  710 |       if (unquote)[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:712:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  712 |           if (!(p->flags & _WSNF_WORD))[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:715:12: [0m[0;1;36mnote: [0mAssuming 'newstr' is non-null[0m
  715 |               if (!newstr)[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mwordsplit/wordsplit.c:715:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  715 |               if (!newstr)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:718:8: [0m[0;1;36mnote: [0mAssuming index is less than the number of 'char' elements in the heap area[0m
  718 |               newstr[slen] = 0;[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:723:4: [0m[0;1;36mnote: [0mCalling 'wordsplit_string_unquote_copy'[0m
  723 |           wordsplit_string_unquote_copy (wsp, p->flags & _WSNF_QUOTE,[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  724 |                                          p->v.word, str, slen);[0m
      | [0;1;32m                                         ~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2468:14: [0m[0;1;36mnote: [0mAssuming 'inquote' is not equal to 0[0m
 2468 |   inquote = !!inquote;[0m
      | [0;1;32m             ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:2469:10: [0m[0;1;36mnote: [0m'i' is < 'n'[0m
 2469 |   while (i < n)[0m
      | [0;1;32m         ^
[0m[1mwordsplit/wordsplit.c:2469:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2469 |   while (i < n)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2471:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2471 |       if (src[i] == '\\')[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2471:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2471 |       if (src[i] == '\\')[0m
      | [0;1;32m      ^
[0m[1mwordsplit/wordsplit.c:2474:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2474 |           if (WRDSO_ESC_TEST (ws, inquote, WRDSO_XESC)[0m
      | [0;1;32m              ^
[0m[1m./wordsplit/wordsplit.h:268:33: [0m[0;1;36mnote: [0mexpanded from macro 'WRDSO_ESC_TEST'[0m
  268 | #define WRDSO_ESC_TEST(ws,q,f) ((ws)->ws_options & ((f) << 4*(q)))[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2475:8: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2475 |               && (src[i] == 'x' || src[i] == 'X'))[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2498:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2498 |           else if (WRDSO_ESC_TEST (ws, inquote, WRDSO_OESC)[0m
      | [0;1;32m                   ^
[0m[1m./wordsplit/wordsplit.h:268:33: [0m[0;1;36mnote: [0mexpanded from macro 'WRDSO_ESC_TEST'[0m
  268 | #define WRDSO_ESC_TEST(ws,q,f) ((ws)->ws_options & ((f) << 4*(q)))[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2498:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2498 |           else if (WRDSO_ESC_TEST (ws, inquote, WRDSO_OESC)[0m
      | [0;1;32m                   ^
[0m[1m./wordsplit/wordsplit.h:268:32: [0m[0;1;36mnote: [0mexpanded from macro 'WRDSO_ESC_TEST'[0m
  268 | #define WRDSO_ESC_TEST(ws,q,f) ((ws)->ws_options & ((f) << 4*(q)))[0m
      | [0;1;32m                               ^
[0m[1mwordsplit/wordsplit.c:2499:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2499 |                    && (unsigned char) src[i] < 128 && ISDIGIT (src[i]))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2498:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2498 |           else if (WRDSO_ESC_TEST (ws, inquote, WRDSO_OESC)[0m
      | [0;1;32m                   ^
[0m[1m./wordsplit/wordsplit.h:268:32: [0m[0;1;36mnote: [0mexpanded from macro 'WRDSO_ESC_TEST'[0m
  268 | #define WRDSO_ESC_TEST(ws,q,f) ((ws)->ws_options & ((f) << 4*(q)))[0m
      | [0;1;32m                               ^
[0m[1mwordsplit/wordsplit.c:2499:41: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2499 |                    && (unsigned char) src[i] < 128 && ISDIGIT (src[i]))[0m
      | [0;1;32m                                                      ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2499:41: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2499 |                    && (unsigned char) src[i] < 128 && ISDIGIT (src[i]))[0m
      | [0;1;32m                                                      ^
[0m[1mwordsplit/wordsplit.c:49:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                    ^
[0m[1mwordsplit/wordsplit.c:2499:41: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2499 |                    && (unsigned char) src[i] < 128 && ISDIGIT (src[i]))[0m
      | [0;1;32m                                                      ^
[0m[1mwordsplit/wordsplit.c:49:48: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   49 | #define ISDIGIT(c) ('0' <= ((unsigned) (c)) && ((unsigned) (c)) <= '9')[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2498:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2498 |           else if (WRDSO_ESC_TEST (ws, inquote, WRDSO_OESC)[0m
      | [0;1;32m               ^
[0m[1mwordsplit/wordsplit.c:2501:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2501 |               if (n - i < 1)[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2501:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 2501 |               if (n - i < 1)[0m
      | [0;1;32m              ^
[0m[1mwordsplit/wordsplit.c:2469:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2536[0m
 2469 |   while (i < n)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2536:3: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at index 2[0m
 2536 |   *dst = 0;[0m
      | [0;1;32m  ^~~~
[0m[1mwordsplit/wordsplit.c:2549:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2549 |       else if (*src != '\t' && *src != '\\' && ISPRINT (*src))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2550 |         *dst++ = *src;[0m
 2551 |       else[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:2557:8: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2557 |               snprintf (tmp, sizeof tmp, "%%%02X", *(unsigned char *) src);[0m
      | [0;1;32m              ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:2557:8: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 2557 |               snprintf (tmp, sizeof tmp, "%%%02X", *(unsigned char *) src);[0m
      | [0;1;32m              ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:2558:8: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2558 |               memcpy (dst, tmp, 3);[0m
      | [0;1;32m              ^~~~~~
[0m[1mwordsplit/wordsplit.c:2558:8: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2558 |               memcpy (dst, tmp, 3);[0m
      | [0;1;32m              ^~~~~~
[0m[1mwordsplit/wordsplit.c:2565:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2565 |               if (c)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2566 |                 *dst++ = c;[0m
 2567 |               else[0m
      | [0;32m              } 
[0m[1mwordsplit/wordsplit.c:2569:5: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2569 |                   snprintf (tmp, sizeof tmp, "%03o", *(unsigned char *) src);[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:2569:5: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 2569 |                   snprintf (tmp, sizeof tmp, "%03o", *(unsigned char *) src);[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mwordsplit/wordsplit.c:2570:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2570 |                   memcpy (dst, tmp, 3);[0m
      | [0;1;32m                  ^~~~~~
[0m[1mwordsplit/wordsplit.c:2570:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2570 |                   memcpy (dst, tmp, 3);[0m
      | [0;1;32m                  ^~~~~~
[0m[1mwordsplit/wordsplit.c:2624:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2624 |   if (p->opt & EXPORT_ALLOF)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2625 |     result = result == p->flag;[0m
      | [0;1;32m                               
[0m[1mwordsplit/wordsplit.c:2626:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2626 |   if (p->opt & EXPOPT_NEG)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2627 |     result = !result;[0m
      | [0;1;32m                     
[0m[1mwordsplit/wordsplit.c:2637:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2637 |   if (wsp->ws_flags & WRDSF_SHOWDBG)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2638 |     wsp->ws_debug (_("(%02d) Input:%.*s;"),[0m
 2639 |                    wsp->ws_lvl, (int) wsp->ws_len, wsp->ws_input);[0m
      | [0;1;32m                                                                  
[0m[1mwordsplit/wordsplit.c:2646:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2646 |       if (scan_word (wsp, start, 1) == _WRDS_ERR)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2647 |         return wsp->ws_errno;[0m
      | [0;1;32m                             
[0m[1mwordsplit/wordsplit.c:2653:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2653 |       while ((rc = scan_word (wsp, start, 0)) == _WRDS_OK)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2654 |         start = skip_delim (wsp);[0m
      | [0;1;32m                                 
[0m[1mwordsplit/wordsplit.c:2656:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2656 |       if (wsp->ws_tail)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2657 |         wsp->ws_tail->flags &= ~_WSNF_JOIN;[0m
      | [0;1;32m                                           
[0m[1mwordsplit/wordsplit.c:2658:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2658 |       if (rc == _WRDS_ERR)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2659 |         return wsp->ws_errno;[0m
      | [0;1;32m                             
[0m[1mwordsplit/wordsplit.c:2674:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2674 |               if (wsnode_coalesce (wsp))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2675 |                 break;[0m
      | [0;1;32m                      
[0m[1mwordsplit/wordsplit.c:2685:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2685 |               if (p->expansion (wsp))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2686 |                 break;[0m
      | [0;1;32m                      
[0m[1mwordsplit/wordsplit.c:2710:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2710 |       if (!(flags & WRDSF_INCREMENTAL))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2711 |         return _wsplt_seterr (wsp, WRDSE_USAGE);[0m
      | [0;1;32m                                                
[0m[1mwordsplit/wordsplit.c:2713:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2713 |       if (wsp->ws_head)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2714 |         return wordsplit_finish (wsp);[0m
      | [0;1;32m                                      
[0m[1mwordsplit/wordsplit.c:2717:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2717 |       if (wsp->ws_endp == wsp->ws_len)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2718 |         return _wsplt_seterr (wsp, WRDSE_NOINPUT);[0m
      | [0;1;32m                                                  
[0m[1mwordsplit/wordsplit.c:2727:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2727 |       if (rc)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2728 |         return rc;[0m
      | [0;1;32m                  
[0m[1mwordsplit/wordsplit.c:2733:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2733 |   if (rc)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 2734 |     return rc;[0m
      | [0;1;32m              
[0m[1mwordsplit/wordsplit.c:2758:17: [0m[0;1;35mwarning: [0m[1mArray access (via field 'ws_wordv') results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
 2758 |       char *p = ws->ws_wordv[ws->ws_offs + i];[0m
      | [0;1;32m                ^
[0m[1mwordsplit/wordsplit.c:938:8: [0m[0;1;36mnote: [0mCalling 'alloc_space'[0m
  938 |   rc = alloc_space (wsp, wsp->ws_wordc + argc + 1);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:367:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  367 |   size_t offs = (wsp->ws_flags & WRDSF_DOOFFS) ? wsp->ws_offs : 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:367:17: [0m[0;1;36mnote: [0m'?' condition is false[0m
  367 |   size_t offs = (wsp->ws_flags & WRDSF_DOOFFS) ? wsp->ws_offs : 0;[0m
      | [0;1;32m                ^
[0m[1mwordsplit/wordsplit.c:371:7: [0m[0;1;36mnote: [0mAssuming field 'ws_wordv' is equal to NULL[0m
  371 |   if (wsp->ws_wordv == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:371:7: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
  371 |   if (wsp->ws_wordv == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:371:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  371 |   if (wsp->ws_wordv == NULL)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:373:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  373 |       newalloc = offs + count > ALLOC_INIT ? count : ALLOC_INIT;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:373:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mwordsplit/wordsplit.c:385:7: [0m[0;1;36mnote: [0mAssuming 'ptr' is null[0m
  385 |   if (ptr)[0m
      | [0;1;32m      ^~~
[0m[1mwordsplit/wordsplit.c:385:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  385 |   if (ptr)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:391:12: [0m[0;1;36mnote: [0mCalling '_wsplt_nomem'[0m
  391 |     return _wsplt_nomem (wsp);[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:112:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  112 |   if (wsp->ws_flags & WRDSF_ENOMEMABRT)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:112:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  112 |   if (wsp->ws_flags & WRDSF_ENOMEMABRT)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:114:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  114 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:114:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  114 |   if (wsp->ws_flags & WRDSF_SHOWERR)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:116:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  116 |   if (!(wsp->ws_flags & WRDSF_REUSE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:116:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  116 |   if (!(wsp->ws_flags & WRDSF_REUSE))[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:117:5: [0m[0;1;36mnote: [0mCalling 'wordsplit_free'[0m
  117 |     wordsplit_free (wsp);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2818:11: [0m[0;1;36mnote: [0mField 'ws_errno' is not equal to WRDSE_USAGE[0m
 2818 |   if (ws->ws_errno == WRDSE_USAGE)[0m
      | [0;1;32m          ^
[0m[1mwordsplit/wordsplit.c:2818:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2818 |   if (ws->ws_errno == WRDSE_USAGE)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2824:3: [0m[0;1;36mnote: [0mCalling 'wordsplit_free_words'[0m
 2824 |   wordsplit_free_words (ws);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2756:15: [0m[0;1;36mnote: [0mAssuming 'i' is < field 'ws_wordc'[0m
 2756 |   for (i = 0; i < ws->ws_wordc; i++)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2756:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2756 |   for (i = 0; i < ws->ws_wordc; i++)[0m
      | [0;1;32m  ^
[0m[1mwordsplit/wordsplit.c:2758:17: [0m[0;1;36mnote: [0mArray access (via field 'ws_wordv') results in a null pointer dereference[0m
 2758 |       char *p = ws->ws_wordv[ws->ws_offs + i];[0m
      | [0;1;32m                ^   ~~~~~~~~
[0m[1mwordsplit/wordsplit.c:2771:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2771 |   if (!(ws->ws_flags & WRDSF_ENV))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2772 |     return;[0m
      | [0;1;32m           
[0m[1mwordsplit/wordsplit.c:2777:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2777 |       for (i = 0; ws->ws_envbuf[i]; i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2778 |         free (ws->ws_envbuf[i]);[0m
      | [0;1;32m                                
[0m[1mwordsplit/wordsplit.c:2788:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2788 |   if (!(ws->ws_options & WRDSO_PARAMV))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2789 |     return;[0m
      | [0;1;32m           
[0m[1mwordsplit/wordsplit.c:2794:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2794 |       for (i = 0; ws->ws_parambuf[i]; i++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2795 |         free (ws->ws_parambuf[i]);[0m
      | [0;1;32m                                  
[0m[1mwordsplit/wordsplit.c:2805:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2805 |   if (ws->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2806 |     free (ws->ws_usererr);[0m
      | [0;1;32m                          
[0m[1mwordsplit/wordsplit.c:2818:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2818 |   if (ws->ws_errno == WRDSE_USAGE)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2819 |     /* Usage error: the structure is not properly initialized and there's[0m
 2820 |        nothing to free. */[0m
 2821 |     return;[0m
      | [0;1;32m           
[0m[1mwordsplit/wordsplit.c:2836:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2836 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 2837 |     return -1;[0m
      | [0;1;32m              
[0m[1mwordsplit/wordsplit.c:2867:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2867 |   if (ws->ws_errno == WRDSE_USERERR)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2868 |     return ws->ws_usererr;[0m
      | [0;1;32m                          
[0m[1mwordsplit/wordsplit.c:2869:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2869 |   if (ws->ws_errno < _wordsplit_nerrs)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2870 |     return _wordsplit_errstr[ws->ws_errno];[0m
      | [0;1;32m                                           
[0m[1mwordsplit/wordsplit.c:2880:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2880 |       wsp->ws_error (_("missing closing %c (start near #%lu)"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2881 |                      wsp->ws_input[wsp->ws_endp],[0m
 2882 |                      (unsigned long) wsp->ws_endp);[0m
 2883 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mwordsplit/wordsplit.c:2886:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2886 |       if (wsp->ws_errctx)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2887 |         wsp->ws_error ("%s: %s", wordsplit_strerror (wsp), wsp->ws_errctx);[0m
 2888 |       else[0m
 2889 |         wsp->ws_error ("%s", wordsplit_strerror (wsp));[0m
      | [0;1;32m                                                      
[0m      | [0;32m                                                      ;} 
[0m[1mwordsplit/wordsplit.c:2886:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2886 |       if (wsp->ws_errctx)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2887 |         wsp->ws_error ("%s: %s", wordsplit_strerror (wsp), wsp->ws_errctx);[0m
 2888 |       else[0m
      | [0;32m      } 
[0m[1mwordsplit/wordsplit.c:2888:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2888 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 2889 |         wsp->ws_error ("%s", wordsplit_strerror (wsp));[0m
      | [0;1;32m                                                       
[0m325 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
