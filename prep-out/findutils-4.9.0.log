Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 172 files out of 172 in compilation database ...
[  1/172][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpg1txmq0v.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/unistd.c
[  2/172][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpo6r21xyr.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fd-safer-flag.c
[  3/172][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpf2pjlksz.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/asnprintf.c
[  4/172][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp0k2u9iw7.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/statat.c
[  5/172][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp7wxv6k95.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/creat-safer.c
[  6/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpiaovypl6.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/basename.c
[1mbasename.c:61:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   61 |   memcpy (p + dotslash_len, base, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mbasename.c:61:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   61 |   memcpy (p + dotslash_len, base, length);[0m
      | [0;1;32m  ^~~~~~
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  7/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmphvcytkmh.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/mbrtowc.c
[1mmbrtowc.c:98:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |   if (! pwc)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   99 |     pwc = &wc;[0m
      | [0;1;32m              
[0m1 warning generated.

[  8/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp74uysh5f.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/splitstring.c
[1msplitstring.c:39:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |       if (end)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   40 |         return end - str;[0m
      | [0;1;32m                         
[0m[1msplitstring.c:58:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |       if (s[*pos])[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   59 |         ++*pos;                 /* skip the separator */[0m
   60 |       else[0m
      | [0;32m      } 
[0m[1msplitstring.c:60:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   60 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   61 |         return false;           /* we reached the end. */[0m
      | [0;1;32m                                                         
[0m3 warnings generated.

[  9/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpr9p29yjz.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/xstrtod.c
[1mxstrtod.c:55:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |   if (terminator == str || (ptr == NULL && *terminator != '\0'))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m   56 |     ok = false;[0m
   57 |   else[0m
      | [0;32m  } 
[0m[1mxstrtod.c:62:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       if (val != 0 && errno == ERANGE)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   63 |         ok = false;[0m
      | [0;1;32m                   
[0m[1mxstrtod.c:66:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (ptr != NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   67 |     *ptr = terminator;[0m
      | [0;1;32m                      
[0m3 warnings generated.

[ 10/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpounjjcli.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fpurge.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 11/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpk3ss6837.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/filenamecat-lgpl.c
[1mfilenamecat-lgpl.c:58:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |       if (! ISSLASH (dir[dirlen - 1]) && ! ISSLASH (*base))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   59 |         sep = '/';[0m
      | [0;1;32m                  
[0m[1mfilenamecat-lgpl.c:72:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |   if (p_concat == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   73 |     return NULL;[0m
      | [0;1;32m                
[0m[1mfilenamecat-lgpl.c:82:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |     if (base_in_result)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   83 |       *base_in_result = p;[0m
      | [0;1;32m                          
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 12/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpn_nm5kwl.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/opendirat.c
[1mopendirat.c:42:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   if (new_fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   43 |     return NULL;[0m
      | [0;1;32m                
[0m[1mopendirat.c:45:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |   if (dirp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   46 |     *pnew_fd = new_fd;[0m
   47 |   else[0m
      | [0;32m  } 
[0m2 warnings generated.

[ 13/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpxtr87p__.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/hash-pjw.c
[1mhash-pjw.c:36:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   for (s = x; *s; s++)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   37 |     h = *s + ((h << 9) | (h >> (SIZE_BITS - 9)));[0m
      | [0;1;32m                                                 
[0m1 warning generated.

[ 14/172][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp3wxop_33.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/bitrotate.c
[ 15/172][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp81m8ttzd.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/xsize.c
[ 16/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpi_qzueec.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/printquoted.c
[1mprintquoted.c:50:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |       if (len < sizeof smallbuf)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   51 |         buf = smallbuf;[0m
   52 |       else[0m
      | [0;32m      } 
[0m[1mprintquoted.c:67:12: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |       rv = fprintf (fp, format, buf);   /* Print the quoted version */[0m
      | [0;1;32m           ^~~~~~~
[0m[1mprintquoted.c:67:12: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   67 |       rv = fprintf (fp, format, buf);   /* Print the quoted version */[0m
      | [0;1;32m           ^~~~~~~
[0m[1mprintquoted.c:77:12: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   77 |       rv = fprintf (fp, format, s);[0m
      | [0;1;32m           ^~~~~~~
[0m[1mprintquoted.c:77:12: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   77 |       rv = fprintf (fp, format, s);[0m
      | [0;1;32m           ^~~~~~~
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 17/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpl4prhgpy.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fflush.c
[1mfflush.c:41:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   if (fp->_flags & _IO_IN_BACKUP)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   42 |     /* _IO_free_backup_area is a bit complicated.  Simply call fseek.  */[0m
   43 |     fseeko (fp, 0, SEEK_CUR);[0m
      | [0;1;32m                             
[0m[1mfflush.c:148:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |   if (stream == NULL || ! freading (stream))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  149 |     return fflush (stream);[0m
      | [0;1;32m                           
[0m2 warnings generated.

[ 18/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpjobimp1x.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/xstrtoumax.c
26 warnings generated.
Suppressed 26 warnings (26 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 19/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp11fn29vc.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/strnlen1.c
[1mstrnlen1.c:31:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (end != NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   32 |     return end - string + 1;[0m
   33 |   else[0m
      | [0;32m  } 
[0m[1mstrnlen1.c:33:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   34 |     return maxlen;[0m
      | [0;1;32m                  
[0m2 warnings generated.

[ 20/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmph18m0ohh.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/findutils-version.c
10 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 21/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp5590t320.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/glthread/threadlib.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 22/172][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpr46zlgr2.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/cloexec.c
[1mcloexec.c:50:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |           || fcntl (desc, F_SETFD, newflags) != -1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   51 |         return 0;[0m
      | [0;1;32m                 
[0m1 warning generated.

[ 23/172][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpzo2bap2n.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/chdir-long.c
[1mchdir-long.c:77:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |   if (new_fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   78 |     return -1;[0m
      | [0;1;32m              
[0m[1mchdir-long.c:113:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |   if (e == 0 || errno != ENAMETOOLONG)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  114 |     return e;[0m
      | [0;1;32m             
[0m[1mchdir-long.c:151:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  152 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:157:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |         if (cdb_advance_fd (&cdb, "/") != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  158 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:182:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  183 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:190:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |         if (cdb_advance_fd (&cdb, dir) != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  191 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:194:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |     if (cdb_fchdir (&cdb) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  195 |       goto Fail;[0m
      | [0;1;32m                
[0m9 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 24/172][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpfrpou908.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/finddata.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 25/172][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpaoqkdxor.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/offtostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 26/172][2.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpy8_rb5ld.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/dircallback.c
[1mdircallback.c:56:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (restore_cwd (&here) != 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   57 |         openat_restore_fail (errno);[0m
      | [0;1;32m                                    
[0m[1mdircallback.c:65:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |   if (saved_errno)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   66 |     errno = saved_errno;[0m
      | [0;1;32m                        
[0m[1mdircallback.c:84:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |       if (save_cwd (&saved_cwd) != 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   85 |         openat_save_fail (errno);[0m
      | [0;1;32m                                 
[0m[1mdircallback.c:98:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |       if (restore_cwd (&saved_cwd) != 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   99 |         openat_restore_fail (errno);[0m
      | [0;1;32m                                    
[0m[1mdircallback.c:103:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |       if (saved_errno)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  104 |         errno = saved_errno;[0m
      | [0;1;32m                            
[0m5 warnings generated.

[ 27/172][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpbemhdxws.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/localcharset.c
[1mlocalcharset.c:911:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |   if (codeset == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  912 |     /* The canonical name cannot be determined.  */[0m
  913 |     codeset = "";[0m
      | [0;1;32m                 
[0m[1mlocalcharset.c:1070:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |         if (codeset[0] == '\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1071 |           codeset = "ASCII";[0m
      | [0;1;32m                            
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 28/172][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpe0dse5n6.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fd-safer.c
[ 29/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpccz95ob4.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/hash-triple-simple.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 30/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpmowqxgdm.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/dtotimespec.c
[1mdtotimespec.c:32:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (! (TYPE_MINIMUM (time_t) < sec))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   33 |     return make_timespec (TYPE_MINIMUM (time_t), 0);[0m
   34 |   else if (! (sec < 1.0 + TYPE_MAXIMUM (time_t)))[0m
      | [0;32m  } 
[0m[1mdtotimespec.c:34:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   34 |   else if (! (sec < 1.0 + TYPE_MAXIMUM (time_t)))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   35 |     return make_timespec (TYPE_MAXIMUM (time_t), TIMESPEC_HZ - 1);[0m
   36 |   else[0m
      | [0;32m  } 
[0m2 warnings generated.

[ 31/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpm1fyd8wf.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/xstrtoul.c
26 warnings generated.
Suppressed 26 warnings (26 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 32/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmph7ujzp3s.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloc/scratch_buffer_grow_preserve.c
[1mmalloc/scratch_buffer_grow_preserve.c:38:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |       if (new_ptr == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   39 |         return false;[0m
      | [0;1;32m                     
[0m[1mmalloc/scratch_buffer_grow_preserve.c:40:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   40 |       memcpy (new_ptr, buffer->__space.__c, buffer->length);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmalloc/scratch_buffer_grow_preserve.c:40:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   40 |       memcpy (new_ptr, buffer->__space.__c, buffer->length);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmalloc/scratch_buffer_grow_preserve.c:45:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |       if (__glibc_likely (new_length >= buffer->length))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m   46 |         new_ptr = realloc (buffer->data, new_length);[0m
   47 |       else[0m
      | [0;32m      } 
[0m6 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 33/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp6stc8s_s.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/freadahead.c
[1mfreadahead.c:38:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |   if (fp->_IO_write_ptr > fp->_IO_write_base)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   39 |     return 0;[0m
      | [0;1;32m             
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 34/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpme4818lt.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/math.c
[ 35/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmprr9yaxwy.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloc/dynarray_resize_clear.c
[1mmalloc/dynarray_resize_clear.c:31:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (!__libc_dynarray_resize (list, size, scratch, element_size))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   32 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m2 warnings generated.

[ 36/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpg9zawja_.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/priv-set.c
[ 37/172][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmph8mak86r.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/unlinkdir.c
[ 38/172][2.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp6bbk1jcy.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fcntl.c
[1mfcntl.c:329:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  329 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:426:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  426 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:430:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  430 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  431 |               void *p = va_arg (arg, void *);[0m
  432 |               result = fcntl (fd, action, p);[0m
  433 |             }[0m
  434 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mfcntl.c:524:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |           if (result >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  525 |             have_dupfd_cloexec = -1;[0m
      | [0;1;32m                                    
[0m[1mfcntl.c:528:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  529 | # endif[0m
  530 |     result = rpl_fcntl_DUPFD (fd, target);[0m
      | [0;1;32m                                          
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 39/172][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpysqdjk6a.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/safe-read.c
[1msafe-read.c:62:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       if (0 <= result)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   63 |         return result;[0m
   64 |       else if (IS_EINTR (errno))[0m
      | [0;32m      } 
[0m[1msafe-read.c:64:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       else if (IS_EINTR (errno))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   65 |         continue;[0m
   66 |       else if (errno == EINVAL && SYS_BUFSIZE_MAX < count)[0m
      | [0;32m      } 
[0m[1msafe-read.c:66:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       else if (errno == EINVAL && SYS_BUFSIZE_MAX < count)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m   67 |         count = SYS_BUFSIZE_MAX;[0m
   68 |       else[0m
      | [0;32m      } 
[0m[1msafe-read.c:68:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   69 |         return result;[0m
      | [0;1;32m                      
[0m4 warnings generated.

[ 40/172][3.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpf3mkh7vx.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloc/dynarray_emplace_enlarge.c
[1mmalloc/dynarray_emplace_enlarge.c:38:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |       if (element_size < 4)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   39 |         new_allocated = 16;[0m
   40 |       else if (element_size < 8)[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:40:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       else if (element_size < 8)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   41 |         new_allocated = 8;[0m
   42 |       else[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:42:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   43 |         new_allocated = 4;[0m
      | [0;1;32m                          
[0m[1mmalloc/dynarray_emplace_enlarge.c:59:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (INT_MULTIPLY_WRAPV (new_allocated, element_size, &new_size))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   60 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_emplace_enlarge.c:66:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:69:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   70 |     new_array = realloc (list->array, new_size);[0m
      | [0;1;32m                                                
[0m[1mmalloc/dynarray_emplace_enlarge.c:71:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   72 |     return false;[0m
      | [0;1;32m                 
[0m10 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 41/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpcc5pi3uw.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fopen-safer.c
[1mfopen-safer.c:54:23: [0m[0;1;35mwarning: [0m[1mOpened stream never closed. Potential resource leak [clang-analyzer-unix.Stream][0m
   54 |               int e = errno;[0m
      | [0;1;32m                      ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~
[0m[1mfopen-safer.c:33:14: [0m[0;1;36mnote: [0mStream opened here[0m
   33 |   FILE *fp = fopen (file, mode);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mfopen-safer.c:33:14: [0m[0;1;36mnote: [0mAssuming that 'fopen' is successful[0m
   33 |   FILE *fp = fopen (file, mode);[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mfopen-safer.c:35:7: [0m[0;1;36mnote: [0m'fp' is non-null[0m
   35 |   if (fp)[0m
      | [0;1;32m      ^~
[0m[1mfopen-safer.c:35:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   35 |   if (fp)[0m
      | [0;1;32m  ^
[0m[1mfopen-safer.c:39:16: [0m[0;1;36mnote: [0m'fd' is >= 0[0m
   39 |       if (0 <= fd && fd <= STDERR_FILENO)[0m
      | [0;1;32m               ^~
[0m[1mfopen-safer.c:39:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   39 |       if (0 <= fd && fd <= STDERR_FILENO)[0m
      | [0;1;32m          ^
[0m[1mfopen-safer.c:39:22: [0m[0;1;36mnote: [0mAssuming 'fd' is <= STDERR_FILENO[0m
   39 |       if (0 <= fd && fd <= STDERR_FILENO)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~
[0m[1mfopen-safer.c:39:7: [0m[0;1;36mnote: [0mTaking true branch[0m
   39 |       if (0 <= fd && fd <= STDERR_FILENO)[0m
      | [0;1;32m      ^
[0m[1mfopen-safer.c:43:15: [0m[0;1;36mnote: [0mAssuming 'f' is >= 0[0m
   43 |           if (f < 0)[0m
      | [0;1;32m              ^~~~~
[0m[1mfopen-safer.c:43:11: [0m[0;1;36mnote: [0mTaking false branch[0m
   43 |           if (f < 0)[0m
      | [0;1;32m          ^
[0m[1mfopen-safer.c:51:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
   51 |           if (fclose (fp) != 0[0m
      | [0;1;32m              ^
[0m[1m./stdio.h:733:19: [0m[0;1;36mnote: [0mexpanded from macro 'fclose'[0m
  733 | #   define fclose rpl_fclose[0m
      | [0;1;32m                  ^
[0m[1mfopen-safer.c:52:15: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
   52 |               || ! (fp = fdopen (f, mode)))[0m
      | [0;1;32m              ^
[0m[1mfopen-safer.c:54:23: [0m[0;1;36mnote: [0mOpened stream never closed. Potential resource leak[0m
   54 |               int e = errno;[0m
      | [0;1;32m                      ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~
[0m1 warning generated.

[ 42/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpinybfzuw.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloc/dynarray_at_failure.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 43/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp2gqvs68x.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloca.c
[1mmalloca.c:64:37: [0m[0;1;35mwarning: [0m[1mThe left operand of '&' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
   64 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m[1mmalloca.c:53:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0m1 is not equal to 0[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^~~
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0m9223372036854775807 is < -1[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^~~~~~~~~~~
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0m'?' condition is true[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^
[0m[1mmalloca.c:53:44: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                           ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:8: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   33 |        < (n)))[0m
      | [0;1;32m       ~~~~~
[0m[1mmalloca.c:53:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   53 |   if (!INT_ADD_WRAPV (n, plus, &nplus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m  ^
[0m[1mmalloca.c:57:11: [0m[0;1;36mnote: [0mAssuming 'mem' is not equal to NULL[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mmalloca.c:57:7: [0m[0;1;36mnote: [0mTaking true branch[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:59:44: [0m[0;1;36mnote: [0m'umemplus' declared without an initial value[0m
   59 |           uintptr_t umem = (uintptr_t)mem, umemplus;[0m
      | [0;1;32m                                           ^~~~~~~~
[0m[1mmalloca.c:62:11: [0m[0;1;36mnote: [0mAssuming overflow[0m
   62 |           INT_ADD_WRAPV (umem, sizeof (small_t) + sa_alignment_max - 1,[0m
      | [0;1;32m          ^
[0m[1m./intprops.h:395:33: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_WRAPV'[0m
  395 | # define INT_ADD_WRAPV(a, b, r) __builtin_add_overflow (a, b, r)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:64:37: [0m[0;1;36mnote: [0mThe left operand of '&' is a garbage value[0m
   64 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 44/172][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp6hob5rq4.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/timespec.c
[ 45/172][5.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpluz3ac6v.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/fstype.c
[1mfstype.c:151:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |       if (fstype_known && statp->st_dev == current_dev)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  152 |         return current_fstype;  /* Cached value.  */[0m
      | [0;1;32m                                                    
[0m[1mfstype.c:177:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |               if (0 == strcmp(name, entry->me_type))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  178 |                 return true;[0m
      | [0;1;32m                            
[0m[1mfstype.c:245:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |       if (!strcmp (entry->me_type, MNTTYPE_IGNORE))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  246 |         continue;[0m
      | [0;1;32m                 
[0m15 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 46/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpb7jxdsfz.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/timespec-sub.c
[1mtimespec-sub.c:41:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (!INT_ADD_WRAPV (bs, 1, &bs1))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m   42 |         bs = bs1;[0m
   43 |       else if (- TYPE_SIGNED (time_t) < rs)[0m
      | [0;32m      } 
[0m[1mtimespec-sub.c:43:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |       else if (- TYPE_SIGNED (time_t) < rs)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m   44 |         rs--;[0m
   45 |       else[0m
      | [0;32m      } 
[0m[1mtimespec-sub.c:45:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   46 |         goto low_overflow;[0m
      | [0;1;32m                          
[0m3 warnings generated.

[ 47/172][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpkytlf2t2.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/extendbuf.c
[1mextendbuf.c:47:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   if (0 == current)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   48 |     newsize = SIZE_DEFAULT;[0m
   49 |   else[0m
      | [0;32m  } 
[0m[1mextendbuf.c:49:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   50 |     newsize = current;[0m
      | [0;1;32m                      
[0m[1mextendbuf.c:54:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |       if (2 * newsize < newsize)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   55 |         return wanted;[0m
      | [0;1;32m                      
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 48/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpqra5guay.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/allocator.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 49/172][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp_5mc7v82.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/hard-locale.c
[1mhard-locale.c:31:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (setlocale_null_r (category, locale, sizeof (locale)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   32 |     return false;[0m
      | [0;1;32m                 
[0m1 warning generated.

[ 50/172][5.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpxwzr5_zs.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/localename.c
[1mlocalename.c:2642:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2642 |   for (; *s; s++)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2643 |     h = *s + ((h << 9) | (h >> (SIZE_BITS - 9)));[0m
      | [0;1;32m                                                 
[0m[1mlocalename.c:2676:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2676 |   for (p = struniq_hash_table[slot]; p != NULL; p = p->next)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 2677 |     if (strcmp (p->contents, string) == 0)[0m
 2678 |       return p->contents;[0m
      | [0;1;32m                         
[0m[1mlocalename.c:2677:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2677 |     if (strcmp (p->contents, string) == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2678 |       return p->contents;[0m
      | [0;1;32m                         
[0m[1mlocalename.c:2683:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2683 |   if (new_node == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2684 |     /* Out of memory.  Return a statically allocated string.  */[0m
 2685 |     return "C";[0m
      | [0;1;32m               
[0m[1mlocalename.c:2686:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2686 |   memcpy (new_node->contents, string, size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mlocalename.c:2686:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2686 |   memcpy (new_node->contents, string, size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mlocalename.c:2690:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2690 |     if (mt) gl_lock_lock (struniq_lock);[0m
      | [0;1;32m           ^                            
[0m      | [0;32m            {
[0m[1mlocalename.c:2693:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2693 |     for (p = struniq_hash_table[slot]; p != NULL; p = p->next)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2694 |       if (strcmp (p->contents, string) == 0)[0m
 2695 |         {[0m
 2696 |           free (new_node);[0m
 2697 |           new_node = p;[0m
 2698 |           goto done;[0m
 2699 |         }[0m
      | [0;1;32m         
[0m[1mlocalename.c:2706:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2706 |     if (mt) gl_lock_unlock (struniq_lock);[0m
      | [0;1;32m           ^                              
[0m      | [0;32m            {
[0m[1mlocalename.c:3111:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3111 |         if (name[0] == '\0')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3112 |           /* Fallback code for glibc < 2.4, which did not implement[0m
 3113 |              nl_langinfo (_NL_LOCALE_NAME (category)).  */[0m
 3114 |           name = thread_locale->__names[category];[0m
      | [0;1;32m                                                  
[0m[1mlocalename.c:3217:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3217 |   if (name != NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3218 |     return struniq (name);[0m
      | [0;1;32m                          
[0m[1mlocalename.c:3308:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3308 |   if (retval != NULL && retval[0] != '\0')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3309 |     return retval;[0m
      | [0;1;32m                  
[0m[1mlocalename.c:3312:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3312 |   if (retval != NULL && retval[0] != '\0')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3313 |     return retval;[0m
      | [0;1;32m                  
[0m[1mlocalename.c:3443:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3443 |   if (retval != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3444 |     return retval;[0m
      | [0;1;32m                  
[0m[1mlocalename.c:3447:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3447 |   if (retval != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3448 |     return retval;[0m
      | [0;1;32m                  
[0m16 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 51/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpjvrwbq_e.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/selinux-at.c
26 warnings generated.
Suppressed 26 warnings (26 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 52/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpu6dqfpqr.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/c-strstr.c
[ 53/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp9ozvzy4_.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/timespec-add.c
[1mtimespec-add.c:41:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (!INT_ADD_WRAPV (bs, 1, &bs1))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m   42 |         bs = bs1;[0m
   43 |       else if (rs < 0)[0m
      | [0;32m      } 
[0m[1mtimespec-add.c:43:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |       else if (rs < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   44 |         rs++;[0m
   45 |       else[0m
      | [0;32m      } 
[0m[1mtimespec-add.c:45:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   46 |         goto high_overflow;[0m
      | [0;1;32m                           
[0m3 warnings generated.

[ 54/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpl1c7me9q.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/glthread/thread.c
[1mglthread/thread.c:213:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |   if (ret != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  214 |     abort ();[0m
      | [0;1;32m             
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 55/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpt3taztjx.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/stripslash.c
[1mstripslash.c:39:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (! *base)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   40 |     base = file;[0m
      | [0;1;32m                
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 56/172][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp0mz34mhp.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/exitfail.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 57/172][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp31hkjhus.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/ialloc.c
5 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 58/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp8wixd4cu.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fseeko.c
[ 59/172][2.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpt2lrywxi.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/tempname.c
[1mtempname.c:85:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (use_getrandom && __getrandom (&r, sizeof r, GRND_NONBLOCK) == sizeof r)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m   86 |     return r;[0m
      | [0;1;32m             
[0m[1mtempname.c:194:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |   if (__lstat64 (tmpl, &st) == 0 || errno == EOVERFLOW)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  195 |     __set_errno (EEXIST);[0m
      | [0;1;32m                         
[0m[1mtempname.c:323:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |       else if (errno != EEXIST)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  324 |         return -1;[0m
      | [0;1;32m                  
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 60/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpa6i92n79.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/binary-io.c
[ 61/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp_9_stysl.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/ioctl.c
[ 62/172][6.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpgsge_8y0.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/xmalloc.c
[1mxmalloc.c:34:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   34 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   35 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:66:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (!r && (!p || s))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   67 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:84:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |   if (!r && (!p || (n && s)))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   85 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:198:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |       if (INT_ADD_WRAPV (n, (n >> 1) + 1, &n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  199 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mxmalloc.c:239:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |   if (INT_ADD_WRAPV (n0, n0 >> 1, &n))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  240 |     n = IDX_MAX;[0m
      | [0;1;32m                
[0m[1mxmalloc.c:241:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |   if (0 <= n_max && n_max < n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  242 |     n = n_max;[0m
      | [0;1;32m              
[0m[1mxmalloc.c:263:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (! pa)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  264 |     *pn = 0;[0m
      | [0;1;32m            
[0m[1mxmalloc.c:268:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |           || INT_MULTIPLY_WRAPV (n, s, &nbytes)))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  269 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:313:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  313 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:313:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  313 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:319:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  319 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:319:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  319 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:330:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  330 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:330:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  330 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m16 warnings generated.
Suppressed 5 warnings (5 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 63/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpvgvwmntx.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/sockets.c
[ 64/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp_s80kuzl.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/basename-lgpl.c
[1mbasename-lgpl.c:36:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   while (ISSLASH (*base))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   37 |     base++;[0m
      | [0;1;32m           
[0m[1mbasename-lgpl.c:41:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (ISSLASH (*p))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   42 |         last_was_slash = true;[0m
   43 |       else if (last_was_slash)[0m
      | [0;32m      } 
[0m[1mbasename-lgpl.c:59:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   60 |     continue;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:63:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |       && ISSLASH (name[0]) && ISSLASH (name[1]) && ! name[2])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   64 |     return 2;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:67:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |       && len == prefix_len && ISSLASH (name[prefix_len]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   68 |     return prefix_len + 1;[0m
      | [0;1;32m                          
[0m5 warnings generated.

[ 65/172][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpsd5mst_k.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/areadlinkat.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 66/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpij3fkege.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloc/dynarray_finalize.c
[1mmalloc/dynarray_finalize.c:32:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (__dynarray_error (list))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   33 |     /* The caller will reported the deferred error.  */[0m
   34 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_finalize.c:43:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   44 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:54:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |       if (list->array != NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m                                                          
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:56:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   57 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:62:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   63 |     /* The caller will perform the freeing operation.  */[0m
   64 |     return false;[0m
      | [0;1;32m                 
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 67/172][3.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp463rkct3.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/tmpdir.c
[1mtmpdir.c:108:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |       if (plen > 5)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  109 |         plen = 5;[0m
      | [0;1;32m                 
[0m[1mtmpdir.c:115:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |       if (d != NULL && direxists (d))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  116 |         dir = d;[0m
  117 |       else if (dir != NULL && direxists (dir))[0m
      | [0;32m      } 
[0m[1mtmpdir.c:117:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |       else if (dir != NULL && direxists (dir))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  118 |         /* nothing */ ;[0m
  119 |       else[0m
      | [0;32m      } 
[0m[1mtmpdir.c:119:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  120 |         dir = NULL;[0m
      | [0;1;32m                   
[0m[1mtmpdir.c:137:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |       if (direxists (P_tmpdir))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  138 |         dir = P_tmpdir;[0m
  139 |       else if (strcmp (P_tmpdir, "/tmp") != 0 && direxists ("/tmp"))[0m
      | [0;32m      } 
[0m[1mtmpdir.c:139:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  139 |       else if (strcmp (P_tmpdir, "/tmp") != 0 && direxists ("/tmp"))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  140 |         dir = "/tmp";[0m
  141 |       else[0m
      | [0;32m      } 
[0m[1mtmpdir.c:162:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  162 |   memcpy (tmpl, dir, dlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtmpdir.c:162:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  162 |   memcpy (tmpl, dir, dlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtmpdir.c:163:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  163 |   sprintf (tmpl + dlen, &"/%.*sXXXXXX"[!add_slash], (int) plen, pfx);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtmpdir.c:163:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  163 |   sprintf (tmpl + dlen, &"/%.*sXXXXXX"[!add_slash], (int) plen, pfx);[0m
      | [0;1;32m  ^~~~~~~
[0m10 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 68/172][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpoh4q3vx9.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/save-cwd.c
[1msave-cwd.c:67:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   68 |     cwd->desc = fd_safer_flag (cwd->desc, O_CLOEXEC);[0m
      | [0;1;32m                                                     
[0m[1msave-cwd.c:71:19: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'getcwd' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   71 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:67:3: [0m[0;1;36mnote: [0mTaking false branch[0m
   67 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:69:7: [0m[0;1;36mnote: [0mAssuming field 'desc' is < 0[0m
   69 |   if (cwd->desc < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1msave-cwd.c:69:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   69 |   if (cwd->desc < 0)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:71:19: [0m[0;1;36mnote: [0mThe 1st argument to 'getcwd' is NULL but should not be NULL[0m
   71 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:85:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (0 <= cwd->desc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   86 |     return fchdir (cwd->desc);[0m
   87 |   else[0m
      | [0;32m  } 
[0m[1msave-cwd.c:87:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   88 |     return chdir_long (cwd->name);[0m
      | [0;1;32m                                  
[0m[1msave-cwd.c:94:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |   if (cwd->desc >= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   95 |     close (cwd->desc);[0m
      | [0;1;32m                      
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 69/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpz2oiu3lt.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/xstrtol-error.c
[1mxstrtol-error.c:60:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mxstrtol-error.c:63:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |       msgid = N_("invalid %s%s argument '%s'");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m   64 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mxstrtol-error.c:69:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mxstrtol-error.c:72:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |       msgid = N_("%s%s argument '%s' too large");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m   73 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mxstrtol-error.c:83:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   84 |     option = long_options[opt_idx].name;[0m
      | [0;1;32m                                        
[0m17 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 70/172][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpjjv3x1wv.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/se-label.c
[ 71/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpczbu_ihh.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fd-hook.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 72/172][3.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpu4i_bbcf.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/careadlinkat.c
[1mcareadlinkat.c:71:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |   if (! alloc)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   72 |     alloc = &stdlib_allocator;[0m
      | [0;1;32m                              
[0m[1mcareadlinkat.c:109:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |               if (! b)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  110 |                 break;[0m
      | [0;1;32m                      
[0m[1mcareadlinkat.c:111:22: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  111 |               return memcpy (b, buf, link_size);[0m
      | [0;1;32m                     ^~~~~~
[0m[1mcareadlinkat.c:111:22: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  111 |               return memcpy (b, buf, link_size);[0m
      | [0;1;32m                     ^~~~~~
[0m[1mcareadlinkat.c:118:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |               if (b)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  119 |                 return b;[0m
      | [0;1;32m                         
[0m[1mcareadlinkat.c:125:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |       if (buf != buffer)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  126 |         alloc->free (buf);[0m
      | [0;1;32m                          
[0m[1mcareadlinkat.c:138:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |   if (alloc->die)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  139 |     alloc->die (buf_size);[0m
      | [0;1;32m                          
[0m6 warnings generated.

[ 73/172][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpk2bumh_7.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/glthread/lock.c
[1mglthread/lock.c:269:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  270 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:277:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |   if (err == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  278 |     err = pthread_rwlock_init(lock, &attributes);[0m
      | [0;1;32m                                                 
[0m[1mglthread/lock.c:539:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  540 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:554:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  555 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:717:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  718 |     return 0;[0m
      | [0;1;32m             
[0m[1mglthread/lock.c:732:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |       if (glthread_once_singlethreaded (once_control))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  733 |         init_function ();[0m
      | [0;1;32m                         
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 74/172][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpd2tevb_u.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/localename-table.c
[ 75/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmps07qmj80.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloc/scratch_buffer_dupfree.c
[1mmalloc/scratch_buffer_dupfree.c:33:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   33 |       return copy != NULL ? memcpy (copy, data, size) : NULL;[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmalloc/scratch_buffer_dupfree.c:33:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   33 |       return copy != NULL ? memcpy (copy, data, size) : NULL;[0m
      | [0;1;32m                            ^~~~~~
[0m4 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 76/172][4.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmptwcnhdiz.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/uniwidth/width.c
[1muniwidth/width.c:64:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       if (ind >= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   65 |         if ((nonspacing_table_data[64*ind + ((uc >> 3) & 63)] >> (uc & 7)) & 1)[0m
   66 |           {[0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
   68 |               return -1;[0m
   69 |             else[0m
   70 |               return 0;[0m
   71 |           }[0m
      | [0;1;32m           
[0m[1muniwidth/width.c:67:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   68 |               return -1;[0m
   69 |             else[0m
      | [0;32m            } 
[0m[1muniwidth/width.c:69:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   70 |               return 0;[0m
      | [0;1;32m                       
[0m[1muniwidth/width.c:77:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |           if (uc <= 0xe01ef)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   78 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:82:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |           if (uc >= 0xe0020 ? uc <= 0xe007f : uc == 0xe0001)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m   83 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:87:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   if (bitmap_lookup (&u_width2, uc))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   88 |     return 2;[0m
      | [0;1;32m             
[0m[1muniwidth/width.c:92:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |       && is_cjk_encoding (encoding))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   93 |     return 2;[0m
      | [0;1;32m             
[0m35 warnings generated.
Suppressed 28 warnings (28 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 77/172][5.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpvsuuhdkq.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/parse-datetime.c
[1mparse-datetime.c:390:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |          | INT_ADD_WRAPV (pc->rel.year, rel.year, &pc->rel.year)))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  391 |     return false;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:458:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |   if (0 <= pc->day_number && pc->day_number <= 6 && 0 <= len && len < n)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  459 |     snprintf (buffer + len, n - len, &" %s"[len == 0],[0m
  460 |               days_values[pc->day_number]);[0m
  461 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:506:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |   if (!debugging (pc))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  507 |     return;[0m
      | [0;1;32m           
[0m[1mparse-datetime.c:523:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |       if (space)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  524 |         fputc (' ', stderr);[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:541:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |       if (pc->meridian == MERpm)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  542 |         fputs ("pm", stderr);[0m
      | [0;1;32m                             
[0m[1mparse-datetime.c:550:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |       if (space)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  551 |         fputc (' ', stderr);[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:582:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  582 |       if (space)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  583 |         fputc (' ', stderr);[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:595:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |   if (val == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  596 |     return space;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:606:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |   if (!debugging (pc))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  607 |     return;[0m
      | [0;1;32m           
[0m[1mparse-datetime.c:1490:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1490 |   if (!yymsg)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1491 |     yymsg = "Deleting";[0m
      | [0;1;32m                       
[0m[1mparse-datetime.c:1617:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1617 |       if (YYMAXDEPTH <= yystacksize)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1618 |         YYNOMEM;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:1620:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1620 |       if (YYMAXDEPTH < yystacksize)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1621 |         yystacksize = YYMAXDEPTH;[0m
      | [0;1;32m                                 
[0m[1mparse-datetime.c:1628:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1628 |         if (! yyptr)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1629 |           YYNOMEM;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:1633:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1633 |         if (yyss1 != yyssa)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1634 |           YYSTACK_FREE (yyss1);[0m
      | [0;1;32m                               
[0m[1mparse-datetime.c:1646:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1646 |       if (yyss + yystacksize - 1 <= yyssp)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1647 |         YYABORT;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:1652:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1652 |   if (yystate == YYFINAL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1653 |     YYACCEPT;[0m
      | [0;1;32m             
[0m[1mparse-datetime.c:1667:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1667 |   if (yypact_value_is_default (yyn))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1668 |     goto yydefault;[0m
      | [0;1;32m                   
[0m[1mparse-datetime.c:1704:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1704 |   if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1705 |     goto yydefault;[0m
      | [0;1;32m                   
[0m[1mparse-datetime.c:1709:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1709 |       if (yytable_value_is_error (yyn))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1710 |         goto yyerrlab;[0m
      | [0;1;32m                      
[0m[1mparse-datetime.c:1717:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1717 |   if (yyerrstatus)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1718 |     yyerrstatus--;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:1737:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1737 |   if (yyn == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1738 |     goto yyerrlab;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:1765:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1765 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1766 |         pc->seconds = (yyvsp[0].timespec);[0m
 1767 |         pc->timespec_seen = true;[0m
 1768 |         debug_print_current_time (_("number of seconds"), pc);[0m
 1769 |       }[0m
 1770 | #line 1771 "parse-datetime.c"[0m
 1771 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1775:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1775 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1776 |         pc->times_seen++; pc->dates_seen++;[0m
 1777 |         debug_print_current_time (_("datetime"), pc);[0m
 1778 |       }[0m
 1779 | #line 1780 "parse-datetime.c"[0m
 1780 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1784:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1784 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1785 |         pc->times_seen++;[0m
 1786 |         debug_print_current_time (_("time"), pc);[0m
 1787 |       }[0m
 1788 | #line 1789 "parse-datetime.c"[0m
 1789 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1793:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1793 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1794 |         pc->local_zones_seen++;[0m
 1795 |         debug_print_current_time (_("local_zone"), pc);[0m
 1796 |       }[0m
 1797 | #line 1798 "parse-datetime.c"[0m
 1798 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1802:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1802 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1803 |         pc->zones_seen++;[0m
 1804 |         debug_print_current_time (_("zone"), pc);[0m
 1805 |       }[0m
 1806 | #line 1807 "parse-datetime.c"[0m
 1807 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1811:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1811 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1812 |         pc->dates_seen++;[0m
 1813 |         debug_print_current_time (_("date"), pc);[0m
 1814 |       }[0m
 1815 | #line 1816 "parse-datetime.c"[0m
 1816 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1820:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1820 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1821 |         pc->days_seen++;[0m
 1822 |         debug_print_current_time (_("day"), pc);[0m
 1823 |       }[0m
 1824 | #line 1825 "parse-datetime.c"[0m
 1825 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1829:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1829 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1830 |         debug_print_relative_time (_("relative"), pc);[0m
 1831 |       }[0m
 1832 | #line 1833 "parse-datetime.c"[0m
 1833 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1837:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1837 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1838 |         debug_print_current_time (_("number"), pc);[0m
 1839 |       }[0m
 1840 | #line 1841 "parse-datetime.c"[0m
 1841 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1845:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1845 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1846 |         debug_print_relative_time (_("hybrid"), pc);[0m
 1847 |       }[0m
 1848 | #line 1849 "parse-datetime.c"[0m
 1849 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1853:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1853 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1854 |         set_hhmmss (pc, (yyvsp[-1].textintval).value, 0, 0, 0);[0m
 1855 |         pc->meridian = (yyvsp[0].intval);[0m
 1856 |       }[0m
 1857 | #line 1858 "parse-datetime.c"[0m
 1858 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1862:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1862 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1863 |         set_hhmmss (pc, (yyvsp[-3].textintval).value, (yyvsp[-1].textintval).value, 0, 0);[0m
 1864 |         pc->meridian = (yyvsp[0].intval);[0m
 1865 |       }[0m
 1866 | #line 1867 "parse-datetime.c"[0m
 1867 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1871:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1871 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1872 |         set_hhmmss (pc, (yyvsp[-5].textintval).value, (yyvsp[-3].textintval).value, (yyvsp[-1].timespec).tv_sec, (yyvsp[-1].timespec).tv_nsec);[0m
 1873 |         pc->meridian = (yyvsp[0].intval);[0m
 1874 |       }[0m
 1875 | #line 1876 "parse-datetime.c"[0m
 1876 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1880:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1880 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1881 |         set_hhmmss (pc, (yyvsp[-1].textintval).value, 0, 0, 0);[0m
 1882 |         pc->meridian = MER24;[0m
 1883 |       }[0m
 1884 | #line 1885 "parse-datetime.c"[0m
 1885 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1889:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1889 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1890 |         set_hhmmss (pc, (yyvsp[-3].textintval).value, (yyvsp[-1].textintval).value, 0, 0);[0m
 1891 |         pc->meridian = MER24;[0m
 1892 |       }[0m
 1893 | #line 1894 "parse-datetime.c"[0m
 1894 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1898:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1898 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1899 |         set_hhmmss (pc, (yyvsp[-5].textintval).value, (yyvsp[-3].textintval).value, (yyvsp[-1].timespec).tv_sec, (yyvsp[-1].timespec).tv_nsec);[0m
 1900 |         pc->meridian = MER24;[0m
 1901 |       }[0m
 1902 | #line 1903 "parse-datetime.c"[0m
 1903 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1907:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1907 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1908 |         pc->zones_seen++;[0m
 1909 |         if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
 1910 |       }[0m
 1911 | #line 1912 "parse-datetime.c"[0m
 1912 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1909:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1909 |         if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
      | [0;1;32m                                                                             ^        
[0m      | [0;32m                                                                              {
[0m[1mparse-datetime.c:1916:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1916 |       { pc->local_isdst = (yyvsp[0].intval); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1917 | #line 1918 "parse-datetime.c"[0m
 1918 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1922:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1922 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1923 |         pc->local_isdst = 1;[0m
 1924 |         pc->dsts_seen++;[0m
 1925 |       }[0m
 1926 | #line 1927 "parse-datetime.c"[0m
 1927 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1931:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1931 |       { pc->time_zone = (yyvsp[0].intval); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1932 | #line 1933 "parse-datetime.c"[0m
 1933 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1937:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1937 |       { pc->time_zone = -HOUR (7); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1938 | #line 1939 "parse-datetime.c"[0m
 1939 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1943:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1943 |       { pc->time_zone = (yyvsp[-1].intval);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1944 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
 1945 |         debug_print_relative_time (_("relative"), pc);[0m
 1946 |       }[0m
 1947 | #line 1948 "parse-datetime.c"[0m
 1948 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1944:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1944 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
      | [0;1;32m                                                          ^        
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:1952:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1952 |       { pc->time_zone = -HOUR (7);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1953 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
 1954 |         debug_print_relative_time (_("relative"), pc);[0m
 1955 |       }[0m
 1956 | #line 1957 "parse-datetime.c"[0m
 1957 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1953:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1953 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
      | [0;1;32m                                                          ^        
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:1961:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1961 |       { if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1962 |         if (INT_ADD_WRAPV (pc->time_zone, (yyvsp[-2].intval), &pc->time_zone)) YYABORT; }[0m
 1963 | #line 1964 "parse-datetime.c"[0m
 1964 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1961:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1961 |       { if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
      | [0;1;32m                                                                             ^        
[0m      | [0;32m                                                                              {
[0m[1mparse-datetime.c:1962:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1962 |         if (INT_ADD_WRAPV (pc->time_zone, (yyvsp[-2].intval), &pc->time_zone)) YYABORT; }[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m[1mparse-datetime.c:1968:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1968 |       { pc->time_zone = (yyvsp[0].intval) + 60 * 60; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1969 | #line 1970 "parse-datetime.c"[0m
 1970 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1974:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1974 |       { pc->time_zone = (yyvsp[-1].intval) + 60 * 60; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1975 | #line 1976 "parse-datetime.c"[0m
 1976 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1980:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1980 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1981 |         pc->day_ordinal = 0;[0m
 1982 |         pc->day_number = (yyvsp[0].intval);[0m
 1983 |       }[0m
 1984 | #line 1985 "parse-datetime.c"[0m
 1985 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1989:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1989 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1990 |         pc->day_ordinal = 0;[0m
 1991 |         pc->day_number = (yyvsp[-1].intval);[0m
 1992 |       }[0m
 1993 | #line 1994 "parse-datetime.c"[0m
 1994 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1998:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1998 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1999 |         pc->day_ordinal = (yyvsp[-1].intval);[0m
 2000 |         pc->day_number = (yyvsp[0].intval);[0m
 2001 |         pc->debug_ordinal_day_seen = true;[0m
 2002 |       }[0m
 2003 | #line 2004 "parse-datetime.c"[0m
 2004 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2008:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2008 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2009 |         pc->day_ordinal = (yyvsp[-1].textintval).value;[0m
 2010 |         pc->day_number = (yyvsp[0].intval);[0m
 2011 |         pc->debug_ordinal_day_seen = true;[0m
 2012 |       }[0m
 2013 | #line 2014 "parse-datetime.c"[0m
 2014 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2018:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2018 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2019 |         pc->month = (yyvsp[-2].textintval).value;[0m
 2020 |         pc->day = (yyvsp[0].textintval).value;[0m
 2021 |       }[0m
 2022 | #line 2023 "parse-datetime.c"[0m
 2023 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2027:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2027 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mparse-datetime.c:2049:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2049 |             if (debugging (pc))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2050 |               dbg_printf (_("warning: value %"PRIdMAX" has less than 4 digits. "[0m
 2051 |                             "Assuming MM/DD/YY[YY]\n"),[0m
 2052 |                           (yyvsp[-4].textintval).value);[0m
      | [0;1;32m                                                        
[0m[1mparse-datetime.c:2064:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2064 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2065 |         /* E.g., 17-JUN-1992.  */[0m
 2066 |         pc->day = (yyvsp[-2].textintval).value;[0m
 2067 |         pc->month = (yyvsp[-1].intval);[0m
 2068 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
 2069 |         pc->year.digits = (yyvsp[0].textintval).digits;[0m
 2070 |       }[0m
 2071 | #line 2072 "parse-datetime.c"[0m
 2072 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2068:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2068 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
      | [0;1;32m                                                                                 ^        
[0m      | [0;32m                                                                                  {
[0m[1mparse-datetime.c:2076:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2076 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2077 |         /* E.g., JUN-17-1992.  */[0m
 2078 |         pc->month = (yyvsp[-2].intval);[0m
 2079 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->day)) YYABORT;[0m
 2080 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
 2081 |         pc->year.digits = (yyvsp[0].textintval).digits;[0m
 2082 |       }[0m
 2083 | #line 2084 "parse-datetime.c"[0m
 2084 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2079:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2079 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->day)) YYABORT;[0m
      | [0;1;32m                                                                           ^        
[0m      | [0;32m                                                                            {
[0m[1mparse-datetime.c:2080:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2080 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
      | [0;1;32m                                                                                 ^        
[0m      | [0;32m                                                                                  {
[0m[1mparse-datetime.c:2088:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2088 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2089 |         pc->month = (yyvsp[-1].intval);[0m
 2090 |         pc->day = (yyvsp[0].textintval).value;[0m
 2091 |       }[0m
 2092 | #line 2093 "parse-datetime.c"[0m
 2093 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2097:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2097 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2098 |         pc->month = (yyvsp[-3].intval);[0m
 2099 |         pc->day = (yyvsp[-2].textintval).value;[0m
 2100 |         pc->year = (yyvsp[0].textintval);[0m
 2101 |       }[0m
 2102 | #line 2103 "parse-datetime.c"[0m
 2103 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2107:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2107 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2108 |         pc->day = (yyvsp[-1].textintval).value;[0m
 2109 |         pc->month = (yyvsp[0].intval);[0m
 2110 |       }[0m
 2111 | #line 2112 "parse-datetime.c"[0m
 2112 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2116:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2116 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2117 |         pc->day = (yyvsp[-2].textintval).value;[0m
 2118 |         pc->month = (yyvsp[-1].intval);[0m
 2119 |         pc->year = (yyvsp[0].textintval);[0m
 2120 |       }[0m
 2121 | #line 2122 "parse-datetime.c"[0m
 2122 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2126:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2126 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2127 |         /* ISO 8601 format.  YYYY-MM-DD.  */[0m
 2128 |         pc->year = (yyvsp[-2].textintval);[0m
 2129 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->month)) YYABORT;[0m
 2130 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->day)) YYABORT;[0m
 2131 |       }[0m
 2132 | #line 2133 "parse-datetime.c"[0m
 2133 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2129:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2129 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->month)) YYABORT;[0m
      | [0;1;32m                                                                             ^        
[0m      | [0;32m                                                                              {
[0m[1mparse-datetime.c:2130:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2130 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->day)) YYABORT;[0m
      | [0;1;32m                                                                          ^        
[0m      | [0;32m                                                                           {
[0m[1mparse-datetime.c:2137:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2137 |       { if (! apply_relative_time (pc, (yyvsp[-1].rel), (yyvsp[0].intval))) YYABORT; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2138 | #line 2139 "parse-datetime.c"[0m
 2139 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2137:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2137 |       { if (! apply_relative_time (pc, (yyvsp[-1].rel), (yyvsp[0].intval))) YYABORT; }[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m[1mparse-datetime.c:2143:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2143 |       { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2144 | #line 2145 "parse-datetime.c"[0m
 2145 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2143:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2143 |       { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:2149:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2149 |       { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2150 | #line 2151 "parse-datetime.c"[0m
 2151 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2149:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2149 |       { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:2155:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2155 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = (yyvsp[-1].intval); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2156 | #line 2157 "parse-datetime.c"[0m
 2157 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2161:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2161 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2162 | #line 2163 "parse-datetime.c"[0m
 2163 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2167:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2167 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = 1; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2168 | #line 2169 "parse-datetime.c"[0m
 2169 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2173:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2173 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = (yyvsp[-1].intval); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2174 | #line 2175 "parse-datetime.c"[0m
 2175 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2179:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2179 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2180 | #line 2181 "parse-datetime.c"[0m
 2181 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2185:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2185 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = 1; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2186 | #line 2187 "parse-datetime.c"[0m
 2187 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2191:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2191 |       { (yyval.rel) = RELATIVE_TIME_0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2192 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].intval), (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
 2193 | #line 2194 "parse-datetime.c"[0m
 2194 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2192:90: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2192 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].intval), (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m[1mparse-datetime.c:2198:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2198 |       { (yyval.rel) = RELATIVE_TIME_0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2199 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
 2200 | #line 2201 "parse-datetime.c"[0m
 2201 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2199:100: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2199 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m[1mparse-datetime.c:2205:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2205 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).day = (yyvsp[0].intval); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2206 | #line 2207 "parse-datetime.c"[0m
 2207 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2211:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2211 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = (yyvsp[-1].intval); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2212 | #line 2213 "parse-datetime.c"[0m
 2213 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2217:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2217 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2218 | #line 2219 "parse-datetime.c"[0m
 2219 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2223:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2223 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = 1; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2224 | #line 2225 "parse-datetime.c"[0m
 2225 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2229:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2229 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = (yyvsp[-1].intval); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2230 | #line 2231 "parse-datetime.c"[0m
 2231 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2235:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2235 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2236 | #line 2237 "parse-datetime.c"[0m
 2237 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2241:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2241 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = 1; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2242 | #line 2243 "parse-datetime.c"[0m
 2243 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2247:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2247 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].intval); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2248 | #line 2249 "parse-datetime.c"[0m
 2249 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2253:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2253 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2254 | #line 2255 "parse-datetime.c"[0m
 2255 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2259:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2259 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].timespec).tv_sec; (yyval.rel).ns = (yyvsp[-1].timespec).tv_nsec; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2260 | #line 2261 "parse-datetime.c"[0m
 2261 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2265:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2265 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].timespec).tv_sec; (yyval.rel).ns = (yyvsp[-1].timespec).tv_nsec; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2266 | #line 2267 "parse-datetime.c"[0m
 2267 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2271:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2271 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = 1; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2272 | #line 2273 "parse-datetime.c"[0m
 2273 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2277:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2277 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2278 | #line 2279 "parse-datetime.c"[0m
 2279 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2283:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2283 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2284 | #line 2285 "parse-datetime.c"[0m
 2285 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2289:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2289 |       { (yyval.rel) = RELATIVE_TIME_0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2290 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
 2291 | #line 2292 "parse-datetime.c"[0m
 2292 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2290:100: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2290 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m[1mparse-datetime.c:2296:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2296 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2297 | #line 2298 "parse-datetime.c"[0m
 2298 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2302:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2302 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2303 | #line 2304 "parse-datetime.c"[0m
 2304 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2308:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2308 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2309 | #line 2310 "parse-datetime.c"[0m
 2310 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2314:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2314 |       { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).day = (yyvsp[0].intval); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2315 | #line 2316 "parse-datetime.c"[0m
 2316 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2320:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2320 |       { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2321 |         (yyval.timespec).tv_sec = (yyvsp[0].textintval).value; (yyval.timespec).tv_nsec = 0; }[0m
 2322 | #line 2323 "parse-datetime.c"[0m
 2323 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2320:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2320 |       { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m                                                        ^        
[0m      | [0;32m                                                         {
[0m[1mparse-datetime.c:2327:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2327 |       { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2328 |         (yyval.timespec).tv_sec = (yyvsp[0].textintval).value; (yyval.timespec).tv_nsec = 0; }[0m
 2329 | #line 2330 "parse-datetime.c"[0m
 2330 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2327:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2327 |       { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m                                                        ^        
[0m      | [0;32m                                                         {
[0m[1mparse-datetime.c:2334:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2334 |       { digits_to_date_time (pc, (yyvsp[0].textintval)); }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2335 | #line 2336 "parse-datetime.c"[0m
 2336 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2340:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2340 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2341 |         /* Hybrid all-digit and relative offset, so that we accept e.g.,[0m
 2342 |            "YYYYMMDD +N days" as well as "YYYYMMDD N days".  */[0m
 2343 |         digits_to_date_time (pc, (yyvsp[-1].textintval));[0m
 2344 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
 2345 |       }[0m
 2346 | #line 2347 "parse-datetime.c"[0m
 2347 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2344:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2344 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
      | [0;1;32m                                                          ^        
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:2351:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2351 |       { (yyval.intval) = -1; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2352 | #line 2353 "parse-datetime.c"[0m
 2353 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2357:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2357 |       { (yyval.intval) = (yyvsp[0].textintval).value; }[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2358 | #line 2359 "parse-datetime.c"[0m
 2359 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2364:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2364 |       default: break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mparse-datetime.c:2420:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2420 |           if (yychar == YYEOF)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2421 |             YYABORT;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:2442:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2442 |   if (0)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 2443 |     YYERROR;[0m
      | [0;1;32m            
[0m[1mparse-datetime.c:2471:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2471 |               if (0 < yyn)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2472 |                 break;[0m
      | [0;1;32m                      
[0m[1mparse-datetime.c:2477:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2477 |       if (yyssp == yyss)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2478 |         YYABORT;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2548:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2548 |   if (yyss != yyssa)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2549 |     YYSTACK_FREE (yyss);[0m
      | [0;1;32m                        
[0m[1mparse-datetime.c:2765:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2765 |   if (s.digits <= 2 && mm < 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2766 |     s.value *= 100;[0m
      | [0;1;32m                   
[0m[1mparse-datetime.c:2768:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2768 |   if (mm < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2769 |     n_minutes = (s.value / 100) * 60 + s.value % 100;[0m
 2770 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:2778:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2778 |   if (overflow || ! (-24 * 60 <= n_minutes && n_minutes <= 24 * 60))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2779 |     return false;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:2793:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2793 |       return 0 < hours && hours < 12 ? hours : hours == 12 ? 0 : -1;[0m
      | [0;1;32m      ^                                                            
[0m      | [0;32m      {                                                            ;} 
[0m[1mparse-datetime.c:2795:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2795 |       return 0 < hours && hours < 12 ? hours + 12 : hours == 12 ? 12 : -1;[0m
      | [0;1;32m      ^                                                                  
[0m      | [0;32m      {                                                                  ;} 
[0m[1mparse-datetime.c:2828:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2828 |       if (debug)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2829 |         dbg_printf (_("warning: adjusting year value %"PRIdMAX[0m
 2830 |                       " to %"PRIdMAX"\n"),[0m
 2831 |                     textyear.value, year);[0m
      | [0;1;32m                                          
[0m[1mparse-datetime.c:2838:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2838 |       if (debug)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2839 |         dbg_printf (_("error: out-of-range year %"PRIdMAX"\n"), year);[0m
      | [0;1;32m                                                                      
[0m[1mparse-datetime.c:2851:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2851 |   for (tp = universal_time_zone_table; tp->name; tp++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2852 |     if (strcmp (name, tp->name) == 0)[0m
 2853 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2852:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2852 |     if (strcmp (name, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2853 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2857:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2857 |   for (tp = pc->local_time_zone_table; tp->name; tp++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2858 |     if (strcmp (name, tp->name) == 0)[0m
 2859 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2858:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2858 |     if (strcmp (name, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2859 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2861:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2861 |   for (tp = time_zone_table; tp->name; tp++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2862 |     if (strcmp (name, tp->name) == 0)[0m
 2863 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2862:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2862 |     if (strcmp (name, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2863 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2906:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2906 |   for (p = word; *p; p++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2907 |     *p = c_toupper (to_uchar (*p));[0m
      | [0;1;32m                                   
[0m[1mparse-datetime.c:2909:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2909 |   for (tp = meridian_table; tp->name; tp++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2910 |     if (strcmp (word, tp->name) == 0)[0m
 2911 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2910:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2910 |     if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2911 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2917:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2917 |   for (tp = month_and_day_table; tp->name; tp++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2918 |     if ((abbrev ? strncmp (word, tp->name, 3) : strcmp (word, tp->name)) == 0)[0m
 2919 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2918:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2918 |     if ((abbrev ? strncmp (word, tp->name, 3) : strcmp (word, tp->name)) == 0)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2919 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2921:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2921 |   if ((tp = lookup_zone (pc, word)))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2922 |     return tp;[0m
      | [0;1;32m              
[0m[1mparse-datetime.c:2924:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2924 |   if (strcmp (word, dst_table[0].name) == 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2925 |     return dst_table;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:2927:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2927 |   for (tp = time_units_table; tp->name; tp++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2928 |     if (strcmp (word, tp->name) == 0)[0m
 2929 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2928:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2928 |     if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2929 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2935:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2935 |       for (tp = time_units_table; tp->name; tp++)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2936 |         if (strcmp (word, tp->name) == 0)[0m
 2937 |           return tp;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:2936:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2936 |         if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2937 |           return tp;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:2941:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2941 |   for (tp = relative_time_table; tp->name; tp++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2942 |     if (strcmp (word, tp->name) == 0)[0m
 2943 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2942:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2942 |     if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2943 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2946:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2946 |   if (wordlen == 1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2947 |     for (tp = military_table; tp->name; tp++)[0m
 2948 |       if (word[0] == tp->name[0])[0m
 2949 |         return tp;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:2947:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2947 |     for (tp = military_table; tp->name; tp++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2948 |       if (word[0] == tp->name[0])[0m
 2949 |         return tp;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:2948:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2948 |       if (word[0] == tp->name[0])[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2949 |         return tp;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:2952:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2952 |   for (period_found = false, p = q = word; (*p = *q); q++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2953 |     if (*q == '.')[0m
 2954 |       period_found = true;[0m
 2955 |     else[0m
 2956 |       p++;[0m
      | [0;1;32m          
[0m[1mparse-datetime.c:2953:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2953 |     if (*q == '.')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2954 |       period_found = true;[0m
 2955 |     else[0m
      | [0;32m    } 
[0m[1mparse-datetime.c:2955:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2955 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 2956 |       p++;[0m
      | [0;1;32m          
[0m[1mparse-datetime.c:2957:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2957 |   if (period_found && (tp = lookup_zone (pc, word)))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2958 |     return tp;[0m
      | [0;1;32m              
[0m[1mparse-datetime.c:2970:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2970 |       while (c = *pc->input, c_isspace (c))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2971 |         pc->input++;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:2980:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2980 |               while (c = *(pc->input = ++p), c_isspace (c))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 2981 |                 continue;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:2982:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2982 |               if (! c_isdigit (c))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2983 |                 /* skip the '-' sign */[0m
 2984 |                 continue;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:2986:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2986 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2987 |             sign = 0;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:2992:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2992 |               if (INT_MULTIPLY_WRAPV (value, 10, &value))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2993 |                 return '?';[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:2994:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2994 |               if (INT_ADD_WRAPV (value, sign < 0 ? '0' - c : c - '0', &value))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2995 |                 return '?';[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:3011:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3011 |                   if (c_isdigit (*p))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3012 |                     ns += *p++ - '0';[0m
      | [0;1;32m                                     
[0m[1mparse-datetime.c:3016:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3016 |               if (sign < 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3017 |                 for (; c_isdigit (*p); p++)[0m
 3018 |                   if (*p != '0')[0m
 3019 |                     {[0m
 3020 |                       ns++;[0m
 3021 |                       break;[0m
 3022 |                     }[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3017:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3017 |                 for (; c_isdigit (*p); p++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3018 |                   if (*p != '0')[0m
 3019 |                     {[0m
 3020 |                       ns++;[0m
 3021 |                       break;[0m
 3022 |                     }[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3023:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3023 |               while (c_isdigit (*p))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3024 |                 p++;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3031:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3031 |                   if (INT_SUBTRACT_WRAPV (s, 1, &s))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3032 |                     return '?';[0m
      | [0;1;32m                               
[0m[1mparse-datetime.c:3059:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3059 |               if (p < buff + sizeof buff - 1)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3060 |                 *p++ = c;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3069:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3069 |               if (debugging (pc))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3070 |                 dbg_printf (_("error: unknown word '%s'\n"), buff);[0m
      | [0;1;32m                                                                   
[0m[1mparse-datetime.c:3077:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3077 |       if (c != '(')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3078 |         return to_uchar (*pc->input++);[0m
      | [0;1;32m                                       
[0m[1mparse-datetime.c:3084:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3084 |           if (c == '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3085 |             return c;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3086:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3086 |           if (c == '(')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3087 |             count++;[0m
 3088 |           else if (c == ')')[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:3088:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3088 |           else if (c == ')')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3089 |             count--;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3112:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3112 |   if (tm1->tm_wday < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3113 |     return false;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:3161:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3161 |       if (pc->local_zones_seen && !pc->zones_seen && 0 < pc->local_isdst)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 3162 |         tz += 60 * 60;[0m
      | [0;1;32m                      
[0m[1mparse-datetime.c:3216:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3216 |   if (!debugging (pc))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3217 |     return;[0m
      | [0;1;32m           
[0m[1mparse-datetime.c:3237:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3237 |       if (sizeof tmp - 1 < i)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3238 |         i = sizeof tmp - 1;[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:3239:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3239 |       while (0 < i && tmp[i - 1] == ' ')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3240 |         --i;[0m
      | [0;1;32m            
[0m[1mparse-datetime.c:3246:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3246 |   if (dst_shift)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3247 |     dbg_printf (_("       non-existing due to daylight-saving time;\n"));[0m
      | [0;1;32m                                                                         
[0m[1mparse-datetime.c:3248:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3248 |   if (!eq_mday && !eq_month)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3249 |     dbg_printf (_("       invalid day/month combination;\n"));[0m
      | [0;1;32m                                                              
[0m[1mparse-datetime.c:3289:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3289 |   while (c = *p, c_isspace (c))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3290 |     p++;[0m
      | [0;1;32m        
[0m[1mparse-datetime.c:3305:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3305 |       for (s = tzbase; *s; s++, tzsize++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m[1mparse-datetime.c:3309:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3309 |             if (! (*s == '\\' || *s == '"'))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3310 |               break;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3320:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3320 |                 if (!tz1alloc)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3321 |                   goto fail;[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:3325:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3325 |             for (s = tzbase; *s != '"'; s++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3326 |               *z++ = *(s += *s == '\\');[0m
      | [0;1;32m                                        
[0m[1mparse-datetime.c:3329:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3329 |             if (!tz1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3330 |               goto fail;[0m
      | [0;1;32m                        
[0m[1mparse-datetime.c:3335:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3335 |             while (c = *p, c_isspace (c))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3336 |               p++;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:3343:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3343 |   if (! localtime_rz (tz, &now->tv_sec, &tmp))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3344 |     goto fail;[0m
      | [0;1;32m              
[0m[1mparse-datetime.c:3349:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3349 |   if (*p == '\0')[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 3350 |     p = "0";[0m
      | [0;1;32m            
[0m[1mparse-datetime.c:3359:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3359 |       if (debugging (&pc))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3360 |         dbg_printf (_("error: initial year out of range\n"));[0m
      | [0;1;32m                                                             
[0m[1mparse-datetime.c:3404:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3404 |         if (INT_ADD_WRAPV (Start, quarter * (90 * 24 * 60 * 60), &probe))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 3405 |           break;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3453:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3453 |       if (debugging (&pc))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3454 |         dbg_printf ((input_sentinel <= pc.input[0m
 3455 |                      ? _("error: parsing failed\n")[0m
 3456 |                      : _("error: parsing failed, stopped at '%s'\n")),[0m
 3457 |                     pc.input);[0m
      | [0;1;32m                              
[0m[1mparse-datetime.c:3468:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3468 |       if (pc.timespec_seen)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3469 |         fprintf (stderr, _("'@timespec' - always UTC"));[0m
 3470 |       else if (pc.zones_seen)[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:3470:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3470 |       else if (pc.zones_seen)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3471 |         fprintf (stderr, _("parsed date/time string"));[0m
 3472 |       else if (tzstring)[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:3474:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3474 |           if (tz != tzdefault)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3475 |             fprintf (stderr, _("TZ=\"%s\" in date string"), tzstring);[0m
 3476 |           else if (STREQ (tzstring, "UTC0"))[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:3481:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3481 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3482 |             fprintf (stderr, _("TZ=\"%s\" environment value"), tzstring);[0m
      | [0;1;32m                                                                         
[0m[1mparse-datetime.c:3484:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3484 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3485 |         fprintf (stderr, _("system default"));[0m
      | [0;1;32m                                              
[0m[1mparse-datetime.c:3490:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3490 |       if (pc.local_zones_seen && !pc.zones_seen && 0 < pc.local_isdst)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 3491 |         fprintf (stderr, ", dst");[0m
      | [0;1;32m                                  
[0m[1mparse-datetime.c:3493:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3493 |       if (pc.zones_seen)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3494 |         fprintf (stderr, " (%s)", time_zone_str (pc.time_zone, time_zone_buf));[0m
      | [0;1;32m                                                                               
[0m[1mparse-datetime.c:3499:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3499 |   if (pc.timespec_seen)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3500 |     *result = pc.seconds;[0m
 3501 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:3508:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3508 |               if (pc.times_seen > 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3509 |                 dbg_printf ("error: seen multiple time parts\n");[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3510:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3510 |               if (pc.dates_seen > 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3511 |                 dbg_printf ("error: seen multiple date parts\n");[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3512:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3512 |               if (pc.days_seen > 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3513 |                 dbg_printf ("error: seen multiple days parts\n");[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3514:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3514 |               if (pc.dsts_seen > 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3515 |                 dbg_printf ("error: seen multiple daylight-saving parts\n");[0m
      | [0;1;32m                                                                            
[0m[1mparse-datetime.c:3516:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3516 |               if ((pc.local_zones_seen + pc.zones_seen) > 1)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 3517 |                 dbg_printf ("error: seen multiple time-zone parts\n");[0m
      | [0;1;32m                                                                      
[0m[1mparse-datetime.c:3526:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3526 |           if (debugging (&pc))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3527 |             dbg_printf (_("error: year, month, or day overflow\n"));[0m
      | [0;1;32m                                                                    
[0m[1mparse-datetime.c:3537:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3537 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3538 |                 dbg_printf (_("error: invalid hour %"PRIdMAX"%s\n"),[0m
 3539 |                             pc.hour, mrd);[0m
      | [0;1;32m                                          
[0m[1mparse-datetime.c:3544:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3544 |           if (debugging (&pc))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3545 |             dbg_printf ((pc.times_seen[0m
 3546 |                          ? _("using specified time as starting value: '%s'\n")[0m
 3547 |                          : _("using current time as starting value: '%s'\n")),[0m
 3548 |                         debug_strftime (&tm, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                     
[0m[1mparse-datetime.c:3554:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3554 |           if (debugging (&pc))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3555 |             dbg_printf ("warning: using midnight as starting time: 00:00:00\n");[0m
      | [0;1;32m                                                                                
[0m[1mparse-datetime.c:3559:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3559 |       if (pc.dates_seen | pc.days_seen | pc.times_seen)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3560 |         tm.tm_isdst = -1;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3564:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3564 |       if (pc.local_zones_seen)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3565 |         tm.tm_isdst = pc.local_isdst;[0m
      | [0;1;32m                                     
[0m[1mparse-datetime.c:3600:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3600 |                   if (debugging (&pc))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3601 |                     dbg_printf (_("error: tzalloc (\"%s\") failed\n"), tz2buf);[0m
      | [0;1;32m                                                                               
[0m[1mparse-datetime.c:3635:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3635 |               || INT_ADD_WRAPV (dayincr, tm.tm_mday, &tm.tm_mday))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 3636 |             Start = -1;[0m
 3637 |           else[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:3645:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3645 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3646 |                 dbg_printf (_("error: day '%s' "[0m
 3647 |                               "(day ordinal=%"PRIdMAX" number=%d) "[0m
 3648 |                               "resulted in an invalid date: '%s'\n"),[0m
 3649 |                             str_days (&pc, dbg_ord, sizeof dbg_ord),[0m
 3650 |                             pc.day_ordinal, pc.day_number,[0m
 3651 |                             debug_strfdatetime (&tm, &pc, dbg_tm,[0m
 3652 |                                                 sizeof dbg_tm));[0m
      | [0;1;32m                                                                
[0m[1mparse-datetime.c:3656:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3656 |           if (debugging (&pc))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3657 |             dbg_printf (_("new start date: '%s' is '%s'\n"),[0m
 3658 |                         str_days (&pc, dbg_ord, sizeof dbg_ord),[0m
 3659 |                         debug_strfdatetime (&tm, &pc, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                              
[0m[1mparse-datetime.c:3665:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3665 |           if (!pc.dates_seen && !pc.days_seen)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3666 |             dbg_printf (_("using current date as starting value: '%s'\n"),[0m
 3667 |                         debug_strfdate (&tm, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                     
[0m[1mparse-datetime.c:3669:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3669 |           if (pc.days_seen && pc.dates_seen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3670 |             dbg_printf (_("warning: day (%s) ignored when explicit dates "[0m
 3671 |                           "are given\n"),[0m
 3672 |                         str_days (&pc, dbg_ord, sizeof dbg_ord));[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3683:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3683 |               if ((pc.rel.year != 0 || pc.rel.month != 0) && tm.tm_mday != 15)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3684 |                 dbg_printf (_("warning: when adding relative months/years, "[0m
 3685 |                               "it is recommended to specify the 15th of the "[0m
 3686 |                               "months\n"));[0m
      | [0;1;32m                                           
[0m[1mparse-datetime.c:3688:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3688 |               if (pc.rel.day != 0 && tm.tm_hour != 12)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3689 |                 dbg_printf (_("warning: when adding relative days, "[0m
 3690 |                               "it is recommended to specify noon\n"));[0m
      | [0;1;32m                                                                      
[0m[1mparse-datetime.c:3698:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3698 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3699 |                 dbg_printf (_("error: %s:%d\n"), __FILE__, __LINE__);[0m
      | [0;1;32m                                                                     
[0m[1mparse-datetime.c:3712:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3712 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3713 |                 dbg_printf (_("error: adding relative date resulted "[0m
 3714 |                               "in an invalid date: '%s'\n"),[0m
 3715 |                             debug_strfdatetime (&tm, &pc, dbg_tm,[0m
 3716 |                                                 sizeof dbg_tm));[0m
      | [0;1;32m                                                                
[0m[1mparse-datetime.c:3744:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3744 |               if (tm0.tm_isdst != -1 && tm.tm_isdst != tm0.tm_isdst)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 3745 |                 dbg_printf (_("warning: daylight saving time changed after "[0m
 3746 |                               "date adjustment\n"));[0m
      | [0;1;32m                                                    
[0m[1mparse-datetime.c:3797:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3797 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3798 |                 dbg_printf (_("error: timezone %d caused time_t overflow\n"),[0m
 3799 |                             pc.time_zone);[0m
      | [0;1;32m                                          
[0m[1mparse-datetime.c:3835:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3835 |             if (debugging (&pc))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3836 |               dbg_printf (_("error: adding relative time caused an "[0m
 3837 |                             "overflow\n"));[0m
      | [0;1;32m                                           
[0m[1mparse-datetime.c:3868:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3868 |                 && tm.tm_isdst != lmt.tm_isdst)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 3869 |               dbg_printf (_("warning: daylight saving time changed after "[0m
 3870 |                             "time adjustment\n"));[0m
      | [0;1;32m                                                  
[0m[1mparse-datetime.c:3878:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3878 |       if (! tzstring)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3879 |         dbg_printf (_("timezone: system default\n"));[0m
 3880 |       else if (STREQ (tzstring, "UTC0"))[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:3880:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3880 |       else if (STREQ (tzstring, "UTC0"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3881 |         dbg_printf (_("timezone: Universal Time\n"));[0m
 3882 |       else[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:3882:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3882 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3883 |         dbg_printf (_("timezone: TZ=\"%s\" environment value\n"), tzstring);[0m
      | [0;1;32m                                                                            
[0m[1mparse-datetime.c:3892:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3892 |       if (got_utc)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3893 |         dbg_printf (_("final: %s (UTC)\n"),[0m
 3894 |                     debug_strfdatetime (&gmt, NULL,[0m
 3895 |                                         dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                
[0m[1mparse-datetime.c:3907:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3907 |           if (got_utcoff)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 3908 |             dbg_printf (_("final: %s (UTC%s)\n"),[0m
 3909 |                         debug_strfdatetime (&lmt, NULL, dbg_tm, sizeof dbg_tm),[0m
 3910 |                         time_zone_str (utcoff, time_zone_buf));[0m
 3911 |           else[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:3911:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3911 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3912 |             dbg_printf (_("final: %s (unknown time zone offset)\n"),[0m
 3913 |                         debug_strfdatetime (&lmt, NULL, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                                
[0m[1mparse-datetime.c:3920:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3920 |   if (tz != tzdefault)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3921 |     tzfree (tz);[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3949:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3949 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3950 |     return false;[0m
      | [0;1;32m                 
[0m254 warnings generated.
Suppressed 22 warnings (22 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 78/172][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp85rev9bv.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/dup-safer-flag.c
[ 79/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpixks_yrc.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/dup-safer.c
[ 80/172][2.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpn52iert8.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/version-etc.c
[1mversion-etc.c:66:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (command_name)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
   68 |   else[0m
      | [0;32m  } 
[0m[1mversion-etc.c:67:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:67:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:68:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m                                                  
[0m[1mversion-etc.c:69:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:69:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:83:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   83 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:83:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   83 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:88:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   88 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:88:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   88 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:102:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  102 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mversion-etc.c:105:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:105:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:105:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  106 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:109:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:109:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:109:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  110 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:113:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:113:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:113:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  114 |                authors[0], authors[1], authors[2]);[0m
  115 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:120:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:120:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:120:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  121 |                authors[0], authors[1], authors[2], authors[3]);[0m
  122 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:127:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:127:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:127:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  128 |                authors[0], authors[1], authors[2], authors[3], authors[4]);[0m
  129 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:134:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:134:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:134:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  135 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  136 |                authors[5]);[0m
  137 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:142:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:142:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:142:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  143 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  144 |                authors[5], authors[6]);[0m
  145 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:150:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:150:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:150:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  151 | Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"),[0m
  152 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  153 |                 authors[5], authors[6], authors[7]);[0m
  154 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:159:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:159:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:159:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  160 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"),[0m
  161 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  162 |                authors[5], authors[6], authors[7], authors[8]);[0m
  163 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:170:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:170:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:170:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  171 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"),[0m
  172 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  173 |                 authors[5], authors[6], authors[7], authors[8]);[0m
  174 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:189:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   for (n_authors = 0; authors[n_authors]; n_authors++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  190 |     ;[0m
      | [0;1;32m     
[0m[1mversion-etc.c:209:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |        n_authors++)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  210 |     ;[0m
      | [0;1;32m     
[0m39 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 81/172][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpjdjhn1rx.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/setlocale_null.c
[1msetlocale_null.c:145:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       if (bufsize > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  146 |         /* Return an empty string in BUF.[0m
  147 |            This is a convenience for callers that don't want to write explicit[0m
  148 |            code for handling EINVAL.  */[0m
  149 |         buf[0] = '\0';[0m
      | [0;1;32m                      
[0m[1msetlocale_null.c:157:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:157:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 82/172][11.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpmo2q01wb.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/xstrtol.c
[1mxstrtol.c:69:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |   while (power--)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   70 |     err |= bkm_scale (x, base);[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:95:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |       while (isspace (ch))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   96 |         ch = *++q;[0m
      | [0;1;32m                  
[0m[1mxstrtol.c:97:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |       if (ch == '-')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   98 |         return LONGINT_INVALID;[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:107:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |       if (valid_suffixes && **p && strchr (valid_suffixes, **p))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  108 |         tmp = 1;[0m
  109 |       else[0m
      | [0;32m      } 
[0m[1mxstrtol.c:109:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  110 |         return LONGINT_INVALID;[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:114:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |       if (errno != ERANGE)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  115 |         return LONGINT_INVALID;[0m
      | [0;1;32m                               
[0m[1mxstrtol.c:152:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |           if (strchr (valid_suffixes, '0'))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  153 |             switch (p[0][1])[0m
  154 |               {[0m
  155 |               case 'i':[0m
  156 |                 if (p[0][2] == 'B')[0m
  157 |                   suffixes += 2;[0m
  158 |                 break;[0m
  159 | [0m
  160 |               case 'B':[0m
  161 |               case 'D': /* 'D' is obsolescent */[0m
  162 |                 base = 1000;[0m
  163 |                 suffixes++;[0m
  164 |                 break;[0m
  165 |               }[0m
      | [0;1;32m               
[0m[1mxstrtol.c:156:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |                 if (p[0][2] == 'B')[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  157 |                   suffixes += 2;[0m
  158 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mxstrtol.c:156:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |                 if (p[0][2] == 'B')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  157 |                   suffixes += 2;[0m
      | [0;1;32m                                
[0m[1mxstrtol.c:163:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  163 |                 suffixes++;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  164 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mxstrtol.c:171:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |           overflow = bkm_scale (&tmp, 512);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  172 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:178:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  178 |           overflow = bkm_scale (&tmp, 1024);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  179 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:182:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  182 |           overflow = LONGINT_OK;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  183 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:186:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  186 |           overflow = bkm_scale_by_power (&tmp, base, 6);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  187 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:192:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  192 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:197:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  197 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:202:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  202 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:205:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  205 |           overflow = bkm_scale_by_power (&tmp, base, 5);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  206 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:211:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  211 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxstrtol.c:214:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  214 |           overflow = bkm_scale (&tmp, 2);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  215 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:218:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  218 |           overflow = bkm_scale_by_power (&tmp, base, 8);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  219 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:222:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  222 |           overflow = bkm_scale_by_power (&tmp, base, 7);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  223 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxstrtol.c:226:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  226 |           *val = tmp;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  227 |           return err | LONGINT_INVALID_SUFFIX_CHAR;[0m
      | [0;1;32m                                                  
[0m      | [0;32m                                                  ;} 
[0m[1mxstrtol.c:232:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |       if (**p)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  233 |         err |= LONGINT_INVALID_SUFFIX_CHAR;[0m
      | [0;1;32m                                           
[0m26 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 83/172][2.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmptakm7559.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/regextype.c
[1mregextype.c:77:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |       if (0 == strcmp (regex_map[i].name, s))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   78 |         return regex_map[i].option_val;[0m
   79 |       else[0m
      | [0;32m      } 
[0m[1mregextype.c:79:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   80 |         msglen += strlen (quote (regex_map[i].name)) + 2u;[0m
      | [0;1;32m                                                          
[0m[1mregextype.c:91:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   91 |           strcpy (p, ", ");[0m
      | [0;1;32m          ^~~~~~
[0m[1mregextype.c:91:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   91 |           strcpy (p, ", ");[0m
      | [0;1;32m          ^~~~~~
[0m[1mregextype.c:94:12: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   94 |       p += sprintf (p, "%s", quote (regex_map[i].name));[0m
      | [0;1;32m           ^~~~~~~
[0m[1mregextype.c:94:12: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   94 |       p += sprintf (p, "%s", quote (regex_map[i].name));[0m
      | [0;1;32m           ^~~~~~~
[0m[1mregextype.c:109:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  109 |   if (ix < N_REGEX_MAP_ENTRIES)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  110 |     return regex_map[ix].name;[0m
  111 |   else[0m
      | [0;32m  } 
[0m[1mregextype.c:111:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  112 |     return NULL;[0m
      | [0;1;32m                
[0m[1mregextype.c:118:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |   if (ix < N_REGEX_MAP_ENTRIES)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  119 |     return regex_map[ix].option_val;[0m
  120 |   else[0m
      | [0;32m  } 
[0m[1mregextype.c:120:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  120 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  121 |     return -1;[0m
      | [0;1;32m              
[0m[1mregextype.c:126:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |   if (ix < N_REGEX_MAP_ENTRIES)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  127 |     return regex_map[ix].context;[0m
  128 |   else[0m
      | [0;32m  } 
[0m[1mregextype.c:128:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  129 |     return 0u;[0m
      | [0;1;32m              
[0m[1mregextype.c:138:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |   if (ix >= N_REGEX_MAP_ENTRIES)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  139 |     return -1;[0m
      | [0;1;32m              
[0m23 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 84/172][2.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmptrnohjoy.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/openat-die.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 85/172][6.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmplo3qu3bo.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/mbslen.c
[1mmbslen.c:37:12: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   37 |       for (mbui_init (iter, string); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m           ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbslen.c:37:12: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   37 |       for (mbui_init (iter, string); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m           ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbslen.c:37:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   37 |       for (mbui_init (iter, string); mbui_avail (iter); mbui_advance (iter))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m   38 |         count++;[0m
      | [0;1;32m                
[0m[1mmbslen.c:42:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   43 |     return strlen (string);[0m
      | [0;1;32m                           
[0m15 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 86/172][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpugd1hy1h.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/closein.c
[1mclosein.c:91:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |       if (fseeko (stdin, 0, SEEK_CUR) == 0 && fflush (stdin) != 0)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   92 |         fail = true;[0m
      | [0;1;32m                    
[0m[1mclosein.c:94:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |   if (close_stream (stdin) != 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   95 |     fail = true;[0m
      | [0;1;32m                
[0m[1mclosein.c:101:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |       if (file_name)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  102 |         error (0, errno, "%s: %s", quotearg_colon (file_name),[0m
  103 |                close_error);[0m
  104 |       else[0m
      | [0;32m      } 
[0m[1mclosein.c:104:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  105 |         error (0, errno, "%s", close_error);[0m
      | [0;1;32m                                            
[0m[1mclosein.c:110:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |   if (fail)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  111 |     _exit (exit_failure);[0m
      | [0;1;32m                         
[0m17 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 87/172][2.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp8ffpk7hi.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/nanosleep.c
[1mnanosleep.c:78:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |             if (remaining_delay)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   79 |               remaining_delay->tv_sec += seconds;[0m
      | [0;1;32m                                                 
[0m1 warning generated.

[ 88/172][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpfxv1oy28.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/safe-atoi.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 89/172][6.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpbbma7e2j.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/exec.c
[1mexec.c:56:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |   if (execp->wd_for_exec->desc < 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   57 |     return false;[0m
      | [0;1;32m                 
[0m[1mexec.c:167:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  167 |       if (execp->state.todo)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  168 |         state.execdirs_outstanding = true;[0m
      | [0;1;32m                                          
[0m[1mexec.c:194:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |           if (0 == WEXITSTATUS(execp->last_child_status))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  195 |             result = true;        /* The child succeeded. */[0m
  196 |           else[0m
      | [0;32m          } 
[0m[1mexec.c:196:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  197 |             result = false;[0m
      | [0;1;32m                           
[0m[1mexec.c:203:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |       if (local)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  204 |         free_cwd (execp->wd_for_exec);[0m
      | [0;1;32m                                      
[0m[1mexec.c:294:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  294 |       fprintf (stderr, "DebugExec: launching process (argc=%" PRIuMAX "):",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mexec.c:294:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  294 |       fprintf (stderr, "DebugExec: launching process (argc=%" PRIuMAX "):",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mexec.c:298:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  298 |           fprintf (stderr, " %s",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mexec.c:298:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  298 |           fprintf (stderr, " %s",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mexec.c:301:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  301 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mexec.c:301:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  301 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mexec.c:316:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |   if (child_pid == -1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  317 |     die (EXIT_FAILURE, errno, _("cannot fork"));[0m
      | [0;1;32m                                                
[0m[1mexec.c:334:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |       if (bc_args_exceed_testing_limit (argv))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  335 |         errno = E2BIG;[0m
  336 |       else[0m
      | [0;32m      } 
[0m[1mexec.c:336:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  337 |         execvp (argv[0], argv);[0m
      | [0;1;32m                               
[0m[1mexec.c:378:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  378 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mexec.c:378:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  378 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m24 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 90/172][2.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpzdnhcyt7.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/dirname-lgpl.c
[1mdirname-lgpl.c:49:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |        prefix_length < length; length--)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   50 |     if (! ISSLASH (file[length - 1]))[0m
   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:50:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |     if (! ISSLASH (file[length - 1]))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:79:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |   if (!dir)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   80 |     return NULL;[0m
      | [0;1;32m                
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:82:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |   if (append_dot)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   83 |     dir[length++] = '.';[0m
      | [0;1;32m                        
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 91/172][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp2wve8xca.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/getfilecon.c
[ 92/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpos_sjk25.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/yesno.c
[1myesno.c:41:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   if (response_len <= 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   42 |     yes = false;[0m
   43 |   else[0m
      | [0;32m  } 
[0m[1myesno.c:47:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |       if (response[response_len - 1] == '\n')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   48 |         response[response_len - 1] = '\0';[0m
      | [0;1;32m                                          
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 93/172][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpc1cgh_7w.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/sys_socket.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 94/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmphkngaq5b.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/stat-time.c
[ 95/172][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpnxr5xv10.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/inttostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 96/172][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp65c6b9cf.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/se-context.c
[ 97/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpy3urcbfb.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/cycle-check.c
[1mcycle-check.c:65:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |   if (state->chdir_counter && SAME_INODE (*sb, state->dev_ino))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m   66 |     return true;[0m
      | [0;1;32m                
[0m[1mcycle-check.c:77:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |       if (state->chdir_counter == 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   78 |         return true;[0m
      | [0;1;32m                    
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 98/172][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpu5itoz4v.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/i-ring.c
[1mi-ring.c:31:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   for (i = 0; i < I_RING_SIZE; i++)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   32 |     ir->ir_data[i] = default_val;[0m
      | [0;1;32m                                 
[0m[1mi-ring.c:49:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (dest_idx == ir->ir_back)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   50 |     ir->ir_back = (ir->ir_back + !ir->ir_empty) % I_RING_SIZE;[0m
      | [0;1;32m                                                              
[0m[1mi-ring.c:59:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (i_ring_empty (ir))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   60 |     abort ();[0m
      | [0;1;32m             
[0m[1mi-ring.c:63:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |   if (ir->ir_front == ir->ir_back)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   64 |     ir->ir_empty = true;[0m
   65 |   else[0m
      | [0;32m  } 
[0m[1mi-ring.c:65:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   66 |     ir->ir_front = ((ir->ir_front + I_RING_SIZE - 1) % I_RING_SIZE);[0m
      | [0;1;32m                                                                    
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 99/172][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpktfkg3xq.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fseek.c
[100/172][3.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp3gn746as.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/argmatch.c
[1margmatch.c:97:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |           if (strlen (arglist[i]) == arglen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   98 |             /* Exact match found.  */[0m
   99 |             return i;[0m
  100 |           else if (matchind == -1)[0m
      | [0;32m          } 
[0m[1margmatch.c:100:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |           else if (matchind == -1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  101 |             /* First nonexact match found.  */[0m
  102 |             matchind = i;[0m
  103 |           else[0m
      | [0;32m          } 
[0m[1margmatch.c:117:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   if (ambiguous)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  118 |     return -2;[0m
  119 |   else[0m
      | [0;32m  } 
[0m[1margmatch.c:119:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  120 |     return matchind;[0m
      | [0;1;32m                    
[0m[1margmatch.c:131:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |       if (!strcmp (arglist[i], arg))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  132 |         return i;[0m
      | [0;1;32m                 
[0m[1margmatch.c:168:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  169 |     if ((i == 0)[0m
  170 |         || memcmp (last_val, (char const *) vallist + valsize * i, valsize))[0m
  171 |       {[0m
  172 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
  173 |         last_val = (char const *) vallist + valsize * i;[0m
  174 |       }[0m
  175 |     else[0m
  176 |       {[0m
  177 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
  178 |       }[0m
      | [0;1;32m       
[0m[1margmatch.c:172:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  172 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:172:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  172 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:177:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  177 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:177:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  177 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:197:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   if (allow_abbreviation)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  198 |     res = argmatch (arg, arglist, vallist, valsize);[0m
  199 |   else[0m
      | [0;32m  } 
[0m[1margmatch.c:199:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  200 |     res = argmatch_exact (arg, arglist);[0m
      | [0;1;32m                                        
[0m[1margmatch.c:202:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |   if (res >= 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  203 |     /* Success. */[0m
  204 |     return res;[0m
      | [0;1;32m               
[0m[1margmatch.c:223:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  224 |     if (!memcmp (value, (char const *) vallist + valsize * i, valsize))[0m
  225 |       return arglist[i];[0m
      | [0;1;32m                        
[0m[1margmatch.c:224:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |     if (!memcmp (value, (char const *) vallist + valsize * i, valsize))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  225 |       return arglist[i];[0m
      | [0;1;32m                        
[0m25 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[101/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmptw4iv34v.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/argv-iter.c
[1margv-iter.c:43:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |   if (!ai)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   44 |     return NULL;[0m
      | [0;1;32m                
[0m[1margv-iter.c:57:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |   if (!ai)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   58 |     return NULL;[0m
      | [0;1;32m                
[0m[1margv-iter.c:108:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |   if (ai->fp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  109 |     free (ai->tok);[0m
      | [0;1;32m                   
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[102/172][2.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpq3tjx5je.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/closeout.c
[1mcloseout.c:123:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |       if (file_name)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  124 |         error (0, errno, "%s: %s", quotearg_colon (file_name),[0m
  125 |                write_error);[0m
  126 |       else[0m
      | [0;32m      } 
[0m[1mcloseout.c:126:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  127 |         error (0, errno, "%s", write_error);[0m
      | [0;1;32m                                            
[0m[1mcloseout.c:134:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |   if (!SANITIZE_ADDRESS && close_stream (stderr) != 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  135 |     _exit (exit_failure);[0m
      | [0;1;32m                         
[0m15 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[103/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp25cblauu.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/openat-safer.c
[104/172][2.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp8srdcu4t.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/openat-proc.c
[1mopenat-proc.c:79:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |         if (proc_self_fd < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   80 |           proc_status = -1;[0m
   81 |         else[0m
      | [0;32m        } 
[0m[1mopenat-proc.c:89:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   89 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:89:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   89 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:95:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |     if (proc_status < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   96 |       return NULL;[0m
   97 |     else[0m
      | [0;32m    } 
[0m[1mopenat-proc.c:103:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |             if (! result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  104 |               return NULL;[0m
      | [0;1;32m                          
[0m[1mopenat-proc.c:107:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  107 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:107:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  107 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:133:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  133 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mopenat-proc.c:133:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  133 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[105/172][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpi_xuboqq.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/strerror_r.c
[1mstrerror_r.c:130:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:130:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  130 |   memmove (buf, msg, moved);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mstrerror_r.c:144:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |       if (buflen)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  145 |         *buf = '\0';[0m
      | [0;1;32m                    
[0m[1mstrerror_r.c:154:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |     if (msg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  155 |       return safe_copy (buf, buflen, msg);[0m
      | [0;1;32m                                          
[0m[1mstrerror_r.c:165:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'ret' is never read [clang-analyzer-deadcode.DeadStores][0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:165:7: [0m[0;1;36mnote: [0mValue stored to 'ret' is never read[0m
  165 |       ret = 0;[0m
      | [0;1;32m      ^     ~
[0m[1mstrerror_r.c:169:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |       if (ret < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  170 |         ret = errno;[0m
      | [0;1;32m                    
[0m[1mstrerror_r.c:444:9: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  444 |         snprintf (buf, buflen, "Unknown error %d", errnum);[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mstrerror_r.c:444:9: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  444 |         snprintf (buf, buflen, "Unknown error %d", errnum);[0m
      | [0;1;32m        ^~~~~~~~
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[106/172][2.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmphbfl22_b.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/locate/word_io.c
[1mword_io.c:54:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   54 |   memcpy (&u.data, data, WORDBYTES);[0m
      | [0;1;32m  ^~~~~~
[0m[1mword_io.c:54:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   54 |   memcpy (&u.data, data, WORDBYTES);[0m
      | [0;1;32m  ^~~~~~
[0m[1mword_io.c:95:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |       if (*endian_state_flag == GetwordEndianStateSwab)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m   96 |         return swapped;[0m
   97 |       else[0m
      | [0;32m      } 
[0m[1mword_io.c:97:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   98 |         return u.ival;[0m
      | [0;1;32m                      
[0m[1mword_io.c:122:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |       if (feof (fp))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  123 |         die (EXIT_FAILURE, 0, _("unexpected EOF in %s"), quoted_name);[0m
  124 |       else[0m
      | [0;32m      } 
[0m[1mword_io.c:124:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  124 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  125 |         die (EXIT_FAILURE, errno,[0m
  126 |              _("error reading a word from %s"), quoted_name);[0m
      | [0;1;32m                                                             
[0m17 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[107/172][14.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpvfxq0cwk.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/fdleak.c
[1mfdleak.c:94:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |               if (fd > maxfd)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   95 |                 maxfd = fd;[0m
      | [0;1;32m                           
[0m[1mfdleak.c:100:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |       if (good)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  101 |         return maxfd;[0m
      | [0;1;32m                     
[0m[1mfdleak.c:115:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |   if (open_max >= 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  116 |     return open_max;[0m
      | [0;1;32m                    
[0m[1mfdleak.c:119:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |   if (open_max == -1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  120 |     open_max = _POSIX_OPEN_MAX; /* underestimate */[0m
      | [0;1;32m                                                   
[0m[1mfdleak.c:128:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |         if (fd_limit.rlim_cur == RLIM_INFINITY)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  129 |           return open_max;[0m
  130 |         else[0m
      | [0;32m        } 
[0m[1mfdleak.c:130:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  131 |           return (int) fd_limit.rlim_cur;[0m
      | [0;1;32m                                         
[0m[1mfdleak.c:152:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |       if (limit > MAX_POLL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  153 |         limit = MAX_POLL;[0m
      | [0;1;32m                         
[0m[1mfdleak.c:173:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |                   if (0 != (rv = callback (pf[j].fd, cb_context)))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  174 |                     return rv;[0m
      | [0;1;32m                              
[0m[1mfdleak.c:236:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |   if (max_fd < INT_MAX)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  237 |     ++max_fd;[0m
      | [0;1;32m             
[0m[1mfdleak.c:294:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |   if (max_fd < INT_MAX)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  295 |     ++max_fd;[0m
      | [0;1;32m             
[0m[1mfdleak.c:374:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |   if (getenv ("GNU_FINDUTILS_FD_LEAK_CHECK"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  375 |     return true;[0m
  376 |   else[0m
      | [0;32m  } 
[0m[1mfdleak.c:376:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  377 |     return false;[0m
      | [0;1;32m                 
[0m24 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[108/172][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp0bg6plan.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloc/dynarray_resize.c
[1mmalloc/dynarray_resize.c:56:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:59:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   60 |     new_array = realloc (list->array, new_size_bytes);[0m
      | [0;1;32m                                                      
[0m[1mmalloc/dynarray_resize.c:61:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   62 |     return false;[0m
      | [0;1;32m                 
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[109/172][15.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmprkrnk5sm.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/c-strcasecmp.c
[1mc-strcasecmp.c:33:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strcasecmp.c:41:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (c1 == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strcasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strcasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m18 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[110/172][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpas43qree.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/uinttostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[111/172][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpn_6fc6ls.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/dirname.c
[1mdirname.c:35:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!result)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[112/172][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpn08r79p4.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/file-set.c
[1mfile-set.c:33:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (ht == NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   34 |     return;[0m
      | [0;1;32m           
[0m[1mfile-set.c:66:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (ht == NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   67 |     return false;[0m
      | [0;1;32m                 
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[113/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp12xpl5qe.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/freading.c
[114/172][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmphs_2eo80.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/progname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[115/172][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpawtxufyh.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/opendir-safer.c
[1mopendir-safer.c:62:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |               if (! newdp)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   63 |                 close (f);[0m
      | [0;1;32m                          
[0m1 warning generated.

[116/172][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp_vtassbj.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/open-safer.c
[117/172][7.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpp5b60h4k.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/printf-args.c
[1mprintf-args.c:41:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m[1mprintf-args.c:45:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   45 |         ap->a.a_schar = va_arg (args, /*signed char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   46 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:48:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   48 |         ap->a.a_uchar = va_arg (args, /*unsigned char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   49 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:51:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   51 |         ap->a.a_short = va_arg (args, /*short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   52 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:54:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |         ap->a.a_ushort = va_arg (args, /*unsigned short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   55 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:57:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   57 |         ap->a.a_int = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   58 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:60:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |         ap->a.a_uint = va_arg (args, unsigned int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   61 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:63:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |         ap->a.a_longint = va_arg (args, long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   64 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:66:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   66 |         ap->a.a_ulongint = va_arg (args, unsigned long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   67 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:69:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |         ap->a.a_longlongint = va_arg (args, long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   70 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:72:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   73 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:75:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   75 |         ap->a.a_double = va_arg (args, double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   76 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:78:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   78 |         ap->a.a_longdouble = va_arg (args, long double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   79 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:81:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   81 |         ap->a.a_char = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   82 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:88:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   88 |         ap->a.a_wide_char =[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   89 |           (sizeof (wint_t) < sizeof (int)[0m
   90 |            ? (wint_t) va_arg (args, int)[0m
   91 |            : va_arg (args, wint_t));[0m
   92 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:95:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   95 |         ap->a.a_string = va_arg (args, const char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   96 |         /* A null pointer is an invalid argument for "%s", but in practice[0m
   97 |            it occurs quite frequently in printf statements that produce[0m
   98 |            debug output.  Use a fallback in this case.  */[0m
   99 |         if (ap->a.a_string == NULL)[0m
  100 |           ap->a.a_string = "(NULL)";[0m
  101 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:99:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |         if (ap->a.a_string == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  100 |           ap->a.a_string = "(NULL)";[0m
      | [0;1;32m                                    
[0m[1mprintf-args.c:104:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  104 |         ap->a.a_wide_string = va_arg (args, const wchar_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  105 |         /* A null pointer is an invalid argument for "%ls", but in practice[0m
  106 |            it occurs quite frequently in printf statements that produce[0m
  107 |            debug output.  Use a fallback in this case.  */[0m
  108 |         if (ap->a.a_wide_string == NULL)[0m
  109 |           {[0m
  110 |             static const wchar_t wide_null_string[] =[0m
  111 |               {[0m
  112 |                 (wchar_t)'(',[0m
  113 |                 (wchar_t)'N', (wchar_t)'U', (wchar_t)'L', (wchar_t)'L',[0m
  114 |                 (wchar_t)')',[0m
  115 |                 (wchar_t)0[0m
  116 |               };[0m
  117 |             ap->a.a_wide_string = wide_null_string;[0m
  118 |           }[0m
  119 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:122:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  122 |         ap->a.a_pointer = va_arg (args, void *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  123 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:125:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |         ap->a.a_count_schar_pointer = va_arg (args, signed char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  126 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:128:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  128 |         ap->a.a_count_short_pointer = va_arg (args, short *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  129 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:131:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  131 |         ap->a.a_count_int_pointer = va_arg (args, int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  132 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:134:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |         ap->a.a_count_longint_pointer = va_arg (args, long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  135 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:137:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  137 |         ap->a.a_count_longlongint_pointer = va_arg (args, long long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  138 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:180:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  180 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m25 warnings generated.

[118/172][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp00qjh4h_.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/test-localcharset.c
[119/172][8.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp5urewx3p.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/idcache.c
[1midcache.c:89:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   89 |       strcpy (match->name, name);[0m
      | [0;1;32m      ^~~~~~
[0m[1midcache.c:89:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   89 |       strcpy (match->name, name);[0m
      | [0;1;32m      ^~~~~~
[0m[1midcache.c:110:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |   for (tail = user_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  111 |     /* Avoid a function call for the most common case.  */[0m
  112 |     if (*tail->name == *user && !strcmp (tail->name, user))[0m
  113 |       return &tail->id.u;[0m
      | [0;1;32m                         
[0m[1midcache.c:112:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |     if (*tail->name == *user && !strcmp (tail->name, user))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  113 |       return &tail->id.u;[0m
      | [0;1;32m                         
[0m[1midcache.c:115:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |   for (tail = nouser_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  116 |     /* Avoid a function call for the most common case.  */[0m
  117 |     if (*tail->name == *user && !strcmp (tail->name, user))[0m
  118 |       return NULL;[0m
      | [0;1;32m                  
[0m[1midcache.c:117:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |     if (*tail->name == *user && !strcmp (tail->name, user))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  118 |       return NULL;[0m
      | [0;1;32m                  
[0m[1midcache.c:132:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  132 |   strcpy (tail->name, user);[0m
      | [0;1;32m  ^~~~~~
[0m[1midcache.c:132:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  132 |   strcpy (tail->name, user);[0m
      | [0;1;32m  ^~~~~~
[0m[1midcache.c:171:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  171 |       strcpy (match->name, name);[0m
      | [0;1;32m      ^~~~~~
[0m[1midcache.c:171:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  171 |       strcpy (match->name, name);[0m
      | [0;1;32m      ^~~~~~
[0m[1midcache.c:192:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |   for (tail = group_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  193 |     /* Avoid a function call for the most common case.  */[0m
  194 |     if (*tail->name == *group && !strcmp (tail->name, group))[0m
  195 |       return &tail->id.g;[0m
      | [0;1;32m                         
[0m[1midcache.c:194:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |     if (*tail->name == *group && !strcmp (tail->name, group))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  195 |       return &tail->id.g;[0m
      | [0;1;32m                         
[0m[1midcache.c:197:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   for (tail = nogroup_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  198 |     /* Avoid a function call for the most common case.  */[0m
  199 |     if (*tail->name == *group && !strcmp (tail->name, group))[0m
  200 |       return NULL;[0m
      | [0;1;32m                  
[0m[1midcache.c:199:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |     if (*tail->name == *group && !strcmp (tail->name, group))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  200 |       return NULL;[0m
      | [0;1;32m                  
[0m[1midcache.c:214:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  214 |   strcpy (tail->name, group);[0m
      | [0;1;32m  ^~~~~~
[0m[1midcache.c:214:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  214 |   strcpy (tail->name, group);[0m
      | [0;1;32m  ^~~~~~
[0m14 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[120/172][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp0xkyiu5u.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/mbuiter.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[121/172][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpea_ff18o.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/c-ctype.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[122/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpfguxx91j.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/version-etc-fsf.c
[123/172][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpuqwath7c.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fclose.c
[1mfclose.c:66:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m   67 |     return fclose_nothrow (fp);[0m
      | [0;1;32m                               
[0m[1mfclose.c:73:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |       && fflush (fp))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   74 |     saved_errno = errno;[0m
      | [0;1;32m                        
[0m2 warnings generated.

[124/172][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp9qci07t9.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloc/scratch_buffer_set_array_size.c
[1mmalloc/scratch_buffer_set_array_size.c:45:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |   if (new_length <= buffer->length)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   46 |     return true;[0m
      | [0;1;32m                
[0m4 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[125/172][22.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpg8wve012.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/c-strncasecmp.c
[1mc-strncasecmp.c:33:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2 || n == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strncasecmp.c:41:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (--n == 0 || c1 == '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strncasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strncasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m18 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[126/172][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpnxc6lck7.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/xgetcwd.c
[1mxgetcwd.c:37:15: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'getcwd' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   37 |   char *cwd = getcwd (NULL, 0);[0m
      | [0;1;32m              ^
[0m[1mxgetcwd.c:37:15: [0m[0;1;36mnote: [0mThe 1st argument to 'getcwd' is NULL but should not be NULL[0m
[1mxgetcwd.c:38:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |   if (! cwd && errno == ENOMEM)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   39 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[127/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpiksp0atp.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/getprogname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[128/172][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp_spizcsd.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/pipe-safer.c
[129/172][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpu2mxgkjx.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/gettime.c
[130/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpaux7vcjo.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/sig-handler.c
[131/172][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmptmol7x3m.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/malloc/scratch_buffer_grow.c
[1mmalloc/scratch_buffer_grow.c:36:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   if (__glibc_likely (new_length >= buffer->length))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   37 |     new_ptr = malloc (new_length);[0m
   38 |   else[0m
      | [0;32m  } 
[0m4 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[132/172][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp02zzyt1r.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/close-stream.c
[1mclose-stream.c:72:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |       if (! fclose_fail)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   73 |         errno = 0;[0m
      | [0;1;32m                  
[0m1 warning generated.

[133/172][2.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpczqg8s3g.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/sharefile.c
[1msharefile.c:82:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |       if (0 != fclose (p->fp))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   83 |         fatal_nontarget_file_error (errno, p->name);[0m
      | [0;1;32m                                                    
[0m[1msharefile.c:147:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |   if (!new_entry)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  148 |     return NULL;[0m
      | [0;1;32m                
[0m[1msharefile.c:191:5: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'new_entry' [clang-analyzer-unix.Malloc][0m
  191 |                   return new_entry->fp;[0m
      | [0;1;32m                  ^
[0m[1msharefile.c:146:15: [0m[0;1;36mnote: [0mMemory is allocated[0m
  146 |   new_entry = malloc (sizeof (struct SharefileEntry));[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msharefile.c:147:7: [0m[0;1;36mnote: [0mAssuming 'new_entry' is non-null[0m
  147 |   if (!new_entry)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1msharefile.c:147:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  147 |   if (!new_entry)[0m
      | [0;1;32m  ^
[0m[1msharefile.c:151:7: [0m[0;1;36mnote: [0mAssuming NULL is not equal to field 'name'[0m
  151 |   if (NULL == new_entry->name)[0m
      | [0;1;32m      ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/__stddef_null.h:26:14: [0m[0;1;36mnote: [0mexpanded from macro 'NULL'[0m
   26 | #define NULL ((void*)0)[0m
      | [0;1;32m             ^
[0m[1msharefile.c:151:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |   if (NULL == new_entry->name)[0m
      | [0;1;32m  ^
[0m[1msharefile.c:157:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  157 |   if (NULL == (new_entry->fp = fopen (filename, p->mode)))[0m
      | [0;1;32m      ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/__stddef_null.h:26:14: [0m[0;1;36mnote: [0mexpanded from macro 'NULL'[0m
   26 | #define NULL ((void*)0)[0m
      | [0;1;32m             ^
[0m[1msharefile.c:157:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  157 |   if (NULL == (new_entry->fp = fopen (filename, p->mode)))[0m
      | [0;1;32m  ^
[0m[1msharefile.c:166:15: [0m[0;1;36mnote: [0m'fd' is >= 0[0m
  166 |       assert (fd >= 0);[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1msharefile.c:166:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  166 |       assert (fd >= 0);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1msharefile.c:169:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |       if (fstat (fd, &st) < 0)[0m
      | [0;1;32m      ^
[0m[1msharefile.c:182:15: [0m[0;1;36mnote: [0mAssuming 'existing' is null[0m
  182 |           if (existing)     /* We have previously opened that file. */[0m
      | [0;1;32m              ^~~~~~~~
[0m[1msharefile.c:182:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |           if (existing)     /* We have previously opened that file. */[0m
      | [0;1;32m          ^
[0m[1msharefile.c:189:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  189 |               if (hash_insert (p->table, new_entry))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msharefile.c:189:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  189 |               if (hash_insert (p->table, new_entry))[0m
      | [0;1;32m              ^
[0m[1msharefile.c:191:5: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'new_entry'[0m
  191 |                   return new_entry->fp;[0m
      | [0;1;32m                  ^
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[134/172][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpfbor8tdy.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/bugreports.c
[1mbugreports.c:28:10: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   28 |   return fprintf (f,_(""[0m
      | [0;1;32m         ^~~~~~~
[0m[1mbugreports.c:28:10: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   28 |   return fprintf (f,_(""[0m
      | [0;1;32m         ^~~~~~~
[0m11 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[135/172][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmprgcf9qlh.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/se-selinux.c
[136/172][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpg_t0aiol.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/wctype-h.c
[137/172][25.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp607pzhtk.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/locate/frcode.c
[1mfrcode.c:121:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |       if (0 == --limit)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  122 |         break;[0m
      | [0;1;32m              
[0m[1mfrcode.c:142:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |       fprintf (stderr, _("Try '%s --help' for more information.\n"), program_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mfrcode.c:142:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  142 |       fprintf (stderr, _("Try '%s --help' for more information.\n"), program_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mfrcode.c:146:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  146 |   fprintf (stdout,[0m
      | [0;1;32m  ^~~~~~~
[0m[1mfrcode.c:146:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  146 |   fprintf (stdout,[0m
      | [0;1;32m  ^~~~~~~
[0m[1mfrcode.c:215:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |   if (argv[0])[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  216 |     set_program_name (argv[0]);[0m
  217 |   else[0m
      | [0;32m  } 
[0m[1mfrcode.c:217:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  218 |     set_program_name ("frcode");[0m
      | [0;1;32m                                
[0m[1mfrcode.c:233:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |   while ((optc = getopt_long (argc, argv, "hv0S:", longopts, (int *) 0)) != -1)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m[1mfrcode.c:237:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  237 |         delimiter = 0;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  238 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mfrcode.c:241:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  241 |         slocate_compat = 1;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  242 |         slocate_seclevel = get_seclevel (optarg);[0m
  243 |         if (slocate_seclevel < 0 || slocate_seclevel > 1)[0m
  244 |           {[0m
  245 |             die (EXIT_FAILURE, 0,[0m
  246 |                  _("slocate security level %ld is unsupported."),[0m
  247 |                  slocate_seclevel);[0m
  248 |           }[0m
  249 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mfrcode.c:252:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  252 |         usage (EXIT_SUCCESS);[0m
      | [0;1;32m        ^                   
[0m      | [0;32m        {                   ;} 
[0m[1mfrcode.c:255:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  255 |         display_findutils_version ("frcode");[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  256 |         return 0;[0m
      | [0;1;32m                
[0m      | [0;32m                ;} 
[0m[1mfrcode.c:259:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  259 |         usage (EXIT_FAILURE);[0m
      | [0;1;32m        ^                   
[0m      | [0;32m        {                   ;} 
[0m[1mfrcode.c:322:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |               if (EOF == putc (LOCATEDB_ESCAPE, stdout))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  323 |                 outerr ();[0m
      | [0;1;32m                          
[0m[1mfrcode.c:324:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |               if (!put_short (diffcount, stdout))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  325 |                 outerr ();[0m
      | [0;1;32m                          
[0m[1mfrcode.c:329:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |               if (EOF == putc (diffcount, stdout))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  330 |                 outerr ();[0m
      | [0;1;32m                          
[0m26 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[138/172][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpn2b2yuyt.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/xalloc-die.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[139/172][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpl8v77whn.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/areadlink.c
[1mareadlink.c:41:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   if (fd != AT_FDCWD)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   42 |     abort ();[0m
      | [0;1;32m             
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[140/172][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpqq1t7rw4.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/mbchar.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[141/172][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpzawqz3ef.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/umaxtostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[142/172][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp9r5q6_x1.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/imaxtostr.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[143/172][20.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpq7izcwv5.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/savedir.c
[1msavedir.c:101:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |   if (dirp == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  102 |     return NULL;[0m
      | [0;1;32m                
[0m[1msavedir.c:111:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |       if (! dp)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  112 |         break;[0m
      | [0;1;32m              
[0m[1msavedir.c:122:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |               if (entries_allocated == entries_used)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  123 |                 entries = xpalloc (entries, &entries_allocated, 1, -1,[0m
  124 |                                    sizeof *entries);[0m
      | [0;1;32m                                                    
[0m[1msavedir.c:133:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |               if (allocated - used <= entry_size)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  134 |                 name_space = xpalloc (name_space, &allocated,[0m
  135 |                                       entry_size - (allocated - used),[0m
  136 |                                       IDX_MAX - 1, sizeof *name_space);[0m
      | [0;1;32m                                                                       
[0m[1msavedir.c:137:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  137 |               memcpy (name_space + used, entry, entry_size);[0m
      | [0;1;32m              ^~~~~~
[0m[1msavedir.c:137:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  137 |               memcpy (name_space + used, entry, entry_size);[0m
      | [0;1;32m              ^~~~~~
[0m[1msavedir.c:152:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |       if (entries_used)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  153 |         qsort (entries, entries_used, sizeof *entries, cmp);[0m
      | [0;1;32m                                                            
[0m[1msavedir.c:164:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |   else if (used == allocated)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  165 |     name_space = xirealloc (name_space, used + 1);[0m
      | [0;1;32m                                                  
[0m[1msavedir.c:180:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |   if (! dirp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  181 |     return NULL;[0m
  182 |   else[0m
      | [0;32m  } 
[0m10 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[144/172][40.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp0y8ay9nd.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/mbswidth.c
[1mmbswidth.c:66:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       while (p < plimit)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m[1mmbswidth.c:91:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   91 |               width++;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m   92 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mmbswidth.c:95:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   95 |               {[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mmbswidth.c:97:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   97 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mmbswidth.c:97:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   97 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mmbswidth.c:115:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  116 |                           return -1;[0m
      | [0;1;32m                                    
[0m[1mmbswidth.c:128:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  129 |                           return -1;[0m
      | [0;1;32m                                    
[0m[1mmbswidth.c:132:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  132 |                     if (bytes == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  133 |                       /* A null wide character was encountered.  */[0m
  134 |                       bytes = 1;[0m
      | [0;1;32m                                
[0m[1mmbswidth.c:140:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  140 |                         if (w > INT_MAX - width)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  141 |                           goto overflow;[0m
      | [0;1;32m                                        
[0m[1mmbswidth.c:150:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |                               if (width == INT_MAX)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  151 |                                 goto overflow;[0m
      | [0;1;32m                                              
[0m[1mmbswidth.c:155:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                       else[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  156 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mmbswidth.c:173:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |           if (width == INT_MAX)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  174 |             goto overflow;[0m
      | [0;1;32m                          
[0m[1mmbswidth.c:181:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |               if (width == INT_MAX)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  182 |                 goto overflow;[0m
      | [0;1;32m                              
[0m[1mmbswidth.c:186:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  187 |         return -1;[0m
      | [0;1;32m                  
[0m15 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[145/172][38.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpzf90u5f2.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/qmark.c
[1mqmark.c:95:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |       if (! ISPRINT (to_uchar (*p)))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   96 |         *p = '?';[0m
      | [0;1;32m                 
[0m[1mqmark.c:126:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |       while (p < plimit)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m[1mqmark.c:151:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  151 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mqmark.c:156:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m[1mqmark.c:158:8: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  158 |               memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m              ^~~~~~
[0m[1mqmark.c:158:8: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  158 |               memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m              ^~~~~~
[0m[1mqmark.c:187:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |                   if (bytes == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  188 |                     /* A null wide character was encountered.  */[0m
  189 |                     bytes = 1;[0m
      | [0;1;32m                              
[0m[1mqmark.c:196:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |                       for (; bytes > 0; --bytes)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  197 |                         *q++ = *p++;[0m
      | [0;1;32m                                    
[0m9 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[146/172][64.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpfglnvo83.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/time_rz.c
[1mtime_rz.c:59:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   59 |   memcpy (abbrs, abbr, abbr_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtime_rz.c:59:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   59 |   memcpy (abbrs, abbr, abbr_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtime_rz.c:79:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |       if (name)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   80 |         extend_abbrs (tz->abbrs, name, name_size);[0m
      | [0;1;32m                                                  
[0m[1mtime_rz.c:113:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |   if (!zone || ((char *) tm <= zone && zone < (char *) (tm + 1)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  114 |     return true;[0m
      | [0;1;32m                
[0m[1mtime_rz.c:125:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |               if (zone_size < tz->abbrs + ABBR_SIZE_MIN - zone_copy)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  126 |                 extend_abbrs (zone_copy, zone, zone_size);[0m
  127 |               else[0m
      | [0;32m              } 
[0m[1mtime_rz.c:130:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |                   if (!tz)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  131 |                     return false;[0m
      | [0;1;32m                                 
[0m[1mtime_rz.c:163:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (tz != local_tz)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  164 |     while (tz)[0m
  165 |       {[0m
  166 |         timezone_t next = tz->next;[0m
  167 |         free (tz);[0m
  168 |         tz = next;[0m
  169 |       }[0m
      | [0;1;32m       
[0m[1mtime_rz.c:196:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |   if (setenv_TZ (tz->tz_is_set ? tz->abbrs : NULL) != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  197 |     return false;[0m
      | [0;1;32m                 
[0m[1mtime_rz.c:212:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |       : !tz->tz_is_set)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  213 |     return local_tz;[0m
  214 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:217:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |       if (!old_tz)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  218 |         return old_tz;[0m
      | [0;1;32m                      
[0m[1mtime_rz.c:223:11: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  223 |           errno = saved_errno;[0m
      | [0;1;32m          ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^
[0m[1mtime_rz.c:288:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  288 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:288:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  288 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:292:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  292 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:210:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  210 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:210:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:212:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  212 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:210:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  210 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:216:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  216 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'name' is null[0m
   68 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:69:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   69 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:69:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:70:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   70 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:71:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
   71 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:71:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   71 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:79:11: [0m[0;1;36mnote: [0m'name' is null[0m
   79 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:79:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   79 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:216:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  216 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:217:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  217 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:217:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  217 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:219:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  219 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:222:11: [0m[0;1;36mnote: [0mCalling 'tzfree'[0m
  222 |           tzfree (old_tz);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mtime_rz.c:163:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  163 |   if (tz != local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:163:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  163 |   if (tz != local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:170:1: [0m[0;1;36mnote: [0mReturning without deallocating memory or storing the pointer for later deallocation[0m
  170 | }[0m
      | [0;1;32m^
[0m[1mtime_rz.c:222:11: [0m[0;1;36mnote: [0mReturning from 'tzfree'[0m
  222 |           tzfree (old_tz);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mtime_rz.c:223:11: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  223 |           errno = saved_errno;[0m
      | [0;1;32m          ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^
[0m[1mtime_rz.c:236:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |   if (tz == local_tz)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  237 |     return true;[0m
  238 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:242:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |       if (!ok)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  243 |         saved_errno = errno;[0m
      | [0;1;32m                            
[0m[1mtime_rz.c:269:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  270 |     return gmtime_r (t, tm);[0m
  271 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:277:37: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  277 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:269:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  269 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:269:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  269 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:273:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  273 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:210:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  210 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:210:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:212:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  212 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:210:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  210 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:216:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  216 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'name' is null[0m
   68 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:69:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   69 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:69:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:70:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   70 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:71:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
   71 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:71:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   71 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:79:11: [0m[0;1;36mnote: [0m'name' is null[0m
   79 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:79:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   79 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:216:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  216 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:217:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  217 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:217:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  217 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:219:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  219 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:273:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  273 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:274:11: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  274 |       if (old_tz)[0m
      | [0;1;32m          ^~~~~~
[0m[1mtime_rz.c:274:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  274 |       if (old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:276:29: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  276 |           bool abbr_saved = localtime_r (t, tm) && save_abbr (tz, tm);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:276:49: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  276 |           bool abbr_saved = localtime_r (t, tm) && save_abbr (tz, tm);[0m
      | [0;1;32m                                                ^
[0m[1mtime_rz.c:277:15: [0m[0;1;36mnote: [0mCalling 'revert_tz'[0m
  277 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:236:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  236 |   if (tz == local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:236:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  236 |   if (tz == local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:277:15: [0m[0;1;36mnote: [0mReturning from 'revert_tz'[0m
  277 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:277:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtime_rz.c:277:37: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  277 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:277:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  278 |             return tm;[0m
      | [0;1;32m                      
[0m[1mtime_rz.c:288:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  289 |     return timegm (tm);[0m
  290 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:309:37: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  309 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:288:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  288 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:288:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  288 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:292:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  292 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:210:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  210 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:210:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:212:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  212 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:210:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  210 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:216:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  216 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'name' is null[0m
   68 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:69:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   69 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:69:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:70:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   70 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:71:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
   71 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:71:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   71 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:79:11: [0m[0;1;36mnote: [0m'name' is null[0m
   79 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:79:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   79 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:216:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  216 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:217:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  217 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:217:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  217 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:219:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  219 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:292:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  292 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:293:11: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  293 |       if (old_tz)[0m
      | [0;1;32m          ^~~~~~
[0m[1mtime_rz.c:293:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  293 |       if (old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:305:21: [0m[0;1;36mnote: [0mAssuming 0 is > field 'tm_yday'[0m
  305 |           bool ok = 0 <= tm_1.tm_yday;[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:307:16: [0m[0;1;36mnote: [0m'ok' is false[0m
  307 |           ok = ok && save_abbr (tz, &tm_1);[0m
      | [0;1;32m               ^~
[0m[1mtime_rz.c:307:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  307 |           ok = ok && save_abbr (tz, &tm_1);[0m
      | [0;1;32m                  ^
[0m[1mtime_rz.c:309:15: [0m[0;1;36mnote: [0mCalling 'revert_tz'[0m
  309 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:236:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  236 |   if (tz == local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:236:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  236 |   if (tz == local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:309:15: [0m[0;1;36mnote: [0mReturning from 'revert_tz'[0m
  309 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:309:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtime_rz.c:309:37: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  309 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m                                    ^
[0m19 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[147/172][63.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpbvkh4zh5.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/filemode.c
[1mfilemode.c:46:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   46 |   if (S_ISREG (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   47 |     return '-';[0m
      | [0;1;32m               
[0m[1mfilemode.c:48:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   48 |   if (S_ISDIR (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   49 |     return 'd';[0m
      | [0;1;32m               
[0m[1mfilemode.c:52:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |   if (S_ISBLK (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   53 |     return 'b';[0m
      | [0;1;32m               
[0m[1mfilemode.c:54:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |   if (S_ISCHR (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   55 |     return 'c';[0m
      | [0;1;32m               
[0m[1mfilemode.c:56:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |   if (S_ISLNK (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   57 |     return 'l';[0m
      | [0;1;32m               
[0m[1mfilemode.c:58:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |   if (S_ISFIFO (bits))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   59 |     return 'p';[0m
      | [0;1;32m               
[0m[1mfilemode.c:62:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |   if (S_ISSOCK (bits))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   63 |     return 's';[0m
      | [0;1;32m               
[0m[1mfilemode.c:66:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (S_ISCTG (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   67 |     return 'C';[0m
      | [0;1;32m               
[0m[1mfilemode.c:68:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   if (S_ISDOOR (bits))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   69 |     return 'D';[0m
      | [0;1;32m               
[0m[1mfilemode.c:70:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |   if (S_ISMPB (bits) || S_ISMPC (bits) || S_ISMPX (bits))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   71 |     return 'm';[0m
      | [0;1;32m               
[0m[1mfilemode.c:72:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |   if (S_ISNWK (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   73 |     return 'n';[0m
      | [0;1;32m               
[0m[1mfilemode.c:74:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   74 |   if (S_ISPORT (bits))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   75 |     return 'P';[0m
      | [0;1;32m               
[0m[1mfilemode.c:76:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   76 |   if (S_ISWHT (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   77 |     return 'w';[0m
      | [0;1;32m               
[0m[1mfilemode.c:158:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |   if (S_TYPEISSEM (statp))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  159 |     str[0] = 'F';[0m
  160 |   else if (S_TYPEISMQ (statp))[0m
      | [0;32m  } 
[0m[1mfilemode.c:160:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |   else if (S_TYPEISMQ (statp))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  161 |     str[0] = 'Q';[0m
  162 |   else if (S_TYPEISSHM (statp))[0m
      | [0;32m  } 
[0m[1mfilemode.c:162:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |   else if (S_TYPEISSHM (statp))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  163 |     str[0] = 'S';[0m
  164 |   else if (S_TYPEISTMO (statp))[0m
      | [0;32m  } 
[0m[1mfilemode.c:164:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |   else if (S_TYPEISTMO (statp))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  165 |     str[0] = 'T';[0m
      | [0;1;32m                 
[0m17 warnings generated.

[148/172][79.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmps8mzhic7.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/modechange.c
[1mmodechange.c:151:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |           if (ALLM < octal_mode)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  152 |             return NULL;[0m
      | [0;1;32m                        
[0m[1mmodechange.c:156:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |       if (*p)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  157 |         return NULL;[0m
      | [0;1;32m                    
[0m[1mmodechange.c:169:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |     for (p = mode_string; *p; p++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  170 |       needed += (*p == '=' || *p == '+' || *p == '-');[0m
      | [0;1;32m                                                      
[0m[1mmodechange.c:182:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |       for (;; p++)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m[1mmodechange.c:186:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  186 |             goto invalid;[0m
      | [0;1;32m            ^           
[0m      | [0;32m            {           ;} 
[0m[1mmodechange.c:188:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  188 |             affected |= S_ISUID | S_IRWXU;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  189 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mmodechange.c:191:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  191 |             affected |= S_ISGID | S_IRWXG;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  192 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mmodechange.c:194:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  194 |             affected |= S_ISVTX | S_IRWXO;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  195 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mmodechange.c:197:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  197 |             affected |= CHMOD_MODE_BITS;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  198 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mmodechange.c:222:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |                     if (ALLM < octal_mode)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  223 |                       goto invalid;[0m
      | [0;1;32m                                   
[0m[1mmodechange.c:227:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  227 |                 if (affected || (*p && *p != ','))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  228 |                   goto invalid;[0m
      | [0;1;32m                               
[0m[1mmodechange.c:238:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  238 |               value = S_IRWXU;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  239 |               p++;[0m
  240 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mmodechange.c:244:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  244 |               value = S_IRWXG;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  245 |               p++;[0m
  246 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mmodechange.c:250:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  250 |               value = S_IRWXO;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  251 |               p++;[0m
  252 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mmodechange.c:255:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  255 |               value = 0;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mmodechange.c:258:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |               for (;; p++)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m[1mmodechange.c:262:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  262 |                     value |= S_IRUSR | S_IRGRP | S_IROTH;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  263 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmodechange.c:265:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  265 |                     value |= S_IWUSR | S_IWGRP | S_IWOTH;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  266 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmodechange.c:268:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  268 |                     value |= S_IXUSR | S_IXGRP | S_IXOTH;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  269 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmodechange.c:271:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  271 |                     flag = MODE_X_IF_ANY_X;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  272 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmodechange.c:275:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  275 |                     value |= S_ISUID | S_ISGID;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  276 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmodechange.c:279:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  279 |                     value |= S_ISVTX;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  280 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mmodechange.c:282:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  282 |                     goto no_more_values;[0m
      | [0;1;32m                    ^                  
[0m      | [0;32m                    {                  ;} 
[0m[1mmodechange.c:297:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |       if (*p != ',')[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  298 |         break;[0m
      | [0;1;32m              
[0m[1mmodechange.c:320:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |   if (stat (ref_file, &ref_stats) != 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  321 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmodechange.c:358:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  358 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mmodechange.c:362:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  362 |           value &= newmode;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  363 | [0m
  364 |           /* Copy the isolated bits to the other two parts.  */[0m
  365 |           value |= ((value & (S_IRUSR | S_IRGRP | S_IROTH)[0m
  366 |                      ? S_IRUSR | S_IRGRP | S_IROTH : 0)[0m
  367 |                     | (value & (S_IWUSR | S_IWGRP | S_IWOTH)[0m
  368 |                        ? S_IWUSR | S_IWGRP | S_IWOTH : 0)[0m
  369 |                     | (value & (S_IXUSR | S_IXGRP | S_IXOTH)[0m
  370 |                        ? S_IXUSR | S_IXGRP | S_IXOTH : 0));[0m
  371 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmodechange.c:376:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  376 |           if ((newmode & (S_IXUSR | S_IXGRP | S_IXOTH)) | dir)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  377 |             value |= S_IXUSR | S_IXGRP | S_IXOTH;[0m
  378 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmodechange.c:376:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |           if ((newmode & (S_IXUSR | S_IXGRP | S_IXOTH)) | dir)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  377 |             value |= S_IXUSR | S_IXGRP | S_IXOTH;[0m
      | [0;1;32m                                                 
[0m[1mmodechange.c:400:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  400 |           mode_bits |= value;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  401 |           newmode |= value;[0m
  402 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmodechange.c:405:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  405 |           mode_bits |= value;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  406 |           newmode &= ~value;[0m
  407 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mmodechange.c:411:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |   if (pmode_bits)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  412 |     *pmode_bits = mode_bits;[0m
      | [0;1;32m                            
[0m34 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[149/172][81.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpgl9ipq3e.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gnulib-tests/locale.c
[1mlocale.c:44:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   if (value[0] != '\0' && defaulted_getenv ("LC_ALL")[0] == '\0')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m   45 |     /* The variable is set in the environment and not overridden by LC_ALL.  */[0m
   46 |     printf ("%s=%s\n", variable, value);[0m
   47 |   else[0m
      | [0;32m  } 
[0m[1mlocale.c:47:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   48 |     printf ("%s=\"%s\"\n", variable, setlocale (category, NULL));[0m
      | [0;1;32m                                                                 
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[150/172][81.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp_6s6sxk4.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/nstrftime.c
[1mnstrftime.c:315:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |   while (len-- > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  316 |     dest[len] = TOLOWER ((UCHAR_T) src[len], loc);[0m
      | [0;1;32m                                                  
[0m[1mnstrftime.c:326:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |   while (len-- > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  327 |     dest[len] = TOUPPER ((UCHAR_T) src[len], loc);[0m
      | [0;1;32m                                                  
[0m[1mnstrftime.c:533:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |   if (! zone)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  534 |     zone = "";[0m
      | [0;1;32m              
[0m[1mnstrftime.c:536:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |   if (hour12 > 12)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  537 |     hour12 -= 12;[0m
  538 |   else[0m
      | [0;32m  } 
[0m[1mnstrftime.c:539:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |     if (hour12 == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  540 |       hour12 = 12;[0m
      | [0;1;32m                  
[0m[1mnstrftime.c:648:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  648 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:648:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  648 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:667:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  667 |               continue;[0m
      | [0;1;32m              ^       
[0m      | [0;32m              {       ;} 
[0m[1mnstrftime.c:671:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  671 |               to_uppcase = true;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  672 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:674:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  674 |               change_case = true;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  675 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:678:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  678 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mnstrftime.c:689:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |                   || INT_ADD_WRAPV (width, *f - L_('0'), &width))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  690 |                 width = INT_MAX;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:702:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  702 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mnstrftime.c:705:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  705 |           modifier = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  706 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:757:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  757 |           if (f - 1 != percent)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  758 |             goto bad_percent;[0m
  759 |           add1 (*f);[0m
  760 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:757:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  757 |           if (f - 1 != percent)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  758 |             goto bad_percent;[0m
      | [0;1;32m                             
[0m[1mnstrftime.c:759:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  759 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:759:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  759 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:763:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  763 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  764 |             goto bad_format;[0m
  765 |           if (change_case)[0m
  766 |             {[0m
  767 |               to_uppcase = true;[0m
  768 |               to_lowcase = false;[0m
  769 |             }[0m
  770 | #ifdef _NL_CURRENT[0m
  771 |           cpy (aw_len, a_wkday);[0m
  772 |           break;[0m
  773 | #else[0m
  774 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:763:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  763 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  764 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:778:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  778 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  779 |             goto bad_format;[0m
  780 |           if (change_case)[0m
  781 |             {[0m
  782 |               to_uppcase = true;[0m
  783 |               to_lowcase = false;[0m
  784 |             }[0m
  785 | #ifdef _NL_CURRENT[0m
  786 |           cpy (STRLEN (f_wkday), f_wkday);[0m
  787 |           break;[0m
  788 | #else[0m
  789 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:778:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  778 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  779 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:799:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  799 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  800 |             goto bad_format;[0m
  801 | #ifdef _NL_CURRENT[0m
  802 |           if (modifier == L_('O'))[0m
  803 |             cpy (aam_len, a_altmonth);[0m
  804 |           else[0m
  805 |             cpy (am_len, a_month);[0m
  806 |           break;[0m
  807 | #else[0m
  808 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:799:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  799 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  800 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:812:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  812 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  813 |             goto bad_format;[0m
  814 |           if (change_case)[0m
  815 |             {[0m
  816 |               to_uppcase = true;[0m
  817 |               to_lowcase = false;[0m
  818 |             }[0m
  819 | #ifdef _NL_CURRENT[0m
  820 |           if (modifier == L_('O'))[0m
  821 |             cpy (STRLEN (f_altmonth), f_altmonth);[0m
  822 |           else[0m
  823 |             cpy (STRLEN (f_month), f_month);[0m
  824 |           break;[0m
  825 | #else[0m
  826 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:812:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  813 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:830:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  830 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:830:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  830 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  831 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:851:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  851 |             add (len, __strftime_internal (p,[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:157:19: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  157 | #define add(n, f) width_add (width, n, f)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:851:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  851 |             add (len, __strftime_internal (p,[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:157:19: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  157 | #define add(n, f) width_add (width, n, f)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:880:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  880 |             if (modifier != 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  881 |               *u++ = modifier;[0m
      | [0;1;32m                              
[0m[1mnstrftime.c:885:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  885 |             if (len != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  886 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m                                      
[0m[1mnstrftime.c:886:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  886 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:886:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  886 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:886:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  886 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:886:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  886 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:892:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  892 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:921:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  921 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  922 |             goto bad_format;[0m
  923 | #ifdef _NL_CURRENT[0m
  924 |           if (! (modifier == L_('E')[0m
  925 |                  && (*(subfmt =[0m
  926 |                        (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(ERA_D_FMT)))[0m
  927 |                      != L_('\0'))))[0m
  928 |             subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(D_FMT));[0m
  929 |           goto subformat;[0m
  930 | #else[0m
  931 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:921:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  922 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:934:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  934 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  935 |             goto bad_format;[0m
  936 |           subfmt = L_("%m/%d/%y");[0m
  937 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:934:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  934 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  935 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:940:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  940 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  941 |             goto bad_format;[0m
  942 | [0m
  943 |           DO_NUMBER (2, tp->tm_mday);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:940:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  941 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:946:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  946 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:946:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  947 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:959:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  959 |           if (pad == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  960 |             pad = yr_spec;[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:968:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  968 |           if (pad == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  969 |             pad = L_('_');[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:1012:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1012 |           if (negative_number)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1013 |             u_number_value = - u_number_value;[0m
      | [0;1;32m                                              
[0m[1mnstrftime.c:1017:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1017 |               if (tz_colon_mask & 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1018 |                 *--bufp = ':';[0m
      | [0;1;32m                              
[0m[1mnstrftime.c:1026:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1026 |           if (pad == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1027 |             pad = L_('0');[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:1028:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1028 |           if (width < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1029 |             width = digits;[0m
      | [0;1;32m                           
[0m[1mnstrftime.c:1043:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1043 |                     if (p)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1044 |                       memset_space (p, padding);[0m
      | [0;1;32m                                                
[0m[1mnstrftime.c:1044:23: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1044 |                       memset_space (p, padding);[0m
      | [0;1;32m                      ^
[0m[1mnstrftime.c:147:32: [0m[0;1;36mnote: [0mexpanded from macro 'memset_space'[0m
  147 | # define memset_space(P, Len) (memset (P, ' ', Len), (P) += (Len))[0m
      | [0;1;32m                               ^~~~~~
[0m[1mnstrftime.c:1044:23: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1044 |                       memset_space (p, padding);[0m
      | [0;1;32m                      ^
[0m[1mnstrftime.c:147:32: [0m[0;1;36mnote: [0mexpanded from macro 'memset_space'[0m
  147 | # define memset_space(P, Len) (memset (P, ' ', Len), (P) += (Len))[0m
      | [0;1;32m                               ^~~~~~
[0m[1mnstrftime.c:1048:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1048 |                 width_add1 (0, sign_char);[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1048:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1048 |                 width_add1 (0, sign_char);[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1052:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1052 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1052:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1052 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1052:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1052 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1052:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1052 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1057:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1057 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1058 |             goto bad_format;[0m
 1059 |           if (pad == 0 && width < 0)[0m
 1060 |             {[0m
 1061 |               pad = L_('+');[0m
 1062 |               subwidth = 4;[0m
 1063 |             }[0m
 1064 |           else[0m
 1065 |             {[0m
 1066 |               subwidth = width - 6;[0m
 1067 |               if (subwidth < 0)[0m
 1068 |                 subwidth = 0;[0m
 1069 |             }[0m
 1070 |           subfmt = L_("%Y-%m-%d");[0m
 1071 |           goto subformat_width;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnstrftime.c:1057:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1057 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1058 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1067:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1067 |               if (subwidth < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1068 |                 subwidth = 0;[0m
      | [0;1;32m                             
[0m[1mnstrftime.c:1074:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1074 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1075 |             goto bad_format;[0m
 1076 | [0m
 1077 |           DO_NUMBER (2, tp->tm_hour);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:1074:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1074 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1075 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1080:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1080 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1081 |             goto bad_format;[0m
 1082 | [0m
 1083 |           DO_NUMBER (2, hour12);[0m
      | [0;1;32m                               
[0m      | [0;32m                               ;} 
[0m[1mnstrftime.c:1080:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1080 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1081 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1086:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1086 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1087 |             goto bad_format;[0m
 1088 | [0m
 1089 |           DO_NUMBER_SPACEPAD (2, tp->tm_hour);[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1mnstrftime.c:1086:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1086 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1087 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1092:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1092 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1093 |             goto bad_format;[0m
 1094 | [0m
 1095 |           DO_NUMBER_SPACEPAD (2, hour12);[0m
      | [0;1;32m                                        
[0m      | [0;32m                                        ;} 
[0m[1mnstrftime.c:1092:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1092 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1093 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1098:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1098 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1099 |             goto bad_format;[0m
 1100 | [0m
 1101 |           DO_SIGNED_NUMBER (3, tp->tm_yday < -1, tp->tm_yday + 1U);[0m
      | [0;1;32m                                                                  
[0m      | [0;32m                                                                  ;} 
[0m[1mnstrftime.c:1098:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1098 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1099 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1104:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1104 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1105 |             goto bad_format;[0m
 1106 | [0m
 1107 |           DO_NUMBER (2, tp->tm_min);[0m
      | [0;1;32m                                   
[0m      | [0;32m                                   ;} 
[0m[1mnstrftime.c:1104:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1104 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1105 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1110:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1110 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1111 |             goto bad_format;[0m
 1112 | [0m
 1113 |           DO_SIGNED_NUMBER (2, tp->tm_mon < -1, tp->tm_mon + 1U);[0m
      | [0;1;32m                                                                
[0m      | [0;32m                                                                ;} 
[0m[1mnstrftime.c:1110:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1110 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1111 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1117:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1117 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1117:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1117 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1118 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1121:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |             if (width <= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1122 |               width = ns_digits;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:1124:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1124 |             while (width < ndigs || (1 < ndigs && n % 10 == 0))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1125 |               ndigs--, n /= 10;[0m
      | [0;1;32m                               
[0m[1mnstrftime.c:1126:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1126 |             for (int j = ndigs; 0 < j; j--)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1127 |               buf[j - 1] = n % 10 + L_('0'), n /= 10;[0m
      | [0;1;32m                                                     
[0m[1mnstrftime.c:1128:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1128 |             if (!pad)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1129 |               pad = L_('0');[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1130:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1130 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1130:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1130 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1130:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1130 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1130:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1130 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1131:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1131 |             width_add (width - ndigs, 0, (void) 0);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1131:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1131 |             width_add (width - ndigs, 0, (void) 0);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1137:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1137 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1137:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1137 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1137:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1137 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1138 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^
[0m[1mnstrftime.c:159:3: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  159 |   do                                                                          \[0m
      | [0;1;32m  ^
[0m[1mnstrftime.c:1141:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1141 |           to_lowcase = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1142 | #ifndef _NL_CURRENT[0m
 1143 |           format_char = L_('p');[0m
 1144 | #endif[0m
 1145 |           FALLTHROUGH;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:1147:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1147 |           if (change_case)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1148 |             {[0m
 1149 |               to_uppcase = false;[0m
 1150 |               to_lowcase = true;[0m
 1151 |             }[0m
 1152 | #ifdef _NL_CURRENT[0m
 1153 |           cpy (ap_len, ampm);[0m
 1154 |           break;[0m
 1155 | #else[0m
 1156 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:1160:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1160 |           DO_SIGNED_NUMBER (1, false, ((tp->tm_mon * 11) >> 5) + 1);[0m
      | [0;1;32m          ^                                                        
[0m      | [0;32m          {                                                        ;} 
[0m[1mnstrftime.c:722:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_SIGNED_NUMBER'[0m
  722 |           DO_MAYBE_SIGNED_NUMBER (d, negative, v, do_signed_number)[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:726:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_MAYBE_SIGNED_NUMBER'[0m
  726 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1163:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1163 |           subfmt = L_("%H:%M");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1164 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1174:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1174 |           goto underlying_strftime;[0m
      | [0;1;32m          ^                       
[0m      | [0;32m          {                       ;} 
[0m[1mnstrftime.c:1178:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1178 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1179 |             goto bad_format;[0m
 1180 | [0m
 1181 |           DO_NUMBER (2, tp->tm_sec);[0m
      | [0;1;32m                                   
[0m      | [0;32m                                   ;} 
[0m[1mnstrftime.c:1178:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1178 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1179 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1217:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1217 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1218 |             goto bad_format;[0m
 1219 | #ifdef _NL_CURRENT[0m
 1220 |           if (! (modifier == L_('E')[0m
 1221 |                  && (*(subfmt =[0m
 1222 |                        (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(ERA_T_FMT)))[0m
 1223 |                      != L_('\0'))))[0m
 1224 |             subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(T_FMT));[0m
 1225 |           goto subformat;[0m
 1226 | #else[0m
 1227 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:1217:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1217 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1218 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1230:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1230 |           subfmt = L_("%H:%M:%S");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1231 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1234:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1234 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1234:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1234 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1234:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1234 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1235 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:185:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  185 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:189:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  189 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^
[0m[1mnstrftime.c:159:3: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  159 |   do                                                                          \[0m
      | [0;1;32m  ^
[0m[1mnstrftime.c:1238:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1238 |           DO_NUMBER (1, (tp->tm_wday - 1 + 7) % 7 + 1);[0m
      | [0;1;32m          ^                                           
[0m      | [0;32m          {                                           ;} 
[0m[1mnstrftime.c:714:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_NUMBER'[0m
  714 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1241:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1241 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1242 |             goto bad_format;[0m
 1243 | [0m
 1244 |           DO_NUMBER (2, (tp->tm_yday - tp->tm_wday + 7) / 7);[0m
      | [0;1;32m                                                            
[0m      | [0;32m                                                            ;} 
[0m[1mnstrftime.c:1241:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1241 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1242 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1249:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1249 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1250 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1296:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1296 |                 DO_YEARISH (4, tp->tm_year < -TM_YEAR_BASE - year_adjust,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1297 |                             (tp->tm_year + (unsigned int) TM_YEAR_BASE[0m
 1298 |                              + year_adjust));[0m
      | [0;1;32m                                            
[0m      | [0;32m                                            ;} 
[0m[1mnstrftime.c:724:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_YEARISH'[0m
  724 |           DO_MAYBE_SIGNED_NUMBER (d, negative, v, do_yearish)[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:726:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_MAYBE_SIGNED_NUMBER'[0m
  726 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1301:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1301 |                 DO_NUMBER (2, days / 7 + 1);[0m
      | [0;1;32m                ^                          
[0m      | [0;32m                {                          ;} 
[0m[1mnstrftime.c:714:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_NUMBER'[0m
  714 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1306:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1306 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1307 |             goto bad_format;[0m
 1308 | [0m
 1309 |           DO_NUMBER (2, (tp->tm_yday - (tp->tm_wday - 1 + 7) % 7 + 7) / 7);[0m
      | [0;1;32m                                                                          
[0m      | [0;32m                                                                          ;} 
[0m[1mnstrftime.c:1306:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1306 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1307 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1312:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1312 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1313 |             goto bad_format;[0m
 1314 | [0m
 1315 |           DO_NUMBER (1, tp->tm_wday);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:1312:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1312 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1313 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1318:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1318 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1337:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1337 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1338 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1344:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1344 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1363:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1363 |             if (yy < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1364 |               yy = tp->tm_year < - TM_YEAR_BASE ? -yy : yy + 100;[0m
      | [0;1;32m                                                                 
[0m[1mnstrftime.c:1369:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1369 |           if (change_case)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1385:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1385 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1385:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1385 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1385:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1385 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1385:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1385 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1392:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1392 |           for (colons = 1; f[colons] == L_(':'); colons++)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1393 |             continue;[0m
 1394 |           if (f[colons] != L_('z'))[0m
 1395 |             goto bad_format;[0m
 1396 |           f += colons;[0m
 1397 |           goto do_z_conversion;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnstrftime.c:1392:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1392 |           for (colons = 1; f[colons] == L_(':'); colons++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1393 |             continue;[0m
      | [0;1;32m                     
[0m[1mnstrftime.c:1394:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1394 |           if (f[colons] != L_('z'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1395 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1400:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1400 |           colons = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1403:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1403 |           if (tp->tm_isdst < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1404 |             break;[0m
      | [0;1;32m                  
[0m[1mnstrftime.c:1449:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1449 |                 DO_TZ_OFFSET (5, 0, hour_diff * 100 + min_diff);[0m
      | [0;1;32m                ^                                              
[0m      | [0;32m                {                                              ;} 
[0m[1mnstrftime.c:739:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_TZ_OFFSET'[0m
  739 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1451:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1451 |               case 1: tz_hh_mm: /* +hh:mm */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m 1452 |                 DO_TZ_OFFSET (6, 04, hour_diff * 100 + min_diff);[0m
      | [0;1;32m                                                                
[0m      | [0;32m                                                                ;} 
[0m[1mnstrftime.c:1454:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1454 |               case 2: tz_hh_mm_ss: /* +hh:mm:ss */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m 1455 |                 DO_TZ_OFFSET (9, 024,[0m
 1456 |                               hour_diff * 10000 + min_diff * 100 + sec_diff);[0m
      | [0;1;32m                                                                            
[0m      | [0;32m                                                                            ;} 
[0m[1mnstrftime.c:1459:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1459 |                 if (sec_diff != 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1460 |                   goto tz_hh_mm_ss;[0m
 1461 |                 if (min_diff != 0)[0m
 1462 |                   goto tz_hh_mm;[0m
 1463 |                 DO_TZ_OFFSET (3, 0, hour_diff);[0m
      | [0;1;32m                                              
[0m      | [0;32m                                              ;} 
[0m[1mnstrftime.c:1459:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1459 |                 if (sec_diff != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1460 |                   goto tz_hh_mm_ss;[0m
      | [0;1;32m                                   
[0m[1mnstrftime.c:1461:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1461 |                 if (min_diff != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1462 |                   goto tz_hh_mm;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:1466:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1466 |                 goto bad_format;[0m
      | [0;1;32m                ^              
[0m      | [0;32m                {              ;} 
[0m[1mnstrftime.c:1471:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1471 |         bad_percent:[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1472 |             --f;[0m
 1473 |             FALLTHROUGH;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1478:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1478 |         bad_format:[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1479 |           cpy (f - percent + 1, percent);[0m
 1480 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:1479:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1479 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1479:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1479 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:222:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:90:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   90 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:179:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  179 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1479:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1479 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1479:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1479 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:192:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  192 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:216:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  216 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  222 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:175:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  175 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:148:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  148 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1485:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1485 |   if (p && maxsize != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1486 |     *p = L_('\0');[0m
      | [0;1;32m                  
[0m139 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[151/172][80.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpjqjqu1yr.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/quotearg.c
[1mquotearg.c:164:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  165 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:175:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  176 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:178:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  178 |   if (!left_quote || !right_quote)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  179 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:189:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   if (style == custom_quoting_style)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  190 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:205:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |   if (translation != msgid)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  206 |     return translation;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:227:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  227 |   if (STRCASEEQ (locale_code, "UTF-8", 'U','T','F','-','8',0,0,0,0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  228 |     return msgid[0] == '`' ? "\xe2\x80\x98": "\xe2\x80\x99";[0m
      | [0;1;32m                                                            
[0m[1mquotearg.c:229:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |   if (STRCASEEQ (locale_code, "GB18030", 'G','B','1','8','0','3','0',0,0))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  230 |     return msgid[0] == '`' ? "\xa1\ae": "\xa1\xaf";[0m
      | [0;1;32m                                                   
[0m[1mquotearg.c:312:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  312 |       quoting_style = c_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  313 |       elide_outer_quotes = true;[0m
  314 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:316:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  316 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  317 |         STORE ('"');[0m
  318 |       backslash_escapes = true;[0m
  319 |       quote_string = "\"";[0m
  320 |       quote_string_len = 1;[0m
  321 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:316:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  317 |         STORE ('"');[0m
      | [0;1;32m                    
[0m[1mquotearg.c:324:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  324 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  325 |       elide_outer_quotes = false;[0m
  326 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:358:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |         if (!elide_outer_quotes)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  359 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
  360 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:359:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  360 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:365:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  365 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mquotearg.c:368:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  368 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  369 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:371:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  371 |       elide_outer_quotes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  372 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:374:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  374 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  375 |         backslash_escapes = true;[0m
  376 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:374:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  375 |         backslash_escapes = true;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:378:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  378 |       quoting_style = shell_always_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  379 |       if (!elide_outer_quotes)[0m
  380 |         STORE ('\'');[0m
  381 |       quote_string = "'";[0m
  382 |       quote_string_len = 1;[0m
  383 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:379:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  380 |         STORE ('\'');[0m
      | [0;1;32m                     
[0m[1mquotearg.c:386:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  386 |       elide_outer_quotes = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  387 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:390:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  390 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mquotearg.c:412:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |           if (elide_outer_quotes)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  413 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:421:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  421 |           if (backslash_escapes)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:442:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  442 |           else if (flags & QA_ELIDE_NULL_BYTES)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  443 |             continue;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:447:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  447 |           switch (quoting_style)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:450:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  450 |               if (elide_outer_quotes)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  451 |                 goto force_outer_quoting_style;[0m
  452 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mquotearg.c:450:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  451 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:455:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  455 |               if ((flags & QA_SPLIT_TRIGRAPHS)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mquotearg.c:456:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  456 |                   && i + 2 < argsize && arg[i + 1] == '?')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m[1mquotearg.c:464:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |                     if (elide_outer_quotes)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  465 |                       goto force_outer_quoting_style;[0m
      | [0;1;32m                                                     
[0m[1mquotearg.c:466:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  466 |                     c = arg[i + 2];[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  467 |                     i += 2;[0m
  468 |                     STORE ('?');[0m
  469 |                     STORE ('"');[0m
  470 |                     STORE ('"');[0m
  471 |                     STORE ('?');[0m
  472 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mquotearg.c:475:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  475 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mquotearg.c:480:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  480 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mquotearg.c:484:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  484 |         case '\a': esc = 'a'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:485:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  485 |         case '\b': esc = 'b'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:486:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  486 |         case '\f': esc = 'f'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:487:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |         case '\n': esc = 'n'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:488:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  488 |         case '\r': esc = 'r'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:489:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  489 |         case '\t': esc = 't'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:490:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  490 |         case '\v': esc = 'v'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:491:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |         case '\\': esc = c;[0m
      | [0;1;32m                   ^
[0m      | [0;32m                   {
[0m[1mquotearg.c:495:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  495 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  496 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:502:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  502 |           if (backslash_escapes && elide_outer_quotes && quote_string_len)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  503 |             goto store_c;[0m
      | [0;1;32m                         
[0m[1mquotearg.c:507:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  507 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  508 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:519:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  519 |           if (! (argsize == SIZE_MAX ? arg[1] == '\0' : argsize == 1))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  520 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:521:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  521 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:150:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  150 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../../config.h:2782:36: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2782 | # define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                   ^
[0m[1mquotearg.c:523:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |           if (i != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  524 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:525:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  525 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:150:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  150 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../../config.h:2782:36: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2782 | # define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                   ^
[0m[1mquotearg.c:527:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  527 |           c_and_shell_quote_compat = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  528 |           FALLTHROUGH;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mquotearg.c:542:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  543 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:544:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  544 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:547:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  547 |           encountered_single_quote = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:551:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  552 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:593:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  593 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:615:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  615 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:615:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  615 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:619:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  619 |                 if (argsize == SIZE_MAX)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  620 |                   argsize = strlen (arg);[0m
      | [0;1;32m                                         
[0m[1mquotearg.c:627:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  627 |                     if (bytes == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  628 |                       break;[0m
  629 |                     else if (bytes == (size_t) -1)[0m
      | [0;32m                    } 
[0m[1mquotearg.c:637:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  637 |                         while (i + m < argsize && arg[i + m])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  638 |                           m++;[0m
      | [0;1;32m                              
[0m[1mquotearg.c:651:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  651 |                             for (j = 1; j < bytes; j++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  652 |                               switch (arg[i + m + j])[0m
  653 |                                 {[0m
  654 |                                 case '[': case '\\': case '^':[0m
  655 |                                 case '`': case '|':[0m
  656 |                                   goto force_outer_quoting_style;[0m
  657 | [0m
  658 |                                 default:[0m
  659 |                                   break;[0m
  660 |                                 }[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:659:35: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  659 |                                   break;[0m
      | [0;1;32m                                  ^    
[0m      | [0;32m                                  {    ;} 
[0m[1mquotearg.c:663:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  663 |                         if (! iswprint (w))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  664 |                           printable = false;[0m
      | [0;1;32m                                            
[0m[1mquotearg.c:693:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |                     if (ilim <= i + 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  694 |                       break;[0m
      | [0;1;32m                            
[0m[1mquotearg.c:709:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  709 |           && !is_right_quote)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  710 |         goto store_c;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:719:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  719 |       if (! c_and_shell_quote_compat)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  720 |         all_c_and_shell_quote_compat = false;[0m
      | [0;1;32m                                             
[0m[1mquotearg.c:724:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  724 |       && elide_outer_quotes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  725 |     goto force_outer_quoting_style;[0m
      | [0;1;32m                                   
[0m[1mquotearg.c:734:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  734 |       if (all_c_and_shell_quote_compat)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  735 |         return quotearg_buffer_restyled (buffer, orig_buffersize, arg, argsize,[0m
  736 |                                          c_quoting_style,[0m
  737 |                                          flags, quote_these_too,[0m
  738 |                                          left_quote, right_quote);[0m
  739 |       else if (! buffersize && orig_buffersize)[0m
      | [0;32m      } 
[0m[1mquotearg.c:748:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |   if (quote_string && !elide_outer_quotes)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  749 |     for (; *quote_string; quote_string++)[0m
  750 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:749:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  749 |     for (; *quote_string; quote_string++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  750 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:752:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  752 |   if (len < buffersize)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  753 |     buffer[len] = '\0';[0m
      | [0;1;32m                       
[0m[1mquotearg.c:759:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |   if (quoting_style == shell_always_quoting_style && backslash_escapes)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  760 |     quoting_style = shell_escape_always_quoting_style;[0m
      | [0;1;32m                                                      
[0m[1mquotearg.c:820:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  820 |   if (size)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  821 |     *size = bufsize - 1;[0m
      | [0;1;32m                        
[0m[1mquotearg.c:844:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  844 |   for (i = 1; i < nslots; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  845 |     free (sv[i].val);[0m
      | [0;1;32m                     
[0m[1mquotearg.c:878:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  878 |   if (! (0 <= n && n < nslots_max))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  879 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:888:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  888 |       if (preallocated)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  889 |         *sv = slotvec0;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:890:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  890 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:890:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  890 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:908:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  908 |         if (val != slot0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  909 |           free (val);[0m
      | [0;1;32m                     
[0m130 warnings generated.
Suppressed 53 warnings (53 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[152/172][73.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpt2f3e5go.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/printf-parse.c
[1mprintf-parse.c:149:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |               for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  150 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:155:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  156 |                     n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                         
[0m[1mprintf-parse.c:157:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |                   if (n == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  158 |                     /* Positional argument 0.  */[0m
  159 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:160:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |                   if (size_overflow_p (n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  161 |                     /* n too large, would lead to out of memory later.  */[0m
  162 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:208:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  209 |                 break;[0m
      | [0;1;32m                      
[0m[1mprintf-parse.c:218:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |               if (max_width_length < 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  219 |                 max_width_length = 1;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:226:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  227 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:232:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  233 |                         n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                             
[0m[1mprintf-parse.c:234:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |                       if (n == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  235 |                         /* Positional argument 0.  */[0m
  236 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:237:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                       if (size_overflow_p (n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  238 |                         /* n too large, would lead to out of memory later.  */[0m
  239 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:247:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                   if (dp->width_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  248 |                     /* arg_posn wrapped around.  */[0m
  249 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:251:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:251:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:258:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |               for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  259 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:262:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |               if (max_width_length < width_length)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  263 |                 max_width_length = width_length;[0m
      | [0;1;32m                                                
[0m[1mprintf-parse.c:275:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |                   if (max_precision_length < 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  276 |                     max_precision_length = 2;[0m
      | [0;1;32m                                             
[0m[1mprintf-parse.c:283:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  284 |                         ;[0m
      | [0;1;32m                         
[0m[1mprintf-parse.c:289:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                           for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  290 |                             n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                                 
[0m[1mprintf-parse.c:291:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                           if (n == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  292 |                             /* Positional argument 0.  */[0m
  293 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:294:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                           if (size_overflow_p (n))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  295 |                             /* n too large, would lead to out of memory[0m
  296 |                                later.  */[0m
  297 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:305:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                       if (dp->precision_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  306 |                         /* arg_posn wrapped around.  */[0m
  307 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:309:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:309:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:316:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |                   for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  317 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:320:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |                   if (max_precision_length < precision_length)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  321 |                     max_precision_length = precision_length;[0m
      | [0;1;32m                                                            
[0m[1mprintf-parse.c:432:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  433 |                     break;[0m
      | [0;1;32m                          
[0m[1mprintf-parse.c:442:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  442 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  443 |                     type = TYPE_LONGLONGINT;[0m
  444 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:447:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  448 |                     type = TYPE_LONGINT;[0m
  449 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:449:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  450 |                     type = TYPE_SCHAR;[0m
  451 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:451:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  452 |                     type = TYPE_SHORT;[0m
  453 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:453:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  454 |                     type = TYPE_INT;[0m
      | [0;1;32m                                    
[0m[1mprintf-parse.c:455:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  455 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:458:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  459 |                     type = TYPE_ULONGLONGINT;[0m
  460 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:463:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  464 |                     type = TYPE_ULONGINT;[0m
  465 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:465:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  465 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  466 |                     type = TYPE_UCHAR;[0m
  467 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:467:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  468 |                     type = TYPE_USHORT;[0m
  469 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:469:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  470 |                     type = TYPE_UINT;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:471:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  471 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:474:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  475 |                     type = TYPE_LONGDOUBLE;[0m
  476 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:476:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  477 |                     type = TYPE_DOUBLE;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:478:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  478 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:480:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  480 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  481 | #if HAVE_WINT_T[0m
  482 |                     type = TYPE_WIDE_CHAR;[0m
  483 | #else[0m
  484 |                     goto error;[0m
  485 | #endif[0m
  486 |                   else[0m
  487 |                     type = TYPE_CHAR;[0m
  488 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:480:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  481 | #if HAVE_WINT_T[0m
  482 |                     type = TYPE_WIDE_CHAR;[0m
  483 | #else[0m
  484 |                     goto error;[0m
  485 | #endif[0m
  486 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:486:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  487 |                     type = TYPE_CHAR;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:491:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |                   type = TYPE_WIDE_CHAR;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  492 |                   c = 'c';[0m
  493 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:496:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  496 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  497 | #if HAVE_WCHAR_T[0m
  498 |                     type = TYPE_WIDE_STRING;[0m
  499 | #else[0m
  500 |                     goto error;[0m
  501 | #endif[0m
  502 |                   else[0m
  503 |                     type = TYPE_STRING;[0m
  504 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:496:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  497 | #if HAVE_WCHAR_T[0m
  498 |                     type = TYPE_WIDE_STRING;[0m
  499 | #else[0m
  500 |                     goto error;[0m
  501 | #endif[0m
  502 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:502:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  502 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  503 |                     type = TYPE_STRING;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:507:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  507 |                   type = TYPE_WIDE_STRING;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  508 |                   c = 's';[0m
  509 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:512:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  512 |                   type = TYPE_POINTER;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  513 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:516:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  516 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  517 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  518 |                   else[0m
  519 |                   /* If 'long long' is the same as 'long', we parse "lln" into[0m
  520 |                      TYPE_COUNT_LONGINT_POINTER.  */[0m
  521 |                   if (flags >= 8)[0m
  522 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  523 |                   else if (flags & 2)[0m
  524 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  525 |                   else if (flags & 1)[0m
  526 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  527 |                   else[0m
  528 |                     type = TYPE_COUNT_INT_POINTER;[0m
  529 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:516:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  517 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  518 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:521:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  521 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  522 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  523 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:523:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  524 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  525 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:525:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  525 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  526 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  527 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:527:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  528 |                     type = TYPE_COUNT_INT_POINTER;[0m
      | [0;1;32m                                                  
[0m[1mprintf-parse.c:542:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  542 |                   type = TYPE_NONE;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  543 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:546:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  546 |                   goto error;[0m
      | [0;1;32m                  ^         
[0m      | [0;32m                  {         ;} 
[0m[1mprintf-parse.c:556:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  556 |                     if (dp->arg_index == ARG_NONE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  557 |                       /* arg_posn wrapped around.  */[0m
  558 |                       goto error;[0m
      | [0;1;32m                                 
[0m[1mprintf-parse.c:560:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  560 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:560:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  560 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:574:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  574 |               if (size_overflow_p (memory_size))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  575 |                 /* Overflow, would lead to out of memory.  */[0m
  576 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:580:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  580 |               if (memory == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  581 |                 /* Out of memory.  */[0m
  582 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:583:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |               if (d->dir == d->direct_alloc_dir)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  584 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                                                                       
[0m[1mprintf-parse.c:584:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  584 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:584:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  584 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:603:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  604 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:605:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  606 |     free (d->dir);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:611:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  611 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  612 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:613:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  614 |     free (d->dir);[0m
      | [0;1;32m                  
[0m68 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[153/172][103.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpwrhwqz4d.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/util.c
[1mutil.c:144:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  144 |           fprintf (stdout, "%-10s %s\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:144:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  144 |           fprintf (stdout, "%-10s %s\n",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:153:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  153 |           fprintf (stdout, "%s%s", (i>0 ? ", " : ""), debugassoc[i].name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:153:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  153 |           fprintf (stdout, "%s%s", (i>0 ? ", " : ""), debugassoc[i].name);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:163:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  163 |       fprintf (stderr, _("Try '%s --help' for more information.\n"), program_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:163:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  163 |       fprintf (stderr, _("Try '%s --help' for more information.\n"), program_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:169:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  169 |   fprintf (stdout, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:169:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  169 |   fprintf (stdout, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:319:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |       if (get_statinfo (pathname, state.rel_pathname, p) != 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  320 |         return -1;              /* failure. */[0m
      | [0;1;32m                                              
[0m[1mutil.c:393:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |   if (NULL == p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  394 |     return;[0m
      | [0;1;32m           
[0m[1mutil.c:441:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |   if (NULL == p)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  442 |     return;[0m
      | [0;1;32m           
[0m[1mutil.c:506:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |   if (tree->pred_left)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  507 |     traverse_tree (tree->pred_left, callback);[0m
      | [0;1;32m                                              
[0m[1mutil.c:511:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |   if (tree->pred_right)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  512 |     traverse_tree (tree->pred_right, callback);[0m
      | [0;1;32m                                               
[0m[1mutil.c:547:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  547 |   if (eval_tree)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  548 |     traverse_tree (eval_tree, undangle_file_pointers);[0m
      | [0;1;32m                                                      
[0m[1mutil.c:558:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  558 |   if (fflush (stdout) == EOF)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  559 |     nonfatal_nontarget_file_error (errno, "standard output");[0m
      | [0;1;32m                                                             
[0m[1mutil.c:574:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  574 |       if (options.debug_options & DebugStat)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  575 |         fprintf(stderr, "fallback_stat(): stat(%s) failed; falling back on lstat()\n", name);[0m
      | [0;1;32m                                                                                             
[0m[1mutil.c:575:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  575 |         fprintf(stderr, "fallback_stat(): stat(%s) failed; falling back on lstat()\n", name);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mutil.c:575:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  575 |         fprintf(stderr, "fallback_stat(): stat(%s) failed; falling back on lstat()\n", name);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mutil.c:576:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  576 |       return fstatat(state.cwd_dir_fd, name, p, AT_SYMLINK_NOFOLLOW);[0m
      | [0;1;32m      ^                                                             
[0m      | [0;32m      {                                                             ;} 
[0m[1mutil.c:604:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  604 |   if (AT_FDCWD != state.cwd_dir_fd)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  605 |     assert (state.cwd_dir_fd >= 0);[0m
      | [0;1;32m                                   
[0m[1mutil.c:614:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |       if (0 == rv)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  615 |         return 0;               /* success */[0m
  616 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:616:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  616 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  617 |         return fallback_stat (name, p, rv);[0m
      | [0;1;32m                                           
[0m[1mutil.c:635:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  635 |   if (AT_FDCWD != state.cwd_dir_fd)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  636 |     assert (state.cwd_dir_fd >= 0);[0m
      | [0;1;32m                                   
[0m[1mutil.c:640:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |   if (0 == rv)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  641 |     return 0;                   /* normal case. */[0m
  642 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:642:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  643 |     return fallback_stat (name, p, rv);[0m
      | [0;1;32m                                       
[0m[1mutil.c:665:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  665 |   fprintf (stderr, "debug_stat (%s)\n", file);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:665:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  665 |   fprintf (stderr, "debug_stat (%s)\n", file);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:670:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  670 |       return optionl_stat (file, bufp);[0m
      | [0;1;32m      ^                               
[0m      | [0;32m      {                               ;} 
[0m[1mutil.c:672:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  672 |       return optionh_stat (file, bufp);[0m
      | [0;1;32m      ^                               
[0m      | [0;32m      {                               ;} 
[0m[1mutil.c:674:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  674 |       return optionp_stat (file, bufp);[0m
      | [0;1;32m      ^                               
[0m      | [0;32m      {                               ;} 
[0m[1mutil.c:688:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  688 |       return true;[0m
      | [0;1;32m      ^          
[0m      | [0;32m      {          ;} 
[0m[1mutil.c:690:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  690 |       return (state.curdepth == 0);[0m
      | [0;1;32m      ^                           
[0m      | [0;32m      {                           ;} 
[0m[1mutil.c:715:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  715 |           if (get_statinfo (pathname, name, pstat) != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  716 |             return false;[0m
      | [0;1;32m                         
[0m[1mutil.c:740:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  740 |           if (get_statinfo (pathname, name, pstat) != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  741 |             return false;[0m
      | [0;1;32m                         
[0m[1mutil.c:767:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  767 |       if (pred->no_default_print)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  768 |         return (false);[0m
      | [0;1;32m                       
[0m[1mutil.c:780:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  780 |       if (arg[1])               /* "-foo" is an expression.  */[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  781 |         return true;[0m
  782 |       else[0m
  783 |         return false;           /* Just "-" is a filename. */[0m
  784 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mutil.c:780:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |       if (arg[1])               /* "-foo" is an expression.  */[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  781 |         return true;[0m
  782 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:782:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  782 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  783 |         return false;           /* Just "-" is a filename. */[0m
      | [0;1;32m                                                             
[0m[1mutil.c:788:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  788 |       if (arg[1])[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  789 |         return false;           /* )x and ,z are not expressions */[0m
  790 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:790:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  791 |         return !leading;        /* A leading ) or , is not either */[0m
      | [0;1;32m                                                                    
[0m[1mutil.c:798:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |       if (arg[1])[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  799 |         return false;[0m
  800 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:800:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  801 |         return true;[0m
      | [0;1;32m                    
[0m[1mutil.c:804:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  804 |       return false;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1mutil.c:987:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  987 |   if (getenv ("POSIXLY_CORRECT"))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  988 |     p->posixly_correct = true;[0m
  989 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:989:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  989 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  990 |     p->posixly_correct = false;[0m
      | [0;1;32m                               
[0m[1mutil.c:1033:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1033 |   if (p->posixly_correct)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1034 |     p->output_block_size = 512;[0m
 1035 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:1035:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1035 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1036 |     p->output_block_size = 1024;[0m
      | [0;1;32m                                
[0m[1mutil.c:1077:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1077 |       if (get_info(pathname, stat_buf, p) != 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1078 |             return false;[0m
      | [0;1;32m                         
[0m54 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[154/172][94.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpp9m04n9h.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/canonicalize.c
[1mcanonicalize.c:82:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m   83 |         end++;[0m
   84 |       while (ISSLASH (*end));[0m
      | [0;32m      } 
[0m[1mcanonicalize.c:88:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   88 |         default: return false;  /* An ordinary file name component is OK.  */[0m
      | [0;1;32m                 ^           
[0m      | [0;32m                 {           ;} 
[0m[1mcanonicalize.c:89:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   89 |         case '\0': return true; /* Trailing "/" is trouble.  */[0m
      | [0;1;32m                   ^          
[0m      | [0;32m                   {          ;} 
[0m[1mcanonicalize.c:90:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   90 |         case '.': break;        /* Possibly "." or "..".  */[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mcanonicalize.c:93:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |       if (!*end || (*end == '.' && (!end[1] || ISSLASH (end[1]))))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   94 |         return true;[0m
      | [0;1;32m                    
[0m[1mcanonicalize.c:118:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  118 |   strcpy (dirend, dir_suffix);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcanonicalize.c:118:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  118 |   strcpy (dirend, dir_suffix);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcanonicalize.c:155:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |       if (*ht == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  156 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mcanonicalize.c:159:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  159 |   if (seen_file (*ht, filename, st))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  160 |     return true;[0m
      | [0;1;32m                
[0m[1mcanonicalize.c:232:19: [0m[0;1;35mwarning: [0m[1mAn undefined value may be read from 'errno' [clang-analyzer-unix.Errno][0m
  232 |           switch (errno)[0m
      | [0;1;32m                  ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:193:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  193 |   bool logical = (can_mode & CAN_NOLINKS) != 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:197:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  197 |   if (multiple_bits_set (can_exist))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:203:7: [0m[0;1;36mnote: [0mAssuming 'name' is not equal to NULL[0m
  203 |   if (name == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanonicalize.c:203:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  203 |   if (name == NULL)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:209:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  209 |   if (name[0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (name[0] == '\0')[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:228:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  228 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m       ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:228:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  228 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mAssuming that 'getcwd' is successful; 'errno' becomes undefined after the call[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:232:19: [0m[0;1;36mnote: [0mAn undefined value may be read from 'errno'[0m
  232 |           switch (errno)[0m
      | [0;1;32m                  ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:235:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  235 |               if (scratch_buffer_grow (rname_buf))[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  236 |                 break;[0m
  237 |               FALLTHROUGH;[0m
      | [0;1;32m                          
[0m      | [0;32m                          ;} 
[0m[1mcanonicalize.c:235:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |               if (scratch_buffer_grow (rname_buf))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  236 |                 break;[0m
      | [0;1;32m                      
[0m[1mcanonicalize.c:239:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |               xalloc_die ();[0m
      | [0;1;32m              ^            
[0m      | [0;32m              {            ;} 
[0m[1mcanonicalize.c:242:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  242 |               dest = rname;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  243 |               goto error;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mcanonicalize.c:293:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |       while (ISSLASH (*start))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  294 |         ++start;[0m
      | [0;1;32m                
[0m[1mcanonicalize.c:297:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  298 |         /* Nothing.  */;[0m
      | [0;1;32m                        
[0m[1mcanonicalize.c:304:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |       if (startlen == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  305 |         break;[0m
  306 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;32m      } 
[0m[1mcanonicalize.c:306:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  307 |         /* nothing */;[0m
  308 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;32m      } 
[0m[1mcanonicalize.c:311:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |           if (dest > rname + prefix_len + 1)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  312 |             for (--dest; dest > rname && !ISSLASH (dest[-1]); --dest)[0m
  313 |               continue;[0m
      | [0;1;32m                       
[0m[1mcanonicalize.c:312:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |             for (--dest; dest > rname && !ISSLASH (dest[-1]); --dest)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  313 |               continue;[0m
      | [0;1;32m                       
[0m[1mcanonicalize.c:316:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |               && ISSLASH (*dest) && !ISSLASH (dest[1]))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  317 |             dest++;[0m
      | [0;1;32m                   
[0m[1mcanonicalize.c:321:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  322 |             *dest++ = '/';[0m
      | [0;1;32m                          
[0m[1mcanonicalize.c:328:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |               if (!scratch_buffer_grow_preserve (rname_buf))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  329 |                 xalloc_die ();[0m
      | [0;1;32m                              
[0m[1mcanonicalize.c:335:11: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted offset [clang-analyzer-security.ArrayBound][0m
  335 |           *dest = '\0';[0m
      | [0;1;32m          ^~~~~
[0m[1mcanonicalize.c:193:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  193 |   bool logical = (can_mode & CAN_NOLINKS) != 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:197:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  197 |   if (multiple_bits_set (can_exist))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:203:7: [0m[0;1;36mnote: [0mAssuming 'name' is not equal to NULL[0m
  203 |   if (name == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanonicalize.c:203:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  203 |   if (name == NULL)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:209:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  209 |   if (name[0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (name[0] == '\0')[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:228:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  228 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m       ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:228:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  228 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mTaint originated here[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:232:11: [0m[0;1;36mnote: [0mControl jumps to 'case 34:'  at line 234[0m
  232 |           switch (errno)[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:235:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  235 |               if (scratch_buffer_grow (rname_buf))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:235:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  235 |               if (scratch_buffer_grow (rname_buf))[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:236:17: [0m[0;1;36mnote: [0m Execution continues on line 245[0m
  236 |                 break;[0m
      | [0;1;32m                ^
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mTaint originated here[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mAssuming that the 1st argument to 'getcwd' is not NULL[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mAssuming that the 1st argument to 'getcwd' is a buffer with size equal to or greater than the value of the 2nd argument[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mTaint propagated to the 1st argument[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 247[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:247:14: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  247 |       dest = rawmemchr (rname, '\0');[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:290:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  290 |   for ( ; *start; start = end)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:293:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 297[0m
  293 |       while (ISSLASH (*start))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:297:25: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^
[0m[1mcanonicalize.c:297:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:297:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^~~~
[0m[1mcanonicalize.c:297:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:304:11: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 0[0m
  304 |       if (startlen == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:304:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  304 |       if (startlen == 0)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:306:16: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 1[0m
  306 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m               ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:306:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  306 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:308:16: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 2[0m
  308 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m               ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:308:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  308 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:321:16: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  321 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m               ^
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:321:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  321 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:324:11: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  324 |           while (rname + rname_buf->length - dest[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:328:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  328 |               if (!scratch_buffer_grow_preserve (rname_buf))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:328:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  328 |               if (!scratch_buffer_grow_preserve (rname_buf))[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:324:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  324 |           while (rname + rname_buf->length - dest[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  325 |                  < startlen + sizeof dir_suffix)[0m
      | [0;1;32m                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:324:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 334[0m
  324 |           while (rname + rname_buf->length - dest[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:335:11: [0m[0;1;36mnote: [0mAccess of the region with a tainted offset that may be too large[0m
  335 |           *dest = '\0';[0m
      | [0;1;32m          ^~~~~
[0m[1mcanonicalize.c:346:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  347 |                     break;[0m
      | [0;1;32m                          
[0m[1mcanonicalize.c:348:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  348 |                   if (!scratch_buffer_grow (&link_buffer))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  349 |                     xalloc_die ();[0m
      | [0;1;32m                                  
[0m[1mcanonicalize.c:356:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |               if (num_links < 20)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  357 |                 num_links++;[0m
  358 |               else if (*start)[0m
      | [0;32m              } 
[0m[1mcanonicalize.c:367:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |                   if (stat (*rname ? rname : ".", &st) != 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  368 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mcanonicalize.c:378:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |                       if (can_exist == CAN_MISSING)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  379 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mcanonicalize.c:385:15: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  385 |               buf[n] = '\0';[0m
      | [0;1;32m              ^~~~~~
[0m[1mcanonicalize.c:193:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  193 |   bool logical = (can_mode & CAN_NOLINKS) != 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:197:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  197 |   if (multiple_bits_set (can_exist))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:203:7: [0m[0;1;36mnote: [0mAssuming 'name' is not equal to NULL[0m
  203 |   if (name == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanonicalize.c:203:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  203 |   if (name == NULL)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:209:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  209 |   if (name[0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (name[0] == '\0')[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:228:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  228 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m       ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:228:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  228 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mTaint originated here[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mTaint propagated to the 1st argument[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 247[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:290:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  290 |   for ( ; *start; start = end)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:293:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 297[0m
  293 |       while (ISSLASH (*start))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:297:25: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^
[0m[1mcanonicalize.c:297:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:297:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^~~~
[0m[1mcanonicalize.c:297:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:304:11: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 0[0m
  304 |       if (startlen == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:304:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  304 |       if (startlen == 0)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:306:16: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 1[0m
  306 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m               ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:306:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  306 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:308:16: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 2[0m
  308 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m               ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:308:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  308 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:321:16: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  321 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m               ^
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:321:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  321 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:324:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 334[0m
  324 |           while (rname + rname_buf->length - dest[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:339:16: [0m[0;1;36mnote: [0m'logical' is false[0m
  339 |           if (!logical)[0m
      | [0;1;32m               ^~~~~~~
[0m[1mcanonicalize.c:339:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  339 |           if (!logical)[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:341:15: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  341 |               while (true)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:346:23: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  346 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:346:19: [0m[0;1;36mnote: [0mTaking false branch[0m
  346 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                  ^
[0m[1mcanonicalize.c:348:23: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  348 |                   if (!scratch_buffer_grow (&link_buffer))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:348:19: [0m[0;1;36mnote: [0mTaking false branch[0m
  348 |                   if (!scratch_buffer_grow (&link_buffer))[0m
      | [0;1;32m                  ^
[0m[1mcanonicalize.c:341:15: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  341 |               while (true)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:345:23: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  345 |                   n = readlink (rname, buf, bufsize - 1);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:345:23: [0m[0;1;36mnote: [0mAssuming that 'readlink' is successful[0m
  345 |                   n = readlink (rname, buf, bufsize - 1);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:346:23: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  346 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:346:19: [0m[0;1;36mnote: [0mTaking true branch[0m
  346 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                  ^
[0m[1mcanonicalize.c:347:21: [0m[0;1;36mnote: [0m Execution continues on line 352[0m
  347 |                     break;[0m
      | [0;1;32m                    ^
[0m[1mcanonicalize.c:352:20: [0m[0;1;36mnote: [0m'n' is >= 0[0m
  352 |           if (0 <= n)[0m
      | [0;1;32m                   ^
[0m[1mcanonicalize.c:352:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  352 |           if (0 <= n)[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:356:19: [0m[0;1;36mnote: [0m'num_links' is < 20[0m
  356 |               if (num_links < 20)[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mcanonicalize.c:356:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  356 |               if (num_links < 20)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:385:15: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  385 |               buf[n] = '\0';[0m
      | [0;1;32m              ^~~~~~
[0m[1mcanonicalize.c:389:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |               if (end_in_extra_buffer)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  390 |                 end_idx = end - extra_buf;[0m
      | [0;1;32m                                          
[0m[1mcanonicalize.c:392:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  393 |                 xalloc_die ();[0m
      | [0;1;32m                              
[0m[1mcanonicalize.c:396:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |                   if (!scratch_buffer_grow_preserve (&extra_buffer))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  397 |                     xalloc_die ();[0m
      | [0;1;32m                                  
[0m[1mcanonicalize.c:400:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |               if (end_in_extra_buffer)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  401 |                 end = extra_buf + end_idx;[0m
      | [0;1;32m                                          
[0m[1mcanonicalize.c:404:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  404 |               memmove (&extra_buf[n], end, len + 1);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcanonicalize.c:404:15: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  404 |               memmove (&extra_buf[n], end, len + 1);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mcanonicalize.c:404:25: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  404 |               memmove (&extra_buf[n], end, len + 1);[0m
      | [0;1;32m                        ^~~~~~~~~~~~
[0m[1mcanonicalize.c:193:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  193 |   bool logical = (can_mode & CAN_NOLINKS) != 0;[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:197:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  197 |   if (multiple_bits_set (can_exist))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:203:7: [0m[0;1;36mnote: [0mAssuming 'name' is not equal to NULL[0m
  203 |   if (name == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mcanonicalize.c:203:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  203 |   if (name == NULL)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:209:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  209 |   if (name[0] == '\0')[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (name[0] == '\0')[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:228:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  228 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m       ^
[0m[1m./filename.h:97:42: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   97 | # define IS_ABSOLUTE_FILE_NAME(Filename) ISSLASH ((Filename)[0])[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:228:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  228 |   if (!IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mTaint originated here[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:15: [0m[0;1;36mnote: [0mTaint propagated to the 1st argument[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:230:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 247[0m
  230 |       while (!getcwd (rname, rname_buf->length))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:290:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  290 |   for ( ; *start; start = end)[0m
      | [0;1;32m  ^
[0m[1mcanonicalize.c:293:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 297[0m
  293 |       while (ISSLASH (*start))[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:297:25: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^
[0m[1mcanonicalize.c:297:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:297:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                        ^~~~
[0m[1mcanonicalize.c:297:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  297 |       for (end = start; *end && !ISSLASH (*end); ++end)[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:304:11: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 0[0m
  304 |       if (startlen == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:304:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  304 |       if (startlen == 0)[0m
      | [0;1;32m      ^
[0m[1mcanonicalize.c:306:16: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 1[0m
  306 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m               ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:306:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  306 |       else if (startlen == 1 && start[0] == '.')[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:308:16: [0m[0;1;36mnote: [0mAssuming 'startlen' is not equal to 2[0m
  308 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m               ^~~~~~~~~~~~~
[0m[1mcanonicalize.c:308:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  308 |       else if (startlen == 2 && start[0] == '.' && start[1] == '.')[0m
      | [0;1;32m                             ^
[0m[1mcanonicalize.c:321:16: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  321 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m               ^
[0m[1m./filename.h:93:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   93 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mcanonicalize.c:321:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  321 |           if (!ISSLASH (dest[-1]))[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:324:11: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 334[0m
  324 |           while (rname + rname_buf->length - dest[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:339:16: [0m[0;1;36mnote: [0m'logical' is false[0m
  339 |           if (!logical)[0m
      | [0;1;32m               ^~~~~~~
[0m[1mcanonicalize.c:339:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  339 |           if (!logical)[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:341:15: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  341 |               while (true)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:345:23: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  345 |                   n = readlink (rname, buf, bufsize - 1);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:345:23: [0m[0;1;36mnote: [0mAssuming that 'readlink' is successful[0m
  345 |                   n = readlink (rname, buf, bufsize - 1);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:346:23: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  346 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:346:19: [0m[0;1;36mnote: [0mTaking true branch[0m
  346 |                   if (n < bufsize - 1)[0m
      | [0;1;32m                  ^
[0m[1mcanonicalize.c:347:21: [0m[0;1;36mnote: [0m Execution continues on line 352[0m
  347 |                     break;[0m
      | [0;1;32m                    ^
[0m[1mcanonicalize.c:352:20: [0m[0;1;36mnote: [0m'n' is >= 0[0m
  352 |           if (0 <= n)[0m
      | [0;1;32m                   ^
[0m[1mcanonicalize.c:352:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  352 |           if (0 <= n)[0m
      | [0;1;32m          ^
[0m[1mcanonicalize.c:356:19: [0m[0;1;36mnote: [0m'num_links' is < 20[0m
  356 |               if (num_links < 20)[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mcanonicalize.c:356:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  356 |               if (num_links < 20)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:389:19: [0m[0;1;36mnote: [0m'end_in_extra_buffer' is false[0m
  389 |               if (end_in_extra_buffer)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:389:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  389 |               if (end_in_extra_buffer)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:392:19: [0m[0;1;36mnote: [0m'?' condition is true[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                  ^
[0m[1m./intprops.h:364:3: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_OVERFLOW'[0m
  364 |   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)[0m
      | [0;1;32m  ^
[0m[1m./intprops.h:389:23: [0m[0;1;36mnote: [0mexpanded from macro '_GL_BINARY_OP_OVERFLOW'[0m
  389 |                       _GL_INT_MINIMUM (_GL_INT_CONVERT (a, b)), \[0m
      | [0;1;32m                      ^
[0m[1m./intprops.h:64:4: [0m[0;1;36mnote: [0mexpanded from macro '_GL_INT_MINIMUM'[0m
   64 |   (EXPR_SIGNED (e)                                                      \[0m
      | [0;1;32m   ^
[0m[1m./intprops.h:44:25: [0m[0;1;36mnote: [0mexpanded from macro 'EXPR_SIGNED'[0m
   44 | #define EXPR_SIGNED(e) (_GL_INT_NEGATE_CONVERT (e, 1) < 0)[0m
      | [0;1;32m                        ^
[0m[1m./intprops.h:30:40: [0m[0;1;36mnote: [0mexpanded from macro '_GL_INT_NEGATE_CONVERT'[0m
   30 | #define _GL_INT_NEGATE_CONVERT(e, v) ((1 ? 0 : (e)) - (v))[0m
      | [0;1;32m                                       ^
[0m[1mcanonicalize.c:392:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                  ^
[0m[1m./intprops.h:364:3: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_OVERFLOW'[0m
  364 |   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)[0m
      | [0;1;32m  ^
[0m[1m./intprops.h:389:23: [0m[0;1;36mnote: [0mexpanded from macro '_GL_BINARY_OP_OVERFLOW'[0m
  389 |                       _GL_INT_MINIMUM (_GL_INT_CONVERT (a, b)), \[0m
      | [0;1;32m                      ^
[0m[1m./intprops.h:64:4: [0m[0;1;36mnote: [0mexpanded from macro '_GL_INT_MINIMUM'[0m
   64 |   (EXPR_SIGNED (e)                                                      \[0m
      | [0;1;32m   ^
[0m[1m./intprops.h:44:24: [0m[0;1;36mnote: [0mexpanded from macro 'EXPR_SIGNED'[0m
   44 | #define EXPR_SIGNED(e) (_GL_INT_NEGATE_CONVERT (e, 1) < 0)[0m
      | [0;1;32m                       ^
[0m[1mcanonicalize.c:392:19: [0m[0;1;36mnote: [0m'?' condition is true[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                  ^
[0m[1m./intprops.h:364:3: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_OVERFLOW'[0m
  364 |   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)[0m
      | [0;1;32m  ^
[0m[1m./intprops.h:389:23: [0m[0;1;36mnote: [0mexpanded from macro '_GL_BINARY_OP_OVERFLOW'[0m
  389 |                       _GL_INT_MINIMUM (_GL_INT_CONVERT (a, b)), \[0m
      | [0;1;32m                      ^
[0m[1m./intprops.h:66:6: [0m[0;1;36mnote: [0mexpanded from macro '_GL_INT_MINIMUM'[0m
   66 |    : _GL_INT_CONVERT (e, 0))[0m
      | [0;1;32m     ^
[0m[1m./intprops.h:26:33: [0m[0;1;36mnote: [0mexpanded from macro '_GL_INT_CONVERT'[0m
   26 | #define _GL_INT_CONVERT(e, v) ((1 ? 0 : (e)) + (v))[0m
      | [0;1;32m                                ^
[0m[1mcanonicalize.c:392:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                  ^
[0m[1m./intprops.h:364:33: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_OVERFLOW'[0m
  364 |   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)[0m
      | [0;1;32m                                ^
[0m[1mcanonicalize.c:392:19: [0m[0;1;36mnote: [0mAssuming 'len' is >= 0[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                  ^
[0m[1m./intprops.h:364:33: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_OVERFLOW'[0m
  364 |   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)[0m
      | [0;1;32m  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
[0m[1m./intprops.h:388:3: [0m[0;1;36mnote: [0mexpanded from macro '_GL_BINARY_OP_OVERFLOW'[0m
  388 |   op_result_overflow (a, b,                                     \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  389 |                       _GL_INT_MINIMUM (_GL_INT_CONVERT (a, b)), \[0m
      | [0;1;32m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  390 |                       _GL_INT_MAXIMUM (_GL_INT_CONVERT (a, b)))[0m
      | [0;1;32m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./intprops.h:281:7: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ADD_OVERFLOW'[0m
  281 |     : (a) < 0 ? (b) <= (a) + (b)                                         \[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcanonicalize.c:392:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                  ^
[0m[1m./intprops.h:364:33: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_OVERFLOW'[0m
  364 |   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)[0m
      | [0;1;32m                                ^
[0m[1mcanonicalize.c:392:19: [0m[0;1;36mnote: [0m'n' is >= 0[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                  ^
[0m[1m./intprops.h:364:33: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_OVERFLOW'[0m
  364 |   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)[0m
      | [0;1;32m  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
[0m[1m./intprops.h:388:3: [0m[0;1;36mnote: [0mexpanded from macro '_GL_BINARY_OP_OVERFLOW'[0m
  388 |   op_result_overflow (a, b,                                     \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  389 |                       _GL_INT_MINIMUM (_GL_INT_CONVERT (a, b)), \[0m
      | [0;1;32m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  390 |                       _GL_INT_MAXIMUM (_GL_INT_CONVERT (a, b)))[0m
      | [0;1;32m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./intprops.h:282:7: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ADD_OVERFLOW'[0m
  282 |     : (b) < 0 ? (a) <= (a) + (b)                                         \[0m
      | [0;1;32m      ^~~
[0m[1mcanonicalize.c:392:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                  ^
[0m[1m./intprops.h:364:33: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_OVERFLOW'[0m
  364 |   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)[0m
      | [0;1;32m                                ^
[0m[1mcanonicalize.c:392:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m                  ^
[0m[1m./intprops.h:364:33: [0m[0;1;36mnote: [0mexpanded from macro 'INT_ADD_OVERFLOW'[0m
  364 |   _GL_BINARY_OP_OVERFLOW (a, b, _GL_ADD_OVERFLOW)[0m
      | [0;1;32m  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
[0m[1m./intprops.h:388:3: [0m[0;1;36mnote: [0mexpanded from macro '_GL_BINARY_OP_OVERFLOW'[0m
  388 |   op_result_overflow (a, b,                                     \[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  389 |                       _GL_INT_MINIMUM (_GL_INT_CONVERT (a, b)), \[0m
      | [0;1;32m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  390 |                       _GL_INT_MAXIMUM (_GL_INT_CONVERT (a, b)))[0m
      | [0;1;32m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./intprops.h:283:7: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ADD_OVERFLOW'[0m
  283 |     : (a) + (b) < (b))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:392:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  392 |               if (INT_ADD_OVERFLOW (len, n))[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:394:22: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  394 |               while (extra_buffer.length <= len + n)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:394:15: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  394 |               while (extra_buffer.length <= len + n)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:396:23: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  396 |                   if (!scratch_buffer_grow_preserve (&extra_buffer))[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:396:19: [0m[0;1;36mnote: [0mTaking false branch[0m
  396 |                   if (!scratch_buffer_grow_preserve (&extra_buffer))[0m
      | [0;1;32m                  ^
[0m[1mcanonicalize.c:394:22: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  394 |               while (extra_buffer.length <= len + n)[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:394:15: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 400[0m
  394 |               while (extra_buffer.length <= len + n)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:400:19: [0m[0;1;36mnote: [0m'end_in_extra_buffer' is false[0m
  400 |               if (end_in_extra_buffer)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:400:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  400 |               if (end_in_extra_buffer)[0m
      | [0;1;32m              ^
[0m[1mcanonicalize.c:404:25: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  404 |               memmove (&extra_buf[n], end, len + 1);[0m
      | [0;1;32m                        ^~~~~~~~~~~~
[0m[1mcanonicalize.c:405:15: [0m[0;1;35mwarning: [0m[1mValue stored to 'name' is never read [clang-analyzer-deadcode.DeadStores][0m
  405 |               name = end = memcpy (extra_buf, buf, n);[0m
      | [0;1;32m              ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:405:15: [0m[0;1;36mnote: [0mValue stored to 'name' is never read[0m
  405 |               name = end = memcpy (extra_buf, buf, n);[0m
      | [0;1;32m              ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcanonicalize.c:405:28: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  405 |               name = end = memcpy (extra_buf, buf, n);[0m
      | [0;1;32m                           ^~~~~~
[0m[1mcanonicalize.c:405:28: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  405 |               name = end = memcpy (extra_buf, buf, n);[0m
      | [0;1;32m                           ^~~~~~
[0m[1mcanonicalize.c:416:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  416 |                       if (ISSLASH (buf[1]) && !ISSLASH (buf[2]) && !pfxlen)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  417 |                         *dest++ = '/';[0m
      | [0;1;32m                                      
[0m[1mcanonicalize.c:427:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  427 |                   if (dest > rname + prefix_len + 1)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  428 |                     for (--dest; dest > rname && !ISSLASH (dest[-1]); --dest)[0m
  429 |                       continue;[0m
      | [0;1;32m                               
[0m[1mcanonicalize.c:428:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  428 |                     for (--dest; dest > rname && !ISSLASH (dest[-1]); --dest)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  429 |                       continue;[0m
      | [0;1;32m                               
[0m[1mcanonicalize.c:431:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  431 |                       && ISSLASH (*dest) && !ISSLASH (dest[1]) && !prefix_len)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  432 |                     dest++;[0m
      | [0;1;32m                           
[0m[1mcanonicalize.c:443:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |                           && !end[strspn (end, SLASHES)])))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  444 |             goto error;[0m
      | [0;1;32m                       
[0m[1mcanonicalize.c:447:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |   if (dest > rname + prefix_len + 1 && ISSLASH (dest[-1]))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  448 |     --dest;[0m
      | [0;1;32m           
[0m[1mcanonicalize.c:450:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |       && ISSLASH (*dest) && !ISSLASH (dest[1]))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  451 |     dest++;[0m
      | [0;1;32m           
[0m[1mcanonicalize.c:455:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |   if (ht)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  456 |     hash_free (ht);[0m
      | [0;1;32m                   
[0m[1mcanonicalize.c:468:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if (!result)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  469 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m49 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[155/172][78.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp2rda1uo9.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/c-strcasestr.c
[1mc-strcasestr.c:53:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |   while (*haystack && *needle)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   54 |     ok &= (c_tolower ((unsigned char) *haystack++)[0m
   55 |            == c_tolower ((unsigned char) *needle++));[0m
      | [0;1;32m                                                     
[0m[1mc-strcasestr.c:56:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |   if (*needle)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   57 |     return NULL;[0m
      | [0;1;32m                
[0m[1mc-strcasestr.c:58:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |   if (ok)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   59 |     return (char *) haystack_start;[0m
      | [0;1;32m                                   
[0m[1mc-strcasestr.c:67:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |   if (needle_len < LONG_NEEDLE_THRESHOLD)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   68 |     return two_way_short_needle ((const unsigned char *) haystack,[0m
   69 |                                  haystack_len,[0m
   70 |                                  (const unsigned char *) needle_start,[0m
   71 |                                  needle_len);[0m
      | [0;1;32m                                             
[0m37 warnings generated.
Suppressed 33 warnings (33 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[156/172][104.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpjs3_ebtd.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/vasnprintf.c
[1mvasnprintf.c:1864:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1865 |     /* errno is already set.  */[0m
 1866 |     return NULL;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1908:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1908 |         if (size_overflow_p (buf_memsize))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1909 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1911:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1911 |         if (buf == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1912 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1965:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1971:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1971 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1971:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1971 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1976:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1976 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1977 |                   result[length++] = *cp++;[0m
 1978 |                 while (--n > 0);[0m
      | [0;32m                } 
[0m[1mvasnprintf.c:1981:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1982 |           break;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1989:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1989 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1990 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:1992:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1992 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1992:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1992 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1993:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1993 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1864:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:156:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  156 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1864:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1875:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1875 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1875:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1875 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1899:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1899 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1899:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1899 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1916:9: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1916 |     if (resultbuf != NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1916:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1916 |     if (resultbuf != NULL)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1958:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1958 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1960:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1960 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1960:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1960 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1934:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1934:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1939:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1940:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1940 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1940:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1940 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1942:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1942 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:97:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   97 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1943:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1943 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:101:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  101 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1943:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1943 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1945:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1945 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1945:33: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1945 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m                                ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1949:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1949 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1949:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1949 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1951:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1951:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1951:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1951:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1969:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1969 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1981:13: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to field 'count'[0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1981:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1985:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1985 |         if (dp->conversion == '%')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1985:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1985 |         if (dp->conversion == '%')[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1989:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1989 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1989:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1989 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1991:32: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 1991 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   66 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:1991:32: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 1991 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1992:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is <= 'allocated'[0m
 1992 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1934:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1992:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1992 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1934:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1993:13: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 1993 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1998:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1998 |             if (!(dp->arg_index != ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1999 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2006:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2006 |                     *a.arg[dp->arg_index].a.a_count_schar_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2007 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2009:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2009 |                     *a.arg[dp->arg_index].a.a_count_short_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2010 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2012:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2012 |                     *a.arg[dp->arg_index].a.a_count_int_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2013 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2015:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2015 |                     *a.arg[dp->arg_index].a.a_count_longint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2016 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2018:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2018 |                     *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2019 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2021:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2021 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mvasnprintf.c:5028:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5028 |                 if (flags & FLAG_GROUP)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5029 |                   *fbp++ = '\'';[0m
      | [0;1;32m                                
[0m[1mvasnprintf.c:5031:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5031 |                 if (flags & FLAG_LEFT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 5032 |                   *fbp++ = '-';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5033:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5033 |                 if (flags & FLAG_SHOWSIGN)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5034 |                   *fbp++ = '+';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5035:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5035 |                 if (flags & FLAG_SPACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5036 |                   *fbp++ = ' ';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5037:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5037 |                 if (flags & FLAG_ALT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5038 |                   *fbp++ = '#';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5040:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5040 |                 if (flags & FLAG_LOCALIZED)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5041 |                   *fbp++ = 'I';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5045:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5045 |                     if (flags & FLAG_ZERO)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5046 |                       *fbp++ = '0';[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5054:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5054 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5054:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5054 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5060:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5060 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5061 |                               *fbp++ = *mp++;[0m
 5062 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5075:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5075 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5075:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5075 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5081:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5081 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5082 |                               *fbp++ = *mp++;[0m
 5083 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5100:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5100 |                     FALLTHROUGH;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                    {           ;} 
[0m[1m./attribute.h:150:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  150 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../../config.h:2782:36: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2782 | # define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                   ^
[0m[1mvasnprintf.c:5110:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5110 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5112:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5112 |                     *fbp++ = 'L';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 5113 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:5115:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5115 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5179:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5179 |                     if (!(a.arg[dp->width_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 5180 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5185:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5185 |                     if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 5186 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5199:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5199 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5199:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5199 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5218:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5218 |                     if (maxlen > INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 5219 |                       maxlen = INT_MAX / TCHARS_PER_DCHAR;[0m
      | [0;1;32m                                                          
[0m[1mvasnprintf.c:5266:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5266 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5267 |                           int arg = a.arg[dp->arg_index].a.a_schar;[0m
 5268 |                           SNPRINTF_BUF (arg);[0m
 5269 |                         }[0m
 5270 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5268:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5268 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5268:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5268 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5272:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5272 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5273 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uchar;[0m
 5274 |                           SNPRINTF_BUF (arg);[0m
 5275 |                         }[0m
 5276 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5274:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5274 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5274:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5274 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5278:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5278 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5279 |                           int arg = a.arg[dp->arg_index].a.a_short;[0m
 5280 |                           SNPRINTF_BUF (arg);[0m
 5281 |                         }[0m
 5282 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5280:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5280 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5280:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5280 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5284:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5284 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5285 |                           unsigned int arg = a.arg[dp->arg_index].a.a_ushort;[0m
 5286 |                           SNPRINTF_BUF (arg);[0m
 5287 |                         }[0m
 5288 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5286:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5286 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5286:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5286 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5290:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5290 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5291 |                           int arg = a.arg[dp->arg_index].a.a_int;[0m
 5292 |                           SNPRINTF_BUF (arg);[0m
 5293 |                         }[0m
 5294 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5292:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5292 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5292:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5292 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5296:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5296 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5297 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uint;[0m
 5298 |                           SNPRINTF_BUF (arg);[0m
 5299 |                         }[0m
 5300 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5298:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5298 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5298:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5298 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5302:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5302 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5303 |                           long int arg = a.arg[dp->arg_index].a.a_longint;[0m
 5304 |                           SNPRINTF_BUF (arg);[0m
 5305 |                         }[0m
 5306 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5304:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5304 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5304:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5304 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5308:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5308 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5309 |                           unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;[0m
 5310 |                           SNPRINTF_BUF (arg);[0m
 5311 |                         }[0m
 5312 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5310:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5310 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5310:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5310 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5314:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5314 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5315 |                           long long int arg = a.arg[dp->arg_index].a.a_longlongint;[0m
 5316 |                           SNPRINTF_BUF (arg);[0m
 5317 |                         }[0m
 5318 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5316:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5316 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5316:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5316 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5320:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5320 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5321 |                           unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;[0m
 5322 |                           SNPRINTF_BUF (arg);[0m
 5323 |                         }[0m
 5324 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5322:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5322 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5322:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5322 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5326:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5326 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5327 |                           double arg = a.arg[dp->arg_index].a.a_double;[0m
 5328 |                           SNPRINTF_BUF (arg);[0m
 5329 |                         }[0m
 5330 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5328:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5328 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5328:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5328 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5332:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5332 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5333 |                           long double arg = a.arg[dp->arg_index].a.a_longdouble;[0m
 5334 |                           SNPRINTF_BUF (arg);[0m
 5335 |                         }[0m
 5336 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5334:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5334 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5334:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5334 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5338:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5338 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5339 |                           int arg = a.arg[dp->arg_index].a.a_char;[0m
 5340 |                           SNPRINTF_BUF (arg);[0m
 5341 |                         }[0m
 5342 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5340:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5340 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5340:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5340 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5345:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5345 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5346 |                           wint_t arg = a.arg[dp->arg_index].a.a_wide_char;[0m
 5347 |                           SNPRINTF_BUF (arg);[0m
 5348 |                         }[0m
 5349 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5347:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5347 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5347:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5347 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5352:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5352 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5353 |                           const char *arg = a.arg[dp->arg_index].a.a_string;[0m
 5354 |                           SNPRINTF_BUF (arg);[0m
 5355 |                         }[0m
 5356 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5354:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5354 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5354:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5354 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5359:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5359 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5360 |                           const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;[0m
 5361 |                           SNPRINTF_BUF (arg);[0m
 5362 |                         }[0m
 5363 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5361:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5361 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5361:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5361 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5366:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5366 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5367 |                           void *arg = a.arg[dp->arg_index].a.a_pointer;[0m
 5368 |                           SNPRINTF_BUF (arg);[0m
 5369 |                         }[0m
 5370 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5368:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5368 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5368:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5368 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5225:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5225 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:205:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  205 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5372:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5372 |                         abort ();[0m
      | [0;1;32m                        ^       
[0m      | [0;32m                        {       ;} 
[0m[1mvasnprintf.c:5385:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5385 |                             && ((TCHAR_T *) (result + length)) [count] != '\0')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5386 |                           abort ();[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5388:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5388 |                         if (retcount > count)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 5389 |                           count = retcount;[0m
      | [0;1;32m                                           
[0m[1mvasnprintf.c:5447:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5447 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5448 |                               count = retcount;[0m
      | [0;1;32m                                               
[0m[1mvasnprintf.c:5460:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5460 |                             if (dp->conversion == 'c' || dp->conversion == 's')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5461 |                               errno = EILSEQ;[0m
 5462 |                             else[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5462:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5462 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5463 |                               errno = EINVAL;[0m
      | [0;1;32m                                             
[0m[1mvasnprintf.c:5466:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5466 |                         if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 5467 |                           free (result);[0m
      | [0;1;32m                                        
[0m[1mvasnprintf.c:5468:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5468 |                         if (buf_malloced != NULL)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5469 |                           free (buf_malloced);[0m
      | [0;1;32m                                              
[0m[1mvasnprintf.c:5486:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5486 |                         if (maxlen == INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 5487 |                           goto overflow;[0m
 5488 |                         else[0m
      | [0;32m                        } 
[0m[1mvasnprintf.c:5506:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5506 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5506:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5506 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5813:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5813:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1952 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:157:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  157 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5814:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 5814 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1864:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:156:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  156 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1864:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1864 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1875:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1875 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1875:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1875 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1899:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1899 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1899:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1899 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1916:9: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1916 |     if (resultbuf != NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1916:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1916 |     if (resultbuf != NULL)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1958:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1958 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1960:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1960 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1960:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1960 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1934:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1934:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1939:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1940:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1940 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1940:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1940 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1942:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1942 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:97:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   97 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1943:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1943 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:101:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  101 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1943:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1943 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1945:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1945 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1945:33: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1945 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m                                ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1949:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1949 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1949:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1949 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1951:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1951:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1951:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1965:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1965 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1951:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1951 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1969:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1969 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1981:13: [0m[0;1;36mnote: [0mAssuming 'i' is equal to field 'count'[0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1981:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1981 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1982:11: [0m[0;1;36mnote: [0m Execution continues on line 5813[0m
 1982 |           break;[0m
      | [0;1;32m          ^
[0m[1mvasnprintf.c:5813:24: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1956:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:1934:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   66 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:5813:24: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1956:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:1934:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1mvasnprintf.c:5813:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1934:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5813:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 5813 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1956:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1956 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1934:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1934 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:5814:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 5814 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5822:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5822 |         if (memory != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 5823 |           result = memory;[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5826:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5826 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5827 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5838:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5838 |     if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5839 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:5840:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5840 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5841 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5848:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5848 |     if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5849 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:5850:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5850 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5851 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m124 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[157/172][107.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpqsahm_a_.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/mountlist.c
[1mmountlist.c:422:11: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted offset [clang-analyzer-security.ArrayBound][0m
  422 |       if (str[i] == '\\' && (i + 4 < len)[0m
      | [0;1;32m          ^
[0m[1mmountlist.c:474:10: [0m[0;1;36mnote: [0mTaint originated here[0m
  474 |     fp = fopen (mountinfo, "re");[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmountlist.c:474:10: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  474 |     fp = fopen (mountinfo, "re");[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmountlist.c:474:10: [0m[0;1;36mnote: [0mAssuming that 'fopen' is successful[0m
  474 |     fp = fopen (mountinfo, "re");[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmountlist.c:475:9: [0m[0;1;36mnote: [0m'fp' is not equal to NULL[0m
  475 |     if (fp != NULL)[0m
      | [0;1;32m        ^~
[0m[1mmountlist.c:475:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  475 |     if (fp != NULL)[0m
      | [0;1;32m    ^
[0m[1mmountlist.c:480:16: [0m[0;1;36mnote: [0mTaint propagated to the 1st argument[0m
  480 |         while (getline (&line, &buf_size, fp) != -1)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmountlist.c:480:9: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  480 |         while (getline (&line, &buf_size, fp) != -1)[0m
      | [0;1;32m        ^
[0m[1mmountlist.c:485:18: [0m[0;1;36mnote: [0mTaint propagated to the 5th argument[0m
  485 |             rc = sscanf(line, "%*u "        /* id - discarded  */[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  486 |                               "%*u "        /* parent - discarded  */[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  487 |                               "%u:%u "      /* dev major:minor  */[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  488 |                               "%n",         /* mountroot (start)  */[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  489 |                               &devmaj, &devmin,[0m
      | [0;1;32m                              ~~~~~~~~~~~~~~~~~
[0m  490 |                               &mntroot_s);[0m
      | [0;1;32m                              ~~~~~~~~~~~
[0m[1mmountlist.c:492:17: [0m[0;1;36mnote: [0mAssuming 'rc' is equal to 2[0m
  492 |             if (rc != 2 && rc != 3)  /* 3 if %n included in count.  */[0m
      | [0;1;32m                ^~~~~~~
[0m[1mmountlist.c:492:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  492 |             if (rc != 2 && rc != 3)  /* 3 if %n included in count.  */[0m
      | [0;1;32m                        ^
[0m[1mmountlist.c:498:19: [0m[0;1;36mnote: [0m'blank' is non-null[0m
  498 |             if (! blank)[0m
      | [0;1;32m                  ^~~~~
[0m[1mmountlist.c:498:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  498 |             if (! blank)[0m
      | [0;1;32m            ^
[0m[1mmountlist.c:504:19: [0m[0;1;36mnote: [0m'blank' is non-null[0m
  504 |             if (! blank)[0m
      | [0;1;32m                  ^~~~~
[0m[1mmountlist.c:504:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  504 |             if (! blank)[0m
      | [0;1;32m            ^
[0m[1mmountlist.c:509:17: [0m[0;1;36mnote: [0mAssuming 'dash' is non-null[0m
  509 |             if (! dash)[0m
      | [0;1;32m                ^~~~~~
[0m[1mmountlist.c:509:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  509 |             if (! dash)[0m
      | [0;1;32m            ^
[0m[1mmountlist.c:515:19: [0m[0;1;36mnote: [0m'blank' is non-null[0m
  515 |             if (! blank)[0m
      | [0;1;32m                  ^~~~~
[0m[1mmountlist.c:515:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  515 |             if (! blank)[0m
      | [0;1;32m            ^
[0m[1mmountlist.c:520:13: [0m[0;1;36mnote: [0mTaking false branch[0m
  520 |             if (! terminate_at_blank (source))[0m
      | [0;1;32m            ^
[0m[1mmountlist.c:526:13: [0m[0;1;36mnote: [0mCalling 'unescape_tab'[0m
  526 |             unescape_tab (mntroot);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mmountlist.c:420:15: [0m[0;1;36mnote: [0mAssuming 'i' is < 'len'[0m
  420 |   for (i = 0; i < len; i++)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mmountlist.c:420:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  420 |   for (i = 0; i < len; i++)[0m
      | [0;1;32m  ^
[0m[1mmountlist.c:422:11: [0m[0;1;36mnote: [0mAccess of the region with a tainted offset that may be too large[0m
  422 |       if (str[i] == '\\' && (i + 4 < len)[0m
      | [0;1;32m          ^~~~~~
[0m[1mmountlist.c:432:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  433 |         str[j++] = str[i];[0m
      | [0;1;32m                          
[0m[1mmountlist.c:444:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |   if (s)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  445 |     *s = '\0';[0m
      | [0;1;32m              
[0m[1mmountlist.c:485:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  485 |             rc = sscanf(line, "%*u "        /* id - discarded  */[0m
      | [0;1;32m                 ^~~~~~
[0m[1mmountlist.c:485:18: [0m[0;1;36mnote: [0mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11[0m
  485 |             rc = sscanf(line, "%*u "        /* id - discarded  */[0m
      | [0;1;32m                 ^~~~~~
[0m[1mmountlist.c:492:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |             if (rc != 2 && rc != 3)  /* 3 if %n included in count.  */[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  493 |               continue;[0m
      | [0;1;32m                       
[0m[1mmountlist.c:498:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  498 |             if (! blank)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  499 |               continue;[0m
      | [0;1;32m                       
[0m[1mmountlist.c:504:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  504 |             if (! blank)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  505 |               continue;[0m
      | [0;1;32m                       
[0m[1mmountlist.c:509:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |             if (! dash)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  510 |               continue;[0m
      | [0;1;32m                       
[0m[1mmountlist.c:515:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |             if (! blank)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  516 |               continue;[0m
      | [0;1;32m                       
[0m[1mmountlist.c:520:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |             if (! terminate_at_blank (source))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  521 |               continue;[0m
      | [0;1;32m                       
[0m[1mmountlist.c:559:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |         if (fclose (fp) == EOF)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  560 |           goto free_then_fail;[0m
      | [0;1;32m                              
[0m[1mmountlist.c:569:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  569 |         if (fp == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  570 |           return NULL;[0m
      | [0;1;32m                      
[0m[1mmountlist.c:591:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |         if (endmntent (fp) == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  592 |           goto free_then_fail;[0m
      | [0;1;32m                              
[0m[1mmountlist.c:1088:12: [0m[0;1;35mwarning: [0m[1mOpened stream never closed. Potential resource leak [clang-analyzer-unix.Stream][0m
 1088 |   *mtail = NULL;[0m
      | [0;1;32m           ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/__stddef_null.h:26:22: [0m[0;1;36mnote: [0mexpanded from macro 'NULL'[0m
   26 | #define NULL ((void*)0)[0m
      | [0;1;32m                     ^
[0m[1mmountlist.c:474:10: [0m[0;1;36mnote: [0mStream opened here[0m
  474 |     fp = fopen (mountinfo, "re");[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmountlist.c:474:10: [0m[0;1;36mnote: [0mAssuming that 'fopen' is successful[0m
  474 |     fp = fopen (mountinfo, "re");[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmountlist.c:475:9: [0m[0;1;36mnote: [0m'fp' is not equal to NULL[0m
  475 |     if (fp != NULL)[0m
      | [0;1;32m        ^~
[0m[1mmountlist.c:475:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  475 |     if (fp != NULL)[0m
      | [0;1;32m    ^
[0m[1mmountlist.c:480:9: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 549[0m
  480 |         while (getline (&line, &buf_size, fp) != -1)[0m
      | [0;1;32m        ^
[0m[1mmountlist.c:551:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  551 |         if (ferror (fp))[0m
      | [0;1;32m        ^
[0m[1mmountlist.c:559:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  559 |         if (fclose (fp) == EOF)[0m
      | [0;1;32m            ^
[0m[1m./stdio.h:733:19: [0m[0;1;36mnote: [0mexpanded from macro 'fclose'[0m
  733 | #   define fclose rpl_fclose[0m
      | [0;1;32m                  ^
[0m[1mmountlist.c:559:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  559 |         if (fclose (fp) == EOF)[0m
      | [0;1;32m        ^
[0m[1mmountlist.c:1088:12: [0m[0;1;36mnote: [0mOpened stream never closed. Potential resource leak[0m
 1088 |   *mtail = NULL;[0m
      | [0;1;32m           ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/__stddef_null.h:26:22: [0m[0;1;36mnote: [0mexpanded from macro 'NULL'[0m
   26 | #define NULL ((void*)0)[0m
      | [0;1;32m                     ^
[0m[1mmountlist.c:1117:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1117 |   if (me->me_type_malloced)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1118 |     free (me->me_type);[0m
      | [0;1;32m                       
[0m17 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[158/172][97.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp8fuqi_uv.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/ftsfind.c
[1mftsfind.c:153:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  153 |       HANDLECASE(FTS_D);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:154:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  154 |       HANDLECASE(FTS_DC);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:155:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  155 |       HANDLECASE(FTS_DEFAULT);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:156:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  156 |       HANDLECASE(FTS_DNR);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:157:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  157 |       HANDLECASE(FTS_DOT);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:158:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  158 |       HANDLECASE(FTS_DP);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:159:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  159 |       HANDLECASE(FTS_ERR);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:160:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  160 |       HANDLECASE(FTS_F);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:161:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  161 |       HANDLECASE(FTS_INIT);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:162:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  162 |       HANDLECASE(FTS_NS);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:163:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  163 |       HANDLECASE(FTS_NSOK);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:164:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |       HANDLECASE(FTS_SL);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:165:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  165 |       HANDLECASE(FTS_SLNONE);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:166:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  166 |       HANDLECASE(FTS_W);[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:145:31: [0m[0;1;36mnote: [0mexpanded from macro 'HANDLECASE'[0m
  145 | #define HANDLECASE(N) case N: return #N;[0m
      | [0;1;32m                              ^
[0m[1mftsfind.c:168:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  168 |       sprintf (buf, "[%d]", info);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftsfind.c:168:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  168 |       sprintf (buf, "[%d]", info);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mftsfind.c:168:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  168 |       sprintf (buf, "[%d]", info);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  169 |       return buf;[0m
      | [0;1;32m                
[0m      | [0;32m                ;} 
[0m[1mftsfind.c:277:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |   if (options.debug_options & DebugSearch)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  278 |     fprintf (stderr,[0m
  279 |              "consider_visiting (early): %s: "[0m
  280 |              "fts_info=%-6s, fts_level=%2d, prev_depth=%d "[0m
  281 |              "fts_path=%s, fts_accpath=%s\n",[0m
  282 |              quotearg_n_style (0, options.err_quoting_style, ent->fts_path),[0m
  283 |              get_fts_info_name (ent->fts_info),[0m
  284 |              (int)ent->fts_level, prev_depth,[0m
  285 |              quotearg_n_style (1, options.err_quoting_style, ent->fts_path),[0m
  286 |              quotearg_n_style (2, options.err_quoting_style, ent->fts_accpath));[0m
      | [0;1;32m                                                                                
[0m[1mftsfind.c:278:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  278 |     fprintf (stderr,[0m
      | [0;1;32m    ^~~~~~~
[0m[1mftsfind.c:278:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  278 |     fprintf (stderr,[0m
      | [0;1;32m    ^~~~~~~
[0m[1mftsfind.c:405:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |       if (!digest_mode (&mode, ent->fts_path, ent->fts_name, &statbuf, 0))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  406 |         return;[0m
      | [0;1;32m               
[0m[1mftsfind.c:433:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |           if (ent->fts_level > options.maxdepth)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  434 |             ignore = 1;         /* don't even look at this one */[0m
      | [0;1;32m                                                                 
[0m[1mftsfind.c:453:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |   if (options.debug_options & DebugSearch)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  454 |     fprintf (stderr,[0m
  455 |              "consider_visiting (late): %s: "[0m
  456 |              "fts_info=%-6s, isdir=%d ignore=%d have_stat=%d have_type=%d \n",[0m
  457 |              quotearg_n_style (0, options.err_quoting_style, ent->fts_path),[0m
  458 |              get_fts_info_name (ent->fts_info),[0m
  459 |              isdir, ignore, state.have_stat, state.have_type);[0m
      | [0;1;32m                                                              
[0m[1mftsfind.c:454:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  454 |     fprintf (stderr,[0m
      | [0;1;32m    ^~~~~~~
[0m[1mftsfind.c:454:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  454 |     fprintf (stderr,[0m
      | [0;1;32m    ^~~~~~~
[0m[1mftsfind.c:491:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |       ftsoptions |= FTS_COMFOLLOW|FTS_LOGICAL;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  492 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mftsfind.c:495:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  495 |       ftsoptions |= FTS_COMFOLLOW|FTS_PHYSICAL;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  496 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mftsfind.c:499:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  499 |       ftsoptions |= FTS_PHYSICAL;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  500 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mftsfind.c:503:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |   if (options.stay_on_filesystem)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  504 |     ftsoptions |= FTS_XDEV;[0m
      | [0;1;32m                           
[0m[1mftsfind.c:605:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |           if (stream == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  606 |             die (EXIT_FAILURE, errno, _("cannot open %s for reading"),[0m
  607 |                  files0_filename_quoted);[0m
      | [0;1;32m                                         
[0m[1mftsfind.c:653:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |   if (!ai)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  654 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mftsfind.c:666:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  666 |               goto argv_iter_done;[0m
      | [0;1;32m              ^                  
[0m      | [0;32m              {                  ;} 
[0m[1mftsfind.c:668:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  668 |               error (0, errno, _("%s: read error"), files0_filename_quoted);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  669 |               state.exit_status = EXIT_FAILURE;[0m
  670 |               ok = false;[0m
  671 |               goto argv_iter_done;[0m
      | [0;1;32m                                 
[0m      | [0;32m                                 ;} 
[0m[1mftsfind.c:673:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  673 |               xalloc_die ();[0m
      | [0;1;32m              ^            
[0m      | [0;32m              {            ;} 
[0m[1mftsfind.c:686:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  686 |           if (options.files0_from == NULL)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  687 |             error (0, ENOENT, "%s", safely_quote_err_filename (0, file_name));[0m
  688 |           else[0m
      | [0;32m          } 
[0m[1mftsfind.c:704:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |       if (!options.files0_from && looks_like_expression (file_name, true))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  705 |         break;[0m
      | [0;1;32m              
[0m[1mftsfind.c:718:37: [0m[0;1;35mwarning: [0m[1mStream pointer might be NULL [clang-analyzer-unix.Stream][0m
  718 |   if (ok && options.files0_from && (ferror (stream) || fclose (stream) != 0))[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~
[0m[1mftsfind.c:570:31: [0m[0;1;36mnote: [0mAssuming 'argc' is > 0[0m
  570 |   bool argv_starting_points = 0 < argc && !looks_like_expression (argv[0], true);[0m
      | [0;1;32m                              ^~~~~~~~
[0m[1mftsfind.c:570:31: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mftsfind.c:570:43: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  570 |   bool argv_starting_points = 0 < argc && !looks_like_expression (argv[0], true);[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mftsfind.c:572:3: [0m[0;1;36mnote: [0m'stream' initialized to a null pointer value[0m
  572 |   FILE *stream = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~
[0m[1mftsfind.c:576:7: [0m[0;1;36mnote: [0mAssuming field 'files0_from' is null[0m
  576 |   if (options.files0_from)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1mftsfind.c:576:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  576 |   if (options.files0_from)[0m
      | [0;1;32m  ^
[0m[1mftsfind.c:636:12: [0m[0;1;36mnote: [0m'argv_starting_points' is true[0m
  636 |       if (!argv_starting_points)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~
[0m[1mftsfind.c:636:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  636 |       if (!argv_starting_points)[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:653:7: [0m[0;1;36mnote: [0mAssuming 'ai' is non-null[0m
  653 |   if (!ai)[0m
      | [0;1;32m      ^~~
[0m[1mftsfind.c:653:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  653 |   if (!ai)[0m
      | [0;1;32m  ^
[0m[1mftsfind.c:657:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  657 |   while (true)[0m
      | [0;1;32m  ^
[0m[1mftsfind.c:661:11: [0m[0;1;36mnote: [0mAssuming 'file_name' is null[0m
  661 |       if (!file_name)[0m
      | [0;1;32m          ^~~~~~~~~~
[0m[1mftsfind.c:661:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  661 |       if (!file_name)[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:663:11: [0m[0;1;36mnote: [0mControl jumps to 'case AI_ERR_EOF:'  at line 665[0m
  663 |           switch (ai_err)[0m
      | [0;1;32m          ^
[0m[1mftsfind.c:666:15: [0m[0;1;36mnote: [0mControl jumps to line 716[0m
  666 |               goto argv_iter_done;[0m
      | [0;1;32m              ^
[0m[1mftsfind.c:718:7: [0m[0;1;36mnote: [0m'ok' is true[0m
  718 |   if (ok && options.files0_from && (ferror (stream) || fclose (stream) != 0))[0m
      | [0;1;32m      ^~
[0m[1mftsfind.c:718:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mftsfind.c:718:13: [0m[0;1;36mnote: [0mAssuming field 'files0_from' is non-null[0m
  718 |   if (ok && options.files0_from && (ferror (stream) || fclose (stream) != 0))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mftsfind.c:718:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  718 |   if (ok && options.files0_from && (ferror (stream) || fclose (stream) != 0))[0m
      | [0;1;32m      ^
[0m[1mftsfind.c:718:37: [0m[0;1;36mnote: [0mStream pointer might be NULL[0m
  718 |   if (ok && options.files0_from && (ferror (stream) || fclose (stream) != 0))[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~
[0m[1mftsfind.c:718:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |   if (ok && options.files0_from && (ferror (stream) || fclose (stream) != 0))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  719 |     die (EXIT_FAILURE, 0, _("error reading %s"), files0_filename_quoted);[0m
      | [0;1;32m                                                                         
[0m[1mftsfind.c:733:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |   if (argv[0])[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  734 |     set_program_name (argv[0]);[0m
  735 |   else[0m
      | [0;32m  } 
[0m[1mftsfind.c:735:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  736 |     set_program_name ("find");[0m
      | [0;1;32m                              
[0m[1mftsfind.c:778:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  778 |   if (options.debug_options & DebugStat)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  779 |     options.xstat = debug_stat;[0m
      | [0;1;32m                               
[0m[1mftsfind.c:782:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  782 |   if (options.debug_options & DebugTime)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  783 |     fprintf (stderr, "cur_day_start = %s", ctime (&options.cur_day_start.tv_sec));[0m
      | [0;1;32m                                                                                  
[0m[1mftsfind.c:783:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  783 |     fprintf (stderr, "cur_day_start = %s", ctime (&options.cur_day_start.tv_sec));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mftsfind.c:783:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  783 |     fprintf (stderr, "cur_day_start = %s", ctime (&options.cur_day_start.tv_sec));[0m
      | [0;1;32m    ^~~~~~~
[0m53 warnings generated.
Suppressed 13 warnings (13 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[159/172][107.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp2ypchks7.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/listfile.c
[1mlistfile.c:80:25: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   80 |   const int chars_out = fprintf (stream, "%*lu", *width, num);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mlistfile.c:80:25: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   80 |   const int chars_out = fprintf (stream, "%*lu", *width, num);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mlistfile.c:83:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |       if (*width < chars_out)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   84 |         *width = chars_out;[0m
      | [0;1;32m                           
[0m[1mlistfile.c:125:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  125 |   chars_out = fprintf (stream, "%*s", inode_number_width,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlistfile.c:125:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  125 |   chars_out = fprintf (stream, "%*s", inode_number_width,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlistfile.c:145:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  145 |       chars_out = fprintf (stream, "%*s",[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mlistfile.c:145:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  145 |       chars_out = fprintf (stream, "%*s",[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mlistfile.c:157:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |           if (chars_out > block_size_width)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  158 |             block_size_width = chars_out;[0m
      | [0;1;32m                                         
[0m[1mlistfile.c:186:20: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  186 |       chars_out =  fprintf (stream, "%*lu",[0m
      | [0;1;32m                   ^~~~~~~
[0m[1mlistfile.c:186:20: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  186 |       chars_out =  fprintf (stream, "%*lu",[0m
      | [0;1;32m                   ^~~~~~~
[0m[1mlistfile.c:195:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |           if (chars_out > nlink_width)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  196 |             nlink_width = chars_out;[0m
      | [0;1;32m                                    
[0m[1mlistfile.c:204:11: [0m[0;1;35mwarning: [0m[1mValue stored to 'output_good' is never read [clang-analyzer-deadcode.DeadStores][0m
  204 |           output_good = false;[0m
      | [0;1;32m          ^
[0m[1mlistfile.c:204:11: [0m[0;1;36mnote: [0mValue stored to 'output_good' is never read[0m
[1mlistfile.c:211:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |           if (len > owner_width)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  212 |             owner_width = len;[0m
      | [0;1;32m                              
[0m[1mlistfile.c:213:26: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  213 |           output_good = (fprintf (stream, "%-*s ", owner_width, user_name) >= 0);[0m
      | [0;1;32m                         ^~~~~~~
[0m[1mlistfile.c:213:26: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  213 |           output_good = (fprintf (stream, "%-*s ", owner_width, user_name) >= 0);[0m
      | [0;1;32m                         ^~~~~~~
[0m[1mlistfile.c:214:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |           if (!output_good)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  215 |             failed_at = 400;[0m
      | [0;1;32m                            
[0m[1mlistfile.c:219:23: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  219 |           chars_out = fprintf (stream, "%-8lu ", (unsigned long) statp->st_uid);[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mlistfile.c:219:23: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  219 |           chars_out = fprintf (stream, "%-8lu ", (unsigned long) statp->st_uid);[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mlistfile.c:220:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  220 |           if (chars_out > owner_width)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  221 |             owner_width = chars_out;[0m
      | [0;1;32m                                    
[0m[1mlistfile.c:223:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |           if (!output_good)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  224 |             failed_at = 450;[0m
      | [0;1;32m                            
[0m[1mlistfile.c:234:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |           if (len > group_width)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  235 |             group_width = len;[0m
      | [0;1;32m                              
[0m[1mlistfile.c:236:26: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  236 |           output_good = (fprintf (stream, "%-*s ", group_width, group_name) >= 0);[0m
      | [0;1;32m                         ^~~~~~~
[0m[1mlistfile.c:236:26: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  236 |           output_good = (fprintf (stream, "%-*s ", group_width, group_name) >= 0);[0m
      | [0;1;32m                         ^~~~~~~
[0m[1mlistfile.c:237:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |           if (!output_good)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  238 |             failed_at = 500;[0m
      | [0;1;32m                            
[0m[1mlistfile.c:242:23: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  242 |           chars_out = fprintf (stream, "%-*lu",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mlistfile.c:242:23: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  242 |           chars_out = fprintf (stream, "%-*lu",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mlistfile.c:244:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |           if (chars_out > group_width)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  245 |             group_width = chars_out;[0m
      | [0;1;32m                                    
[0m[1mlistfile.c:257:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |               if (!output_good)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  258 |                 failed_at = 550;[0m
      | [0;1;32m                                
[0m[1mlistfile.c:277:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  277 |               if (fprintf (stream, ", ") < 0)[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mlistfile.c:277:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  277 |               if (fprintf (stream, ", ") < 0)[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mlistfile.c:306:23: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  306 |           chars_out = fprintf (stream, "%*s",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mlistfile.c:306:23: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  306 |           chars_out = fprintf (stream, "%*s",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mlistfile.c:357:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |           while (!strftime (buf, bufsize, fmt, when_local))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  358 |             buf = alloca (bufsize *= 2);[0m
      | [0;1;32m                                        
[0m[1mlistfile.c:360:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  360 |           if (fprintf (stream, "%s ", buf) < 0)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlistfile.c:360:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  360 |           if (fprintf (stream, "%s ", buf) < 0)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mlistfile.c:377:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  377 |               if (fprintf (stream, "%*s%s ",[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mlistfile.c:377:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  377 |               if (fprintf (stream, "%*s%s ",[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mlistfile.c:386:19: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  386 |               if (fprintf (stream, "%*s ", width,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mlistfile.c:386:19: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  386 |               if (fprintf (stream, "%*s ", width,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mlistfile.c:462:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  462 |   return (fprintf (stream, "%s", p) >= 0);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mlistfile.c:462:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  462 |   return (fprintf (stream, "%s", p) >= 0);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mlistfile.c:477:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  477 |           fprintf_result = fprintf (stream, "\\\\");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  478 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlistfile.c:477:28: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  477 |           fprintf_result = fprintf (stream, "\\\\");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:477:28: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  477 |           fprintf_result = fprintf (stream, "\\\\");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:481:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  481 |           fprintf_result = fprintf (stream, "\\n");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  482 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlistfile.c:481:28: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  481 |           fprintf_result = fprintf (stream, "\\n");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:481:28: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  481 |           fprintf_result = fprintf (stream, "\\n");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:485:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  485 |           fprintf_result = fprintf (stream, "\\b");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  486 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlistfile.c:485:28: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  485 |           fprintf_result = fprintf (stream, "\\b");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:485:28: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  485 |           fprintf_result = fprintf (stream, "\\b");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:489:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  489 |           fprintf_result = fprintf (stream, "\\r");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  490 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlistfile.c:489:28: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  489 |           fprintf_result = fprintf (stream, "\\r");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:489:28: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  489 |           fprintf_result = fprintf (stream, "\\r");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:493:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  493 |           fprintf_result = fprintf (stream, "\\t");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  494 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlistfile.c:493:28: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  493 |           fprintf_result = fprintf (stream, "\\t");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:493:28: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  493 |           fprintf_result = fprintf (stream, "\\t");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:497:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  497 |           fprintf_result = fprintf (stream, "\\f");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  498 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlistfile.c:497:28: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  497 |           fprintf_result = fprintf (stream, "\\f");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:497:28: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  497 |           fprintf_result = fprintf (stream, "\\f");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:501:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  501 |           fprintf_result = fprintf (stream, "\\ ");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  502 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlistfile.c:501:28: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  501 |           fprintf_result = fprintf (stream, "\\ ");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:501:28: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  501 |           fprintf_result = fprintf (stream, "\\ ");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:505:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  505 |           fprintf_result = fprintf (stream, "\\\"");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  506 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlistfile.c:505:28: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  505 |           fprintf_result = fprintf (stream, "\\\"");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:505:28: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  505 |           fprintf_result = fprintf (stream, "\\\"");[0m
      | [0;1;32m                           ^~~~~~~
[0m[1mlistfile.c:509:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  509 |           if (c > 040 && c < 0177)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  510 |             {[0m
  511 |               if (EOF == putc (c, stream))[0m
  512 |                 return false;[0m
  513 |               fprintf_result = 1; /* otherwise it's used uninitialized. */[0m
  514 |             }[0m
  515 |           else[0m
  516 |             {[0m
  517 |               fprintf_result = fprintf (stream, "\\%03o", (unsigned int) c);[0m
  518 |             }[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mlistfile.c:511:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |               if (EOF == putc (c, stream))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  512 |                 return false;[0m
      | [0;1;32m                             
[0m[1mlistfile.c:517:32: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  517 |               fprintf_result = fprintf (stream, "\\%03o", (unsigned int) c);[0m
      | [0;1;32m                               ^~~~~~~
[0m[1mlistfile.c:517:32: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  517 |               fprintf_result = fprintf (stream, "\\%03o", (unsigned int) c);[0m
      | [0;1;32m                               ^~~~~~~
[0m[1mlistfile.c:520:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |       if (fprintf_result < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  521 |         return false;[0m
      | [0;1;32m                     
[0m[1mlistfile.c:528:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |   if (literal_control_chars)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  529 |     return print_name_without_quoting (p, stream);[0m
  530 |   else[0m
      | [0;32m  } 
[0m[1mlistfile.c:530:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  531 |     return print_name_with_quoting (p, stream);[0m
      | [0;1;32m                                               
[0m61 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[160/172][108.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpnnrtjn0e.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/tree.c
[1mtree.c:67:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |   if (foldcase)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   68 |     fnmatch_flags |= FNM_CASEFOLD;[0m
      | [0;1;32m                                  
[0m[1mtree.c:75:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   75 |           if (fnmatch (glob, start_points[i], fnmatch_flags) == 0)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   76 |             return true;[0m
      | [0;1;32m                        
[0m[1mtree.c:114:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |   if (*input == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  115 |     die (EXIT_FAILURE, 0, _("invalid expression"));[0m
      | [0;1;32m                                                   
[0m[1mtree.c:120:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |       die (EXIT_FAILURE, 0, _("invalid expression"));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  121 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m../lib/die.h:30:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   30 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../gl/lib/verify.h:262:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  262 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mtree.c:125:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |       die (EXIT_FAILURE, 0,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  126 |            _("invalid expression; you have used a binary operator '%s' with nothing before it."),[0m
  127 |            this_pred->p_name);[0m
  128 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m../lib/die.h:30:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   30 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../gl/lib/verify.h:262:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  262 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mtree.c:131:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  131 |       if (prev_pred == NULL)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mtree.c:165:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  165 |       next = *input;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  166 |       *input = (*input)->pred_next;[0m
  167 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtree.c:170:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  170 |       next = *input;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  171 |       *input = (*input)->pred_next;[0m
  172 |       next->pred_right = get_expr (input, NEGATE_PREC, next);[0m
  173 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtree.c:176:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  176 |       if ( (NULL == (*input)->pred_next) || (*input)->pred_next->artificial )[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mtree.c:202:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  202 |           || ((*input)->p_type != CLOSE_PAREN))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  203 |         die (EXIT_FAILURE, 0,[0m
  204 |              _("invalid expression; I was expecting to find a ')' somewhere "[0m
  205 |                "but did not see one."));[0m
      | [0;1;32m                                        
[0m[1mtree.c:211:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  211 |       die (EXIT_FAILURE, 0, _("oops -- invalid expression type!"));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  212 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m../lib/die.h:30:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   30 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../gl/lib/verify.h:262:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  262 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mtree.c:220:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  220 |   if (*input == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  221 |     return (next);[0m
      | [0;1;32m                  
[0m[1mtree.c:225:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |       if (next == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  226 |         die (EXIT_FAILURE, 0, _("invalid expression"));[0m
      | [0;1;32m                                                       
[0m[1mtree.c:251:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |   if ((*input == NULL) || ((*input)->p_type == CLOSE_PAREN))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  252 |     return (NULL);[0m
      | [0;1;32m                  
[0m[1mtree.c:266:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  266 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mtree.c:279:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  279 |           return tree;[0m
      | [0;1;32m          ^          
[0m      | [0;32m          {          ;} 
[0m[1mtree.c:282:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  282 |           die (EXIT_FAILURE, 0,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  283 |                _("oops -- invalid expression type (%d)!"),[0m
  284 |                (int)(*input)->p_type);[0m
  285 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m../lib/die.h:30:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   30 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../gl/lib/verify.h:262:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  262 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mtree.c:310:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  310 |           pred_is(p, pred_or))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  311 |         return false;[0m
  312 |       else[0m
      | [0;32m      } 
[0m[1mtree.c:312:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  313 |         return NeedsNothing == p->p_cost;[0m
      | [0;1;32m                                         
[0m[1mtree.c:326:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  326 |       fprintf (fp, "%s %s", p->p_name, p->arg_text);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:326:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  326 |       fprintf (fp, "%s %s", p->p_name, p->arg_text);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:330:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  330 |       fprintf (fp, "%s", p->p_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:330:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  330 |       fprintf (fp, "%s", p->p_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:357:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |   if (NULL == list->tail)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  358 |     list->tail = list->head;[0m
      | [0;1;32m                            
[0m[1mtree.c:366:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |       if (p1->est_success_rate == p2->est_success_rate)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  367 |         return 0;[0m
  368 |       else if (wantfailure)[0m
      | [0;32m      } 
[0m[1mtree.c:368:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |       else if (wantfailure)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  369 |         return p1->est_success_rate < p2->est_success_rate ? -1 :  1;[0m
  370 |       else[0m
      | [0;32m      } 
[0m[1mtree.c:370:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  371 |         return p1->est_success_rate < p2->est_success_rate ?  1 : -1;[0m
      | [0;1;32m                                                                     
[0m[1mtree.c:387:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |   if (NULL == list->head)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  388 |     return;                     /* nothing to do */[0m
      | [0;1;32m                                                   
[0m[1mtree.c:392:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  392 |       fprintf (stderr, "%s:\n", "predlist before merge sort");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:392:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  392 |       fprintf (stderr, "%s:\n", "predlist before merge sort");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:418:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |           if (pred_cost_compare (p->pred_right, q->pred_right, wantfailure) >= 0)[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  419 |             break;[0m
      | [0;1;32m                  
[0m[1mtree.c:425:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  425 |           if (NULL == q->pred_left)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  426 |             new_list.tail = q;[0m
      | [0;1;32m                              
[0m[1mtree.c:433:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |           if (NULL == new_list.tail)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  434 |             new_list.tail = q; /* first item in new list */[0m
      | [0;1;32m                                                           
[0m[1mtree.c:439:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  439 |       fprintf (stderr, "%s:\n", "predlist after merge sort");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:439:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  439 |       fprintf (stderr, "%s:\n", "predlist after merge sort");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:462:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |   for (i=0; i<nlists; i++)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  463 |     mergefn (&lists[i], last);[0m
      | [0;1;32m                              
[0m[1mtree.c:493:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |       if (worst < p->p_cost)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  494 |         worst = p->p_cost;[0m
      | [0;1;32m                          
[0m[1mtree.c:536:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |   if (BI_OP != p->p_type)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  537 |     reason = "Not a binary operation";[0m
      | [0;1;32m                                      
[0m[1mtree.c:541:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |       if (NULL == p->pred_left || NULL == p->pred_right)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  542 |         reason = "Doesn't have two arms";[0m
      | [0;1;32m                                         
[0m[1mtree.c:548:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  548 |       if (NULL == p->pred_left->pred_right)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  549 |         reason = "Left arm has no child on RHS";[0m
      | [0;1;32m                                                
[0m[1mtree.c:556:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  556 |       if (subtree_has_side_effects (*pl))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  557 |         reason = "Left subtree has side-effects";[0m
      | [0;1;32m                                                 
[0m[1mtree.c:561:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  561 |       if (subtree_has_side_effects (*pr))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  562 |         reason = "Right subtree has side-effects";[0m
      | [0;1;32m                                                  
[0m[1mtree.c:587:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  587 |               fprintf (stderr, "Success rates: l=%f, r=%f\n", succ_rate_l, succ_rate_r);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mtree.c:587:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  587 |               fprintf (stderr, "Success rates: l=%f, r=%f\n", succ_rate_l, succ_rate_r);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mtree.c:593:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |               if (!want_swap)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  594 |                 reason = "Operation is OR; right success rate >= left";[0m
      | [0;1;32m                                                                       
[0m[1mtree.c:599:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  599 |               if (!want_swap)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  600 |                 reason = "Operation is AND; right success rate <= left";[0m
      | [0;1;32m                                                                        
[0m[1mtree.c:617:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  617 |               fprintf (stderr, "Performing arm swap on:\n");[0m
      | [0;1;32m              ^~~~~~~
[0m[1mtree.c:617:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  617 |               fprintf (stderr, "Performing arm swap on:\n");[0m
      | [0;1;32m              ^~~~~~~
[0m[1mtree.c:628:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  628 |       fprintf (stderr, "Not an arm swap candidate (%s):\n", reason);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:628:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  628 |       fprintf (stderr, "Not an arm swap candidate (%s):\n", reason);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:706:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  706 |   if (eval_treep == NULL || *eval_treep == NULL)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  707 |     return (false);[0m
      | [0;1;32m                   
[0m[1mtree.c:709:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  709 |   for (i=0; i<NumEvaluationCosts; i++)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  710 |     predlist_init (&cbo_list[i]);[0m
      | [0;1;32m                                 
[0m[1mtree.c:726:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  726 |   if (curr->p_type != BI_OP)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  727 |     set_new_parent (curr, prev_prec, prevp);[0m
      | [0;1;32m                                            
[0m[1mtree.c:732:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  732 |       fprintf (stderr, "Normalized Eval Tree:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:732:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  732 |       fprintf (stderr, "Normalized Eval Tree:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:739:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |   if ((*prevp) && (*prevp)->p_type == BI_OP)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  740 |     biop_prec = (*prevp)->p_prec;[0m
      | [0;1;32m                                 
[0m[1mtree.c:751:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |           if (curr->p_prec != biop_prec)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  752 |             curr = set_new_parent (curr, biop_prec, prevp);[0m
      | [0;1;32m                                                           
[0m[1mtree.c:766:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  766 |           if (biop_prec == COMMA_PREC)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  767 |             break;[0m
      | [0;1;32m                  
[0m[1mtree.c:770:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  770 |           if (!curr->pred_right->side_effects)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mtree.c:780:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  780 |                       fprintf (stderr, "-O%d: promoting cheap predicate ",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mtree.c:780:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  780 |                       fprintf (stderr, "-O%d: promoting cheap predicate ",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mtree.c:783:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  783 |                       fprintf (stderr, " into name_list\n");[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mtree.c:783:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  783 |                       fprintf (stderr, " into name_list\n");[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mtree.c:805:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  805 |                       fprintf (stderr, "-O%d: categorising predicate ",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mtree.c:805:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  805 |                       fprintf (stderr, "-O%d: categorising predicate ",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mtree.c:808:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  808 |                       fprintf (stderr, " by cost (%s)\n",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mtree.c:808:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  808 |                       fprintf (stderr, " by cost (%s)\n",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mtree.c:820:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  820 |           curr->pred_right->side_effects[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  821 |             = opt_expr (&curr->pred_right->pred_right);[0m
  822 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtree.c:828:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  828 |           curr->pred_right->side_effects = opt_expr (&curr->pred_right);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  829 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtree.c:835:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  835 |           die (EXIT_FAILURE, 0, _("oops -- invalid expression type!"));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  836 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m../lib/die.h:30:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   30 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../gl/lib/verify.h:262:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  262 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mtree.c:860:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  860 |   if (rate > 1.0f)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  861 |     return 1.0;[0m
  862 |   else if (rate < 0.0)[0m
      | [0;32m  } 
[0m[1mtree.c:862:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  862 |   else if (rate < 0.0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  863 |     return 0.0;[0m
  864 |   else[0m
      | [0;32m  } 
[0m[1mtree.c:864:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  864 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  865 |     return rate;[0m
      | [0;1;32m                
[0m[1mtree.c:885:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  885 |       new_parent->pred_func = pred_comma;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  886 |       new_parent->p_name = ",";[0m
  887 |       new_parent->est_success_rate = 1.0;[0m
  888 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtree.c:890:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  890 |       new_parent->pred_func = pred_or;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  891 |       new_parent->p_name = "-o";[0m
  892 |       new_parent->est_success_rate = constrain_rate (curr->est_success_rate);[0m
  893 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtree.c:895:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  895 |       new_parent->pred_func = pred_and;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  896 |       new_parent->p_name = "-a";[0m
  897 |       new_parent->est_success_rate = constrain_rate (curr->est_success_rate);[0m
  898 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtree.c:900:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  900 |       ;                         /* empty */[0m
      | [0;1;32m      ^
[0m      | [0;32m      {;} 
[0m[1mtree.c:1010:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1010 |       if (result < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1011 |         return false;[0m
      | [0;1;32m                     
[0m[1mtree.c:1063:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1063 |       if (p->args.exec_vec.multiple)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1064 |         inherent_cost = NeedsEventualExec;[0m
 1065 |       else[0m
      | [0;32m      } 
[0m[1mtree.c:1065:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1065 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1066 |         inherent_cost = NeedsImmediateExec;[0m
      | [0;1;32m                                           
[0m[1mtree.c:1119:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1119 |   if (inherent_cost > data_requirement_cost)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1120 |     return inherent_cost;[0m
 1121 |   else[0m
      | [0;32m  } 
[0m[1mtree.c:1121:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1122 |     return data_requirement_cost;[0m
      | [0;1;32m                                 
[0m[1mtree.c:1146:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1146 |   if (p)[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1147 |     return p->est_success_rate;[0m
 1148 |   else[0m
      | [0;32m  } 
[0m[1mtree.c:1148:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1148 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1149 |     return 1.0f;[0m
      | [0;1;32m                
[0m[1mtree.c:1158:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1158 |   if (p->pred_right)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1159 |     calculate_derived_rates (p->pred_right);[0m
      | [0;1;32m                                            
[0m[1mtree.c:1160:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1160 |   if (p->pred_left)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1161 |     calculate_derived_rates (p->pred_left);[0m
      | [0;1;32m                                           
[0m[1mtree.c:1182:36: [0m[0;1;35mwarning: [0m[1mAccess to field 'est_success_rate' results in a dereference of a null pointer (loaded from field 'pred_right') [clang-analyzer-core.NullDereference][0m
 1182 |       p->est_success_rate = (1.0 - p->pred_right->est_success_rate);[0m
      | [0;1;32m                                   ^
[0m[1mtree.c:1260:36: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'argc'[0m
 1260 |   for (i = end_of_leading_options; i < argc && !looks_like_expression(argv[i], true); i++)[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mtree.c:1260:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1260 |   for (i = end_of_leading_options; i < argc && !looks_like_expression(argv[i], true); i++)[0m
      | [0;1;32m                                            ^
[0m[1mtree.c:1270:11: [0m[0;1;36mnote: [0mAssuming 'entry_open' is not equal to null[0m
 1270 |   assert (entry_open  != NULL);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1mtree.c:1270:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1270 |   assert (entry_open  != NULL);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mtree.c:1271:11: [0m[0;1;36mnote: [0mAssuming 'entry_close' is not equal to null[0m
 1271 |   assert (entry_close != NULL);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1mtree.c:1271:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1271 |   assert (entry_close != NULL);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mtree.c:1272:11: [0m[0;1;36mnote: [0mAssuming 'entry_print' is not equal to null[0m
 1272 |   assert (entry_print != NULL);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1mtree.c:1272:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1272 |   assert (entry_print != NULL);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mtree.c:1281:10: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'argc'[0m
 1281 |   while (i < argc )[0m
      | [0;1;32m         ^~~~~~~~
[0m[1mtree.c:1281:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1345[0m
 1281 |   while (i < argc )[0m
      | [0;1;32m  ^
[0m[1mtree.c:1346:7: [0m[0;1;36mnote: [0mAssuming field 'pred_next' is not equal to NULL[0m
 1346 |   if (predicates->pred_next == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtree.c:1346:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1346 |   if (predicates->pred_next == NULL)[0m
      | [0;1;32m  ^
[0m[1mtree.c:1358:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1358 |   else if (!default_prints (predicates->pred_next))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtree.c:1358:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1358 |   else if (!default_prints (predicates->pred_next))[0m
      | [0;1;32m       ^
[0m[1mtree.c:1381:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1381 |   if (options.debug_options & (DebugExpressionTree|DebugTreeOpt))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtree.c:1381:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1381 |   if (options.debug_options & (DebugExpressionTree|DebugTreeOpt))[0m
      | [0;1;32m  ^
[0m[1mtree.c:1394:3: [0m[0;1;36mnote: [0mCalling 'calculate_derived_rates'[0m
 1394 |   calculate_derived_rates (eval_tree);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtree.c:1156:11: [0m[0;1;36mnote: [0mAssuming 'p' is not equal to null[0m
 1156 |   assert (NULL != p);[0m
      | [0;1;32m          ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/__stddef_null.h:26:14: [0m[0;1;36mnote: [0mexpanded from macro 'NULL'[0m
   26 | #define NULL ((void*)0)[0m
      | [0;1;32m             ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1mtree.c:1156:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1156 |   assert (NULL != p);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mtree.c:1158:7: [0m[0;1;36mnote: [0mAssuming field 'pred_right' is null[0m
 1158 |   if (p->pred_right)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1mtree.c:1158:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1158 |   if (p->pred_right)[0m
      | [0;1;32m  ^
[0m[1mtree.c:1160:7: [0m[0;1;36mnote: [0mAssuming field 'pred_left' is null[0m
 1160 |   if (p->pred_left)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1mtree.c:1160:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1160 |   if (p->pred_left)[0m
      | [0;1;32m  ^
[0m[1mtree.c:1163:11: [0m[0;1;36mnote: [0mAssuming field 'p_type' is not equal to CLOSE_PAREN[0m
 1163 |   assert (p->p_type != CLOSE_PAREN);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1mtree.c:1163:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1163 |   assert (p->p_type != CLOSE_PAREN);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mtree.c:1164:11: [0m[0;1;36mnote: [0mAssuming field 'p_type' is not equal to OPEN_PAREN[0m
 1164 |   assert (p->p_type != OPEN_PAREN);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1mtree.c:1164:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1164 |   assert (p->p_type != OPEN_PAREN);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mtree.c:1166:3: [0m[0;1;36mnote: [0mControl jumps to 'case UNI_OP:'  at line 1178[0m
 1166 |   switch (p->p_type)[0m
      | [0;1;32m  ^
[0m[1mtree.c:1180:15: [0m[0;1;36mnote: [0mAssuming field 'pred_func' is equal to pred_negate[0m
 1180 |       assert (pred_is (p, pred_negate));[0m
      | [0;1;32m              ^
[0m[1m./defs.h:518:30: [0m[0;1;36mnote: [0mexpanded from macro 'pred_is'[0m
  518 | # define pred_is(node, fn) ( ((node)->pred_func) == (fn) )[0m
      | [0;1;32m                             ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1mtree.c:1180:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1180 |       assert (pred_is (p, pred_negate));[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mtree.c:1181:15: [0m[0;1;36mnote: [0mNull is equal to field 'pred_left'[0m
 1181 |       assert (NULL == p->pred_left);[0m
      | [0;1;32m              ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/__stddef_null.h:26:14: [0m[0;1;36mnote: [0mexpanded from macro 'NULL'[0m
   26 | #define NULL ((void*)0)[0m
      | [0;1;32m             ^~~~~~~~~~
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1mtree.c:1181:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1181 |       assert (NULL == p->pred_left);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mtree.c:1182:36: [0m[0;1;36mnote: [0mAccess to field 'est_success_rate' results in a dereference of a null pointer (loaded from field 'pred_right')[0m
 1182 |       p->est_success_rate = (1.0 - p->pred_right->est_success_rate);[0m
      | [0;1;32m                                   ^  ~~~~~~~~~~
[0m[1mtree.c:1186:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1186 |       {[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mtree.c:1214:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1214 |       return p->est_success_rate;[0m
      | [0;1;32m      ^                         
[0m      | [0;32m      {                         ;} 
[0m[1mtree.c:1287:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1287 |           if (access(argv[i], F_OK)==0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1288 |             error (0, 0, _("possible unquoted pattern after predicate `%s'?"),[0m
 1289 |                    last_pred->p_name);[0m
      | [0;1;32m                                      
[0m[1mtree.c:1337:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1337 |           if (i != oldi)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1338 |             last_pred->arg_text = argv[oldi];[0m
 1339 |           else[0m
      | [0;32m          } 
[0m[1mtree.c:1339:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1339 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1340 |             last_pred->arg_text = NULL;[0m
      | [0;1;32m                                       
[0m[1mtree.c:1383:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1383 |       fprintf (stderr, "Predicate List:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1383:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1383 |       fprintf (stderr, "Predicate List:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1409:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1409 |           if (cur_pred->p_name)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1410 |             die (EXIT_FAILURE, 0,[0m
 1411 |                  _("unexpected extra predicate '%s'"), cur_pred->p_name);[0m
 1412 |           else[0m
      | [0;32m          } 
[0m[1mtree.c:1412:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1412 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1413 |             die (EXIT_FAILURE, 0, _("unexpected extra predicate"));[0m
      | [0;1;32m                                                                   
[0m[1mtree.c:1419:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1419 |       fprintf (stderr, "Eval Tree:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1419:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1419 |       fprintf (stderr, "Eval Tree:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1438:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1438 |       fprintf (stderr, "Optimized Eval Tree:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1438:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1438 |       fprintf (stderr, "Optimized Eval Tree:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1440:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1440 |       fprintf (stderr, "Optimized command line:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1440:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1440 |       fprintf (stderr, "Optimized command line:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1442:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1442 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1442:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1442 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1524:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1524 |   if (NULL == entry_and)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1525 |     entry_and = find_parser ("and");[0m
      | [0;1;32m                                    
[0m[1mtree.c:1530:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1530 |   if (last_pred)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m[1mtree.c:1534:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1534 |         die (EXIT_FAILURE, 0, _("oops -- invalid default insertion of and!"));[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1535 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1m../lib/die.h:30:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   30 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../gl/lib/verify.h:262:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  262 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mtree.c:1541:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1541 |         new_pred->pred_func = pred_and;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1542 |         new_pred->p_name = "-a";[0m
 1543 |         new_pred->p_type = BI_OP;[0m
 1544 |         new_pred->p_prec = AND_PREC;[0m
 1545 |         new_pred->need_stat = false;[0m
 1546 |         new_pred->need_type = false;[0m
 1547 |         new_pred->need_inum = false;[0m
 1548 |         new_pred->arg_text = NULL;[0m
 1549 |         new_pred->args.str = NULL;[0m
 1550 |         new_pred->side_effects = false;[0m
 1551 |         new_pred->no_default_print = false;[0m
 1552 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mtree.c:1555:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1555 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mtree.c:1624:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1624 |   for (i = 0; i<n; ++i)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1625 |     if (cost_table[i].cost == cost)[0m
 1626 |       return cost_table[i].name;[0m
      | [0;1;32m                                
[0m[1mtree.c:1625:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1625 |     if (cost_table[i].cost == cost)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1626 |       return cost_table[i].name;[0m
      | [0;1;32m                                
[0m[1mtree.c:1636:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1636 |   for (i = 0; type_table[i].type != (short) -1; i++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1637 |     if (type_table[i].type == type)[0m
 1638 |       break;[0m
      | [0;1;32m            
[0m[1mtree.c:1637:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1637 |     if (type_table[i].type == type)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1638 |       break;[0m
      | [0;1;32m            
[0m[1mtree.c:1647:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1647 |   for (i = 0; prec_table[i].prec != (short) -1; i++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1648 |     if (prec_table[i].prec == prec)[0m
 1649 |       break;[0m
      | [0;1;32m            
[0m[1mtree.c:1648:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1648 |     if (prec_table[i].prec == prec)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1649 |       break;[0m
      | [0;1;32m            
[0m[1mtree.c:1662:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1662 |   if (node == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1663 |     return;[0m
      | [0;1;32m           
[0m[1mtree.c:1664:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1664 |   for (i = 0; i < indent; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1665 |     fprintf (fp, "    ");[0m
      | [0;1;32m                         
[0m[1mtree.c:1665:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1665 |     fprintf (fp, "    ");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mtree.c:1665:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1665 |     fprintf (fp, "    ");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mtree.c:1666:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1666 |   fprintf (fp, "pred=[");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtree.c:1666:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1666 |   fprintf (fp, "pred=[");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtree.c:1668:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1668 |   fprintf (fp, "] type=%s prec=%s",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtree.c:1668:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1668 |   fprintf (fp, "] type=%s prec=%s",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtree.c:1670:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1670 |   fprintf (fp, " cost=%s est_success_rate=%#.4g %sside effects ",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtree.c:1670:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1670 |   fprintf (fp, " cost=%s est_success_rate=%#.4g %sside effects ",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtree.c:1679:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1679 |       fprintf (fp, "Needs ");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1679:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1679 |       fprintf (fp, "Needs ");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1682:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1682 |           fprintf (fp, "stat");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1682:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1682 |           fprintf (fp, "stat");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1687:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1687 |           fprintf (fp, "%sinode", comma ? "," : "");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1687:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1687 |           fprintf (fp, "%sinode", comma ? "," : "");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1692:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1692 |           fprintf (fp, "%stype", comma ? "," : "");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1692:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1692 |           fprintf (fp, "%stype", comma ? "," : "");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1695:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1695 |   fprintf (fp, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtree.c:1695:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1695 |   fprintf (fp, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtree.c:1698:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1698 |   for (i = 0; i < indent; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1699 |     fprintf (fp, "    ");[0m
      | [0;1;32m                         
[0m[1mtree.c:1699:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1699 |     fprintf (fp, "    ");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mtree.c:1699:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1699 |     fprintf (fp, "    ");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mtree.c:1702:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1702 |       fprintf (fp, "no children.\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1702:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1702 |       fprintf (fp, "no children.\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtree.c:1708:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1708 |           fprintf (fp, "left:\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1708:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1708 |           fprintf (fp, "left:\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1713:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1713 |           fprintf (fp, "no left.\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1713:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1713 |           fprintf (fp, "no left.\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1716:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1716 |       for (i = 0; i < indent; i++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1717 |         fprintf (fp, "    ");[0m
      | [0;1;32m                             
[0m[1mtree.c:1717:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1717 |         fprintf (fp, "    ");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtree.c:1717:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1717 |         fprintf (fp, "    ");[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtree.c:1720:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1720 |           fprintf (fp, "right:\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1720:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1720 |           fprintf (fp, "right:\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1725:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1725 |           fprintf (fp, "no right.\n");[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtree.c:1725:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1725 |           fprintf (fp, "no right.\n");[0m
      | [0;1;32m          ^~~~~~~
[0m133 warnings generated.
Suppressed 15 warnings (15 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[161/172][111.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpqw00yv4u.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/parser.c
[1mparser.c:347:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  347 |             fprintf (stderr, "fallback_getfilecon(): getfilecon(%s) failed; falling "[0m
      | [0;1;32m            ^~~~~~~
[0m[1mparser.c:347:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  347 |             fprintf (stderr, "fallback_getfilecon(): getfilecon(%s) failed; falling "[0m
      | [0;1;32m            ^~~~~~~
[0m[1mparser.c:350:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  350 |         return lgetfileconat (fd, name, p);[0m
      | [0;1;32m        ^                                 
[0m      | [0;32m        {                                 ;} 
[0m[1mparser.c:382:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |       if (0 == rv)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  383 |         return 0;               /* success */[0m
  384 |       else[0m
      | [0;32m      } 
[0m[1mparser.c:384:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  385 |         return fallback_getfilecon (fd, name, p, rv);[0m
      | [0;1;32m                                                     
[0m[1mparser.c:401:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |   if (0 == rv)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  402 |     return 0;                  /* normal case. */[0m
  403 |   else[0m
      | [0;32m  } 
[0m[1mparser.c:403:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  404 |     return fallback_getfilecon (fd, name, p, rv);[0m
      | [0;1;32m                                                 
[0m[1mparser.c:424:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |       if (p->pred_func == pred_delete)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  425 |         predicates |= seen_delete;[0m
  426 |       else if (p->pred_func == pred_prune)[0m
      | [0;32m      } 
[0m[1mparser.c:426:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  426 |       else if (p->pred_func == pred_prune)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  427 |         predicates |= seen_prune;[0m
      | [0;1;32m                                 
[0m[1mparser.c:486:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  486 |       *ret = get_stat_atime (p);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  487 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mparser.c:489:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  489 |       *ret = get_stat_birthtime (p);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  490 |       return (ret->tv_nsec >= 0);[0m
      | [0;1;32m                                
[0m      | [0;32m                                ;} 
[0m[1mparser.c:492:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  492 |       *ret = get_stat_ctime (p);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  493 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mparser.c:495:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  495 |       *ret = get_stat_mtime (p);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  496 |       return 1;[0m
      | [0;1;32m              
[0m      | [0;32m              ;} 
[0m[1mparser.c:509:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  509 |       options.xstat = optionl_stat;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  510 |       options.x_getfilecon = optionl_getfilecon;[0m
  511 |       options.no_leaf_check = true;[0m
  512 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:515:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  515 |       options.xstat = optionp_stat;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  516 |       options.x_getfilecon = optionp_getfilecon;[0m
  517 |       /* Can't turn no_leaf_check off because the user might have specified[0m
  518 |        * -noleaf anyway[0m
  519 |        */[0m
  520 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:523:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  523 |       options.xstat = optionh_stat;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  524 |       options.x_getfilecon = optionh_getfilecon;[0m
  525 |       options.no_leaf_check = true;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mparser.c:567:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |   if (options.posixly_correct)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  568 |     return false;[0m
  569 |   else[0m
      | [0;32m  } 
[0m[1mparser.c:569:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  569 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  570 |     return options.warnings;[0m
      | [0;1;32m                            
[0m[1mparser.c:595:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |       if (entry->type == ARG_NOOP)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  596 |         return NULL;  /* internal use only, trap -noop here.  */[0m
      | [0;1;32m                                                                
[0m[1mparser.c:653:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |   if (*search_name == '-')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  654 |     search_name++;[0m
      | [0;1;32m                  
[0m[1mparser.c:983:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |   if (filename)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  984 |     open_output_file (filename, &our_pred->args.printf_vec);[0m
  985 |   else[0m
      | [0;32m  } 
[0m[1mparser.c:985:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  985 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  986 |     open_stdout (&our_pred->args.printf_vec);[0m
      | [0;1;32m                                             
[0m[1mparser.c:999:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  999 |       if (insert_fls (entry, filename))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1000 |         return true;[0m
 1001 |       else[0m
      | [0;32m      } 
[0m[1mparser.c:1001:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1001 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1002 |         --*arg_ptr;             /* don't consume the invalid arg. */[0m
      | [0;1;32m                                                                    
[0m[1mparser.c:1038:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1038 |   if (filename)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1039 |     open_output_file (filename, &our_pred->args.printf_vec);[0m
 1040 |   else[0m
      | [0;32m  } 
[0m[1mparser.c:1040:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1041 |     open_stdout (&our_pred->args.printf_vec);[0m
      | [0;1;32m                                             
[0m[1mparser.c:1055:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1055 |       if (insert_fprint (entry, filename))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1056 |         return true;[0m
 1057 |       else[0m
      | [0;32m      } 
[0m[1mparser.c:1057:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1057 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1058 |         --*arg_ptr;             /* don't consume the bad arg. */[0m
      | [0;1;32m                                                                
[0m[1mparser.c:1071:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1071 |       if (0 == strcmp (fsname, fstype))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1072 |           return 0.7f;[0m
 1073 |       else[0m
      | [0;32m      } 
[0m[1mparser.c:1073:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1073 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1074 |         return 0.3f;[0m
      | [0;1;32m                    
[0m[1mparser.c:1108:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1108 |               fprintf (stderr,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mparser.c:1108:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1108 |               fprintf (stderr,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mparser.c:1142:13: [0m[0;1;35mwarning: [0m[1mValue stored to 'saved_argc' during its initialization is never read [clang-analyzer-deadcode.DeadStores][0m
 1142 |   const int saved_argc = *arg_ptr;[0m
      | [0;1;32m            ^~~~~~~~~~   ~~~~~~~~
[0m[1mparser.c:1142:13: [0m[0;1;36mnote: [0mValue stored to 'saved_argc' during its initialization is never read[0m
 1142 |   const int saved_argc = *arg_ptr;[0m
      | [0;1;32m            ^~~~~~~~~~   ~~~~~~~~
[0m[1mparser.c:1342:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1342 |       if (p->args.numinfo.l_val == 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1343 |         p->est_success_rate = 0.99;[0m
 1344 |       else if (p->args.numinfo.l_val == 2)[0m
      | [0;32m      } 
[0m[1mparser.c:1344:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1344 |       else if (p->args.numinfo.l_val == 2)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1345 |         p->est_success_rate = 0.01;[0m
 1346 |       else[0m
      | [0;32m      } 
[0m[1mparser.c:1346:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1346 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1347 |         p->est_success_rate = 1e-3;[0m
      | [0;1;32m                                   
[0m[1mparser.c:1599:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1599 |               our_pred->args.reftime.xval = XVAL_ATIME;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1600 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mparser.c:1602:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1602 |               our_pred->args.reftime.xval = XVAL_BIRTHTIME;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1603 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mparser.c:1605:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1605 |               our_pred->args.reftime.xval = XVAL_CTIME;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1606 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mparser.c:1608:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1608 |               our_pred->args.reftime.xval = XVAL_MTIME;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1609 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mparser.c:1632:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1632 |               if ((*options.xstat) (argv[*arg_ptr], &stat_newer))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1633 |                 fatal_target_file_error (errno, argv[*arg_ptr]);[0m
      | [0;1;32m                                                                
[0m[1mparser.c:1768:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1768 |   if (pred == pred_ipath)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1769 |     foldcase = true;[0m
      | [0;1;32m                    
[0m[1mparser.c:1843:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1843 |   if (!collect_arg (argv, arg_ptr, &perm_expr))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1844 |     return false;[0m
      | [0;1;32m                 
[0m[1mparser.c:1849:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1849 |       mode_start = 1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1850 |       kind = PERM_AT_LEAST;[0m
 1851 |       rate = 0.2;[0m
 1852 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:1855:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1855 |       mode_start = 1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1856 |       kind = PERM_ANY;[0m
 1857 |       rate = 0.3;[0m
 1858 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:1864:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1864 |       mode_start = 0;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1865 |       kind = PERM_EXACT;[0m
 1866 |       rate = 0.01;[0m
 1867 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:1877:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1877 |       || (perm_expr[0] == '+' && '0' <= perm_expr[1] && perm_expr[1] < '8'))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1878 |     die (EXIT_FAILURE, 0, _("invalid mode %s"),[0m
 1879 |          quotearg_n_style (0, options.err_quoting_style, perm_expr));[0m
      | [0;1;32m                                                                     
[0m[1mparser.c:1914:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1914 |   memcpy (our_pred->args.perm.val, perm_val, sizeof perm_val);[0m
      | [0;1;32m  ^~~~~~
[0m[1mparser.c:1914:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1914 |   memcpy (our_pred->args.perm.val, perm_val, sizeof perm_val);[0m
      | [0;1;32m  ^~~~~~
[0m[1mparser.c:1983:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1983 |           if (insert_fprintf (&fmt, entry, format))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1984 |             return true;[0m
      | [0;1;32m                        
[0m[1mparser.c:2000:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2000 |   if (options.do_dir_first == false)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2001 |     our_pred->need_stat = our_pred->need_type = false;[0m
      | [0;1;32m                                                      
[0m[1mparser.c:2067:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2067 |       if (error_message)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2068 |         die (EXIT_FAILURE, 0,[0m
 2069 |              _("failed to compile regular expression '%s': %s"),[0m
 2070 |              rx, error_message);[0m
      | [0;1;32m                                
[0m[1mparser.c:2092:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2092 |   if ((argv == NULL) || (argv[*arg_ptr] == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2093 |     return false;[0m
      | [0;1;32m                 
[0m[1mparser.c:2097:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2097 |   if (len == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2098 |     die (EXIT_FAILURE, 0, _("invalid null argument to -size"));[0m
      | [0;1;32m                                                               
[0m[1mparser.c:2104:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2104 |       blksize = 512;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2105 |       arg[len - 1] = '\0';[0m
 2106 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:2109:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2109 |       blksize = 1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2110 |       arg[len - 1] = '\0';[0m
 2111 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:2114:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2114 |       blksize = 1024;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2115 |       arg[len - 1] = '\0';[0m
 2116 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:2119:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2119 |       blksize = 1024*1024;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2120 |       arg[len - 1] = '\0';[0m
 2121 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:2124:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2124 |       blksize = 1024*1024*1024;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2125 |       arg[len - 1] = '\0';[0m
 2126 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:2129:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2129 |       blksize = 2;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2130 |       arg[len - 1] = '\0';[0m
 2131 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:2144:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2144 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mparser.c:2147:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2147 |       die (EXIT_FAILURE, 0,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2148 |            _("invalid -size type `%c'"), argv[*arg_ptr][len - 1]);[0m
      | [0;1;32m                                                                 
[0m      | [0;32m                                                                 ;} 
[0m[1m../lib/die.h:30:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   30 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../gl/lib/verify.h:262:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  262 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mparser.c:2169:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2169 |   if (COMP_GT == c_type)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2170 |     our_pred->est_success_rate = (num*blksize > 20480) ? 0.1 : 0.9;[0m
 2171 |   else if (COMP_LT == c_type)[0m
      | [0;32m  } 
[0m[1mparser.c:2171:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2171 |   else if (COMP_LT == c_type)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2172 |     our_pred->est_success_rate = (num*blksize > 20480) ? 0.9 : 0.1;[0m
 2173 |   else[0m
      | [0;32m  } 
[0m[1mparser.c:2173:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2173 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2174 |     our_pred->est_success_rate = 0.01;[0m
      | [0;1;32m                                      
[0m[1mparser.c:2193:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2193 |   if (!collect_arg_stat_info (argv, arg_ptr, &st, &filename))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2194 |     return false;[0m
      | [0;1;32m                 
[0m[1mparser.c:2202:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'fd' is never read [clang-analyzer-deadcode.DeadStores][0m
 2202 |   fd = -3;                      /* -3 means uninitialized */[0m
      | [0;1;32m  ^    ~~
[0m[1mparser.c:2202:3: [0m[0;1;36mnote: [0mValue stored to 'fd' is never read[0m
 2202 |   fd = -3;                      /* -3 means uninitialized */[0m
      | [0;1;32m  ^    ~~
[0m[1mparser.c:2264:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2264 |               if ((*options.xstat) (filename, &st))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2265 |                 fatal_target_file_error (errno, filename);[0m
      | [0;1;32m                                                          
[0m[1mparser.c:2403:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2403 |   if (pred_is(our_pred, pred_executable))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2404 |     our_pred->est_success_rate = 0.2;[0m
 2405 |   else[0m
      | [0;32m  } 
[0m[1mparser.c:2405:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2405 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2406 |     our_pred->est_success_rate = 0.9;[0m
      | [0;1;32m                                     
[0m[1mparser.c:2535:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'has_features' is never read [clang-analyzer-deadcode.DeadStores][0m
 2535 |   has_features = true;[0m
      | [0;1;32m  ^
[0m[1mparser.c:2535:3: [0m[0;1;36mnote: [0mValue stored to 'has_features' is never read[0m
[1mparser.c:2540:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'has_features' is never read [clang-analyzer-deadcode.DeadStores][0m
 2540 |   has_features = true;[0m
      | [0;1;32m  ^
[0m[1mparser.c:2540:3: [0m[0;1;36mnote: [0mValue stored to 'has_features' is never read[0m
[1mparser.c:2544:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'has_features' is never read [clang-analyzer-deadcode.DeadStores][0m
 2544 |   has_features = true;[0m
      | [0;1;32m  ^
[0m[1mparser.c:2544:3: [0m[0;1;36mnote: [0mValue stored to 'has_features' is never read[0m
[1mparser.c:2549:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'has_features' is never read [clang-analyzer-deadcode.DeadStores][0m
 2549 |       has_features = true;[0m
      | [0;1;32m      ^
[0m[1mparser.c:2549:7: [0m[0;1;36mnote: [0mValue stored to 'has_features' is never read[0m
[1mparser.c:2556:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'has_features' is never read [clang-analyzer-deadcode.DeadStores][0m
 2556 |       has_features = true;[0m
      | [0;1;32m      ^
[0m[1mparser.c:2556:7: [0m[0;1;36mnote: [0mValue stored to 'has_features' is never read[0m
[1mparser.c:2558:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2558 |       if (flags & FTS_CWDFD)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2559 |         printf ("FTS_CWDFD");[0m
      | [0;1;32m                             
[0m[1mparser.c:2582:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2582 |   if ((argv == NULL) || (argv[*arg_ptr] == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2583 |     return false;[0m
      | [0;1;32m                 
[0m[1mparser.c:2646:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2646 |   if (! collect_arg (argv, arg_ptr, &typeletter))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2647 |     return false;[0m
      | [0;1;32m                 
[0m[1mparser.c:2695:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2695 |         type_cell = FTYPE_BLK;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2696 |         rate = 0.000888f;[0m
 2697 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mparser.c:2699:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2699 |         type_cell = FTYPE_CHR;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2700 |         rate = 0.000443f;[0m
 2701 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mparser.c:2703:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2703 |         type_cell = FTYPE_DIR;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2704 |         rate = 0.0922f;[0m
 2705 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mparser.c:2707:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2707 |         type_cell = FTYPE_REG;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2708 |         rate = 0.875f;[0m
 2709 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mparser.c:2712:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2712 |         type_cell = FTYPE_LNK;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2713 |         rate = 0.0311f;[0m
 2714 | #else[0m
 2715 |         type_cell = 0;[0m
 2716 |         die (EXIT_FAILURE, 0,[0m
 2717 |              _("%s %c is not supported because symbolic links "[0m
 2718 |                "are not supported on the platform find was compiled on."),[0m
 2719 |              pred_string, (*typeletter));[0m
 2720 | #endif[0m
 2721 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mparser.c:2724:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2724 |         type_cell = FTYPE_FIFO;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2725 |         rate = 7.554e-6f;[0m
 2726 | #else[0m
 2727 |         type_cell = 0;[0m
 2728 |         die (EXIT_FAILURE, 0,[0m
 2729 |              _("%s %c is not supported because FIFOs "[0m
 2730 |                "are not supported on the platform find was compiled on."),[0m
 2731 |              pred_string, (*typeletter));[0m
 2732 | #endif[0m
 2733 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mparser.c:2736:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2736 |         type_cell = FTYPE_SOCK;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2737 |         rate = 1.59e-5f;[0m
 2738 | #else[0m
 2739 |         type_cell = 0;[0m
 2740 |         die (EXIT_FAILURE, 0,[0m
 2741 |              _("%s %c is not supported because named sockets "[0m
 2742 |                "are not supported on the platform find was compiled on."),[0m
 2743 |              pred_string, (*typeletter));[0m
 2744 | #endif[0m
 2745 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mparser.c:2755:2: [0m[0;1;35mwarning: [0m[1mValue stored to 'type_cell' is never read [clang-analyzer-deadcode.DeadStores][0m
 2755 |         type_cell = 0;[0m
      | [0;1;32m        ^           ~
[0m[1mparser.c:2755:2: [0m[0;1;36mnote: [0mValue stored to 'type_cell' is never read[0m
 2755 |         type_cell = 0;[0m
      | [0;1;32m        ^           ~
[0m[1mparser.c:2755:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2755 |         type_cell = 0;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2756 |         die (EXIT_FAILURE, 0,[0m
 2757 |              _("%s %c is not supported because Solaris doors "[0m
 2758 |                "are not supported on the platform find was compiled on."),[0m
 2759 |              pred_string, (*typeletter));[0m
 2760 | #endif[0m
 2761 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mparser.c:2763:2: [0m[0;1;35mwarning: [0m[1mValue stored to 'type_cell' is never read [clang-analyzer-deadcode.DeadStores][0m
 2763 |         type_cell = 0;[0m
      | [0;1;32m        ^           ~
[0m[1mparser.c:2763:2: [0m[0;1;36mnote: [0mValue stored to 'type_cell' is never read[0m
 2763 |         type_cell = 0;[0m
      | [0;1;32m        ^           ~
[0m[1mparser.c:2763:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2763 |         type_cell = 0;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 2764 |         die (EXIT_FAILURE, 0,[0m
 2765 |              _("Unknown argument to %s: %c"), pred_string, (*typeletter));[0m
 2766 |         /*NOTREACHED*/[0m
 2767 |         return false;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mparser.c:2901:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2901 |   if ((argv == NULL) || (argv[*arg_ptr] == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2902 |     return false;[0m
      | [0;1;32m                 
[0m[1mparser.c:2998:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2998 |       if (func == pred_execdir)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2999 |         suffix = "dir";[0m
 3000 |       else[0m
      | [0;32m      } 
[0m[1mparser.c:3000:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3000 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3001 |         suffix = "";[0m
      | [0;1;32m                    
[0m[1mparser.c:3013:26: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3013 |           const size_t needed = snprintf (buf, MsgBufSize, "-exec%s ... {} +", suffix);[0m
      | [0;1;32m                                ^~~~~~~~
[0m[1mparser.c:3013:26: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 3013 |           const size_t needed = snprintf (buf, MsgBufSize, "-exec%s ... {} +", suffix);[0m
      | [0;1;32m                                ^~~~~~~~
[0m[1mparser.c:3036:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3036 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mparser.c:3039:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3039 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mparser.c:3096:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3096 |   if (argv[end] == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3097 |     *arg_ptr = end;[0m
 3098 |   else[0m
      | [0;32m  } 
[0m[1mparser.c:3098:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3098 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 3099 |     *arg_ptr = end + 1;[0m
      | [0;1;32m                       
[0m[1mparser.c:3134:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3134 |         case COMP_LT: result->kind = COMP_GT; break;[0m
      | [0;1;32m                      ^                            
[0m      | [0;32m                      {                            ;} 
[0m[1mparser.c:3135:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3135 |         case COMP_GT: result->kind = COMP_LT; break;[0m
      | [0;1;32m                      ^                            
[0m      | [0;32m                      {                            ;} 
[0m[1mparser.c:3137:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3137 |           break; /* inversion leaves it unchanged */[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mparser.c:3209:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3209 |   if (!collect_arg (argv, arg_ptr, &timearg))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3210 |     return false;[0m
      | [0;1;32m                 
[0m[1mparser.c:3253:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3253 |       fprintf (stderr, "inserting %s\n", our_pred->p_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mparser.c:3253:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 3253 |       fprintf (stderr, "inserting %s\n", our_pred->p_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mparser.c:3254:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3254 |       fprintf (stderr, "    type: %s    %s  ",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mparser.c:3254:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 3254 |       fprintf (stderr, "    type: %s    %s  ",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mparser.c:3260:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3260 |       fprintf (stderr, "%"PRIuMAX" %s",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mparser.c:3260:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 3260 |       fprintf (stderr, "%"PRIuMAX" %s",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mparser.c:3266:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3266 |           fprintf (stderr, "                 <  %"PRIuMAX" %s",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:3266:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 3266 |           fprintf (stderr, "                 <  %"PRIuMAX" %s",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mparser.c:3286:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3286 |       *comp_type = COMP_GT;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3287 |       (*str)++;[0m
 3288 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:3290:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3290 |       *comp_type = COMP_LT;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3291 |       (*str)++;[0m
 3292 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:3294:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 3294 |       *comp_type = COMP_EQ;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 3295 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mparser.c:3321:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3321 |   if (str == NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3322 |     return false;[0m
      | [0;1;32m                 
[0m[1mparser.c:3327:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3327 |       if (!get_comp_type (&str, comp_type))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3328 |         return false;[0m
      | [0;1;32m                     
[0m[1mparser.c:3364:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3364 |             fprintf (stderr, "inserting %s\n", our_pred->p_name);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mparser.c:3364:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 3364 |             fprintf (stderr, "inserting %s\n", our_pred->p_name);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mparser.c:3365:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3365 |             fprintf (stderr, "    type: %s    %s  ",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mparser.c:3365:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 3365 |             fprintf (stderr, "    type: %s    %s  ",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mparser.c:3370:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 3370 |             fprintf (stderr, "%"PRIuMAX"\n", our_pred->args.numinfo.l_val);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mparser.c:3370:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 3370 |             fprintf (stderr, "%"PRIuMAX"\n", our_pred->args.numinfo.l_val);[0m
      | [0;1;32m            ^~~~~~~
[0m124 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[162/172][114.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpqb0rb61r.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/mktime.c
[1mmktime.c:281:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |   if (errno != EOVERFLOW)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  282 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmktime.c:294:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |       if (mid == ok || mid == bad)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  295 |         break;[0m
      | [0;1;32m              
[0m[1mmktime.c:296:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |       if (convert_time (convert, mid, tp))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  297 |         ok = mid, oktm = *tp;[0m
  298 |       else if (errno != EOVERFLOW)[0m
      | [0;32m      } 
[0m[1mmktime.c:298:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |       else if (errno != EOVERFLOW)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  299 |         return NULL;[0m
  300 |       else[0m
      | [0;32m      } 
[0m[1mmktime.c:300:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  301 |         bad = mid;[0m
      | [0;1;32m                  
[0m[1mmktime.c:304:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |   if (oktm.tm_sec < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  305 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmktime.c:373:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |       if (sec < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  374 |         sec = 0;[0m
      | [0;1;32m                
[0m[1mmktime.c:375:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |       if (59 < sec)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  376 |         sec = 59;[0m
      | [0;1;32m                 
[0m[1mmktime.c:383:17: [0m[0;1;35mwarning: [0m[1m10th function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
  383 |   long_int t0 = ydhms_diff (year, yday, hour, min, sec,[0m
      | [0;1;32m                ^
[0m  384 |                             EPOCH_YEAR - TM_YEAR_BASE, 0, 0, 0,[0m
  385 |                             negative_offset_guess);[0m
      | [0;1;32m                            ~~~~~~~~~~~~~~~~~~~~~
[0m[1mmktime.c:348:32: [0m[0;1;36mnote: [0mAssuming 'mon_remainder' is >= 0[0m
  348 |   int negative_mon_remainder = mon_remainder < 0;[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~
[0m[1mmktime.c:365:3: [0m[0;1;36mnote: [0m'negative_offset_guess' declared without an initial value[0m
  365 |   int negative_offset_guess;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmktime.c:369:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  369 |   if (LEAP_SECONDS_POSSIBLE)[0m
      | [0;1;32m  ^
[0m[1mmktime.c:373:11: [0m[0;1;36mnote: [0mAssuming 'sec' is >= 0[0m
  373 |       if (sec < 0)[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmktime.c:373:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  373 |       if (sec < 0)[0m
      | [0;1;32m      ^
[0m[1mmktime.c:375:11: [0m[0;1;36mnote: [0mAssuming 'sec' is <= 59[0m
  375 |       if (59 < sec)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mmktime.c:375:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  375 |       if (59 < sec)[0m
      | [0;1;32m      ^
[0m[1mmktime.c:382:3: [0m[0;1;36mnote: [0mAssuming overflow[0m
  382 |   INT_SUBTRACT_WRAPV (0, off, &negative_offset_guess);[0m
      | [0;1;32m  ^
[0m[1m./intprops.h:396:38: [0m[0;1;36mnote: [0mexpanded from macro 'INT_SUBTRACT_WRAPV'[0m
  396 | # define INT_SUBTRACT_WRAPV(a, b, r) __builtin_sub_overflow (a, b, r)[0m
      | [0;1;32m                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmktime.c:383:17: [0m[0;1;36mnote: [0m10th function call argument is an uninitialized value[0m
  383 |   long_int t0 = ydhms_diff (year, yday, hour, min, sec,[0m
      | [0;1;32m                ^
[0m  384 |                             EPOCH_YEAR - TM_YEAR_BASE, 0, 0, 0,[0m
  385 |                             negative_offset_guess);[0m
      | [0;1;32m                            ~~~~~~~~~~~~~~~~~~~~~
[0m[1mmktime.c:392:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  392 |       if (! ranged_convert (convert, &t, &tm))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  393 |         return -1;[0m
      | [0;1;32m                  
[0m[1mmktime.c:395:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |       if (dt == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  396 |         break;[0m
      | [0;1;32m              
[0m[1mmktime.c:402:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |                   : (isdst != 0) != (tm.tm_isdst != 0))))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  403 |         /* We can't possibly find a match, as we are oscillating[0m
  404 |            between two values.  The requested time probably falls[0m
  405 |            within a spring-forward gap of size DT.  Follow the common[0m
  406 |            practice in this case, which is to return a time that is DT[0m
  407 |            away from the requested time, preferring a time whose[0m
  408 |            tm_isdst differs from the requested value.  (If no tm_isdst[0m
  409 |            was requested and only one of the two values has a nonzero[0m
  410 |            tm_isdst, prefer that value.)  In practice, this is more[0m
  411 |            useful than returning -1.  */[0m
  412 |         goto offset_found;[0m
      | [0;1;32m                          
[0m[1mmktime.c:457:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |       for (delta = stride; delta < delta_bound; delta += stride)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m[1mmktime.c:464:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |                 if (! ranged_convert (convert, &ot, &otm))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  465 |                   return -1;[0m
      | [0;1;32m                            
[0m[1mmktime.c:479:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |                         if (errno != EOVERFLOW)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  480 |                           return -1;[0m
      | [0;1;32m                                    
[0m[1mmktime.c:510:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  510 |       if (! convert_time (convert, t, &tm))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  511 |         return -1;[0m
      | [0;1;32m                  
[0m18 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[163/172][106.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp6dtxyl8y.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/pred.c
[1mpred.c:114:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  114 |       return compare_ts (ts, pred_ptr->args.reftime.ts) > 0;[0m
      | [0;1;32m      ^                                                    
[0m      | [0;32m      {                                                    ;} 
[0m[1mpred.c:117:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  117 |       return compare_ts (ts, pred_ptr->args.reftime.ts) < 0;[0m
      | [0;1;32m      ^                                                    
[0m      | [0;32m      {                                                    ;} 
[0m[1mpred.c:158:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  159 |     return false;[0m
      | [0;1;32m                 
[0m[1mpred.c:235:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |       if (state.have_stat && S_ISDIR(stat_buf->st_mode))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  236 |         flags |= AT_REMOVEDIR;[0m
      | [0;1;32m                              
[0m[1mpred.c:255:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  255 |                   if (perform_delete (flags))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  256 |                     return true;[0m
      | [0;1;32m                                
[0m[1mpred.c:343:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |   else if (S_ISREG (stat_buf->st_mode))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  344 |     return (stat_buf->st_size == 0);[0m
  345 |   else[0m
      | [0;32m  } 
[0m[1mpred.c:345:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  346 |     return (false);[0m
      | [0;1;32m                   
[0m[1mpred.c:418:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |   if (strcmp (filesystem_type (stat_buf, pathname), pred_ptr->args.str) == 0)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  419 |     return true;[0m
  420 |   else[0m
      | [0;32m  } 
[0m[1mpred.c:420:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  421 |     return false;[0m
      | [0;1;32m                 
[0m[1mpred.c:432:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  432 |       if (stat_buf->st_gid > pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  433 |         return (true);[0m
  434 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:432:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |       if (stat_buf->st_gid > pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  433 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:436:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  436 |       if (stat_buf->st_gid < pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  437 |         return (true);[0m
  438 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:436:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |       if (stat_buf->st_gid < pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  437 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:440:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  440 |       if (stat_buf->st_gid == pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  441 |         return (true);[0m
  442 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:440:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |       if (stat_buf->st_gid == pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  441 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:452:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |   if (pred_ptr->args.gid == stat_buf->st_gid)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  453 |     return (true);[0m
  454 |   else[0m
      | [0;32m  } 
[0m[1mpred.c:454:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  455 |     return (false);[0m
      | [0;1;32m                   
[0m[1mpred.c:504:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  504 |       if (stat_buf->st_ino > pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  505 |         return (true);[0m
  506 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:504:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  504 |       if (stat_buf->st_ino > pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  505 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:508:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  508 |       if (stat_buf->st_ino < pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  509 |         return (true);[0m
  510 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:508:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |       if (stat_buf->st_ino < pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  509 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:512:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  512 |       if (stat_buf->st_ino == pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  513 |         return (true);[0m
  514 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:512:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  512 |       if (stat_buf->st_ino == pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  513 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:524:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |   if (fnmatch (pred_ptr->args.str, pathname, FNM_CASEFOLD) == 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  525 |     return (true);[0m
      | [0;1;32m                  
[0m[1mpred.c:537:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  537 |       if (stat_buf->st_nlink > pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  538 |         return (true);[0m
  539 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:537:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |       if (stat_buf->st_nlink > pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  538 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:541:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  541 |       if (stat_buf->st_nlink < pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  542 |         return (true);[0m
  543 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:541:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |       if (stat_buf->st_nlink < pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  542 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:545:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  545 |       if (stat_buf->st_nlink == pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  546 |         return (true);[0m
  547 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:545:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |       if (stat_buf->st_nlink == pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  546 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:569:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  569 |                        ignore_case ? FNM_CASEFOLD : 0) == 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  570 |             ret = true;[0m
      | [0;1;32m                       
[0m[1mpred.c:640:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  640 |       ts = get_stat_atime (stat_buf);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  641 |       collected = true;[0m
  642 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:645:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  645 |       ts = get_stat_birthtime (stat_buf);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  646 |       collected = true;[0m
  647 |       if (ts.tv_nsec < 0)[0m
  648 |         {[0m
  649 |           /* XXX: Cannot determine birth time.  Warn once. */[0m
  650 |           error (0, 0, _("WARNING: cannot determine birth time of file %s"),[0m
  651 |                  safely_quote_err_filename (0, pathname));[0m
  652 |           return false;[0m
  653 |         }[0m
  654 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:657:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  657 |       ts = get_stat_ctime (stat_buf);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  658 |       collected = true;[0m
  659 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:662:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  662 |       ts = get_stat_mtime (stat_buf);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  663 |       collected = true;[0m
  664 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:698:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  698 |   if (fprintf (stderr, _("< %s ... %s > ? "), program, arg) < 0)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:698:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  698 |   if (fprintf (stderr, _("< %s ... %s > ? "), program, arg) < 0)[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:709:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  709 |   if (is_ok (pred_ptr->args.exec_vec.replace_vec[0], pathname))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  710 |     return impl_pred_exec (pathname, stat_buf, pred_ptr);[0m
  711 |   else[0m
      | [0;32m  } 
[0m[1mpred.c:711:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  712 |     return false;[0m
      | [0;1;32m                 
[0m[1mpred.c:718:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |   if (is_ok (pred_ptr->args.exec_vec.replace_vec[0], pathname))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  719 |     return impl_pred_exec (state.rel_pathname, stat_buf, pred_ptr);[0m
  720 |   else[0m
      | [0;32m  } 
[0m[1mpred.c:720:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  720 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  721 |     return false;[0m
      | [0;1;32m                 
[0m[1mpred.c:741:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  741 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  742 |     return true;[0m
      | [0;1;32m                
[0m[1mpred.c:749:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  749 |   if (fnmatch (pred_ptr->args.str, pathname, 0) == 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  750 |     return (true);[0m
      | [0;1;32m                  
[0m[1mpred.c:763:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  763 |       return (mode & perm_val) == perm_val;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  764 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:777:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  777 |       if (0 == perm_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  778 |         return true;            /* Savannah bug 14748; we used to return false */[0m
  779 |       else[0m
  780 |         return (mode & perm_val) != 0;[0m
  781 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:777:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  777 |       if (0 == perm_val)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  778 |         return true;            /* Savannah bug 14748; we used to return false */[0m
  779 |       else[0m
      | [0;32m      } 
[0m[1mpred.c:779:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  779 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  780 |         return (mode & perm_val) != 0;[0m
      | [0;1;32m                                      
[0m[1mpred.c:784:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  784 |       return (mode & MODE_ALL) == perm_val;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  785 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:788:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  788 |       abort ();[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  789 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:855:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  855 |         S_ISDIR(stat_buf->st_mode))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  856 |       state.stop_at_current_level = true;[0m
      | [0;1;32m                                         
[0m[1mpred.c:890:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  890 |                 (struct re_registers *) NULL) == len)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  891 |     return (true);[0m
      | [0;1;32m                  
[0m[1mpred.c:906:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  906 |       if (f_val > pred_ptr->args.size.size)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  907 |         return (true);[0m
  908 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:906:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  906 |       if (f_val > pred_ptr->args.size.size)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  907 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:910:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  910 |       if (f_val < pred_ptr->args.size.size)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  911 |         return (true);[0m
  912 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:910:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  910 |       if (f_val < pred_ptr->args.size.size)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  911 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:914:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  914 |       if (f_val == pred_ptr->args.size.size)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  915 |         return (true);[0m
  916 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:914:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  914 |       if (f_val == pred_ptr->args.size.size)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  915 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:945:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  945 |       if (stat_buf->st_ino != pred_ptr->args.samefileid.ino)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  946 |         return false;[0m
      | [0;1;32m                     
[0m[1mpred.c:989:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  989 |   if (state.have_stat)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  990 |      mode = stat_buf->st_mode;[0m
  991 |   else[0m
      | [0;32m  } 
[0m[1mpred.c:991:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  991 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  992 |      mode = state.type;[0m
      | [0;1;32m                       
[0m[1mpred.c:1027:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1027 |       type = FTYPE_REG;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1028 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1030:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1030 |       type = FTYPE_DIR;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1031 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1034:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1034 |       type = FTYPE_LNK;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1035 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1038:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1038 |       type = FTYPE_BLK;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1039 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1041:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1041 |       type = FTYPE_CHR;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1042 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1045:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1045 |       type = FTYPE_SOCK;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1046 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1050:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1050 |       type = FTYPE_FIFO;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1051 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1061:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1061 |   if ((type != FTYPE_COUNT) && pred_ptr->args.types[type])[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1062 |     return true;[0m
 1063 |   else[0m
      | [0;32m  } 
[0m[1mpred.c:1063:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1063 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1064 |     return false;[0m
      | [0;1;32m                 
[0m[1mpred.c:1074:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1074 |       if (stat_buf->st_uid > pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1075 |         return (true);[0m
 1076 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1074:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1074 |       if (stat_buf->st_uid > pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1075 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:1078:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1078 |       if (stat_buf->st_uid < pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1079 |         return (true);[0m
 1080 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1078:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1078 |       if (stat_buf->st_uid < pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1079 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:1082:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1082 |       if (stat_buf->st_uid == pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1083 |         return (true);[0m
 1084 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpred.c:1082:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1082 |       if (stat_buf->st_uid == pred_ptr->args.numinfo.l_val)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1083 |         return (true);[0m
      | [0;1;32m                      
[0m[1mpred.c:1100:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1100 |   if (compare_ts (at, ct) < 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1101 |     return false;[0m
      | [0;1;32m                 
[0m[1mpred.c:1117:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1117 |   if (pred_ptr->args.uid == stat_buf->st_uid)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1118 |     return (true);[0m
 1119 |   else[0m
      | [0;32m  } 
[0m[1mpred.c:1119:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1119 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1120 |     return (false);[0m
      | [0;1;32m                   
[0m[1mpred.c:1132:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1132 |   if (following_links ())[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1133 |     ystat = optionp_stat;[0m
 1134 |   else[0m
      | [0;32m  } 
[0m[1mpred.c:1134:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1134 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1135 |     ystat = optionl_stat;[0m
      | [0;1;32m                         
[0m[1mpred.c:1191:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1191 |   if (str == NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1192 |     return (NULL);[0m
      | [0;1;32m                  
[0m[1mpred.c:1193:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1193 |   strcpy (buf, str);[0m
      | [0;1;32m  ^~~~~~
[0m[1mpred.c:1193:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1193 |   strcpy (buf, str);[0m
      | [0;1;32m  ^~~~~~
[0m[1mpred.c:1195:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1195 |   while ((i >= 0) && ((buf[i] == ' ') || buf[i] == '\t'))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1196 |     i--;[0m
      | [0;1;32m        
[0m[1mpred.c:1211:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1211 |       fprintf (fp, "[%s] ", blank_rtrim (cur->p_name, name));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:1211:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1211 |       fprintf (fp, "[%s] ", blank_rtrim (cur->p_name, name));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:1214:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1214 |   fprintf (fp, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpred.c:1214:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1214 |   fprintf (fp, "\n");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpred.c:1235:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1235 |           if (node->pred_left || node->pred_right)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1236 |             parens = 1;[0m
      | [0;1;32m                       
[0m[1mpred.c:1238:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1238 |           if (parens)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1239 |             fprintf (fp, "%s", " ( ");[0m
      | [0;1;32m                                      
[0m[1mpred.c:1239:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1239 |             fprintf (fp, "%s", " ( ");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mpred.c:1239:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1239 |             fprintf (fp, "%s", " ( ");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mpred.c:1241:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1241 |           if (parens)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1242 |             fprintf (fp, "%s", " ) ");[0m
      | [0;1;32m                                      
[0m[1mpred.c:1242:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1242 |             fprintf (fp, "%s", " ) ");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mpred.c:1242:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1242 |             fprintf (fp, "%s", " ) ");[0m
      | [0;1;32m            ^~~~~~~
[0m[1mpred.c:1253:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1253 |       fprintf (fp,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:1253:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1253 |       fprintf (fp,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:1259:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1259 |       fprintf (fp, " [est success rate %.4g] ", p->est_success_rate);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:1259:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1259 |       fprintf (fp, " [est success rate %.4g] ", p->est_success_rate);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:1262:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1262 |           fprintf (fp, "[real success rate %lu/%lu", p->perf.successes, p->perf.visits);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpred.c:1262:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1262 |           fprintf (fp, "[real success rate %lu/%lu", p->perf.successes, p->perf.visits);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpred.c:1266:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1266 |               fprintf (fp, "=%.4g] ", real_rate);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpred.c:1266:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1266 |               fprintf (fp, "=%.4g] ", real_rate);[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpred.c:1270:15: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1270 |               fprintf (fp, "=_] ");[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpred.c:1270:15: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1270 |               fprintf (fp, "=_] ");[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpred.c:1281:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1281 |       fprintf (stderr, "Predicate success rates after completion:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:1281:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1281 |       fprintf (stderr, "Predicate success rates after completion:\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:1283:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1283 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpred.c:1283:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1283 |       fprintf (stderr, "\n");[0m
      | [0;1;32m      ^~~~~~~
[0m112 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[164/172][97.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp31bi4tex.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/human.c
[1mhuman.c:91:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   91 |   memcpy (buf, number, numberlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mhuman.c:91:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   91 |   memcpy (buf, number, numberlen);[0m
      | [0;1;32m  ^~~~~~
[0m[1mhuman.c:104:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |       if (i < grouplen)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  105 |         grouplen = i;[0m
      | [0;1;32m                     
[0m[1mhuman.c:109:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  109 |       memcpy (d, buf + i, grouplen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhuman.c:109:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  109 |       memcpy (d, buf + i, grouplen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhuman.c:110:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |       if (i == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  111 |         return d;[0m
      | [0;1;32m                 
[0m[1mhuman.c:114:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  114 |       memcpy (d, thousands_sep, thousands_seplen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhuman.c:114:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  114 |       memcpy (d, thousands_sep, thousands_seplen);[0m
      | [0;1;32m      ^~~~~~
[0m[1mhuman.c:175:15: [0m[0;1;35mwarning: [0m[1mValue stored to 'grouping' during its initialization is never read [clang-analyzer-deadcode.DeadStores][0m
  175 |   char const *grouping = "";[0m
      | [0;1;32m              ^~~~~~~~   ~~
[0m[1mhuman.c:175:15: [0m[0;1;36mnote: [0mValue stored to 'grouping' during its initialization is never read[0m
  175 |   char const *grouping = "";[0m
      | [0;1;32m              ^~~~~~~~   ~~
[0m[1mhuman.c:185:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |   if (strlen (l->thousands_sep) <= MB_LEN_MAX)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  186 |     thousands_sep = l->thousands_sep;[0m
      | [0;1;32m                                     
[0m[1mhuman.c:232:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  232 |         sprintf (buf, "%.0Lf", adjust_value (inexact_style, damt));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mhuman.c:232:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  232 |         sprintf (buf, "%.0Lf", adjust_value (inexact_style, damt));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mhuman.c:250:9: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  250 |         sprintf (buf, "%.1Lf", adjust_value (inexact_style, damt));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mhuman.c:250:9: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  250 |         sprintf (buf, "%.1Lf", adjust_value (inexact_style, damt));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mhuman.c:258:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  258 |             sprintf (buf, "%.0Lf",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mhuman.c:258:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  258 |             sprintf (buf, "%.0Lf",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mhuman.c:266:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  266 |     memmove (p, buf, buflen);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mhuman.c:266:5: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  266 |     memmove (p, buf, buflen);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mhuman.c:318:21: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  318 |                     memcpy (p, decimal_point, decimal_pointlen);[0m
      | [0;1;32m                    ^~~~~~
[0m[1mhuman.c:318:21: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  318 |                     memcpy (p, decimal_point, decimal_pointlen);[0m
      | [0;1;32m                    ^~~~~~
[0m[1mhuman.c:339:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  339 |                 memcpy (p, decimal_point, decimal_pointlen);[0m
      | [0;1;32m                ^~~~~~
[0m[1mhuman.c:339:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  339 |                 memcpy (p, decimal_point, decimal_pointlen);[0m
      | [0;1;32m                ^~~~~~
[0m[1mhuman.c:356:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |   if (opts & human_group_digits)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  357 |     p = group_number (p, integerlim - p, grouping, thousands_sep);[0m
      | [0;1;32m                                                                  
[0m[1mhuman.c:365:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  365 |           for (power = 1; power < to_block_size; power *= base)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  366 |             if (++exponent == exponent_max)[0m
  367 |               break;[0m
      | [0;1;32m                    
[0m[1mhuman.c:366:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |             if (++exponent == exponent_max)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  367 |               break;[0m
      | [0;1;32m                    
[0m[1mhuman.c:370:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |       if ((exponent | (opts & human_B)) && (opts & human_space_before_unit))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  371 |         *psuffix++ = ' ';[0m
      | [0;1;32m                         
[0m[1mhuman.c:373:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |       if (exponent)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  374 |         *psuffix++ = (! (opts & human_base_1024) && exponent == 1[0m
  375 |                       ? 'k'[0m
  376 |                       : power_letter[exponent]);[0m
      | [0;1;32m                                                
[0m[1mhuman.c:380:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |           if ((opts & human_base_1024) && exponent)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  381 |             *psuffix++ = 'i';[0m
      | [0;1;32m                             
[0m[1mhuman.c:419:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |       && ! (spec = getenv ("BLOCKSIZE")))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  420 |     *block_size = default_block_size ();[0m
  421 |   else[0m
      | [0;32m  } 
[0m[1mhuman.c:444:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |           for (; ! ('0' <= *spec && *spec <= '9'); spec++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  445 |             if (spec == ptr)[0m
  446 |               {[0m
  447 |                 opts |= human_SI;[0m
  448 |                 if (ptr[-1] == 'B')[0m
  449 |                   opts |= human_B;[0m
  450 |                 if (ptr[-1] != 'B' || ptr[-2] == 'i')[0m
  451 |                   opts |= human_base_1024;[0m
  452 |                 break;[0m
  453 |               }[0m
      | [0;1;32m               
[0m[1mhuman.c:448:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |                 if (ptr[-1] == 'B')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  449 |                   opts |= human_B;[0m
      | [0;1;32m                                  
[0m[1mhuman.c:450:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |                 if (ptr[-1] != 'B' || ptr[-2] == 'i')[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  451 |                   opts |= human_base_1024;[0m
      | [0;1;32m                                          
[0m35 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[165/172][106.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpf_g3o9e6.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/lib/buildcmd.c
[1mbuildcmd.c:96:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (!insertbuf)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   97 |     insertbuf = xmalloc (ctl->arg_max + 1);[0m
      | [0;1;32m                                           
[0m[1mbuildcmd.c:113:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |       if (bytes_left <= len)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  114 |         break;[0m
  115 |       else[0m
      | [0;32m      } 
[0m[1mbuildcmd.c:115:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  116 |         bytes_left -= len;[0m
      | [0;1;32m                          
[0m[1mbuildcmd.c:118:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  118 |       strncpy (p, arg, len);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mbuildcmd.c:118:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  118 |       strncpy (p, arg, len);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mbuildcmd.c:125:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |           if (bytes_left <= (lblen + pfxlen))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  126 |             break;[0m
  127 |           else[0m
      | [0;32m          } 
[0m[1mbuildcmd.c:127:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  127 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  128 |             bytes_left -= (lblen + pfxlen);[0m
      | [0;1;32m                                           
[0m[1mbuildcmd.c:132:8: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  132 |               strcpy (p, prefix);[0m
      | [0;1;32m              ^~~~~~
[0m[1mbuildcmd.c:132:8: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  132 |               strcpy (p, prefix);[0m
      | [0;1;32m              ^~~~~~
[0m[1mbuildcmd.c:135:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  135 |           strcpy (p, linebuf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mbuildcmd.c:135:11: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  135 |           strcpy (p, linebuf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mbuildcmd.c:143:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |   if (*arg)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  144 |     die (EXIT_FAILURE, 0, _("command too long"));[0m
      | [0;1;32m                                                 
[0m[1mbuildcmd.c:165:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |       if (limit > state->largest_successful_arg_count)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  166 |         state->largest_successful_arg_count = limit;[0m
      | [0;1;32m                                                    
[0m[1mbuildcmd.c:171:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |           || (0 == state->smallest_failed_arg_count))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  172 |         state->smallest_failed_arg_count = limit;[0m
      | [0;1;32m                                                 
[0m[1mbuildcmd.c:182:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |           if (limit < SIZE_MAX)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  183 |             ++limit;[0m
      | [0;1;32m                    
[0m[1mbuildcmd.c:196:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |           if (shift)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  197 |             limit += shift;[0m
  198 |           else[0m
      | [0;32m          } 
[0m[1mbuildcmd.c:198:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  199 |             ++limit;[0m
      | [0;1;32m                    
[0m[1mbuildcmd.c:203:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |           if (shift)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  204 |             limit -= shift;[0m
  205 |           else[0m
      | [0;32m          } 
[0m[1mbuildcmd.c:205:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  206 |             --limit;[0m
      | [0;1;32m                    
[0m[1mbuildcmd.c:213:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |   if (ctl->initial_argc && (limit <= ctl->initial_argc + 1u))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  214 |     limit = ctl->initial_argc + 1u;[0m
      | [0;1;32m                                   
[0m[1mbuildcmd.c:215:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |   if (0 == limit)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  216 |     limit = 1u;[0m
      | [0;1;32m               
[0m[1mbuildcmd.c:316:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |       ( (state->cmd_argc - ctl->initial_argc) == ctl->args_per_exec))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  317 |     return 1;[0m
      | [0;1;32m             
[0m[1mbuildcmd.c:347:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |           if (initial_args || state->cmd_argc == ctl->initial_argc)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  348 |             die (EXIT_FAILURE, 0,[0m
  349 |                  _("cannot fit single argument within argument list size limit"));[0m
      | [0;1;32m                                                                                  
[0m[1mbuildcmd.c:354:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |                   (ctl->lines_per_exec || ctl->args_per_exec)))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  355 |             die (EXIT_FAILURE, 0, _("argument list too long"));[0m
      | [0;1;32m                                                               
[0m[1mbuildcmd.c:358:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |       if (bc_argc_limit_reached (initial_args, ctl, state))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  359 |             bc_do_exec (ctl, state);[0m
      | [0;1;32m                                    
[0m[1mbuildcmd.c:383:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |   if (terminate)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  384 |     state->cmd_argv[state->cmd_argc++] = NULL;[0m
  385 |   else[0m
      | [0;32m  } 
[0m[1mbuildcmd.c:390:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  390 |           strcpy (state->argbuf + state->cmd_argv_chars, prefix);[0m
      | [0;1;32m          ^~~~~~
[0m[1mbuildcmd.c:390:11: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  390 |           strcpy (state->argbuf + state->cmd_argv_chars, prefix);[0m
      | [0;1;32m          ^~~~~~
[0m[1mbuildcmd.c:394:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  394 |       strcpy (state->argbuf + state->cmd_argv_chars, arg);[0m
      | [0;1;32m      ^~~~~~
[0m[1mbuildcmd.c:394:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  394 |       strcpy (state->argbuf + state->cmd_argv_chars, arg);[0m
      | [0;1;32m      ^~~~~~
[0m[1mbuildcmd.c:429:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |   if (val > 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  430 |     return val;[0m
      | [0;1;32m               
[0m[1mbuildcmd.c:474:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |   while (*envp)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  475 |     len += strlen (*envp++) + 1;[0m
      | [0;1;32m                                
[0m[1mbuildcmd.c:544:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  544 |   if (arg_size > ctl->posix_arg_size_max)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  545 |     ctl->arg_max = ctl->posix_arg_size_max;[0m
  546 |   else if (arg_size < ctl->posix_arg_size_min)[0m
      | [0;32m  } 
[0m[1mbuildcmd.c:546:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  546 |   else if (arg_size < ctl->posix_arg_size_min)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  547 |     ctl->arg_max = ctl->posix_arg_size_min;[0m
  548 |   else[0m
      | [0;32m  } 
[0m[1mbuildcmd.c:548:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  548 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  549 |     ctl->arg_max = arg_size;[0m
      | [0;1;32m                            
[0m[1mbuildcmd.c:606:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |           if (quantity > limit)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  607 |             return 1;[0m
      | [0;1;32m                     
[0m43 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[166/172][137.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp50q5fl_8.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/hash.c
[1mhash.c:172:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  173 |             bucket_length++;[0m
      | [0;1;32m                            
[0m[1mhash.c:175:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |           if (bucket_length > max_bucket_length)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  176 |             max_bucket_length = bucket_length;[0m
      | [0;1;32m                                              
[0m[1mhash.c:201:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  202 |             n_entries++;[0m
      | [0;1;32m                        
[0m[1mhash.c:206:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |   if (n_buckets_used == table->n_buckets_used && n_entries == table->n_entries)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  207 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:220:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:220:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:235:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (! (n < table->n_buckets))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  236 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:246:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  247 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:249:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |   for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:250:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:263:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (table->n_entries == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  264 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:266:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |   for (bucket = table->bucket; ; bucket++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  267 |     if (! (bucket < table->bucket_limit))[0m
  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:267:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |     if (! (bucket < table->bucket_limit))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
      | [0;32m    } 
[0m[1mhash.c:269:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |     else if (bucket->data)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:283:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |       if (cursor->data == entry && cursor->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  284 |         return cursor->next->data;[0m
      | [0;1;32m                                  
[0m[1mhash.c:290:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |   while (++bucket < table->bucket_limit)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  291 |     if (bucket->data)[0m
  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:291:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |     if (bucket->data)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:312:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |               if (counter >= buffer_size)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  313 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:336:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |               if (! processor (cursor->data, processor_data))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  337 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:385:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |   for (; (ch = *string); string++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  386 |     value = (value * 31 + ch) % n_buckets;[0m
      | [0;1;32m                                          
[0m[1mhash.c:418:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |   if (candidate < 10)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  419 |     candidate = 10;[0m
      | [0;1;32m                   
[0m[1mhash.c:424:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |   while (SIZE_MAX != candidate && !is_prime (candidate))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  425 |     candidate += 2;[0m
      | [0;1;32m                   
[0m[1mhash.c:468:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if (tuning == &default_tuning)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  469 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:484:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |       && tuning->shrink_threshold + epsilon < tuning->growth_threshold)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  485 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:501:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if ((float) SIZE_MAX <= new_candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  502 |         return 0;[0m
      | [0;1;32m                 
[0m[1mhash.c:506:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |   if (xalloc_oversized (candidate, sizeof (struct hash_entry *)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  507 |     return 0;[0m
      | [0;1;32m             
[0m[1mhash.c:518:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |   if (hasher == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  519 |     hasher = raw_hasher;[0m
      | [0;1;32m                        
[0m[1mhash.c:520:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (comparator == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  521 |     comparator = raw_comparator;[0m
      | [0;1;32m                                
[0m[1mhash.c:524:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |   if (table == NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  525 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:527:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |   if (!tuning)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  528 |     tuning = &default_tuning;[0m
      | [0;1;32m                             
[0m[1mhash.c:541:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |   if (!table->n_buckets)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  542 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:545:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   if (table->bucket == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  546 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:581:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |               if (table->data_freer)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  582 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:593:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |           if (table->data_freer)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  594 |             table->data_freer (bucket->data);[0m
      | [0;1;32m                                             
[0m[1mhash.c:618:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |               for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  619 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:708:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  709 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:774:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   for (bucket = src->bucket; bucket < src->bucket_limit; bucket++)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m[1mhash.c:814:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  814 |         if (safe)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  815 |           continue;[0m
      | [0;1;32m                   
[0m[1mhash.c:824:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |             if (new_entry == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  825 |               return false;[0m
      | [0;1;32m                           
[0m[1mhash.c:850:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  850 |   if (!new_size)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  851 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:852:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (new_size == table->n_buckets)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  853 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:856:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (new_table->bucket == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  857 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:915:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  915 |          && transfer_entries (table, new_table, false)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  916 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:932:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  932 |   if (! entry)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  933 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:938:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  938 |       if (matched_ent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  939 |         *matched_ent = data;[0m
      | [0;1;32m                            
[0m[1mhash.c:964:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |           if ((float) SIZE_MAX <= candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  965 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:968:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  968 |           if (!hash_rehash (table, candidate))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  969 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:972:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |           if (hash_find_entry (table, entry, &bucket, false) != NULL)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  973 |             abort ();[0m
      | [0;1;32m                     
[0m[1mhash.c:983:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |       if (new_entry == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  984 |         return -1;[0m
      | [0;1;32m                  
[0m[1mhash.c:1021:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |   if (!data)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1022 |     return NULL;[0m
      | [0;1;32m                
[0m54 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[167/172][141.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp7xon54x_.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/mbsstr.c
[1mmbsstr.c:51:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   if (memory == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   52 |     return false;[0m
      | [0;1;32m                 
[0m[1mmbsstr.c:63:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   63 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m         ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:63:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   63 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m         ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:63:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m   64 |       mb_copy (&needle_mbchars[j], &mbui_cur (iter));[0m
      | [0;1;32m                                                     
[0m[1mmbsstr.c:142:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |     mbui_init (rhaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:142:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  142 |     mbui_init (rhaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:143:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  143 |     mbui_init (phaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:143:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  143 |     mbui_init (phaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:145:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |     while (mbui_avail (phaystack))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m[1mmbsstr.c:164:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |               if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  165 |                 abort ();[0m
      | [0;1;32m                         
[0m[1mmbsstr.c:172:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |           if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  173 |             abort ();[0m
      | [0;1;32m                     
[0m[1mmbsstr.c:197:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  197 |       mbui_init (iter_needle, needle);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:197:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  197 |       mbui_init (iter_needle, needle);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:222:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  222 |           mbui_init (iter_needle_last_ccount, needle);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:222:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  222 |           mbui_init (iter_needle_last_ccount, needle);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:223:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  223 |           mbui_init (iter_haystack, haystack);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:223:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  223 |           mbui_init (iter_haystack, haystack);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:226:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |               if (!mbui_avail (iter_haystack))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  227 |                 /* No match.  */[0m
  228 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mmbsstr.c:241:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |                        count--)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  242 |                     mbui_advance (iter_needle_last_ccount);[0m
      | [0;1;32m                                                           
[0m[1mmbsstr.c:251:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |                       if (success)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  252 |                         return (char *) result;[0m
      | [0;1;32m                                               
[0m[1mmbsstr.c:265:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  265 |                   memcpy (&rhaystack, &iter_haystack, sizeof (mbui_iterator_t));[0m
      | [0;1;32m                  ^~~~~~
[0m[1mmbsstr.c:265:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  265 |                   memcpy (&rhaystack, &iter_haystack, sizeof (mbui_iterator_t));[0m
      | [0;1;32m                  ^~~~~~
[0m[1mmbsstr.c:268:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  268 |                   mbui_init (rneedle, needle);[0m
      | [0;1;32m                  ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:268:19: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  268 |                   mbui_init (rneedle, needle);[0m
      | [0;1;32m                  ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbsstr.c:269:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |                   if (!mbui_avail (rneedle))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  270 |                     abort ();[0m
      | [0;1;32m                             
[0m[1mmbsstr.c:275:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |                       if (!mbui_avail (rneedle))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  276 |                         /* Found a match.  */[0m
  277 |                         return (char *) mbui_cur_ptr (iter_haystack);[0m
      | [0;1;32m                                                                     
[0m[1mmbsstr.c:278:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |                       if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  279 |                         /* No match.  */[0m
  280 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mmbsstr.c:282:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |                       if (!mb_equal (mbui_cur (rhaystack), mbui_cur (rneedle)))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  283 |                         /* Nothing in this round.  */[0m
  284 |                         break;[0m
      | [0;1;32m                              
[0m[1mmbsstr.c:289:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  290 |         return (char *) haystack;[0m
      | [0;1;32m                                 
[0m[1mmbsstr.c:322:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |               if (*haystack == '\0')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  323 |                 /* No match.  */[0m
  324 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mmbsstr.c:339:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |                       if (*needle_last_ccount == '\0')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  340 |                         needle_last_ccount = NULL;[0m
      | [0;1;32m                                                  
[0m[1mmbsstr.c:352:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |                       if (success)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  353 |                         return (char *) result;[0m
      | [0;1;32m                                               
[0m[1mmbsstr.c:368:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |                       if (*rneedle == '\0')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  369 |                         /* Found a match.  */[0m
  370 |                         return (char *) haystack;[0m
      | [0;1;32m                                                 
[0m[1mmbsstr.c:371:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |                       if (*rhaystack == '\0')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  372 |                         /* No match.  */[0m
  373 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mmbsstr.c:375:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |                       if (*rhaystack != *rneedle)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  376 |                         /* Nothing in this round.  */[0m
  377 |                         break;[0m
      | [0;1;32m                              
[0m[1mmbsstr.c:382:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  383 |         return (char *) haystack;[0m
      | [0;1;32m                                 
[0m42 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[168/172][130.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpm3rvl42i.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/mbscasestr.c
[1mmbscasestr.c:53:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |   if (memory == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   54 |     return false;[0m
      | [0;1;32m                 
[0m[1mmbscasestr.c:64:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   64 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m         ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:64:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   64 |     for (mbui_init (iter, needle); mbui_avail (iter); mbui_advance (iter), j++)[0m
      | [0;1;32m         ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:67:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |         if (needle_mbchars[j].wc_valid)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m   68 |           needle_mbchars[j].wc = towlower (needle_mbchars[j].wc);[0m
      | [0;1;32m                                                                 
[0m[1mmbscasestr.c:147:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  147 |     mbui_init (rhaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:147:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  147 |     mbui_init (rhaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:148:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  148 |     mbui_init (phaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:148:5: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  148 |     mbui_init (phaystack, haystack);[0m
      | [0;1;32m    ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:155:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |         if (c.wc_valid)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  156 |           c.wc = towlower (c.wc);[0m
      | [0;1;32m                                 
[0m[1mmbscasestr.c:175:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |                 if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  176 |                   abort ();[0m
      | [0;1;32m                           
[0m[1mmbscasestr.c:183:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  183 |             if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  184 |               abort ();[0m
      | [0;1;32m                       
[0m[1mmbscasestr.c:211:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  211 |       mbui_init (iter_needle, needle);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:211:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  211 |       mbui_init (iter_needle, needle);[0m
      | [0;1;32m      ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:237:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  237 |           mbui_init (iter_needle_last_ccount, needle);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:237:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  237 |           mbui_init (iter_needle_last_ccount, needle);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:240:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |           if (b.wc_valid)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  241 |             b.wc = towlower (b.wc);[0m
      | [0;1;32m                                   
[0m[1mmbscasestr.c:243:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  243 |           mbui_init (iter_haystack, haystack);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:243:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  243 |           mbui_init (iter_haystack, haystack);[0m
      | [0;1;32m          ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:248:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |               if (!mbui_avail (iter_haystack))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  249 |                 /* No match.  */[0m
  250 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mmbscasestr.c:263:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |                        count--)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  264 |                     mbui_advance (iter_needle_last_ccount);[0m
      | [0;1;32m                                                           
[0m[1mmbscasestr.c:273:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |                       if (success)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  274 |                         return (char *) result;[0m
      | [0;1;32m                                               
[0m[1mmbscasestr.c:282:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |               if (c.wc_valid)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  283 |                 c.wc = towlower (c.wc);[0m
      | [0;1;32m                                       
[0m[1mmbscasestr.c:290:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  290 |                   memcpy (&rhaystack, &iter_haystack, sizeof (mbui_iterator_t));[0m
      | [0;1;32m                  ^~~~~~
[0m[1mmbscasestr.c:290:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  290 |                   memcpy (&rhaystack, &iter_haystack, sizeof (mbui_iterator_t));[0m
      | [0;1;32m                  ^~~~~~
[0m[1mmbscasestr.c:293:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  293 |                   mbui_init (rneedle, needle);[0m
      | [0;1;32m                  ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:293:19: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  293 |                   mbui_init (rneedle, needle);[0m
      | [0;1;32m                  ^
[0m[1m./mbuiter.h:206:29: [0m[0;1;36mnote: [0mexpanded from macro 'mbui_init'[0m
  206 |    (iter).in_shift = false, memset (&(iter).state, '\0', sizeof (mbstate_t)), \[0m
      | [0;1;32m                            ^~~~~~
[0m[1mmbscasestr.c:294:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                   if (!mbui_avail (rneedle))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  295 |                     abort ();[0m
      | [0;1;32m                             
[0m[1mmbscasestr.c:300:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |                       if (!mbui_avail (rneedle))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  301 |                         /* Found a match.  */[0m
  302 |                         return (char *) mbui_cur_ptr (iter_haystack);[0m
      | [0;1;32m                                                                     
[0m[1mmbscasestr.c:303:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |                       if (!mbui_avail (rhaystack))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  304 |                         /* No match.  */[0m
  305 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mmbscasestr.c:308:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |                                          mbui_cur (rneedle)))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  309 |                         /* Nothing in this round.  */[0m
  310 |                         break;[0m
      | [0;1;32m                              
[0m[1mmbscasestr.c:315:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  316 |         return (char *) haystack;[0m
      | [0;1;32m                                 
[0m[1mmbscasestr.c:349:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |               if (*haystack == '\0')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  350 |                 /* No match.  */[0m
  351 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mmbscasestr.c:366:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |                       if (*needle_last_ccount == '\0')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  367 |                         needle_last_ccount = NULL;[0m
      | [0;1;32m                                                  
[0m[1mmbscasestr.c:379:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |                       if (success)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  380 |                         return (char *) result;[0m
      | [0;1;32m                                               
[0m[1mmbscasestr.c:395:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |                       if (*rneedle == '\0')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  396 |                         /* Found a match.  */[0m
  397 |                         return (char *) haystack;[0m
      | [0;1;32m                                                 
[0m[1mmbscasestr.c:398:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |                       if (*rhaystack == '\0')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  399 |                         /* No match.  */[0m
  400 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mmbscasestr.c:403:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |                           != TOLOWER ((unsigned char) *rneedle))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  404 |                         /* Nothing in this round.  */[0m
  405 |                         break;[0m
      | [0;1;32m                              
[0m[1mmbscasestr.c:410:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  411 |         return (char *) haystack;[0m
      | [0;1;32m                                 
[0m44 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[169/172][157.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpe_uh5_2i.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/find/print.c
[1mprint.c:91:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   91 |   strncpy (fmt, format, len);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprint.c:91:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
   91 |   strncpy (fmt, format, len);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mprint.c:100:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |       if (mycost > pred->p_cost)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  101 |         pred->p_cost = NeedsNothing;[0m
      | [0;1;32m                                    
[0m[1mprint.c:109:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |       *fmt++ = '%';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  110 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:113:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |       pred->need_stat = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  114 |       mycost = NeedsLinkName;[0m
  115 |       *fmt++ = 's';[0m
  116 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:119:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  119 |       pred->need_type = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  120 |       mycost = NeedsType;[0m
  121 |       *fmt++ = 's';[0m
  122 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:125:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |       pred->need_inum = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  126 |       mycost = NeedsInodeNumber;[0m
  127 |       *fmt++ = 's';[0m
  128 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:143:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  143 |       mycost = NeedsStatInfo;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  144 |       *fmt++ = 's';[0m
  145 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:148:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  148 |       pred->need_stat = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  149 |       mycost = NeedsStatInfo;[0m
  150 |       *fmt++ = 'g';[0m
  151 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:154:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  154 |       pred->need_stat = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  155 |       mycost = NeedsType;       /* true for amortised effect */[0m
  156 |       *fmt++ = 's';[0m
  157 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:164:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mprint.c:167:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  167 |       mycost = NeedsAccessInfo;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  168 |       *fmt++ = 's';[0m
  169 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:172:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  172 |       *fmt++ = 's';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  173 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:185:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  185 |       mycost = NeedsStatInfo;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  186 |       *fmt++ = 's';[0m
  187 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:192:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  192 |       *fmt++ = 'd';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  193 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:196:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  196 |       *fmt++ = 'o';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  197 |       pred->need_stat = true;[0m
  198 |       mycost = NeedsStatInfo;[0m
  199 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:203:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |   if (mycost > pred->p_cost)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  204 |     pred->p_cost = mycost;[0m
      | [0;1;32m                          
[0m[1mprint.c:236:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  236 |       value = '\a';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  237 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:239:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |       value = '\b';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  240 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:242:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  242 |       value = '\f';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  243 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:245:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  245 |       value = '\n';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  246 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:248:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  248 |       value = '\r';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  249 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:251:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  251 |       value = '\t';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  252 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:254:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  254 |       value = '\v';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  255 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:257:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  257 |       value = '\\';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  258 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:273:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |   while (ISDIGIT (p[n]))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  274 |     n++;[0m
      | [0;1;32m        
[0m[1mprint.c:275:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |   if (p[n] == '.')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  276 |     for (n++; ISDIGIT (p[n]); n++)[0m
  277 |       /* Do nothing. */ ;[0m
      | [0;1;32m                         
[0m[1mprint.c:276:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |     for (n++; ISDIGIT (p[n]); n++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  277 |       /* Do nothing. */ ;[0m
      | [0;1;32m                         
[0m[1mprint.c:326:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |           if (our_pred->need_stat && (our_pred->p_cost < NeedsStatInfo))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  327 |             our_pred->p_cost = NeedsStatInfo;[0m
      | [0;1;32m                                             
[0m[1mprint.c:377:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |           if (fmt_editpos[1] == '%') /* %% produces just %. */[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  378 |             len = 1;[0m
  379 |           else[0m
      | [0;32m          } 
[0m[1mprint.c:379:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  380 |             len = get_format_flags_length(fmt_editpos);[0m
      | [0;1;32m                                                       
[0m[1mprint.c:426:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  426 |   if (fmt_editpos > segstart)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  427 |     make_segment (segmentp, segstart, fmt_editpos - segstart, KIND_PLAIN, 0, 0,[0m
  428 |                   our_pred);[0m
      | [0;1;32m                            
[0m[1mprint.c:443:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |           if (!isdigit ((unsigned char)p[i]) || !isdigit ((unsigned char)q[i]))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  444 |             return false;[0m
      | [0;1;32m                         
[0m[1mprint.c:492:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  492 |   memcpy (timefmt + 1, fmt, strlen (fmt) + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1mprint.c:492:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  492 |   memcpy (timefmt + 1, fmt, strlen (fmt) + 1);[0m
      | [0;1;32m  ^~~~~~
[0m[1mprint.c:498:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  498 |   if (altered_time.tm_sec >= 11)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  499 |     altered_time.tm_sec -= 11;[0m
  500 |   else[0m
      | [0;32m  } 
[0m[1mprint.c:500:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  501 |     altered_time.tm_sec += 11;[0m
      | [0;1;32m                              
[0m[1mprint.c:550:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  550 |               memmove (buf+end_of_seconds+ns_size,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mprint.c:550:15: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  550 |               memmove (buf+end_of_seconds+ns_size,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mprint.c:553:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  553 |               memcpy (buf+i+n, ns, ns_size);[0m
      | [0;1;32m              ^~~~~~
[0m[1mprint.c:553:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  553 |               memcpy (buf+i+n, ns, ns_size);[0m
      | [0;1;32m              ^~~~~~
[0m[1mprint.c:622:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'charsprinted' is never read [clang-analyzer-deadcode.DeadStores][0m
  622 |   charsprinted = 0;[0m
      | [0;1;32m  ^              ~
[0m[1mprint.c:622:3: [0m[0;1;36mnote: [0mValue stored to 'charsprinted' is never read[0m
  622 |   charsprinted = 0;[0m
      | [0;1;32m  ^              ~
[0m[1mprint.c:623:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'need_ns_suffix' is never read [clang-analyzer-deadcode.DeadStores][0m
  623 |   need_ns_suffix = 0;[0m
      | [0;1;32m  ^                ~
[0m[1mprint.c:623:3: [0m[0;1;36mnote: [0mValue stored to 'need_ns_suffix' is never read[0m
  623 |   need_ns_suffix = 0;[0m
      | [0;1;32m  ^                ~
[0m[1mprint.c:649:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  649 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mprint.c:651:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  651 |           need_ns_suffix = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  652 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:664:22: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  664 |       charsprinted = snprintf (ns_buf, NS_BUF_LEN, ".%09ld0", (long int)ts.tv_nsec);[0m
      | [0;1;32m                     ^~~~~~~~
[0m[1mprint.c:664:22: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  664 |       charsprinted = snprintf (ns_buf, NS_BUF_LEN, ".%09ld0", (long int)ts.tv_nsec);[0m
      | [0;1;32m                     ^~~~~~~~
[0m[1mprint.c:679:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  679 |           if (s)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  680 |             return s;[0m
      | [0;1;32m                     
[0m[1mprint.c:699:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |       if (ts.tv_sec < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  700 |         *--p = '-'; /* XXX: Ugh, relying on internal details of human_readable(). */[0m
      | [0;1;32m                                                                                    
[0m[1mprint.c:721:11: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  721 |           strcat (p, ns_buf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprint.c:721:11: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  721 |           strcat (p, ns_buf);[0m
      | [0;1;32m          ^~~~~~
[0m[1mprint.c:759:14: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  759 |       nout = snprintf (resultbuf, TIME_BUF_LEN,[0m
      | [0;1;32m             ^~~~~~~~
[0m[1mprint.c:759:14: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  759 |       nout = snprintf (resultbuf, TIME_BUF_LEN,[0m
      | [0;1;32m             ^~~~~~~~
[0m[1mprint.c:786:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  786 |       if (0 == ST_NBLOCKS(*p))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  787 |         return 1.0;[0m
  788 |       else[0m
      | [0;32m      } 
[0m[1mprint.c:788:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  788 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  789 |         return ST_NBLOCKS(*p) < 0 ? -HUGE_VAL : HUGE_VAL;[0m
      | [0;1;32m                                                         
[0m[1mprint.c:808:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  808 |   if (rv < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  809 |     nonfatal_nontarget_file_error (errno, dest->filename);[0m
      | [0;1;32m                                                          
[0m[1mprint.c:818:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |   if (rv < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  819 |     nonfatal_nontarget_file_error (errno, dest->filename);[0m
      | [0;1;32m                                                          
[0m[1mprint.c:827:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  827 |   if (items_written < nmemb)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  828 |     nonfatal_nontarget_file_error (errno, dest->filename);[0m
      | [0;1;32m                                                          
[0m[1mprint.c:886:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  886 |       checked_fwrite(segment->text, 1, segment->text_len, dest);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  887 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:891:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  891 |       checked_fwrite (segment->text, 1, segment->text_len, dest);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  892 |       checked_fflush (dest);[0m
  893 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mprint.c:896:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  896 |       switch (segment->format_char[0])[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mprint.c:900:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  900 |           checked_fprintf (dest, segment->text, ctime_format (get_stat_atime (stat_buf)));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  901 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:904:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  904 |           checked_fprintf (dest, segment->text,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  905 |                            human_readable ((uintmax_t) ST_NBLOCKS (*stat_buf),[0m
  906 |                                            hbuf, human_ceiling,[0m
  907 |                                            ST_NBLOCKSIZE, 512));[0m
  908 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:911:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  911 |           checked_fprintf (dest, segment->text, ctime_format (get_stat_ctime (stat_buf)));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  912 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:915:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  915 |           checked_fprintf (dest, segment->text, state.curdepth);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  916 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:919:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  919 |           checked_fprintf (dest, segment->text,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  920 |                            human_readable ((uintmax_t) stat_buf->st_dev, hbuf,[0m
  921 |                                            human_ceiling, 1, 1));[0m
  922 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:925:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  925 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  926 |             char *base = base_name (pathname);[0m
  927 |             checked_print_quoted (dest, segment->text, base);[0m
  928 |             free (base);[0m
  929 |           }[0m
  930 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:933:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  933 |           checked_print_quoted (dest, segment->text, filesystem_type (stat_buf, pathname));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  934 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:940:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  940 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  941 |             struct group *g;[0m
  942 | [0m
  943 |             g = getgrgid (stat_buf->st_gid);[0m
  944 |             if (g)[0m
  945 |               {[0m
  946 |                 segment->text[segment->text_len] = 's';[0m
  947 |                 checked_fprintf (dest, segment->text, g->gr_name);[0m
  948 |                 break;[0m
  949 |               }[0m
  950 |           }[0m
  951 |           FALLTHROUGH; /*...sometimes, so 'G' case.*/[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprint.c:955:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  955 |           checked_fprintf (dest, segment->text,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  956 |                            human_readable ((uintmax_t) stat_buf->st_gid, hbuf,[0m
  957 |                                            human_ceiling, 1, 1));[0m
  958 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:961:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  961 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mprint.c:966:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  966 |             for ( ; pname <= s; s--)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  967 |               if (*s != '/')[0m
  968 |                 break;[0m
      | [0;1;32m                      
[0m[1mprint.c:967:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  967 |               if (*s != '/')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  968 |                 break;[0m
      | [0;1;32m                      
[0m[1mprint.c:969:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  969 |             if (pname < s && *(s+1) == '/')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  970 |               *(s+1) = '\0';[0m
      | [0;1;32m                            
[0m[1mprint.c:992:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  992 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  993 |             char *s = xmalloc (state.starting_path_length+1);[0m
  994 |             memcpy (s, pathname, state.starting_path_length);[0m
  995 |             s[state.starting_path_length] = 0;[0m
  996 |             checked_fprintf (dest, segment->text, s);[0m
  997 |             free (s);[0m
  998 |           }[0m
  999 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:994:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  994 |             memcpy (s, pathname, state.starting_path_length);[0m
      | [0;1;32m            ^~~~~~
[0m[1mprint.c:994:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  994 |             memcpy (s, pathname, state.starting_path_length);[0m
      | [0;1;32m            ^~~~~~
[0m[1mprint.c:1008:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1008 |           checked_fprintf (dest, segment->text,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1009 |                            human_readable ((uintmax_t) stat_buf->st_ino, hbuf,[0m
 1010 |                                            human_ceiling,[0m
 1011 |                                            1, 1));[0m
 1012 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1015:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1015 |           checked_fprintf (dest, segment->text,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1016 |                            human_readable ((uintmax_t) ST_NBLOCKS (*stat_buf),[0m
 1017 |                                            hbuf, human_ceiling,[0m
 1018 |                                            ST_NBLOCKSIZE, 1024));[0m
 1019 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1023:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1023 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mprint.c:1053:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1053 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1054 |             char modestring[16] ;[0m
 1055 |             filemodestring (stat_buf, modestring);[0m
 1056 |             modestring[10] = '\0';[0m
 1057 |             checked_fprintf (dest, segment->text, modestring);[0m
 1058 |           }[0m
 1059 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1063:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1063 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mprint.c:1094:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1094 |           checked_fprintf (dest, segment->text,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1095 |                    human_readable ((uintmax_t) stat_buf->st_nlink,[0m
 1096 |                                    hbuf,[0m
 1097 |                                    human_ceiling,[0m
 1098 |                                    1, 1));[0m
 1099 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1103:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1103 |           checked_print_quoted (dest, segment->text, pathname);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1104 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1108:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1108 |           if (state.curdepth > 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1109 |             {[0m
 1110 |               cp = pathname + state.starting_path_length;[0m
 1111 |               if (*cp == '/')[0m
 1112 |                 /* Move past the slash between the ARGV element[0m
 1113 |                    and the rest of the pathname.  But if the ARGV element[0m
 1114 |                    ends in a slash, we didn't add another, so we've[0m
 1115 |                    already skipped past it.  */[0m
 1116 |                 cp++;[0m
 1117 |             }[0m
 1118 |           else[0m
 1119 |             {[0m
 1120 |               cp = "";[0m
 1121 |             }[0m
 1122 |           checked_print_quoted (dest, segment->text, cp);[0m
 1123 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1111:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1111 |               if (*cp == '/')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1112 |                 /* Move past the slash between the ARGV element[0m
 1113 |                    and the rest of the pathname.  But if the ARGV element[0m
 1114 |                    ends in a slash, we didn't add another, so we've[0m
 1115 |                    already skipped past it.  */[0m
 1116 |                 cp++;[0m
      | [0;1;32m                     
[0m[1mprint.c:1127:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1127 |           checked_fprintf (dest, segment->text,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1128 |                    human_readable ((uintmax_t) stat_buf->st_size,[0m
 1129 |                                    hbuf, human_ceiling, 1, 1));[0m
 1130 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1134:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1134 |           checked_fprintf (dest, segment->text, file_sparseness (stat_buf));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1135 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1139:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1139 |           checked_fprintf (dest, segment->text,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1140 |                            ctime_format (get_stat_mtime (stat_buf)));[0m
 1141 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1149:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1149 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1150 |             struct passwd *p;[0m
 1151 | [0m
 1152 |             p = getpwuid (stat_buf->st_uid);[0m
 1153 |             if (p)[0m
 1154 |               {[0m
 1155 |                 segment->text[segment->text_len] = 's';[0m
 1156 |                 checked_fprintf (dest, segment->text, p->pw_name);[0m
 1157 |                 break;[0m
 1158 |               }[0m
 1159 |           }[0m
 1160 |           FALLTHROUGH; /* .. to case U */[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprint.c:1164:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1164 |           checked_fprintf (dest, segment->text,[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1165 |                            human_readable ((uintmax_t) stat_buf->st_uid, hbuf,[0m
 1166 |                                            human_ceiling, 1, 1));[0m
 1167 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1174:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1174 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mprint.c:1220:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1220 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1221 |             checked_fprintf (dest, segment->text,[0m
 1222 |                              mode_to_filetype (stat_buf->st_mode & S_IFMT));[0m
 1223 |           }[0m
 1224 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1227:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1227 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mprint.c:1251:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1251 |           checked_fwrite (segment->text, 1, segment->text_len, dest);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1252 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mprint.c:1260:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1260 |           die (EXIT_FAILURE, 0, _("error: %s at end of format string"), "%");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1261 |           /*NOTREACHED*/[0m
 1262 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1m../lib/die.h:30:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   30 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../gl/lib/verify.h:262:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  262 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mprint.c:1285:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1285 |               ts = get_stat_atime (stat_buf);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1286 |               valid = 1;[0m
 1287 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mprint.c:1289:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1289 |               ts = get_stat_birthtime (stat_buf);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1290 |               if ('@' == segment->format_char[1])[0m
 1291 |                 valid = 1;[0m
 1292 |               else[0m
 1293 |                 valid = (ts.tv_nsec >= 0);[0m
 1294 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mprint.c:1290:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1290 |               if ('@' == segment->format_char[1])[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1291 |                 valid = 1;[0m
 1292 |               else[0m
      | [0;32m              } 
[0m[1mprint.c:1292:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1292 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1293 |                 valid = (ts.tv_nsec >= 0);[0m
      | [0;1;32m                                          
[0m[1mprint.c:1296:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1296 |               ts = get_stat_ctime (stat_buf);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1297 |               valid = 1;[0m
 1298 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mprint.c:1300:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1300 |               ts = get_stat_mtime (stat_buf);[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1301 |               valid = 1;[0m
 1302 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m107 warnings generated.
Suppressed 13 warnings (13 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[170/172][161.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmp3h9bc2qy.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/locate/locate.c
[1mlocate.c:214:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |   if (NULL == strpbrk (s, metacharacters))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  215 |     return 0;[0m
  216 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:216:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  217 |     return 1;[0m
      | [0;1;32m             
[0m[1mlocate.c:261:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  261 |       memcpy((*buf)+offs, p, nread + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mlocate.c:261:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  261 |       memcpy((*buf)+offs, p, nread + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mlocate.c:264:10: [0m[0;1;35mwarning: [0m[1mPotential memory leak [clang-analyzer-unix.Malloc][0m
  264 |   return nread;[0m
      | [0;1;32m         ^
[0m[1mlocate.c:531:7: [0m[0;1;36mnote: [0mAssuming field 'c' is not equal to LOCATEDB_ESCAPE[0m
  531 |   if (procdata->c == LOCATEDB_ESCAPE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlocate.c:531:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  531 |   if (procdata->c == LOCATEDB_ESCAPE)[0m
      | [0;1;32m  ^
[0m[1mlocate.c:533:12: [0m[0;1;36mnote: [0mAssuming field 'c' is <= 127[0m
  533 |   else if (procdata->c > 127)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~
[0m[1mlocate.c:533:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  533 |   else if (procdata->c > 127)[0m
      | [0;1;32m       ^
[0m[1mlocate.c:538:7: [0m[0;1;36mnote: [0mAssuming field 'count' is <= field 'len'[0m
  538 |   if (procdata->count > procdata->len || procdata->count < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlocate.c:538:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mlocate.c:538:42: [0m[0;1;36mnote: [0mAssuming field 'count' is >= 0[0m
  538 |   if (procdata->count > procdata->len || procdata->count < 0)[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~~~~~~~
[0m[1mlocate.c:538:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  538 |   if (procdata->count > procdata->len || procdata->count < 0)[0m
      | [0;1;32m  ^
[0m[1mlocate.c:549:11: [0m[0;1;36mnote: [0mCalling 'locate_read_str'[0m
  549 |   nread = locate_read_str (&procdata->original_filename,[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  550 |                            &procdata->pathsize,[0m
      | [0;1;32m                           ~~~~~~~~~~~~~~~~~~~~
[0m  551 |                            procdata->fp, 0, procdata->count);[0m
      | [0;1;32m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlocate.c:242:11: [0m[0;1;36mnote: [0mMemory is allocated[0m
  242 |   nread = getdelim (&p, &sz, delimiter, fp);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mlocate.c:243:7: [0m[0;1;36mnote: [0mAssuming 'nread' is < 0[0m
  243 |   if (nread >= 0)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mlocate.c:243:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  243 |   if (nread >= 0)[0m
      | [0;1;32m  ^
[0m[1mlocate.c:264:10: [0m[0;1;36mnote: [0mPotential memory leak[0m
  264 |   return nread;[0m
      | [0;1;32m         ^
[0m[1mlocate.c:355:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |   if (result == VISIT_CONTINUE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  356 |     result = VISIT_REJECTED;[0m
      | [0;1;32m                            
[0m[1mlocate.c:357:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |   if (result & (VISIT_ABORT | VISIT_REJECTED))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  358 |     return result;[0m
      | [0;1;32m                  
[0m[1mlocate.c:361:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |   if (VISIT_CONTINUE == result)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  362 |     return VISIT_ACCEPTED;[0m
  363 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:363:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  364 |     return result;[0m
      | [0;1;32m                  
[0m[1mlocate.c:374:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |   if (result == VISIT_CONTINUE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  375 |     result = VISIT_REJECTED;[0m
      | [0;1;32m                            
[0m[1mlocate.c:376:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |   if (result & (VISIT_ABORT | VISIT_REJECTED))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  377 |     return result;[0m
      | [0;1;32m                  
[0m[1mlocate.c:380:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |   if (VISIT_CONTINUE == result)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  381 |     return VISIT_ACCEPTED;[0m
  382 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:382:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  383 |     return result;[0m
      | [0;1;32m                  
[0m[1mlocate.c:461:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  461 |   if (EOF == procdata->c)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  462 |     return VISIT_ABORT;[0m
      | [0;1;32m                       
[0m[1mlocate.c:472:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |       if (procdata->count >= 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  473 |         maxval = (procdata->len - procdata->count);[0m
  474 |       else[0m
      | [0;32m      } 
[0m[1mlocate.c:474:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  475 |         maxval = (procdata->len - 0);[0m
      | [0;1;32m                                     
[0m[1mlocate.c:494:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |       if (EOF == procdata->c)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  495 |         break;[0m
      | [0;1;32m              
[0m[1mlocate.c:531:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |   if (procdata->c == LOCATEDB_ESCAPE)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  532 |     procdata->count += (short)get_short (procdata->fp);[0m
  533 |   else if (procdata->c > 127)[0m
      | [0;32m  } 
[0m[1mlocate.c:533:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |   else if (procdata->c > 127)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  534 |     procdata->count += procdata->c - 256;[0m
  535 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:535:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  536 |     procdata->count += procdata->c;[0m
      | [0;1;32m                                   
[0m[1mlocate.c:552:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |   if (nread < 1)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  553 |     return VISIT_ABORT;[0m
      | [0;1;32m                       
[0m[1mlocate.c:680:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  680 |   if (NULL != mbsstr (procdata->munged_filename, pattern))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  681 |     return VISIT_ACCEPTED;[0m
  682 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:682:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  683 |     return VISIT_REJECTED;[0m
      | [0;1;32m                          
[0m[1mlocate.c:691:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  691 |   if (NULL != strstr (procdata->munged_filename, pattern))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  692 |     return VISIT_ACCEPTED;[0m
  693 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:693:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  693 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  694 |     return VISIT_REJECTED;[0m
      | [0;1;32m                          
[0m[1mlocate.c:702:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |   if (NULL != mbscasestr (procdata->munged_filename, pattern))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  703 |     return VISIT_ACCEPTED;[0m
  704 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:704:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  705 |     return VISIT_REJECTED;[0m
      | [0;1;32m                          
[0m[1mlocate.c:715:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  715 |   if (NULL != strcasestr (procdata->munged_filename, pattern))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  716 |     return VISIT_ACCEPTED;[0m
  717 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:717:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  718 |     return VISIT_REJECTED;[0m
      | [0;1;32m                          
[0m[1mlocate.c:726:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  726 |   if (fnmatch (glob, procdata->munged_filename, 0) != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  727 |     return VISIT_REJECTED;[0m
  728 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:728:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  728 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  729 |     return VISIT_ACCEPTED;[0m
      | [0;1;32m                          
[0m[1mlocate.c:737:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  737 |   if (fnmatch (glob, procdata->munged_filename, FNM_CASEFOLD) != 0)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  738 |     return VISIT_REJECTED;[0m
  739 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:739:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  740 |     return VISIT_ACCEPTED;[0m
      | [0;1;32m                          
[0m[1mlocate.c:778:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  778 |       if ( (int)(*s) & 128 )[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  779 |         highbit = 1;[0m
      | [0;1;32m                    
[0m[1mlocate.c:790:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |   if (highbit)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  791 |     ++(p->highbit_filename_count);[0m
      | [0;1;32m                                  
[0m[1mlocate.c:792:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  792 |   if (whitespace)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  793 |     ++(p->whitespace_count);[0m
      | [0;1;32m                            
[0m[1mlocate.c:794:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  794 |   if (newline)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  795 |     ++(p->newline_count);[0m
      | [0;1;32m                         
[0m[1mlocate.c:808:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  808 |   if (++p->items_accepted >= p->limit)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  809 |     return VISIT_ABORT;[0m
  810 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:810:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  811 |     return VISIT_CONTINUE;[0m
      | [0;1;32m                          
[0m[1mlocate.c:917:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  917 |   if (len < sizeof (LOCATEDB_MAGIC))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  918 |     return 0;[0m
  919 |   else if (0 == memcmp (data, LOCATEDB_MAGIC, sizeof (LOCATEDB_MAGIC)))[0m
      | [0;32m  } 
[0m[1mlocate.c:919:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  919 |   else if (0 == memcmp (data, LOCATEDB_MAGIC, sizeof (LOCATEDB_MAGIC)))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  920 |     return 1;                   /* We saw the magic byte sequence */[0m
  921 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:921:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  922 |     return 0;[0m
      | [0;1;32m             
[0m[1mlocate.c:1043:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1043 |   if (ignore_case)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1044 |     regex_options |= RE_ICASE;[0m
      | [0;1;32m                              
[0m[1mlocate.c:1164:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1164 |   if (basename_only)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1165 |     add_visitor (visit_basename, NULL);[0m
      | [0;1;32m                                       
[0m[1mlocate.c:1177:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1177 |           memset (&p->regex, 0, sizeof (p->regex));[0m
      | [0;1;32m          ^~~~~~
[0m[1mlocate.c:1177:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1177 |           memset (&p->regex, 0, sizeof (p->regex));[0m
      | [0;1;32m          ^~~~~~
[0m[1mlocate.c:1199:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1199 |           if (ignore_case)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1200 |             add_visitor (visit_globmatch_casefold, pathpart);[0m
 1201 |           else[0m
      | [0;32m          } 
[0m[1mlocate.c:1201:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1201 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1202 |             add_visitor (visit_globmatch_nofold, pathpart);[0m
      | [0;1;32m                                                           
[0m[1mlocate.c:1243:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1243 |         results_were_filtered = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1244 |         if (follow_symlinks)    /* -L, default */[0m
 1245 |           add_visitor (visit_existing_follow, NULL);[0m
 1246 |         else                    /* -P */[0m
 1247 |           add_visitor (visit_existing_nofollow, NULL);[0m
 1248 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mlocate.c:1244:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1244 |         if (follow_symlinks)    /* -L, default */[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1245 |           add_visitor (visit_existing_follow, NULL);[0m
 1246 |         else                    /* -P */[0m
      | [0;32m        } 
[0m[1mlocate.c:1246:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1246 |         else                    /* -P */[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1247 |           add_visitor (visit_existing_nofollow, NULL);[0m
      | [0;1;32m                                                      
[0m[1mlocate.c:1251:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1251 |         results_were_filtered = true;[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1252 |         if (follow_symlinks)    /* -L, default */[0m
 1253 |           add_visitor (visit_non_existing_follow, NULL);[0m
 1254 |         else                    /* -P */[0m
 1255 |           add_visitor (visit_non_existing_nofollow, NULL);[0m
 1256 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mlocate.c:1252:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1252 |         if (follow_symlinks)    /* -L, default */[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1253 |           add_visitor (visit_non_existing_follow, NULL);[0m
 1254 |         else                    /* -P */[0m
      | [0;32m        } 
[0m[1mlocate.c:1254:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1254 |         else                    /* -P */[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1255 |           add_visitor (visit_non_existing_nofollow, NULL);[0m
      | [0;1;32m                                                          
[0m[1mlocate.c:1260:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1260 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mlocate.c:1267:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1267 |   if (stats)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1268 |     add_visitor (visit_stats, &statistics);[0m
      | [0;1;32m                                           
[0m[1mlocate.c:1272:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1272 |       if (print_quoted_filename)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1273 |         add_visitor (visit_justprint_quoted,   NULL);[0m
 1274 |       else[0m
      | [0;32m      } 
[0m[1mlocate.c:1274:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1274 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1275 |         add_visitor (visit_justprint_unquoted, NULL);[0m
      | [0;1;32m                                                     
[0m[1mlocate.c:1279:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1279 |   if (use_limit)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1280 |     add_visitor (visit_limit, plimit);[0m
 1281 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:1281:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1281 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1282 |     add_visitor (visit_count, plimit);[0m
      | [0;1;32m                                      
[0m[1mlocate.c:1288:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1288 |       if (op_and)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1289 |         mainprocessor = process_and;[0m
 1290 |       else[0m
      | [0;32m      } 
[0m[1mlocate.c:1290:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1290 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1291 |         mainprocessor = process_or;[0m
      | [0;1;32m                                   
[0m[1mlocate.c:1293:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1293 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1294 |     mainprocessor = process_simple;[0m
      | [0;1;32m                                   
[0m[1mlocate.c:1344:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1344 |       if (filesize || (database_mtime != NULL))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1345 |         print_stats (argc, filesize, database_mtime);[0m
      | [0;1;32m                                                     
[0m[1mlocate.c:1365:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1365 |       fprintf (stderr, _("Try '%s --help' for more information.\n"), program_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mlocate.c:1365:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1365 |       fprintf (stderr, _("Try '%s --help' for more information.\n"), program_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mlocate.c:1369:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1369 |   fprintf (stdout, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mlocate.c:1369:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1369 |   fprintf (stdout, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mlocate.c:1421:16: [0m[0;1;35mwarning: [0m[1mValue stored to 'what' during its initialization is never read [clang-analyzer-deadcode.DeadStores][0m
 1421 |   const char * what = "failed";[0m
      | [0;1;32m               ^~~~   ~~~~~~~~
[0m[1mlocate.c:1421:16: [0m[0;1;36mnote: [0mValue stored to 'what' during its initialization is never read[0m
 1421 |   const char * what = "failed";[0m
      | [0;1;32m               ^~~~   ~~~~~~~~
[0m[1mlocate.c:1554:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1554 |   if (argv[0])[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1555 |     set_program_name (argv[0]);[0m
 1556 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:1556:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1556 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1557 |     set_program_name ("locate");[0m
      | [0;1;32m                                
[0m[1mlocate.c:1589:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1589 |       if (optc == -1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1590 |         break;[0m
      | [0;1;32m              
[0m[1mlocate.c:1595:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1595 |           separator = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1596 |           print_quoted_filename = false; /* print filename 'raw'. */[0m
 1597 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1600:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1600 |           op_and = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1601 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1604:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1604 |           basename_only = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1605 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1608:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1608 |           just_count = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1609 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1612:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1612 |           user_selected_locate_path = optarg;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1613 |           assert (optarg != NULL);[0m
 1614 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1617:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1617 |           check_existence = ACCEPT_EXISTING;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1618 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1621:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1621 |           check_existence = ACCEPT_NON_EXISTING;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1622 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1625:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1625 |           ignore_case = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1626 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1629:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1629 |           usage (EXIT_SUCCESS);[0m
      | [0;1;32m          ^                   
[0m      | [0;32m          {                   ;} 
[0m[1mlocate.c:1633:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1633 |           set_max_db_age (optarg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1634 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1637:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1637 |           print = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1638 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1641:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1641 |           display_findutils_version ("locate");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1642 |           return 0;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mlocate.c:1645:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1645 |           basename_only = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1646 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1649:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1649 |           regex = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1650 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1653:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1653 |           regex_options = get_regex_type (optarg);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1654 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1657:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1657 |           stats = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1658 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1661:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1661 |           follow_symlinks = 1;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1662 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1672:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1672 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mlocate.c:1675:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1675 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1676 |             char *end = optarg;[0m
 1677 |             strtol_error err = xstrtoumax (optarg, &end, 10, &limits.limit,[0m
 1678 |                                            NULL);[0m
 1679 |             if (LONGINT_OK != err)[0m
 1680 |               xstrtol_fatal (err, opti, optc, longopts, optarg);[0m
 1681 |             use_limit = 1;[0m
 1682 |           }[0m
 1683 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mlocate.c:1679:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1679 |             if (LONGINT_OK != err)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1680 |               xstrtol_fatal (err, opti, optc, longopts, optarg);[0m
      | [0;1;32m                                                                
[0m[1mlocate.c:1693:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1693 |           usage (EXIT_FAILURE);[0m
      | [0;1;32m          ^                   
[0m      | [0;32m          {                   ;} 
[0m[1mlocate.c:1710:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1710 |   if (!just_count && !stats)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1711 |     print = 1;[0m
      | [0;1;32m              
[0m[1mlocate.c:1715:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1715 |       if (optind == argc)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1716 |         use_limit = 0;[0m
      | [0;1;32m                      
[0m[1mlocate.c:1727:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1727 |   if (1 == isatty (STDOUT_FILENO))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1728 |     stdout_is_a_tty = true;[0m
 1729 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:1729:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1729 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1730 |     stdout_is_a_tty = false;[0m
      | [0;1;32m                            
[0m[1mlocate.c:1904:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1904 |   if (found || (use_limit && (limits.limit==0)) || stats )[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1905 |     return 0;[0m
 1906 |   else[0m
      | [0;32m  } 
[0m[1mlocate.c:1906:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1906 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1907 |     return 1;[0m
      | [0;1;32m             
[0m107 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[171/172][162.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpmyp2qfyd.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/xargs/xargs.c
[1mxargs.c:313:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  313 |               return '\a';[0m
      | [0;1;32m              ^          
[0m      | [0;32m              {          ;} 
[0m[1mxargs.c:315:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  315 |               return '\b';[0m
      | [0;1;32m              ^          
[0m      | [0;32m              {          ;} 
[0m[1mxargs.c:317:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  317 |               return '\f';[0m
      | [0;1;32m              ^          
[0m      | [0;32m              {          ;} 
[0m[1mxargs.c:319:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  319 |               return '\n';[0m
      | [0;1;32m              ^          
[0m      | [0;32m              {          ;} 
[0m[1mxargs.c:321:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  321 |               return '\r';[0m
      | [0;1;32m              ^          
[0m      | [0;32m              {          ;} 
[0m[1mxargs.c:323:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  323 |               return'\t';[0m
      | [0;1;32m              ^         
[0m      | [0;32m              {         ;} 
[0m[1mxargs.c:325:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  325 |               return '\v';[0m
      | [0;1;32m              ^          
[0m      | [0;32m              {          ;} 
[0m[1mxargs.c:327:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  327 |               return '\\';[0m
      | [0;1;32m              ^          
[0m      | [0;32m              {          ;} 
[0m[1mxargs.c:329:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  329 |               return get_char_oct_or_hex_escape (s);[0m
      | [0;1;32m              ^                                    
[0m      | [0;32m              {                                    ;} 
[0m[1mxargs.c:360:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |   if (a < b)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  361 |     return a;[0m
  362 |   else[0m
      | [0;32m  } 
[0m[1mxargs.c:362:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  363 |     return b;[0m
      | [0;1;32m             
[0m[1mxargs.c:417:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  417 |   if (argv[0])[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  418 |     set_program_name (argv[0]);[0m
  419 |   else[0m
      | [0;32m  } 
[0m[1mxargs.c:419:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  420 |     set_program_name ("xargs");[0m
      | [0;1;32m                               
[0m[1mxargs.c:528:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  528 |           read_args = read_string;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  529 |           input_delimiter = '\0';[0m
  530 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:533:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  533 |           read_args = read_string;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  534 |           input_delimiter = get_input_delimiter (optarg);[0m
  535 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:539:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |           if (optarg && (strlen (optarg) > 0))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  540 |             eof_str = optarg;[0m
  541 |           else[0m
      | [0;32m          } 
[0m[1mxargs.c:541:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  542 |             eof_str = NULL;[0m
      | [0;1;32m                           
[0m[1mxargs.c:543:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  543 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mxargs.c:546:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  546 |           usage (EXIT_SUCCESS);[0m
      | [0;1;32m          ^                   
[0m      | [0;32m          {                   ;} 
[0m[1mxargs.c:550:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |           if (optarg)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  551 |             bc_ctl.replace_pat = optarg;[0m
  552 |           else[0m
      | [0;32m          } 
[0m[1mxargs.c:552:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  553 |             bc_ctl.replace_pat = "{}";[0m
      | [0;1;32m                                      
[0m[1mxargs.c:555:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  555 |           if (bc_ctl.args_per_exec != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  556 |             {[0m
  557 |               warn_mutually_exclusive ("--replace/-I/-i", "--max-args");[0m
  558 |               bc_ctl.args_per_exec = 0;[0m
  559 |             }[0m
  560 |           if (bc_ctl.lines_per_exec != 0)[0m
  561 |             {[0m
  562 |               warn_mutually_exclusive ("--replace/-I/-i", "--max-lines");[0m
  563 |               bc_ctl.lines_per_exec = 0;[0m
  564 |             }[0m
  565 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:568:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  568 |           bc_ctl.lines_per_exec = parse_num (optarg, 'L', 1L, -1L, 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  569 |           /* -L excludes -i -n.  */[0m
  570 |           if (bc_ctl.args_per_exec != 0)[0m
  571 |             {[0m
  572 |               warn_mutually_exclusive ("-L", "--max-args");[0m
  573 |               bc_ctl.args_per_exec = 0;[0m
  574 |             }[0m
  575 |           if (bc_ctl.replace_pat != NULL)[0m
  576 |             {[0m
  577 |               warn_mutually_exclusive ("-L", "--replace");[0m
  578 |               bc_ctl.replace_pat = NULL;[0m
  579 |             }[0m
  580 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:583:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  583 |           if (optarg)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  584 |             bc_ctl.lines_per_exec = parse_num (optarg, 'l', 1L, -1L, 1);[0m
  585 |           else[0m
  586 |             bc_ctl.lines_per_exec = 1;[0m
  587 |           /* -l excludes -i -n.  */[0m
  588 |           if (bc_ctl.args_per_exec != 0)[0m
  589 |             {[0m
  590 |               warn_mutually_exclusive ("--max-lines/-l", "--max-args");[0m
  591 |               bc_ctl.args_per_exec = 0;[0m
  592 |             }[0m
  593 |           if (bc_ctl.replace_pat != NULL)[0m
  594 |             {[0m
  595 |               warn_mutually_exclusive ("--max-lines/-l", "--replace");[0m
  596 |               bc_ctl.replace_pat = NULL;[0m
  597 |             }[0m
  598 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:583:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |           if (optarg)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  584 |             bc_ctl.lines_per_exec = parse_num (optarg, 'l', 1L, -1L, 1);[0m
  585 |           else[0m
      | [0;32m          } 
[0m[1mxargs.c:585:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  586 |             bc_ctl.lines_per_exec = 1;[0m
      | [0;1;32m                                      
[0m[1mxargs.c:601:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  601 |           bc_ctl.args_per_exec = parse_num (optarg, 'n', 1L, -1L, 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mxargs.c:628:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  628 |           {[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  629 |             size_t arg_size;[0m
  630 |             act_on_init_result ();[0m
  631 |             arg_size = parse_num (optarg, 's', 1L,[0m
  632 |                                   bc_ctl.posix_arg_size_max, 0);[0m
  633 |             if (arg_size > bc_ctl.posix_arg_size_max)[0m
  634 |               {[0m
  635 |                 error (0, 0,[0m
  636 |                        _("warning: value %ld for -s option is too large, "[0m
  637 |                          "using %ld instead"),[0m
  638 |                        (long) arg_size, (long) bc_ctl.posix_arg_size_max);[0m
  639 |                 arg_size = bc_ctl.posix_arg_size_max;[0m
  640 |               }[0m
  641 |             bc_ctl.arg_max = arg_size;[0m
  642 |           }[0m
  643 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:646:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  646 |           show_limits = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  647 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:650:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  650 |           print_command = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  651 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:654:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  654 |           bc_ctl.exit_if_size_exceeded = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  655 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:658:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |           open_tty = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  659 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:662:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  662 |           query_before_executing = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  663 |           print_command = true;[0m
  664 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:667:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  667 |           always_run_command = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  668 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:672:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  672 |           proc_max = parse_num (optarg, 'P', 0L, MAX_PROC_MAX, 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  673 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:676:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  676 |           input_file = optarg;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  677 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:680:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  680 |           display_findutils_version ("xargs");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  681 |           return 0;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mxargs.c:684:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  684 |           if (strchr (optarg, '='))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mxargs.c:705:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  705 |           usage (EXIT_FAILURE);[0m
      | [0;1;32m          ^                   
[0m      | [0;32m          {                   ;} 
[0m[1mxargs.c:733:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |   if (0 != sigaction (SIGUSR1, &sigact, (struct sigaction *)NULL))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  734 |           error (0, errno, _("Cannot set SIGUSR1 signal handler"));[0m
      | [0;1;32m                                                                   
[0m[1mxargs.c:739:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |   if (0 != sigaction (SIGUSR2, &sigact, (struct sigaction *)NULL))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  740 |           error (0, errno, _("Cannot set SIGUSR2 signal handler"));[0m
      | [0;1;32m                                                                   
[0m[1mxargs.c:761:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  761 |   if (bc_ctl.replace_pat || bc_ctl.lines_per_exec)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  762 |     bc_ctl.exit_if_size_exceeded = true;[0m
      | [0;1;32m                                        
[0m[1mxargs.c:774:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  774 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:774:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  774 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:777:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  777 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:777:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  777 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:780:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  780 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:780:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  780 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:783:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  783 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:783:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  783 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:786:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  786 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:786:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  786 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:789:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  789 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:789:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  789 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:795:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  795 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mxargs.c:795:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  795 |           fprintf (stderr,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mxargs.c:803:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  803 |               fprintf (stderr,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mxargs.c:803:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  803 |               fprintf (stderr,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mxargs.c:820:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  820 |       for (; optind < argc; optind++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  821 |         bc_push_arg (&bc_ctl, &bc_state,[0m
  822 |                      argv[optind], strlen (argv[optind]) + 1,[0m
  823 |                      NULL, 0,[0m
  824 |                      initial_args);[0m
      | [0;1;32m                                   
[0m[1mxargs.c:831:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |       while ((*read_args) () != -1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  832 |         if (bc_ctl.lines_per_exec && lineno >= bc_ctl.lines_per_exec)[0m
  833 |           {[0m
  834 |             bc_do_exec (&bc_ctl, &bc_state);[0m
  835 |             lineno = 0;[0m
  836 |           }[0m
      | [0;1;32m           
[0m[1mxargs.c:841:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  841 |           || (always_run_command && procs_executed==0))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  842 |         bc_do_exec (&bc_ctl, &bc_state);[0m
      | [0;1;32m                                        
[0m[1mxargs.c:850:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  850 |       for (i = optind; i < argc; i++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  851 |         arglen[i] = strlen (argv[i]);[0m
      | [0;1;32m                                     
[0m[1mxargs.c:867:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  867 |           for (i = optind + 1; i < argc; i++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  868 |             bc_do_insert (&bc_ctl, &bc_state,[0m
  869 |                           argv[i], arglen[i],[0m
  870 |                           NULL, 0,[0m
  871 |                           linebuf, len,[0m
  872 |                           initial_args);[0m
      | [0;1;32m                                        
[0m[1mxargs.c:913:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  913 |   if (eof)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  914 |     return -1;[0m
      | [0;1;32m              
[0m[1mxargs.c:925:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  925 |           if (p == linebuf)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  926 |             return -1;[0m
      | [0;1;32m                      
[0m[1mxargs.c:937:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  937 |           if (first && EOF_STR (linebuf))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  938 |             return -1;[0m
      | [0;1;32m                      
[0m[1mxargs.c:939:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |           if (!bc_ctl.replace_pat)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  940 |             bc_push_arg (&bc_ctl, &bc_state,[0m
  941 |                          linebuf, len,[0m
  942 |                          NULL, 0,[0m
  943 |                          initial_args);[0m
      | [0;1;32m                                       
[0m[1mxargs.c:949:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  949 |           if (ISSPACE (c))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  950 |             continue;[0m
  951 |           state = NORM;[0m
  952 |           FALLTHROUGH;  /* aaahhhh....  */[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mxargs.c:949:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |           if (ISSPACE (c))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  950 |             continue;[0m
      | [0;1;32m                     
[0m[1mxargs.c:955:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  955 |           if (c == '\n')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mxargs.c:957:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  957 |               if (!ISBLANK (prevc))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  958 |                 lineno++;       /* For -l.  */[0m
      | [0;1;32m                                              
[0m[1mxargs.c:979:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  979 |               if (!bc_ctl.replace_pat)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  980 |                 bc_push_arg (&bc_ctl, &bc_state,[0m
  981 |                              linebuf, len,[0m
  982 |                              NULL, 0,[0m
  983 |                              initial_args);[0m
      | [0;1;32m                                           
[0m[1mxargs.c:1012:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1012 |               state = BACKSLASH;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1013 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mxargs.c:1018:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1018 |               quotc = c;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m 1019 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mxargs.c:1024:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1024 |           if (c == '\n')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1025 |             {[0m
 1026 |               exec_if_possible ();[0m
 1027 |               die (EXIT_FAILURE, 0,[0m
 1028 |                    _("unmatched %s quote; by default quotes are special to "[0m
 1029 |                      "xargs unless you use the -0 option"),[0m
 1030 |                    quotc == '"' ? _("double") : _("single"));[0m
 1031 |             }[0m
 1032 |           if (c == quotc)[0m
 1033 |             {[0m
 1034 |               state = NORM;[0m
 1035 |               seen_arg = true; /* Makes a difference for e.g. just '' or "" as the first arg on a line */[0m
 1036 |               continue;[0m
 1037 |             }[0m
 1038 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:1041:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1041 |           state = NORM;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1042 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mxargs.c:1090:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1090 |   if (eof)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1091 |     return -1;[0m
      | [0;1;32m              
[0m[1mxargs.c:1098:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1098 |           if (p == linebuf)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1099 |             return -1;[0m
      | [0;1;32m                      
[0m[1mxargs.c:1102:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |           if (!bc_ctl.replace_pat)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1103 |             bc_push_arg (&bc_ctl, &bc_state,[0m
 1104 |                          linebuf, len,[0m
 1105 |                          NULL, 0,[0m
 1106 |                          initial_args);[0m
      | [0;1;32m                                       
[0m[1mxargs.c:1114:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1114 |           if (!bc_ctl.replace_pat)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1115 |             bc_push_arg (&bc_ctl, &bc_state,[0m
 1116 |                          linebuf, len,[0m
 1117 |                          NULL, 0,[0m
 1118 |                          initial_args);[0m
      | [0;1;32m                                       
[0m[1mxargs.c:1142:11: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1142 |       if (fprintf (stderr, "%s%s",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mxargs.c:1142:11: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1142 |       if (fprintf (stderr, "%s%s",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mxargs.c:1145:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1145 |                                      bc_state.cmd_argv[i])) < 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1146 |         die (EXIT_FAILURE, errno, _("Failed to write to stderr"));[0m
      | [0;1;32m                                                                  
[0m[1mxargs.c:1157:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1157 |           if (!tty_stream)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1158 |             die (EXIT_FAILURE, errno,[0m
 1159 |                  _("failed to open /dev/tty for reading"));[0m
      | [0;1;32m                                                           
[0m[1mxargs.c:1162:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1162 |       if (fflush (stderr) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1163 |         die (EXIT_FAILURE, errno, _("Failed to write to stderr"));[0m
      | [0;1;32m                                                                  
[0m[1mxargs.c:1166:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1166 |       while (c != EOF && c != '\n')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1167 |         c = getc (tty_stream);[0m
      | [0;1;32m                              
[0m[1mxargs.c:1168:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1168 |       if (EOF == c)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1169 |         die (EXIT_FAILURE, errno, _("Failed to read from stdin"));[0m
      | [0;1;32m                                                                  
[0m[1mxargs.c:1170:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1170 |       if (savec == 'y' || savec == 'Y')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1171 |         return true;[0m
      | [0;1;32m                    
[0m[1mxargs.c:1173:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1173 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1174 |     putc ('\n', stderr);[0m
      | [0;1;32m                        
[0m[1mxargs.c:1190:11: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1190 |   assert (snprintf (buf, sizeof buf - 1, "%u", n) <= sizeof buf - 1);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:108:20: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  108 |   ((void) sizeof ((expr) ? 1 : 0), __extension__ ({                     \[0m
      | [0;1;32m                   ^~~~
[0m[1mxargs.c:1190:11: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 1190 |   assert (snprintf (buf, sizeof buf - 1, "%u", n) <= sizeof buf - 1);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:108:20: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  108 |   ((void) sizeof ((expr) ? 1 : 0), __extension__ ({                     \[0m
      | [0;1;32m                   ^~~~
[0m[1mxargs.c:1257:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1257 |           if (dup2(fd, STDIN_FILENO) != 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1258 |             die (EXIT_FAILURE, errno,[0m
 1259 |                  _("failed to redirect standard input of the child process"));[0m
      | [0;1;32m                                                                              
[0m[1mxargs.c:1296:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1296 |       if (!query_before_executing && print_command)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1297 |         print_args (false);[0m
      | [0;1;32m                           
[0m[1mxargs.c:1310:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1310 |       if (pipe (fd))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1311 |         die (EXIT_FAILURE, errno, _("could not create pipe before fork"));[0m
      | [0;1;32m                                                                          
[0m[1mxargs.c:1316:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 1317 |         wait_for_proc (false, 1u);[0m
      | [0;1;32m                                  
[0m[1mxargs.c:1322:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1322 |           die (EXIT_FAILURE, errno, _("cannot fork"));[0m
      | [0;1;32m          ^                                          
[0m      | [0;32m          {                                          ;} 
[0m[1m../lib/die.h:30:3: [0m[0;1;36mnote: [0mexpanded from macro 'die'[0m
   30 |   verify_expr (status, (error (status, __VA_ARGS__), assume (false)))[0m
      | [0;1;32m  ^
[0m[1m../gl/lib/verify.h:262:4: [0m[0;1;36mnote: [0mexpanded from macro 'verify_expr'[0m
  262 |    (_GL_VERIFY_TRUE (R, "verify_expr (" #R ", " #E ")") ? (E) : (E))[0m
      | [0;1;32m   ^
[0m[1mxargs.c:1331:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1331 |             if (bc_args_exceed_testing_limit (argv))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1332 |               errno = E2BIG;[0m
 1333 |             else[0m
      | [0;32m            } 
[0m[1mxargs.c:1333:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1333 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1334 |               execvp (argv[0], argv);[0m
      | [0;1;32m                                     
[0m[1mxargs.c:1353:19: [0m[0;1;35mwarning: [0m[1mAn undefined value may be read from 'errno' [clang-analyzer-unix.Errno][0m
 1353 |             if (E2BIG != errno)[0m
      | [0;1;32m                         ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1286:7: [0m[0;1;36mnote: [0mAssuming 'proc_max' is not equal to 0[0m
 1286 |   if (proc_max)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mxargs.c:1286:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1286 |   if (proc_max)[0m
      | [0;1;32m  ^
[0m[1mxargs.c:1288:14: [0m[0;1;36mnote: [0mAssuming 'procs_executing' is >= 'proc_max'[0m
 1288 |       while (procs_executing >= proc_max)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1288:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1288 |       while (procs_executing >= proc_max)[0m
      | [0;1;32m      ^
[0m[1mxargs.c:1288:14: [0m[0;1;36mnote: [0mAssuming 'procs_executing' is < 'proc_max'[0m
 1288 |       while (procs_executing >= proc_max)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1288:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1294[0m
 1288 |       while (procs_executing >= proc_max)[0m
      | [0;1;32m      ^
[0m[1mxargs.c:1294:7: [0m[0;1;36mnote: [0mAssuming 'query_before_executing' is false[0m
 1294 |   if (!query_before_executing || print_args (true))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1294:31: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1294 |   if (!query_before_executing || print_args (true))[0m
      | [0;1;32m                              ^
[0m[1mxargs.c:1296:12: [0m[0;1;36mnote: [0m'query_before_executing' is false[0m
 1296 |       if (!query_before_executing && print_command)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1296:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1296 |       if (!query_before_executing && print_command)[0m
      | [0;1;32m          ^
[0m[1mxargs.c:1296:38: [0m[0;1;36mnote: [0mAssuming 'print_command' is false[0m
 1296 |       if (!query_before_executing && print_command)[0m
      | [0;1;32m                                     ^~~~~~~~~~~~~
[0m[1mxargs.c:1296:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1296 |       if (!query_before_executing && print_command)[0m
      | [0;1;32m      ^
[0m[1mxargs.c:1310:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1310 |       if (pipe (fd))[0m
      | [0;1;32m          ^
[0m[1m../gl/lib/unistd--.h:27:14: [0m[0;1;36mnote: [0mexpanded from macro 'pipe'[0m
   27 | #define pipe pipe_safer[0m
      | [0;1;32m             ^
[0m[1mxargs.c:1310:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1310 |       if (pipe (fd))[0m
      | [0;1;32m      ^
[0m[1mxargs.c:1316:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1316:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mxargs.c:1316:39: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m                                      ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^
[0m[1mxargs.c:1316:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m             ^
[0m[1mxargs.c:1316:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m      ^
[0m[1mxargs.c:1316:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1316:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mxargs.c:1316:39: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m                                      ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^
[0m[1mxargs.c:1316:14: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m             ^
[0m[1mxargs.c:1316:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m      ^
[0m[1mxargs.c:1316:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1316:36: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1316 |       while ((child = fork ()) < 0 && errno == EAGAIN && procs_executing)[0m
      | [0;1;32m                                   ^
[0m[1mxargs.c:1319:7: [0m[0;1;36mnote: [0mControl jumps to 'case 0:'  at line 1324[0m
 1319 |       switch (child)[0m
      | [0;1;32m      ^
[0m[1mxargs.c:1331:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1331 |             if (bc_args_exceed_testing_limit (argv))[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1331:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1331 |             if (bc_args_exceed_testing_limit (argv))[0m
      | [0;1;32m            ^
[0m[1mxargs.c:1335:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1335 |             if (errno)[0m
      | [0;1;32m            ^
[0m[1mxargs.c:1352:6: [0m[0;1;36mnote: [0mAssuming that 'close' is successful; 'errno' becomes undefined after the call[0m
 1352 |             close (fd[1]);[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mxargs.c:1353:19: [0m[0;1;36mnote: [0mAn undefined value may be read from 'errno'[0m
 1353 |             if (E2BIG != errno)[0m
      | [0;1;32m                         ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mxargs.c:1450:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1450 |       bc_state.cmd_argc == bc_ctl.initial_argc || bc_ctl.exit_if_size_exceeded)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 1451 |     return;[0m
      | [0;1;32m           
[0m[1mxargs.c:1464:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1464 |   for (i = 0; i < pids_alloc && pids[i]; i++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1465 |     ;[0m
      | [0;1;32m     
[0m[1mxargs.c:1473:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1473 |       for (j=i; j<pids_alloc; ++j)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1474 |         pids[j] = (pid_t)0;[0m
      | [0;1;32m                           
[0m[1mxargs.c:1526:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1526 |               if (errno != EINTR)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1527 |                 die (EXIT_FAILURE, errno,[0m
 1528 |                      _("error waiting for child process"));[0m
      | [0;1;32m                                                           
[0m[1mxargs.c:1546:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1546 |               for (i = 0; i < pids_alloc && pid != pids[i]; i++)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1547 |                 ;[0m
      | [0;1;32m                 
[0m[1mxargs.c:1578:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1578 |       if (WEXITSTATUS (status) == CHILD_EXIT_PLEASE_STOP_IMMEDIATELY)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1579 |         error (XARGS_EXIT_CLIENT_EXIT_255, 0,[0m
 1580 |                _("%s: exited with status 255; aborting"), bc_state.cmd_argv[0]);[0m
      | [0;1;32m                                                                                
[0m[1mxargs.c:1581:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1581 |       if (WIFSTOPPED (status))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1582 |         error (XARGS_EXIT_CLIENT_FATAL_SIG, 0,[0m
 1583 |                _("%s: stopped by signal %d"), bc_state.cmd_argv[0], WSTOPSIG (status));[0m
      | [0;1;32m                                                                                       
[0m[1mxargs.c:1584:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1584 |       if (WIFSIGNALED (status))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1585 |         error (XARGS_EXIT_CLIENT_FATAL_SIG, 0,[0m
 1586 |                _("%s: terminated by signal %d"), bc_state.cmd_argv[0], WTERMSIG (status));[0m
      | [0;1;32m                                                                                          
[0m[1mxargs.c:1587:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1587 |       if (WEXITSTATUS (status) != 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1588 |         child_error = XARGS_EXIT_CLIENT_EXIT_NONZERO;[0m
      | [0;1;32m                                                     
[0m[1mxargs.c:1607:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1607 |   if (waiting)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1608 |     return;[0m
      | [0;1;32m           
[0m[1mxargs.c:1640:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1640 |         if (proc_max < MAX_PROC_MAX)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1641 |           proc_max++;[0m
      | [0;1;32m                     
[0m[1mxargs.c:1651:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1651 |         if (proc_max > 1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1652 |                 proc_max--;[0m
      | [0;1;32m                           
[0m[1mxargs.c:1671:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1671 |       fprintf (stderr, _("%s: invalid number \"%s\" for -%c option\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:1671:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1671 |       fprintf (stderr, _("%s: invalid number \"%s\" for -%c option\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:1678:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1678 |       fprintf (stderr, _("%s: value %s for -%c option should be >= %ld\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:1678:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1678 |       fprintf (stderr, _("%s: value %s for -%c option should be >= %ld\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:1680:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1680 |       if (fatal)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1681 |         usage (EXIT_FAILURE);[0m
      | [0;1;32m                             
[0m[1mxargs.c:1687:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1687 |       fprintf (stderr, _("%s: value %s for -%c option should be <= %ld\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:1687:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1687 |       fprintf (stderr, _("%s: value %s for -%c option should be <= %ld\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:1689:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1689 |       if (fatal)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1690 |         usage (EXIT_FAILURE);[0m
      | [0;1;32m                             
[0m[1mxargs.c:1702:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1702 |       fprintf (stderr, _("Try '%s --help' for more information.\n"), program_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:1702:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1702 |       fprintf (stderr, _("Try '%s --help' for more information.\n"), program_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mxargs.c:1706:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1706 |   fprintf (stdout,[0m
      | [0;1;32m  ^~~~~~~
[0m[1mxargs.c:1706:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1706 |   fprintf (stdout,[0m
      | [0;1;32m  ^~~~~~~
[0m121 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[172/172][215.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/tidy-fixes/tmpwdop6lgz.yaml -p=/itch/common/crepos/cu-to-rtu/c/findutils-4.9.0 /itch/common/crepos/cu-to-rtu/c/findutils-4.9.0/gl/lib/fts.c
[1mfts.c:282:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |       if (0 <= fd)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  283 |         close (fd);[0m
      | [0;1;32m                   
[0m[1mfts.c:317:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |       if (0 <= prev_fd_in_slot)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  318 |         close (prev_fd_in_slot); /* ignore any close failure */[0m
      | [0;1;32m                                                               
[0m[1mfts.c:322:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |       if (0 <= old)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  323 |         close (old); /* ignore any close failure */[0m
      | [0;1;32m                                                   
[0m[1mfts.c:386:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |         if (sp == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  387 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:440:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |           if (! fts_palloc(sp, MAX(maxarglen, MAXPATHLEN)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  441 |                   goto mem1;[0m
      | [0;1;32m                            
[0m[1mfts.c:446:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  446 |                 if ((parent = fts_alloc(sp, "", 0)) == NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  447 |                         goto mem2;[0m
      | [0;1;32m                                  
[0m[1mfts.c:474:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                     if (2 < len && v[len - 1] == '/')[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  475 |                       while (1 < len && v[len - 2] == '/')[0m
  476 |                         --len;[0m
      | [0;1;32m                              
[0m[1mfts.c:475:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  475 |                       while (1 < len && v[len - 2] == '/')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  476 |                         --len;[0m
      | [0;1;32m                              
[0m[1mfts.c:479:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |                 if ((p = fts_alloc(sp, *argv, len)) == NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  480 |                         goto mem3;[0m
      | [0;1;32m                                  
[0m[1mfts.c:503:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |                         if (root == NULL)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  504 |                                 tmp = root = p;[0m
  505 |                         else {[0m
      | [0;32m                        } 
[0m[1mfts.c:511:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |         if (compar && nitems > 1)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  512 |                 root = fts_sort(sp, root, nitems);[0m
      | [0;1;32m                                                  
[0m[1mfts.c:519:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  519 |         if ((sp->fts_cur = fts_alloc(sp, "", 0)) == NULL)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  520 |                 goto mem3;[0m
      | [0;1;32m                          
[0m[1mfts.c:524:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |         if (! setup_dir (sp))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  525 |                 goto mem3;[0m
      | [0;1;32m                          
[0m[1mfts.c:535:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |             && (sp->fts_rfd = diropen (sp, ".")) < 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  536 |                 SET(FTS_NOCHDIR);[0m
      | [0;1;32m                                 
[0m[1mfts.c:563:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  563 |         memmove(sp->fts_path, p->fts_name, len + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfts.c:563:9: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  563 |         memmove(sp->fts_path, p->fts_name, len + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfts.c:566:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  566 |                 memmove(p->fts_name, cp, len + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfts.c:566:17: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  566 |                 memmove(p->fts_name, cp, len + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfts.c:593:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |         if (sp->fts_child)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  594 |                 fts_lfree(sp->fts_child);[0m
      | [0;1;32m                                         
[0m[1mfts.c:600:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |             if (0 <= sp->fts_cwd_fd)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  601 |               if (close (sp->fts_cwd_fd))[0m
  602 |                 saved_errno = errno;[0m
      | [0;1;32m                                    
[0m[1mfts.c:601:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |               if (close (sp->fts_cwd_fd))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  602 |                 saved_errno = errno;[0m
      | [0;1;32m                                    
[0m[1mfts.c:607:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |             if (fchdir(sp->fts_rfd))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  608 |               saved_errno = errno;[0m
      | [0;1;32m                                  
[0m[1mfts.c:612:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |             if (close (sp->fts_rfd))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  613 |               if (saved_errno == 0)[0m
  614 |                 saved_errno = errno;[0m
      | [0;1;32m                                    
[0m[1mfts.c:613:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |               if (saved_errno == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  614 |                 saved_errno = errno;[0m
      | [0;1;32m                                    
[0m[1mfts.c:619:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  619 |         if (sp->fts_leaf_optimization_works_ht)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  620 |           hash_free (sp->fts_leaf_optimization_works_ht);[0m
      | [0;1;32m                                                         
[0m[1mfts.c:711:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |   if (!ISSET (FTS_CWDFD))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  712 |     return 0;[0m
      | [0;1;32m             
[0m[1mfts.c:714:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |   if (! h)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  715 |     h = sp->fts_leaf_optimization_works_ht[0m
  716 |       = hash_initialize (DEV_TYPE_HT_INITIAL_SIZE, NULL, dev_type_hash,[0m
  717 |                          dev_type_compare, free);[0m
      | [0;1;32m                                                 
[0m[1mfts.c:723:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  723 |       if (ent)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  724 |         return ent->f_type;[0m
      | [0;1;32m                           
[0m[1mfts.c:728:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  728 |   if (fd < 0 || fstatfs (fd, &fs_buf) != 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  729 |     return 0;[0m
      | [0;1;32m             
[0m[1mfts.c:740:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  740 |           if (ent)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  741 |             fts_assert (ent == t2);[0m
  742 |           else[0m
      | [0;32m          } 
[0m[1mfts.c:742:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  742 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  743 |             free (t2);[0m
      | [0;1;32m                      
[0m[1mfts.c:773:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  773 |       return true;[0m
      | [0;1;32m      ^          
[0m      | [0;32m      {          ;} 
[0m[1mfts.c:789:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  789 |       FALLTHROUGH;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1m./attribute.h:150:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  150 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../../config.h:2782:36: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2782 | # define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                   ^
[0m[1mfts.c:793:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  793 |       FALLTHROUGH;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1m./attribute.h:150:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  150 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../../config.h:2782:36: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2782 | # define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                   ^
[0m[1mfts.c:797:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  797 |       FALLTHROUGH;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1m./attribute.h:150:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  150 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../../config.h:2782:36: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2782 | # define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                   ^
[0m[1mfts.c:803:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  803 |       FALLTHROUGH;[0m
      | [0;1;32m      ^           
[0m      | [0;32m      {           ;} 
[0m[1m./attribute.h:150:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  150 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../../config.h:2782:36: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2782 | # define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                   ^
[0m[1mfts.c:807:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  807 |       return NO_LEAF_OPTIMIZATION;[0m
      | [0;1;32m      ^                          
[0m      | [0;32m      {                          ;} 
[0m[1mfts.c:810:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  810 |       return OK_LEAF_OPTIMIZATION;[0m
      | [0;1;32m      ^                          
[0m      | [0;32m      {                          ;} 
[0m[1mfts.c:844:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  844 |         if (sp->fts_cur == NULL || ISSET(FTS_STOP))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  845 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:875:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  875 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  876 |                                 p->fts_flags |= FTS_SYMFOLLOW;[0m
      | [0;1;32m                                                              
[0m[1mfts.c:886:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  886 |                         if (p->fts_flags & FTS_SYMFOLLOW)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  887 |                                 (void)close(p->fts_symfd);[0m
      | [0;1;32m                                                          
[0m[1mfts.c:921:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |                                      p = p->fts_link)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  922 |                                         p->fts_accpath =[0m
  923 |                                             p->fts_parent->fts_accpath;[0m
      | [0;1;32m                                                                       
[0m[1mfts.c:926:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  926 |                         if (ISSET(FTS_STOP))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  927 |                                 return (NULL);[0m
      | [0;1;32m                                              
[0m[1mfts.c:931:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  931 |                         if (p->fts_errno && p->fts_info != FTS_DNR)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  932 |                                 p->fts_info = FTS_ERR;[0m
      | [0;1;32m                                                      
[0m[1mfts.c:955:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  955 |                 if (ISSET(FTS_STOP))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  956 |                   return NULL;[0m
      | [0;1;32m                              
[0m[1mfts.c:989:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  989 |                 if (p->fts_instr == FTS_SKIP)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  990 |                         goto next;[0m
      | [0;1;32m                                  
[0m[1mfts.c:997:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  997 |                                 } else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  998 |                                         p->fts_flags |= FTS_SYMFOLLOW;[0m
      | [0;1;32m                                                                      
[0m[1mfts.c:1005:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1005 |                 memmove(t, p->fts_name, p->fts_namelen + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfts.c:1005:17: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1005 |                 memmove(t, p->fts_name, p->fts_namelen + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfts.c:1010:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1010 |                     if (p->fts_statp->st_size == FTS_STAT_REQUIRED)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1011 |                       p->fts_info = fts_stat(sp, p, false);[0m
 1012 |                     else[0m
      | [0;32m                    } 
[0m[1mfts.c:1012:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1012 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1013 |                       fts_assert (p->fts_statp->st_size == FTS_NO_STAT_REQUIRED);[0m
      | [0;1;32m                                                                                 
[0m[1mfts.c:1021:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |                     if (p->fts_level == FTS_ROOTLEVEL)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1022 |                       sp->fts_dev = p->fts_statp->st_dev;[0m
      | [0;1;32m                                                         
[0m[1mfts.c:1082:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1082 |                 if (p->fts_errno == 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1083 |                         LEAVE_DIR (sp, p, "3");[0m
      | [0;1;32m                                               
[0m[1mfts.c:1128:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1128 |         if (ISSET(FTS_STOP))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1129 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:1132:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1132 |         if (p->fts_info == FTS_INIT)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1133 |                 return (p->fts_link);[0m
      | [0;1;32m                                     
[0m[1mfts.c:1140:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1140 |         if (p->fts_info != FTS_D /* && p->fts_info != FTS_DNR */)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1141 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:1144:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1144 |         if (sp->fts_child != NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1145 |                 fts_lfree(sp->fts_child);[0m
      | [0;1;32m                                         
[0m[1mfts.c:1150:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1150 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1151 |                 instr = BCHILD;[0m
      | [0;1;32m                               
[0m[1mfts.c:1161:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1161 |             ISSET(FTS_NOCHDIR))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1162 |                 return (sp->fts_child = fts_build(sp, instr));[0m
      | [0;1;32m                                                              
[0m[1mfts.c:1164:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1164 |         if ((fd = diropen (sp, ".")) < 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1165 |                 return (sp->fts_child = NULL);[0m
      | [0;1;32m                                              
[0m[1mfts.c:1205:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1205 |       type = S_IFBLK;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1206 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1208:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1208 |       type = S_IFCHR;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1209 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1211:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1211 |       type = S_IFDIR;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1212 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1214:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1214 |       type = S_IFIFO;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1215 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1217:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1217 |       type = S_IFLNK;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1218 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1220:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1220 |       type = S_IFREG;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1221 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1223:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1223 |       type = S_IFSOCK;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1224 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mfts.c:1226:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1226 |       type = 0;[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mfts.c:1317:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1317 |             if (cur->fts_info == FTS_NSOK)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1318 |               cur->fts_info = fts_stat(sp, cur, false);[0m
 1319 |             else if (sp->fts_options & FTS_TIGHT_CYCLE_CHECK)[0m
      | [0;32m            } 
[0m[1mfts.c:1378:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1378 |                 if (ISSET(FTS_CWDFD))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1379 |                   dir_fd = fcntl (dir_fd, F_DUPFD_CLOEXEC, STDERR_FILENO + 1);[0m
      | [0;1;32m                                                                              
[0m[1mfts.c:1381:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1381 |                         if (descend && type == BREAD)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1382 |                                 cur->fts_errno = errno;[0m
      | [0;1;32m                                                       
[0m[1mfts.c:1386:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1386 |                         if (ISSET(FTS_CWDFD) && 0 <= dir_fd)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1387 |                                 close (dir_fd);[0m
      | [0;1;32m                                               
[0m[1mfts.c:1389:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1389 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1390 |                         descend = true;[0m
      | [0;1;32m                                       
[0m[1mfts.c:1436:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1436 |                 if (!ISSET(FTS_SEEDOT) && ISDOT(dp->d_name))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1437 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mfts.c:1441:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1441 |                 if (!p)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1442 |                         goto mem1;[0m
      | [0;1;32m                                  
[0m[1mfts.c:1464:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1464 |                                 if (ISSET(FTS_NOCHDIR))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1465 |                                         cp = sp->fts_path + len;[0m
      | [0;1;32m                                                                
[0m[1mfts.c:1497:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1497 |                         memmove(cp, p->fts_name, p->fts_namelen + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfts.c:1497:25: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1497 |                         memmove(cp, p->fts_name, p->fts_namelen + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfts.c:1498:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1498 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1499 |                         p->fts_accpath = p->fts_name;[0m
      | [0;1;32m                                                     
[0m[1mfts.c:1530:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1530 |                 if (head == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1531 |                         head = tail = p;[0m
 1532 |                 else {[0m
      | [0;32m                } 
[0m[1mfts.c:1546:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1546 |                     && !sp->fts_compar)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1547 |                   sort_by_inode = dirent_inode_sort_may_be_useful (cur, dir_fd);[0m
      | [0;1;32m                                                                                
[0m[1mfts.c:1558:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1558 |         if (cur->fts_dirp)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1559 |                 closedir_and_clear(cur->fts_dirp);[0m
      | [0;1;32m                                                  
[0m[1mfts.c:1567:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1567 |         if (doadjust)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1568 |                 fts_padjust(sp, head);[0m
      | [0;1;32m                                      
[0m[1mfts.c:1575:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1575 |                 if (len == sp->fts_pathlen || nitems == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1576 |                         --cp;[0m
      | [0;1;32m                             
[0m[1mfts.c:1600:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1600 |                     && cur->fts_info != FTS_DNR && cur->fts_info != FTS_ERR)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1601 |                         cur->fts_info = FTS_DP;[0m
      | [0;1;32m                                               
[0m[1mfts.c:1613:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1613 |         if (sp->fts_compar && nitems > 1)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1614 |                 head = fts_sort(sp, head, nitems);[0m
      | [0;1;32m                                                  
[0m[1mfts.c:1769:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1769 |         if (p->fts_level == FTS_ROOTLEVEL && ISSET(FTS_COMFOLLOW))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1770 |                 follow = true;[0m
      | [0;1;32m                              
[0m[1mfts.c:1790:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1790 | err:            memset(sbp, 0, sizeof(struct stat));[0m
      | [0;1;32m                ^~~~~~
[0m[1mfts.c:1790:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1790 | err:            memset(sbp, 0, sizeof(struct stat));[0m
      | [0;1;32m                ^~~~~~
[0m[1mfts.c:1802:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1802 |         if (S_ISLNK(sbp->st_mode))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1803 |                 return (FTS_SL);[0m
      | [0;1;32m                                
[0m[1mfts.c:1804:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1804 |         if (S_ISREG(sbp->st_mode))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1805 |                 return (FTS_F);[0m
      | [0;1;32m                               
[0m[1mfts.c:1863:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1863 |         for (ap = sp->fts_array, p = head; p; p = p->fts_link)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1864 |                 *ap++ = p;[0m
      | [0;1;32m                          
[0m[1mfts.c:1866:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1866 |         for (head = *(ap = sp->fts_array); --nitems; ++ap)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1867 |                 ap[0]->fts_link = ap[1];[0m
      | [0;1;32m                                        
[0m[1mfts.c:1884:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1884 |         if ((p = malloc(len)) == NULL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1885 |                 return (NULL);[0m
      | [0;1;32m                              
[0m[1mfts.c:1888:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1888 |         memcpy(p->fts_name, name, namelen);[0m
      | [0;1;32m        ^~~~~~
[0m[1mfts.c:1888:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1888 |         memcpy(p->fts_name, name, namelen);[0m
      | [0;1;32m        ^~~~~~
[0m[1mfts.c:1912:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1912 |                 if (p->fts_dirp)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1913 |                         closedir (p->fts_dirp);[0m
      | [0;1;32m                                               
[0m[1mfts.c:1971:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1971 |         for (p = sp->fts_child; p; p = p->fts_link)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1972 |                 ADJUST(p);[0m
      | [0;1;32m                          
[0m[1mfts.c:1987:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1987 |         for (max = 0; *argv; ++argv)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1988 |                 if ((len = strlen(*argv)) > max)[0m
 1989 |                         max = len;[0m
      | [0;1;32m                                  
[0m[1mfts.c:1988:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1988 |                 if ((len = strlen(*argv)) > max)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1989 |                         max = len;[0m
      | [0;1;32m                                  
[0m[1mfts.c:2016:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2016 |             if (ISSET (FTS_CWDFD) && 0 <= fd)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2017 |               close (fd);[0m
      | [0;1;32m                         
[0m[1mfts.c:2042:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2042 |         if (fd < 0 && (newfd = diropen (sp, dir)) < 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2043 |           return -1;[0m
      | [0;1;32m                    
[0m106 warnings generated.
Suppressed 10 warnings (10 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
