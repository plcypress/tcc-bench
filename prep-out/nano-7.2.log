Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/nano-7.2
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 70 files out of 70 in compilation database ...
[ 1/70][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp0jeejd33.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/dup-safer-flag.c
[ 2/70][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpmpswakc1.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/timespec.c
[ 3/70][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpsdd1s146.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/stat-time.c
[ 4/70][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpq57kehx6.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/gettime.c
[ 5/70][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpkijuu3j1.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/getprogname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 6/70][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpccjhfyt7.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/malloc/dynarray_emplace_enlarge.c
[1mmalloc/dynarray_emplace_enlarge.c:38:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |       if (element_size < 4)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   39 |         new_allocated = 16;[0m
   40 |       else if (element_size < 8)[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:40:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       else if (element_size < 8)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   41 |         new_allocated = 8;[0m
   42 |       else[0m
      | [0;32m      } 
[0m[1mmalloc/dynarray_emplace_enlarge.c:42:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   43 |         new_allocated = 4;[0m
      | [0;1;32m                          
[0m[1mmalloc/dynarray_emplace_enlarge.c:59:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   if (INT_MULTIPLY_WRAPV (new_allocated, element_size, &new_size))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   60 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_emplace_enlarge.c:66:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:67:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   67 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_emplace_enlarge.c:69:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   70 |     new_array = realloc (list->array, new_size);[0m
      | [0;1;32m                                                
[0m[1mmalloc/dynarray_emplace_enlarge.c:71:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   72 |     return false;[0m
      | [0;1;32m                 
[0m10 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 7/70][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp7byyqq9f.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/malloc/dynarray_resize.c
[1mmalloc/dynarray_resize.c:56:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (new_array != NULL && list->array != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m                                                                   
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:57:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   57 |         memcpy (new_array, list->array, list->used * element_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_resize.c:59:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   60 |     new_array = realloc (list->array, new_size_bytes);[0m
      | [0;1;32m                                                      
[0m[1mmalloc/dynarray_resize.c:61:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |   if (new_array == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   62 |     return false;[0m
      | [0;1;32m                 
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 8/70][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp67lw49p3.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/exitfail.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 9/70][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpwmqtazzw.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/basename-lgpl.c
[1mbasename-lgpl.c:35:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   while (ISSLASH (*base))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   36 |     base++;[0m
      | [0;1;32m           
[0m[1mbasename-lgpl.c:40:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       if (ISSLASH (*p))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   41 |         last_was_slash = true;[0m
   42 |       else if (last_was_slash)[0m
      | [0;32m      } 
[0m[1mbasename-lgpl.c:58:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |   for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   59 |     continue;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:62:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       && ISSLASH (name[0]) && ISSLASH (name[1]) && ! name[2])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   63 |     return 2;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:66:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       && len == prefix_len && ISSLASH (name[prefix_len]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   67 |     return prefix_len + 1;[0m
      | [0;1;32m                          
[0m5 warnings generated.

[10/70][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpf89dpph4.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/openat-die.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[11/70][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpjhsmjyd6.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/localcharset.c
[1mlocalcharset.c:911:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |   if (codeset == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  912 |     /* The canonical name cannot be determined.  */[0m
  913 |     codeset = "";[0m
      | [0;1;32m                 
[0m[1mlocalcharset.c:1070:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |         if (codeset[0] == '\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1071 |           codeset = "ASCII";[0m
      | [0;1;32m                            
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[12/70][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp43wnp99l.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/hard-locale.c
[1mhard-locale.c:31:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (setlocale_null_r (category, locale, sizeof (locale)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   32 |     return false;[0m
      | [0;1;32m                 
[0m1 warning generated.

[13/70][0.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpy8cr_xdd.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/malloca.c
[1mmalloca.c:63:37: [0m[0;1;35mwarning: [0m[1mThe left operand of '&' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m[1mmalloca.c:53:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m1 is not equal to 0[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m9223372036854775807 is < -1[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^~~~~~~~~~~
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m'?' condition is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:8: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   33 |        < (n)))[0m
      | [0;1;32m       ~~~~~
[0m[1mmalloca.c:53:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m  ^
[0m[1mmalloca.c:57:11: [0m[0;1;36mnote: [0mAssuming 'mem' is not equal to NULL[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mmalloca.c:57:7: [0m[0;1;36mnote: [0mTaking true branch[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:59:44: [0m[0;1;36mnote: [0m'umemplus' declared without an initial value[0m
   59 |           uintptr_t umem = (uintptr_t)mem, umemplus;[0m
      | [0;1;32m                                           ^~~~~~~~
[0m[1mmalloca.c:62:11: [0m[0;1;36mnote: [0mAssuming overflow[0m
   62 |           ckd_add (&umemplus, umem, sizeof (small_t) + sa_alignment_max - 1);[0m
      | [0;1;32m          ^
[0m[1m/home/C00536225/dev/tcc/build/lib/clang/21/include/stdckdint.h:37:26: [0m[0;1;36mnote: [0mexpanded from macro 'ckd_add'[0m
   37 | #define ckd_add(R, A, B) __builtin_add_overflow((A), (B), (R))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:63:37: [0m[0;1;36mnote: [0mThe left operand of '&' is a garbage value[0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[14/70][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpo9zf8is3.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/unistd.c
[15/70][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpo9tkio6k.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/glthread/lock.c
[1mglthread/lock.c:269:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  270 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:277:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |   if (err == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  278 |     err = pthread_rwlock_init(lock, &attributes);[0m
      | [0;1;32m                                                 
[0m[1mglthread/lock.c:539:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  539 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  540 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:554:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |   if (err != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  555 |     return err;[0m
      | [0;1;32m               
[0m[1mglthread/lock.c:717:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  718 |     return 0;[0m
      | [0;1;32m             
[0m[1mglthread/lock.c:732:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |       if (glthread_once_singlethreaded (once_control))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  733 |         init_function ();[0m
      | [0;1;32m                         
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[16/70][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp6ls7afe9.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/malloc/dynarray_at_failure.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[17/70][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp67056hpd.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/pipe-safer.c
[18/70][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp61uitqo3.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/mbrtowc.c
[1mmbrtowc.c:97:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |   if (! pwc)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   98 |     pwc = &wc;[0m
      | [0;1;32m              
[0m1 warning generated.

[19/70][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpwlc8b3ub.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/malloc/scratch_buffer_grow_preserve.c
[1mmalloc/scratch_buffer_grow_preserve.c:38:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |       if (new_ptr == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   39 |         return false;[0m
      | [0;1;32m                     
[0m[1mmalloc/scratch_buffer_grow_preserve.c:40:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   40 |       memcpy (new_ptr, buffer->__space.__c, buffer->length);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmalloc/scratch_buffer_grow_preserve.c:40:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   40 |       memcpy (new_ptr, buffer->__space.__c, buffer->length);[0m
      | [0;1;32m      ^~~~~~
[0m[1mmalloc/scratch_buffer_grow_preserve.c:45:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |       if (__glibc_likely (new_length >= buffer->length))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m   46 |         new_ptr = realloc (buffer->data, new_length);[0m
   47 |       else[0m
      | [0;32m      } 
[0m6 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[20/70][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmph4afnm72.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/uniwidth/width.c
[1muniwidth/width.c:64:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       if (ind >= 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   65 |         if ((nonspacing_table_data[64*ind + ((uc >> 3) & 63)] >> (uc & 7)) & 1)[0m
   66 |           {[0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
   68 |               return -1;[0m
   69 |             else[0m
   70 |               return 0;[0m
   71 |           }[0m
      | [0;1;32m           
[0m[1muniwidth/width.c:67:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |             if (uc > 0 && uc < 0xa0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   68 |               return -1;[0m
   69 |             else[0m
      | [0;32m            } 
[0m[1muniwidth/width.c:69:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m   70 |               return 0;[0m
      | [0;1;32m                       
[0m[1muniwidth/width.c:77:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |           if (uc <= 0xe01ef)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   78 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:82:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |           if (uc >= 0xe0020 ? uc <= 0xe007f : uc == 0xe0001)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m   83 |             return 0;[0m
      | [0;1;32m                     
[0m[1muniwidth/width.c:87:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   if (bitmap_lookup (&u_width2, uc))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   88 |     return 2;[0m
      | [0;1;32m             
[0m[1muniwidth/width.c:92:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |       && is_cjk_encoding (encoding))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   93 |     return 2;[0m
      | [0;1;32m             
[0m35 warnings generated.
Suppressed 28 warnings (28 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[21/70][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpoqx0n1qv.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/xsize.c
[22/70][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpqwsxhev1.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/glthread/threadlib.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[23/70][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpe85b73k8.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/setlocale_null.c
[1msetlocale_null.c:145:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       if (bufsize > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  146 |         /* Return an empty string in BUF.[0m
  147 |            This is a convenience for callers that don't want to write explicit[0m
  148 |            code for handling EINVAL.  */[0m
  149 |         buf[0] = '\0';[0m
      | [0;1;32m                      
[0m[1msetlocale_null.c:157:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:157:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[24/70][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpuh05d8gd.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/fd-hook.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[25/70][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpqfj_m1_p.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/malloc/scratch_buffer_grow.c
[1mmalloc/scratch_buffer_grow.c:36:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   if (__glibc_likely (new_length >= buffer->length))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   37 |     new_ptr = malloc (new_length);[0m
   38 |   else[0m
      | [0;32m  } 
[0m4 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[26/70][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpvkfaep42.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/dirname-lgpl.c
[1mdirname-lgpl.c:49:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |        prefix_length < length; length--)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   50 |     if (! ISSLASH (file[length - 1]))[0m
   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:50:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |     if (! ISSLASH (file[length - 1]))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:79:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |   if (!dir)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   80 |     return NULL;[0m
      | [0;1;32m                
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:82:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |   if (append_dot)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   83 |     dir[length++] = '.';[0m
      | [0;1;32m                        
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[27/70][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp1ejmfm_v.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/sig-handler.c
[28/70][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpgxx7o89o.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/malloc/dynarray_resize_clear.c
[1mmalloc/dynarray_resize_clear.c:31:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (!__libc_dynarray_resize (list, size, scratch, element_size))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m   32 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m[1mmalloc/dynarray_resize_clear.c:35:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   35 |   memset (array + (old_size * element_size), 0,[0m
      | [0;1;32m  ^~~~~~
[0m2 warnings generated.

[29/70][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp4bcrg_tc.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/malloc/scratch_buffer_set_array_size.c
[1mmalloc/scratch_buffer_set_array_size.c:45:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   45 |   if (new_length <= buffer->length)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   46 |     return true;[0m
      | [0;1;32m                
[0m4 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[30/70][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp_rq8xvxv.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/stripslash.c
[1mstripslash.c:39:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (! *base)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   40 |     base = file;[0m
      | [0;1;32m                
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[31/70][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpnh36ny7j.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/fcntl.c
[1mfcntl.c:329:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  329 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:426:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  426 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:430:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  430 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  431 |               void *p = va_arg (arg, void *);[0m
  432 |               result = fcntl (fd, action, p);[0m
  433 |             }[0m
  434 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mfcntl.c:524:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |           if (result >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  525 |             have_dupfd_cloexec = -1;[0m
      | [0;1;32m                                    
[0m[1mfcntl.c:528:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  529 | # endif[0m
  530 |     result = rpl_fcntl_DUPFD (fd, target);[0m
      | [0;1;32m                                          
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[32/70][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpmpzyl46w.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/fd-safer-flag.c
[33/70][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp429tm53h.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/strnlen1.c
[1mstrnlen1.c:31:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (end != NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   32 |     return end - string + 1;[0m
   33 |   else[0m
      | [0;32m  } 
[0m[1mstrnlen1.c:33:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   34 |     return maxlen;[0m
      | [0;1;32m                  
[0m2 warnings generated.

[34/70][2.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmps_oob7ug.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/filenamecat-lgpl.c
[1mfilenamecat-lgpl.c:58:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |       if (! ISSLASH (dir[dirlen - 1]) && ! ISSLASH (*base))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   59 |         sep = '/';[0m
      | [0;1;32m                  
[0m[1mfilenamecat-lgpl.c:72:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |   if (p_concat == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   73 |     return NULL;[0m
      | [0;1;32m                
[0m[1mfilenamecat-lgpl.c:82:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |     if (base_in_result)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   83 |       *base_in_result = p;[0m
      | [0;1;32m                          
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[35/70][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp7bxrh53w.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/openat-proc.c
[1mopenat-proc.c:79:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |         if (proc_self_fd < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   80 |           proc_status = -1;[0m
   81 |         else[0m
      | [0;32m        } 
[0m[1mopenat-proc.c:89:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   89 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:89:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   89 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:95:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |     if (proc_status < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   96 |       return NULL;[0m
   97 |     else[0m
      | [0;32m    } 
[0m[1mopenat-proc.c:103:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |             if (! result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  104 |               return NULL;[0m
      | [0;1;32m                          
[0m[1mopenat-proc.c:107:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  107 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:107:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  107 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:133:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  133 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mopenat-proc.c:133:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  133 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[36/70][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp404l1fjf.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/malloc/dynarray_finalize.c
[1mmalloc/dynarray_finalize.c:32:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (__dynarray_error (list))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   33 |     /* The caller will reported the deferred error.  */[0m
   34 |     return false;[0m
      | [0;1;32m                 
[0m[1mmalloc/dynarray_finalize.c:43:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   43 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   44 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:54:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |       if (list->array != NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m                                                          
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:55:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   55 |         memcpy (heap_array, list->array, allocation_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mmalloc/dynarray_finalize.c:56:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |       if (list->array != scratch)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   57 |         free (list->array);[0m
      | [0;1;32m                           
[0m[1mmalloc/dynarray_finalize.c:62:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   63 |     /* The caller will perform the freeing operation.  */[0m
   64 |     return false;[0m
      | [0;1;32m                 
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[37/70][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpot_513jx.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/cloexec.c
[1mcloexec.c:50:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |           || fcntl (desc, F_SETFD, newflags) != -1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   51 |         return 0;[0m
      | [0;1;32m                 
[0m1 warning generated.

[38/70][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp9m4cuif1.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/wctype-h.c
[39/70][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp3x7pguq2.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/dup-safer.c
[40/70][3.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp53nu78wh.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/chdir-long.c
[1mchdir-long.c:76:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   76 |   if (new_fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   77 |     return -1;[0m
      | [0;1;32m              
[0m[1mchdir-long.c:112:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   if (e == 0 || errno != ENAMETOOLONG)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  113 |     return e;[0m
      | [0;1;32m             
[0m[1mchdir-long.c:150:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  151 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:156:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |         if (cdb_advance_fd (&cdb, "/") != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  157 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:181:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  182 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:189:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |         if (cdb_advance_fd (&cdb, dir) != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  190 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:193:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |     if (cdb_fchdir (&cdb) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  194 |       goto Fail;[0m
      | [0;1;32m                
[0m9 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[41/70][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpbi68fwmq.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/save-cwd.c
[1msave-cwd.c:66:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   67 |     cwd->desc = fd_safer_flag (cwd->desc, O_CLOEXEC);[0m
      | [0;1;32m                                                     
[0m[1msave-cwd.c:70:19: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'getcwd' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   70 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:66:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   66 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:68:7: [0m[0;1;36mnote: [0mAssuming field 'desc' is < 0[0m
   68 |   if (cwd->desc < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1msave-cwd.c:68:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   68 |   if (cwd->desc < 0)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:70:19: [0m[0;1;36mnote: [0mThe 1st argument to 'getcwd' is NULL but should not be NULL[0m
   70 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:84:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |   if (0 <= cwd->desc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   85 |     return fchdir (cwd->desc);[0m
   86 |   else[0m
      | [0;32m  } 
[0m[1msave-cwd.c:86:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   87 |     return chdir_long (cwd->name);[0m
      | [0;1;32m                                  
[0m[1msave-cwd.c:93:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |   if (cwd->desc >= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   94 |     close (cwd->desc);[0m
      | [0;1;32m                      
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[42/70][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp1mvbz_d8.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/asnprintf.c
[43/70][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp4c59vh26.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/glob_pattern_p.c
6 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[44/70][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpcnxr6aph.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/fd-safer.c
[45/70][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpf0ioplcu.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/printf-frexp.c
[46/70][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpkx_vurnt.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/globfree.c
[1mglobfree.c:33:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |       for (i = 0; i < pglob->gl_pathc; ++i)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m   34 |         free (pglob->gl_pathv[pglob->gl_offs + i]);[0m
      | [0;1;32m                                                   
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[47/70][2.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp3tbm2prl.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/math.c
[48/70][6.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp93cuwp5v.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/printf-args.c
[1mprintf-args.c:41:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m[1mprintf-args.c:45:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   45 |         ap->a.a_schar = va_arg (args, /*signed char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   46 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:48:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   48 |         ap->a.a_uchar = va_arg (args, /*unsigned char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   49 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:51:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   51 |         ap->a.a_short = va_arg (args, /*short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   52 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:54:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |         ap->a.a_ushort = va_arg (args, /*unsigned short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   55 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:57:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   57 |         ap->a.a_int = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   58 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:60:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |         ap->a.a_uint = va_arg (args, unsigned int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   61 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:63:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |         ap->a.a_longint = va_arg (args, long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   64 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:66:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   66 |         ap->a.a_ulongint = va_arg (args, unsigned long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   67 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:69:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |         ap->a.a_longlongint = va_arg (args, long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   70 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:72:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   73 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:75:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   75 |         ap->a.a_double = va_arg (args, double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   76 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:78:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   78 |         ap->a.a_longdouble = va_arg (args, long double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   79 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:81:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   81 |         ap->a.a_char = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   82 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:88:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   88 |         ap->a.a_wide_char =[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   89 |           (sizeof (wint_t) < sizeof (int)[0m
   90 |            ? (wint_t) va_arg (args, int)[0m
   91 |            : va_arg (args, wint_t));[0m
   92 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:95:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   95 |         ap->a.a_string = va_arg (args, const char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   96 |         /* A null pointer is an invalid argument for "%s", but in practice[0m
   97 |            it occurs quite frequently in printf statements that produce[0m
   98 |            debug output.  Use a fallback in this case.  */[0m
   99 |         if (ap->a.a_string == NULL)[0m
  100 |           ap->a.a_string = "(NULL)";[0m
  101 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:99:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |         if (ap->a.a_string == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  100 |           ap->a.a_string = "(NULL)";[0m
      | [0;1;32m                                    
[0m[1mprintf-args.c:104:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  104 |         ap->a.a_wide_string = va_arg (args, const wchar_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  105 |         /* A null pointer is an invalid argument for "%ls", but in practice[0m
  106 |            it occurs quite frequently in printf statements that produce[0m
  107 |            debug output.  Use a fallback in this case.  */[0m
  108 |         if (ap->a.a_wide_string == NULL)[0m
  109 |           {[0m
  110 |             static const wchar_t wide_null_string[] =[0m
  111 |               {[0m
  112 |                 (wchar_t)'(',[0m
  113 |                 (wchar_t)'N', (wchar_t)'U', (wchar_t)'L', (wchar_t)'L',[0m
  114 |                 (wchar_t)')',[0m
  115 |                 (wchar_t)0[0m
  116 |               };[0m
  117 |             ap->a.a_wide_string = wide_null_string;[0m
  118 |           }[0m
  119 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:122:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  122 |         ap->a.a_pointer = va_arg (args, void *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  123 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:125:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |         ap->a.a_count_schar_pointer = va_arg (args, signed char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  126 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:128:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  128 |         ap->a.a_count_short_pointer = va_arg (args, short *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  129 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:131:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  131 |         ap->a.a_count_int_pointer = va_arg (args, int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  132 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:134:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |         ap->a.a_count_longint_pointer = va_arg (args, long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  135 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:137:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  137 |         ap->a.a_count_longlongint_pointer = va_arg (args, long long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  138 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:180:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  180 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m25 warnings generated.

[49/70][3.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmprloi1ka7.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/printf-frexpl.c
[50/70][3.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpadd179uv.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/tempname.c
[1mtempname.c:96:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (__getrandom (r, sizeof *r, GRND_NONBLOCK) == sizeof *r)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   97 |     return true;[0m
      | [0;1;32m                
[0m[1mtempname.c:145:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |   if (__lstat64_time64 (tmpl, &st) == 0 || errno == EOVERFLOW)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  146 |     __set_errno (EEXIST);[0m
      | [0;1;32m                         
[0m[1mtempname.c:246:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |               while (random_bits (&v, v) && biased_min <= v)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  247 |                 continue;[0m
      | [0;1;32m                         
[0m[1mtempname.c:264:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |       else if (errno != EEXIST)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  265 |         return -1;[0m
      | [0;1;32m                  
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[51/70][8.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpfvoqeeca.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/utils.c
[1mutils.c:44:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |                         if (userage != NULL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   45 |                                 homenv = userage->pw_dir;[0m
      | [0;1;32m                                                         
[0m[1mutils.c:51:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |                 if (homenv != NULL && *homenv != '\0')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m   52 |                         homedir = copy_of(homenv);[0m
      | [0;1;32m                                                  
[0m[1mutils.c:61:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |         if (slash == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   62 |                 return path;[0m
   63 |         else[0m
      | [0;32m        } 
[0m[1mutils.c:63:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   64 |                 return slash + 1;[0m
      | [0;1;32m                                 
[0m[1mutils.c:73:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   73 |         strcpy(joined, path);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:73:2: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   73 |         strcpy(joined, path);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:74:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   74 |         strcpy(joined + pathlen, name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:74:2: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   74 |         strcpy(joined + pathlen, name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:84:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |                         if (n < 100)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   85 |                                 return 2;[0m
   86 |                         else[0m
      | [0;32m                        } 
[0m[1mutils.c:86:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   87 |                                 return 3;[0m
      | [0;1;32m                                         
[0m[1mutils.c:89:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |                         if (n < 10000)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   90 |                                 return 4;[0m
   91 |                         else[0m
      | [0;32m                        } 
[0m[1mutils.c:91:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   92 |                                 return 5;[0m
      | [0;1;32m                                         
[0m[1mutils.c:96:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |                         if (n < 1000000)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   97 |                                 return 6;[0m
   98 |                         else[0m
      | [0;32m                        } 
[0m[1mutils.c:98:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   99 |                                 return 7;[0m
      | [0;1;32m                                         
[0m[1mutils.c:101:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |                         if (n < 100000000)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  102 |                                 return 8;[0m
  103 |                         else[0m
      | [0;32m                        } 
[0m[1mutils.c:103:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  104 |                                 return 9;[0m
      | [0;1;32m                                         
[0m[1mutils.c:121:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |         if (errno == ERANGE || *string == '\0' || *excess != '\0')[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  122 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mutils.c:137:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |         while (*str == ' ')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  138 |                 str++;[0m
      | [0;1;32m                      
[0m[1mutils.c:142:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |         if (comma == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  143 |                 return parse_num(str, line);[0m
      | [0;1;32m                                            
[0m[1mutils.c:147:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |         if (comma == str)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  148 |                 return retval;[0m
      | [0;1;32m                              
[0m[1mutils.c:164:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |                 if (*string == '\0')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  165 |                         *string = '\n';[0m
      | [0;1;32m                                       
[0m[1mutils.c:178:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  178 |                 if (*string == '\n')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  179 |                         *string = '\0';[0m
      | [0;1;32m                                       
[0m[1mutils.c:190:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |         if (array == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  191 |                 return;[0m
      | [0;1;32m                       
[0m[1mutils.c:193:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |         while (len > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  194 |                 free(array[--len]);[0m
      | [0;1;32m                                   
[0m[1mutils.c:230:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |                         if (regexec(&search_regexp, haystack, 1, regmatches, 0) != 0)[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m  231 |                                 return NULL;[0m
      | [0;1;32m                                            
[0m[1mutils.c:238:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |                         if (last_find > ceiling)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  239 |                                 return NULL;[0m
      | [0;1;32m                                            
[0m[1mutils.c:247:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                                 if (last_find == ceiling)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  248 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mutils.c:253:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |                                                                                 REG_STARTEND) != 0)[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m  254 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mutils.c:261:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  261 |                                                                                 REG_STARTEND) != 0)[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m  262 |                                 return NULL;[0m
      | [0;1;32m                                            
[0m[1mutils.c:271:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |                                                                                 REG_STARTEND) != 0)[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m  272 |                         return NULL;[0m
  273 |                 else[0m
      | [0;32m                } 
[0m[1mutils.c:273:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  274 |                         return haystack + regmatches[0].rm_so;[0m
      | [0;1;32m                                                              
[0m[1mutils.c:278:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |                 if (ISSET(BACKWARDS_SEARCH))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  279 |                         return revstrstr(haystack, needle, start);[0m
  280 |                 else[0m
      | [0;32m                } 
[0m[1mutils.c:280:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  281 |                         return strstr(start, needle);[0m
      | [0;1;32m                                                     
[0m[1mutils.c:284:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  284 |         if (ISSET(BACKWARDS_SEARCH))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  285 |                 return mbrevstrcasestr(haystack, needle, start);[0m
  286 |         else[0m
      | [0;32m        } 
[0m[1mutils.c:286:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  287 |                 return mbstrcasestr(start, needle);[0m
      | [0;1;32m                                                   
[0m[1mutils.c:295:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |         if (section == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  296 |                 die(_("Nano is out of memory!\n"));[0m
      | [0;1;32m                                                   
[0m[1mutils.c:306:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |         if (section == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  307 |                 die(_("Nano is out of memory!\n"));[0m
      | [0;1;32m                                                   
[0m[1mutils.c:319:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  319 |         strncpy(dest, src, count);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mutils.c:319:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  319 |         strncpy(dest, src, count);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mutils.c:330:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  330 |         memcpy(thecopy, string, count);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:330:2: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  330 |         memcpy(thecopy, string, count);[0m
      | [0;1;32m        ^~~~~~
[0m[1mutils.c:354:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |         if (column == 0 || column + 2 < editwincols || ISSET(SOFTWRAP))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  355 |                 return 0;[0m
  356 |         else if (editwincols > 8)[0m
      | [0;32m        } 
[0m[1mutils.c:356:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |         else if (editwincols > 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  357 |                 return column - 6 - (column - 6) % (editwincols - 8);[0m
  358 |         else[0m
      | [0;32m        } 
[0m[1mutils.c:358:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  359 |                 return column - (editwincols - 2);[0m
      | [0;1;32m                                                  
[0m[1mutils.c:381:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |                 if (width > column)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  382 |                         break;[0m
      | [0;1;32m                              
[0m[1mutils.c:396:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |         if (maxlen == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  397 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mutils.c:402:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |                 if (maxlen <= charlen)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  403 |                         break;[0m
      | [0;1;32m                              
[0m[1mutils.c:417:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  417 |         while (*text != '\0')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  418 |                 text += advance_over(text, &span);[0m
      | [0;1;32m                                                  
[0m[1mutils.c:486:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |                 if (bot_x == 0 && *bot != *top && !also_the_last)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  487 |                         *bot = (*bot)->prev;[0m
  488 |                 else[0m
      | [0;32m                } 
[0m[1mutils.c:488:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  489 |                         also_the_last = TRUE;[0m
      | [0;1;32m                                             
[0m[1mutils.c:500:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |         if (line->lineno > number)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  501 |                 while (line->lineno != number)[0m
  502 |                         line = line->prev;[0m
  503 |         else[0m
      | [0;32m        } 
[0m[1mutils.c:501:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |                 while (line->lineno != number)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  502 |                         line = line->prev;[0m
      | [0;1;32m                                          
[0m[1mutils.c:503:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  504 |                 while (line->lineno != number)[0m
  505 |                         line = line->next;[0m
      | [0;1;32m                                          
[0m[1mutils.c:504:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  504 |                 while (line->lineno != number)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  505 |                         line = line->next;[0m
      | [0;1;32m                                          
[0m[1mutils.c:518:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |         for (line = begin; line != end->next; line = line->next)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  519 |                 count += mbstrlen(line->data) + 1;[0m
      | [0;1;32m                                                  
[0m53 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[52/70][23.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp1ab1nepm.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/utimens.c
[1mutimens.c:114:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |       if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  115 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:122:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |       if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  123 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:139:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  139 |       && timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  140 |     return true;[0m
      | [0;1;32m                
[0m[1mutimens.c:148:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |   if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  149 |     timespec[0] = get_stat_atime (statbuf);[0m
  150 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:150:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  151 |     gettime (&timespec[0]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:153:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |   if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  154 |     timespec[1] = get_stat_mtime (statbuf);[0m
  155 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:155:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  156 |     gettime (&timespec[1]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:185:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  186 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:238:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |           if (fd < 0 ? stat (file, &st) : fstat (fd, &st))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  239 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:240:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  241 |             ts[0] = get_stat_atime (&st);[0m
  242 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:242:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  243 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:274:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  275 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:290:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  291 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:396:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |           && (fd < 0 ? stat (file, &st) : fstat (fd, &st)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  397 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:398:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  399 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:414:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  415 |       t = NULL;[0m
      | [0;1;32m               
[0m[1mutimens.c:474:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                     if (tt)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  475 |                       futimes (fd, tt);[0m
      | [0;1;32m                                       
[0m[1mutimens.c:544:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  544 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  545 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:571:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |           if (lstat (file, &st))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  572 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:573:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  573 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  574 |             ts[0] = get_stat_atime (&st);[0m
  575 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:575:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  576 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:590:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |       if (0 < result)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  591 |         errno = ENOSYS;[0m
      | [0;1;32m                       
[0m[1mutimens.c:609:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |       if (adjustment_needed != 3 && lstat (file, &st))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  610 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:611:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  611 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  612 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:640:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |   if (!(adjustment_needed || REPLACE_FUNC_STAT_FILE) && lstat (file, &st))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  641 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:642:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |   if (!S_ISLNK (st.st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  643 |     return fdutimens (-1, file, ts);[0m
      | [0;1;32m                                    
[0m26 warnings generated.

[53/70][30.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp25pkdm9n.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/move.c
[1mmove.c:86:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |                 if (shifted != NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   87 |                         *shifted = TRUE;[0m
      | [0;1;32m                                        
[0m[1mmove.c:90:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |         if (ISSET(SOFTWRAP))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   91 |                 *leftedge = leftedge_for(wideness(line->data, index), line);[0m
      | [0;1;32m                                                                            
[0m[1mmove.c:108:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |         if (shifted || *leftedge < was_edge)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  109 |                 openfile->current_x = proper_x(openfile->current, leftedge, forward,[0m
  110 |                                                 actual_last_column(*leftedge, target), &shifted);[0m
      | [0;1;32m                                                                                                 
[0m[1mmove.c:129:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  130 | #endif[0m
  131 |                 get_edge_and_target(&leftedge, &target_column);[0m
      | [0;1;32m                                                               
[0m[1mmove.c:161:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  162 | #endif[0m
  163 |                 get_edge_and_target(&leftedge, &target_column);[0m
      | [0;1;32m                                                               
[0m[1mmove.c:183:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  183 |         if ((*line)->prev != NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  184 |                 *line = (*line)->prev;[0m
      | [0;1;32m                                      
[0m[1mmove.c:186:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |         while (!begpar(*line, 0))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  187 |                 *line = (*line)->prev;[0m
      | [0;1;32m                                      
[0m[1mmove.c:187:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'prev' results in a dereference of a null pointer [clang-analyzer-core.NullDereference][0m
  187 |                 *line = (*line)->prev;[0m
      | [0;1;32m                        ^
[0m[1mmove.c:206:2: [0m[0;1;36mnote: [0mCalling 'do_para_begin'[0m
  206 |         do_para_begin(&openfile->current);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmove.c:183:6: [0m[0;1;36mnote: [0mAssuming pointer value is null[0m
  183 |         if ((*line)->prev != NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mmove.c:183:6: [0m[0;1;36mnote: [0mAssuming field 'prev' is equal to NULL[0m
  183 |         if ((*line)->prev != NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mmove.c:183:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  183 |         if ((*line)->prev != NULL)[0m
      | [0;1;32m        ^
[0m[1mmove.c:186:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  186 |         while (!begpar(*line, 0))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~
[0m[1mmove.c:186:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  186 |         while (!begpar(*line, 0))[0m
      | [0;1;32m        ^
[0m[1mmove.c:187:3: [0m[0;1;36mnote: [0mNull pointer value stored to field 'current'[0m
  187 |                 *line = (*line)->prev;[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mmove.c:186:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  186 |         while (!begpar(*line, 0))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~
[0m[1mmove.c:186:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  186 |         while (!begpar(*line, 0))[0m
      | [0;1;32m        ^
[0m[1mmove.c:187:11: [0m[0;1;36mnote: [0mAccess to field 'prev' results in a dereference of a null pointer[0m
  187 |                 *line = (*line)->prev;[0m
      | [0;1;32m                        ^~~~~~~~~~~~~
[0m[1mmove.c:193:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |         while ((*line)->next != NULL && !inpar(*line))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  194 |                 *line = (*line)->next;[0m
      | [0;1;32m                                      
[0m[1mmove.c:197:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |                                                                         !begpar((*line)->next, 0))[0m
      | [0;1;32m                                                                                                  ^
[0m      | [0;32m                                                                                                   {
[0m  198 |                 *line = (*line)->next;[0m
      | [0;1;32m                                      
[0m[1mmove.c:224:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  225 |                 openfile->current_x = strlen(openfile->current->data);[0m
      | [0;1;32m                                                                      
[0m[1mmove.c:249:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |                                 white_string(openfile->current->data))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  250 |                 openfile->current = openfile->current->next;[0m
      | [0;1;32m                                                            
[0m[1mmove.c:287:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |                         if (openfile->current->prev == NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  288 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmove.c:301:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |                         if (openfile->current_x == 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  302 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmove.c:314:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |         if (step_forward)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  315 |                 /* Move one character forward again to sit on the start of the word. */[0m
  316 |                 openfile->current_x = step_right(openfile->current->data,[0m
  317 |                                                                                                 openfile->current_x);[0m
      | [0;1;32m                                                                                                                     
[0m[1mmove.c:337:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |                         if (openfile->current->next == NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  338 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmove.c:353:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |                                                                 punctuation_as_letters))[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m  354 |                                 seen_word = TRUE;[0m
  355 | #ifdef ENABLE_UTF8[0m
  356 |                         else if (is_zerowidth(openfile->current->data + openfile->current_x))[0m
      | [0;32m                        } 
[0m[1mmove.c:356:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |                         else if (is_zerowidth(openfile->current->data + openfile->current_x))[0m
      | [0;1;32m                                                                                             ^
[0m      | [0;32m                                                                                              {
[0m  357 |                                 ; /* skip */[0m
  358 | #endif[0m
  359 |                         else if (seen_word)[0m
      | [0;32m                        } 
[0m[1mmove.c:359:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |                         else if (seen_word)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  360 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmove.c:365:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  365 |                         if (is_zerowidth(openfile->current->data + openfile->current_x))[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m  366 |                                 ; /* skip */[0m
  367 |                         else[0m
      | [0;32m                        } 
[0m[1mmove.c:372:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  372 |                                                                 punctuation_as_letters))[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m  373 |                                 seen_space = TRUE;[0m
  374 |                         else if (seen_space)[0m
      | [0;32m                        } 
[0m[1mmove.c:374:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |                         else if (seen_space)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  375 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mmove.c:441:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |                 if (openfile->current_x == left_x)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  442 |                         openfile->current_x = 0;[0m
  443 |                 else {[0m
      | [0;32m                } 
[0m[1mmove.c:448:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |         } else if (!moved)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  449 | #endif[0m
  450 |                 openfile->current_x = 0;[0m
      | [0;1;32m                                        
[0m[1mmove.c:452:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |         if (moved_off_chunk)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  453 |                 openfile->placewewant = xplustabs();[0m
      | [0;1;32m                                                    
[0m[1mmove.c:457:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |         if (ISSET(SOFTWRAP) && moved_off_chunk)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  458 |                 edit_redraw(was_current, FLOWING);[0m
  459 |         else if (line_needs_update(was_column, openfile->placewewant))[0m
      | [0;32m        } 
[0m[1mmove.c:459:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |         else if (line_needs_update(was_column, openfile->placewewant))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  460 |                 update_line(openfile->current, openfile->current_x);[0m
      | [0;1;32m                                                                    
[0m[1mmove.c:486:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |                 if (!last_chunk)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  487 |                         rightedge--;[0m
      | [0;1;32m                                    
[0m[1mmove.c:493:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |                 if (openfile->current_x == right_x)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  494 |                         openfile->current_x = line_len;[0m
  495 |                 else {[0m
      | [0;32m                } 
[0m[1mmove.c:500:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  501 | #endif[0m
  502 |                 openfile->current_x = line_len;[0m
      | [0;1;32m                                               
[0m[1mmove.c:504:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  504 |         if (moved_off_chunk)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  505 |                 openfile->placewewant = xplustabs();[0m
      | [0;1;32m                                                    
[0m[1mmove.c:509:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |         if (ISSET(SOFTWRAP) && moved_off_chunk)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  510 |                 edit_redraw(was_current, FLOWING);[0m
  511 |         else if (line_needs_update(was_column, openfile->placewewant))[0m
      | [0;32m        } 
[0m[1mmove.c:511:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |         else if (line_needs_update(was_column, openfile->placewewant))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  512 |                 update_line(openfile->current, openfile->current_x);[0m
      | [0;1;32m                                                                    
[0m[1mmove.c:524:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |         if (go_back_chunks(1, &openfile->current, &leftedge) > 0)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  525 |                 return;[0m
      | [0;1;32m                       
[0m[1mmove.c:529:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |         if (openfile->current_y == 0 && !ISSET(JUMPY_SCROLLING))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  530 |                 edit_scroll(BACKWARD);[0m
  531 |         else[0m
      | [0;32m        } 
[0m[1mmove.c:531:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  532 |                 edit_redraw(was_current, FLOWING);[0m
      | [0;1;32m                                                  
[0m[1mmove.c:547:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  547 |         if (go_forward_chunks(1, &openfile->current, &leftedge) > 0)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  548 |                 return;[0m
      | [0;1;32m                       
[0m[1mmove.c:552:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |         if (openfile->current_y == editwinrows - 1 && !ISSET(JUMPY_SCROLLING))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  553 |                 edit_scroll(FORWARD);[0m
  554 |         else[0m
      | [0;32m        } 
[0m[1mmove.c:554:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  555 |                 edit_redraw(was_current, FLOWING);[0m
      | [0;1;32m                                                  
[0m[1mmove.c:566:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  566 |         if (openfile->edittop->prev == NULL && openfile->firstcolumn == 0)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  567 |                 return;[0m
      | [0;1;32m                       
[0m[1mmove.c:569:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  569 |         if (openfile->current_y == editwinrows - 1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  570 |                 do_up();[0m
      | [0;1;32m                        
[0m[1mmove.c:572:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  572 |         if (editwinrows > 1)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  573 |                 edit_scroll(BACKWARD);[0m
      | [0;1;32m                                      
[0m[1mmove.c:579:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  579 |         if (openfile->current_y == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  580 |                 do_down();[0m
      | [0;1;32m                          
[0m[1mmove.c:587:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  587 |                                                                                 ))[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  588 |                 edit_scroll(FORWARD);[0m
      | [0;1;32m                                     
[0m[1mmove.c:610:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  610 |                                         is_zerowidth(openfile->current->data + openfile->current_x))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m  611 |                         openfile->current_x = step_left(openfile->current->data,[0m
  612 |                                                                                                 openfile->current_x);[0m
      | [0;1;32m                                                                                                                     
[0m[1mmove.c:632:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |                                         is_zerowidth(openfile->current->data + openfile->current_x))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m  633 |                         openfile->current_x = step_right(openfile->current->data,[0m
  634 |                                                                                                 openfile->current_x);[0m
      | [0;1;32m                                                                                                                     
[0m48 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[54/70][63.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpprqbq07k.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/global.c
[1mglobal.c:325:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |         if (allfuncs == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  326 |                 allfuncs = f;[0m
  327 |         else[0m
      | [0;32m        } 
[0m[1mglobal.c:327:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  327 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  328 |                 tailfunc->next = f;[0m
      | [0;1;32m                                   
[0m[1mglobal.c:347:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |                         if (keystring[1] == '/' || keystring[1] == '-')[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  348 |                                 return 31;[0m
      | [0;1;32m                                          
[0m[1mglobal.c:349:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |                         if (keystring[1] <= '_')[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  350 |                                 return keystring[1] - 64;[0m
      | [0;1;32m                                                         
[0m[1mglobal.c:351:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |                         if (keystring[1] == '`')[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  352 |                                 return 0;[0m
  353 |                         else[0m
      | [0;32m                        } 
[0m[1mglobal.c:353:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  354 |                                 return -1;[0m
      | [0;1;32m                                          
[0m[1mglobal.c:355:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |                 } else if (strcasecmp(keystring, "^Space") == 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  356 |                         return 0;[0m
  357 |                 else[0m
      | [0;32m                } 
[0m[1mglobal.c:357:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  358 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mglobal.c:360:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |                 if (keystring[1] == '-' && keystring[3] == '\0')[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  361 |                         return tolower((unsigned char)keystring[2]);[0m
      | [0;1;32m                                                                    
[0m[1mglobal.c:362:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |                 if (strcasecmp(keystring, "M-Space") == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  363 |                         return (int)' ';[0m
  364 |                 else[0m
      | [0;32m                } 
[0m[1mglobal.c:364:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  365 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mglobal.c:375:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |                 if (fn < 1 || fn > 24)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  376 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mglobal.c:378:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |         } else if (strcasecmp(keystring, "Ins") == 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  379 |                 return KEY_IC;[0m
  380 |         else if (strcasecmp(keystring, "Del") == 0)[0m
      | [0;32m        } 
[0m[1mglobal.c:380:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |         else if (strcasecmp(keystring, "Del") == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  381 |                 return KEY_DC;[0m
  382 |         else[0m
      | [0;32m        } 
[0m[1mglobal.c:382:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  383 |                 return -1;[0m
      | [0;1;32m                          
[0m[1mglobal.c:397:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |         if (sclist == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  398 |                 sclist = sc;[0m
  399 |         else[0m
      | [0;32m        } 
[0m[1mglobal.c:399:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  400 |                 tailsc->next = sc;[0m
      | [0;1;32m                                  
[0m[1mglobal.c:400:16: [0m[0;1;35mwarning: [0m[1mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'tailsc') [clang-analyzer-core.NullDereference][0m
  400 |                 tailsc->next = sc;[0m
      | [0;1;32m                             ^
[0m[1mglobal.c:744:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  744 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m             ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglobal.c:744:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  744 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m        ^
[0m[1mglobal.c:783:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  783 |         if (!ISSET(RESTRICTED)) {[0m
      | [0;1;32m             ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglobal.c:783:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  783 |         if (!ISSET(RESTRICTED)) {[0m
      | [0;1;32m        ^
[0m[1mglobal.c:1013:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1013 |         if (!ISSET(RESTRICTED)) {[0m
      | [0;1;32m             ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglobal.c:1013:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1013 |         if (!ISSET(RESTRICTED)) {[0m
      | [0;1;32m        ^
[0m[1mglobal.c:1050:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1050 |         if (!ISSET(RESTRICTED) && !ISSET(VIEW_MODE))[0m
      | [0;1;32m             ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglobal.c:1050:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1050 |         if (!ISSET(RESTRICTED) && !ISSET(VIEW_MODE))[0m
      | [0;1;32m                               ^
[0m[1mglobal.c:1092:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1092 |         if (!ISSET(RESTRICTED)) {[0m
      | [0;1;32m             ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglobal.c:1092:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1092 |         if (!ISSET(RESTRICTED)) {[0m
      | [0;1;32m        ^
[0m[1mglobal.c:1106:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1106 |         if (!ISSET(RESTRICTED) && !ISSET(VIEW_MODE)) {[0m
      | [0;1;32m             ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglobal.c:1106:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1106 |         if (!ISSET(RESTRICTED) && !ISSET(VIEW_MODE)) {[0m
      | [0;1;32m                               ^
[0m[1mglobal.c:1120:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1120 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m        ^
[0m[1mglobal.c:1165:2: [0m[0;1;36mnote: [0mCalling 'add_to_sclist'[0m
 1165 |         add_to_sclist(MMOST|MBROWSER, "^M", '\r', do_enter, 0);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglobal.c:390:2: [0m[0;1;36mnote: [0m'tailsc' initialized to a null pointer value[0m
  390 |         static keystruct *tailsc;[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglobal.c:397:6: [0m[0;1;36mnote: [0mAssuming 'sclist' is not equal to NULL[0m
  397 |         if (sclist == NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mglobal.c:397:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  397 |         if (sclist == NULL)[0m
      | [0;1;32m        ^
[0m[1mglobal.c:400:16: [0m[0;1;36mnote: [0mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'tailsc')[0m
  400 |                 tailsc->next = sc;[0m
      | [0;1;32m                ~~~~~~       ^
[0m[1mglobal.c:409:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  409 |         if (toggle)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  410 |                 sc->ordinal = (tailsc->toggle == toggle) ? counter : ++counter;[0m
      | [0;1;32m                                                                               
[0m[1mglobal.c:422:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |         for (keystruct *sc = sclist; sc != NULL; sc = sc->next)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  423 |                 if ((sc->menus & menu) && sc->func == function && sc->keystr[0])[0m
  424 |                         return sc;[0m
      | [0;1;32m                                  
[0m[1mglobal.c:423:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |                 if ((sc->menus & menu) && sc->func == function && sc->keystr[0])[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m  424 |                         return sc;[0m
      | [0;1;32m                                  
[0m[1mglobal.c:437:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |                 if (item->menus & menu)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  438 |                         count++;[0m
      | [0;1;32m                                
[0m[1mglobal.c:444:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  444 |                                                 first_sc_for(menu, discard_buffer) == NULL)[0m
      | [0;1;32m                                                                                           ^
[0m      | [0;32m                                                                                            {
[0m  445 |                 count--;[0m
      | [0;1;32m                        
[0m[1mglobal.c:454:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |         if (!meta_key && 0x20 <= keycode && keycode <= 0xFF)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  455 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mglobal.c:458:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |         if (meta_key && keycode < 0x20)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  459 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mglobal.c:463:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |         if (bracketed_paste && keycode != BRACKETED_PASTE_MARKER)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  464 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mglobal.c:467:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |         if (keycode == PLANTED_COMMAND)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  468 |                 return planted_shortcut;[0m
      | [0;1;32m                                        
[0m[1mglobal.c:472:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |                 if ((sc->menus & currmenu) && keycode == sc->keycode)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  473 |                         return sc;[0m
      | [0;1;32m                                  
[0m[1mglobal.c:494:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |                 if (keycode == 'N')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  495 |                         return do_findprevious;[0m
      | [0;1;32m                                               
[0m[1mglobal.c:496:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |                 if (keycode == 'n')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  497 |                         return do_findnext;[0m
      | [0;1;32m                                           
[0m[1mglobal.c:504:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  504 |                                 return do_page_down;[0m
      | [0;1;32m                                ^                  
[0m      | [0;32m                                {                  ;} 
[0m[1mglobal.c:510:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  510 |                                 return goto_dir;[0m
      | [0;1;32m                                ^              
[0m      | [0;32m                                {              ;} 
[0m[1mglobal.c:513:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  513 |                                 return do_help;[0m
      | [0;1;32m                                ^             
[0m      | [0;32m                                {             ;} 
[0m[1mglobal.c:515:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  515 |                                 return do_enter;[0m
      | [0;1;32m                                ^              
[0m      | [0;32m                                {              ;} 
[0m[1mglobal.c:744:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  745 | #endif[0m
  746 |                 add_to_funcs(do_insertfile, MMAIN,[0m
  747 |                                 N_("Read File"), WHENHELP(readfile_gist), BLANKAFTER);[0m
  748 | #ifdef ENABLE_JUSTIFY[0m
  749 |         else[0m
      | [0;32m        } 
[0m[1mglobal.c:749:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  749 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  750 |                 add_to_funcs(do_justify, MMAIN,[0m
  751 |                                 N_("Justify"), WHENHELP(justify_gist), BLANKAFTER);[0m
      | [0;1;32m                                                                                   
[0m[1mglobal.c:1050:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1050 |         if (!ISSET(RESTRICTED) && !ISSET(VIEW_MODE))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1051 |                 add_to_funcs(flip_newbuffer, MINSERTFILE|MEXECUTE,[0m
 1052 |                                 N_("New Buffer"), WHENHELP(newbuffer_gist), TOGETHER);[0m
      | [0;1;32m                                                                                      
[0m[1mglobal.c:1120:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1120 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1121 |                 add_to_funcs(to_files, MWRITEFILE|MINSERTFILE,[0m
 1122 |                                 /* TRANSLATORS: This invokes the file browser. */[0m
 1123 |                                 N_("Browse"), WHENHELP(tofiles_gist), BLANKAFTER);[0m
      | [0;1;32m                                                                                  
[0m[1mglobal.c:1176:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1176 |         if (!ISSET(PRESERVE))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1177 |                 add_to_sclist(MMAIN, "^S", 0, do_savefile, 0);[0m
      | [0;1;32m                                                              
[0m[1mglobal.c:1181:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1181 |         if (!ISSET(PRESERVE))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1182 |                 add_to_sclist(MMAIN|MBROWSER|MHELP, "^Q", 0, do_search_backward, 0);[0m
      | [0;1;32m                                                                                    
[0m[1mglobal.c:1196:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1196 |         if (!ISSET(PRESERVE))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1197 |                 add_to_sclist(MEXECUTE, "^S", 0, do_spell, 0);[0m
      | [0;1;32m                                                              
[0m[1mglobal.c:1366:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1366 |         if (!ISSET(PRESERVE))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1367 |                 add_to_sclist(MMOST|MBROWSER|MHELP|MYESNO, "^L", 0, full_refresh, 0);[0m
 1368 |         else[0m
      | [0;32m        } 
[0m[1mglobal.c:1368:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1368 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1369 |                 add_to_sclist(MMOST|MBROWSER|MYESNO, "^L", 0, full_refresh, 0);[0m
      | [0;1;32m                                                                               
[0m[1mglobal.c:1442:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1442 |         if (ISSET(SAVE_ON_EXIT) && !ISSET(PRESERVE))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1443 |                 add_to_sclist(MWRITEFILE, "^Q", 0, discard_buffer, 0);[0m
      | [0;1;32m                                                                      
[0m[1mglobal.c:1467:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1467 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1468 |                 add_to_sclist(MWRITEFILE|MINSERTFILE, "^T", 0, to_files, 0);[0m
      | [0;1;32m                                                                            
[0m[1mglobal.c:1519:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1519 |                         return N_("Hidden interface");[0m
      | [0;1;32m                        ^                            
[0m      | [0;32m                        {                            ;} 
[0m[1mglobal.c:1521:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1521 |                         return N_("Help mode");[0m
      | [0;1;32m                        ^                     
[0m      | [0;32m                        {                     ;} 
[0m[1mglobal.c:1523:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1523 |                         return N_("Constant cursor position display");[0m
      | [0;1;32m                        ^                                            
[0m      | [0;32m                        {                                            ;} 
[0m[1mglobal.c:1525:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1525 |                         return N_("Soft wrapping of overlong lines");[0m
      | [0;1;32m                        ^                                           
[0m      | [0;32m                        {                                           ;} 
[0m[1mglobal.c:1527:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1527 |                         return N_("Line numbering");[0m
      | [0;1;32m                        ^                          
[0m      | [0;32m                        {                          ;} 
[0m[1mglobal.c:1529:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1529 |                         return N_("Whitespace display");[0m
      | [0;1;32m                        ^                              
[0m      | [0;32m                        {                              ;} 
[0m[1mglobal.c:1531:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1531 |                         return N_("Color syntax highlighting");[0m
      | [0;1;32m                        ^                                     
[0m      | [0;32m                        {                                     ;} 
[0m[1mglobal.c:1533:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1533 |                         return N_("Smart home key");[0m
      | [0;1;32m                        ^                          
[0m      | [0;32m                        {                          ;} 
[0m[1mglobal.c:1535:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1535 |                         return N_("Auto indent");[0m
      | [0;1;32m                        ^                       
[0m      | [0;32m                        {                       ;} 
[0m[1mglobal.c:1537:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1537 |                         return N_("Cut to end");[0m
      | [0;1;32m                        ^                      
[0m      | [0;32m                        {                      ;} 
[0m[1mglobal.c:1539:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1539 |                         return N_("Hard wrapping of overlong lines");[0m
      | [0;1;32m                        ^                                           
[0m      | [0;32m                        {                                           ;} 
[0m[1mglobal.c:1541:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1541 |                         return N_("Conversion of typed tabs to spaces");[0m
      | [0;1;32m                        ^                                              
[0m      | [0;32m                        {                                              ;} 
[0m[1mglobal.c:1543:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1543 |                         return N_("Mouse support");[0m
      | [0;1;32m                        ^                         
[0m      | [0;32m                        {                         ;} 
[0m[1mglobal.c:1545:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1545 |                         return "Ehm...";[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                        {              ;} 
[0m61 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[55/70][71.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmphfi2_r_4.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/history.c
[1mhistory.c:69:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |         if (item == search_history)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m   70 |                 search_history = searchbot;[0m
   71 |         else if (item == replace_history)[0m
      | [0;32m        } 
[0m[1mhistory.c:71:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |         else if (item == replace_history)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   72 |                 replace_history = replacebot;[0m
   73 |         else if (item == execute_history)[0m
      | [0;32m        } 
[0m[1mhistory.c:73:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |         else if (item == execute_history)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m   74 |                 execute_history = executebot;[0m
      | [0;1;32m                                             
[0m[1mhistory.c:85:29: [0m[0;1;35mwarning: [0m[1mAccess to field 'prev' results in a dereference of a null pointer (loaded from variable 'end') [clang-analyzer-core.NullDereference][0m
   85 |         for (item = start; item != end->prev && item != NULL; item = item->prev) {[0m
      | [0;1;32m                                   ^
[0m[1mhistory.c:157:14: [0m[0;1;36mnote: [0m'htop' initialized to a null pointer value[0m
  157 |         linestruct *htop = NULL, *hbot = NULL;[0m
      | [0;1;32m                    ^~~~
[0m[1mhistory.c:160:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  160 |         if (*here == search_history) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:160:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  160 |         if (*here == search_history) {[0m
      | [0;1;32m        ^
[0m[1mhistory.c:163:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  163 |         } else if (*here == replace_history) {[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:163:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  163 |         } else if (*here == replace_history) {[0m
      | [0;1;32m               ^
[0m[1mhistory.c:166:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  166 |         } else if (*here == execute_history) {[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:166:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |         } else if (*here == execute_history) {[0m
      | [0;1;32m               ^
[0m[1mhistory.c:173:40: [0m[0;1;36mnote: [0mPassing null pointer value via 2nd parameter 'end'[0m
  173 |         item = find_in_history((*here)->prev, htop, string, len);[0m
      | [0;1;32m                                              ^~~~
[0m[1mhistory.c:173:9: [0m[0;1;36mnote: [0mCalling 'find_in_history'[0m
  173 |         item = find_in_history((*here)->prev, htop, string, len);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:85:29: [0m[0;1;36mnote: [0mAccess to field 'prev' results in a dereference of a null pointer (loaded from variable 'end')[0m
   85 |         for (item = start; item != end->prev && item != NULL; item = item->prev) {[0m
      | [0;1;32m                                   ^~~
[0m[1mhistory.c:86:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |                 if (strncmp(item->data, text, len) == 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m   87 |                         return (linestruct *)item;[0m
      | [0;1;32m                                                  
[0m[1mhistory.c:112:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |         if (avoid_duplicates)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  113 |                 thesame = find_in_history(*hbot, *htop, text, HIGHEST_POSITIVE);[0m
      | [0;1;32m                                                                                
[0m[1mhistory.c:120:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  120 |                 if (thesame == *htop)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  121 |                         *htop = after;[0m
      | [0;1;32m                                      
[0m[1mhistory.c:175:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |         while (item != NULL && strcmp(item->data, string) == 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  176 |                 item = find_in_history(item->prev, htop, string, len);[0m
      | [0;1;32m                                                                      
[0m[1mhistory.c:186:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |         while (item != NULL && strcmp(item->data, string) == 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  187 |                 item = find_in_history(item->prev, *here, string, len);[0m
      | [0;1;32m                                                                       
[0m[1mhistory.c:219:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |         if (homedir == NULL && xdgdatadir == NULL)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  220 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mhistory.c:222:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |         if (xdgdatadir != NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  223 |                 statedir = concatenate(xdgdatadir, "/nano/");[0m
  224 |         else[0m
      | [0;32m        } 
[0m[1mhistory.c:224:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  224 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  225 |                 statedir = concatenate(homedir, "/.local/share/nano/");[0m
      | [0;1;32m                                                                       
[0m[1mhistory.c:284:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  284 |                 } else if (history == &search_history)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  285 |                         history = &replace_history;[0m
  286 |                 else[0m
      | [0;32m                } 
[0m[1mhistory.c:286:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  287 |                         history = &execute_history;[0m
      | [0;1;32m                                                   
[0m[1mhistory.c:290:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |         if (fclose(histfile) == EOF)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  291 |                 jot_error(N_("Error reading %s: %s"), histname, strerror(errno));[0m
      | [0;1;32m                                                                                 
[0m[1mhistory.c:310:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  310 |                 if (fwrite(item->data, 1, length, histfile) < length)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  311 |                         return FALSE;[0m
      | [0;1;32m                                     
[0m[1mhistory.c:312:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |                 if (putc('\n', histfile) == EOF)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  313 |                         return FALSE;[0m
      | [0;1;32m                                     
[0m[1mhistory.c:326:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |         if (!history_changed)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  327 |                 return;[0m
      | [0;1;32m                       
[0m[1mhistory.c:339:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |         if (chmod(histname, S_IRUSR | S_IWUSR) < 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  340 |                 jot_error(N_("Cannot limit permissions on %s: %s"), histname, strerror(errno));[0m
      | [0;1;32m                                                                                               
[0m[1mhistory.c:343:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |                                                                                         !write_list(executetop, histfile))[0m
      | [0;1;32m                                                                                                                          ^
[0m      | [0;32m                                                                                                                           {
[0m  344 |                 jot_error(N_("Error writing %s: %s"), histname, strerror(errno));[0m
      | [0;1;32m                                                                                 
[0m[1mhistory.c:346:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |         if (fclose(histfile) == EOF)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  347 |                 jot_error(N_("Error writing %s: %s"), histname, strerror(errno));[0m
      | [0;1;32m                                                                                 
[0m[1mhistory.c:363:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |         if (histfile == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  364 |                 return;[0m
      | [0;1;32m                       
[0m[1mhistory.c:382:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |                 if (columnptr == NULL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  383 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mhistory.c:385:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |                 if (lineptr == NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  386 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mhistory.c:400:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |                 if (position_history == NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  401 |                         position_history = newitem;[0m
  402 |                 else[0m
      | [0;32m                } 
[0m[1mhistory.c:402:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  403 |                         lastitem->next = newitem;[0m
      | [0;1;32m                                                 
[0m[1mhistory.c:403:19: [0m[0;1;35mwarning: [0m[1mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'lastitem') [clang-analyzer-core.NullDereference][0m
  403 |                         lastitem->next = newitem;[0m
      | [0;1;32m                                       ^
[0m[1mhistory.c:567:6: [0m[0;1;36mnote: [0mAssuming 'fullpath' is not equal to NULL[0m
  567 |         if (fullpath == NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~
[0m[1mhistory.c:567:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  567 |         if (fullpath == NULL)[0m
      | [0;1;32m        ^
[0m[1mhistory.c:570:2: [0m[0;1;36mnote: [0mCalling 'reload_positions_if_needed'[0m
  570 |         reload_positions_if_needed();[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:477:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  477 |         if (stat(poshistname, &fileinfo) != 0 || fileinfo.st_mtime == latest_timestamp)[0m
      | [0;1;32m            ^
[0m[1mhistory.c:477:43: [0m[0;1;36mnote: [0mAssuming 'latest_timestamp' is not equal to field 'tv_sec'[0m
  477 |         if (stat(poshistname, &fileinfo) != 0 || fileinfo.st_mtime == latest_timestamp)[0m
      | [0;1;32m                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:477:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  477 |         if (stat(poshistname, &fileinfo) != 0 || fileinfo.st_mtime == latest_timestamp)[0m
      | [0;1;32m        ^
[0m[1mhistory.c:480:32: [0m[0;1;36mnote: [0mAssuming 'item' is equal to NULL[0m
  480 |         for (item = position_history; item != NULL; item = nextone) {[0m
      | [0;1;32m                                      ^~~~~~~~~~~~
[0m[1mhistory.c:480:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 486[0m
  480 |         for (item = position_history; item != NULL; item = nextone) {[0m
      | [0;1;32m        ^
[0m[1mhistory.c:488:2: [0m[0;1;36mnote: [0mCalling 'load_poshistory'[0m
  488 |         load_poshistory();[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mhistory.c:358:6: [0m[0;1;36mnote: [0m'histfile' is not equal to NULL[0m
  358 |         if (histfile == NULL && errno != ENOENT) {[0m
      | [0;1;32m            ^~~~~~~~
[0m[1mhistory.c:358:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  358 |         if (histfile == NULL && errno != ENOENT) {[0m
      | [0;1;32m                             ^
[0m[1mhistory.c:363:6: [0m[0;1;36mnote: [0m'histfile' is not equal to NULL[0m
  363 |         if (histfile == NULL)[0m
      | [0;1;32m            ^~~~~~~~
[0m[1mhistory.c:363:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  363 |         if (histfile == NULL)[0m
      | [0;1;32m        ^
[0m[1mhistory.c:366:2: [0m[0;1;36mnote: [0m'lastitem' initialized to a null pointer value[0m
  366 |         poshiststruct *lastitem = NULL;[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:376:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  376 |         while ((read = getline(&stanza, &dummy, histfile)) > 5) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:376:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  376 |         while ((read = getline(&stanza, &dummy, histfile)) > 5) {[0m
      | [0;1;32m        ^
[0m[1mhistory.c:382:7: [0m[0;1;36mnote: [0mAssuming 'columnptr' is not equal to NULL[0m
  382 |                 if (columnptr == NULL)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~
[0m[1mhistory.c:382:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  382 |                 if (columnptr == NULL)[0m
      | [0;1;32m                ^
[0m[1mhistory.c:385:7: [0m[0;1;36mnote: [0mAssuming 'lineptr' is not equal to NULL[0m
  385 |                 if (lineptr == NULL)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~
[0m[1mhistory.c:385:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  385 |                 if (lineptr == NULL)[0m
      | [0;1;32m                ^
[0m[1mhistory.c:400:7: [0m[0;1;36mnote: [0mAssuming 'position_history' is not equal to NULL[0m
  400 |                 if (position_history == NULL)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:400:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  400 |                 if (position_history == NULL)[0m
      | [0;1;32m                ^
[0m[1mhistory.c:403:19: [0m[0;1;36mnote: [0mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'lastitem')[0m
  403 |                         lastitem->next = newitem;[0m
      | [0;1;32m                        ~~~~~~~~       ^
[0m[1mhistory.c:418:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |         if (fclose(histfile) == EOF)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  419 |                 jot_error(N_("Error reading %s: %s"), poshistname, strerror(errno));[0m
      | [0;1;32m                                                                                    
[0m[1mhistory.c:423:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |         if (stat(poshistname, &fileinfo) == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  424 |                 latest_timestamp = fileinfo.st_mtime;[0m
      | [0;1;32m                                                     
[0m[1mhistory.c:440:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  440 |         if (chmod(poshistname, S_IRUSR | S_IWUSR) < 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  441 |                 jot_error(N_("Cannot limit permissions on %s: %s"), poshistname, strerror(errno));[0m
      | [0;1;32m                                                                                                  
[0m[1mhistory.c:450:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  450 |                 sprintf(path_and_place, "%s %zd %zd\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mhistory.c:450:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  450 |                 sprintf(path_and_place, "%s %zd %zd\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mhistory.c:458:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |                 if (fwrite(path_and_place, 1, length, histfile) < length)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  459 |                         jot_error(N_("Error writing %s: %s"), poshistname, strerror(errno));[0m
      | [0;1;32m                                                                                            
[0m[1mhistory.c:464:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |         if (fclose(histfile) == EOF)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  465 |                 jot_error(N_("Error writing %s: %s"), poshistname, strerror(errno));[0m
      | [0;1;32m                                                                                    
[0m[1mhistory.c:467:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |         if (stat(poshistname, &fileinfo) == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  468 |                 latest_timestamp = fileinfo.st_mtime;[0m
      | [0;1;32m                                                     
[0m[1mhistory.c:477:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |         if (stat(poshistname, &fileinfo) != 0 || fileinfo.st_mtime == latest_timestamp)[0m
      | [0;1;32m                                                                                       ^
[0m      | [0;32m                                                                                        {
[0m  478 |                 return;[0m
      | [0;1;32m                       
[0m[1mhistory.c:508:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |                 if (!strcmp(item->filename, fullpath))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  509 |                         break;[0m
      | [0;1;32m                              
[0m[1mhistory.c:516:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |                         if (previous == NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  517 |                                 position_history = item->next;[0m
  518 |                         else[0m
      | [0;32m                        } 
[0m[1mhistory.c:518:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  519 |                                 previous->next = item->next;[0m
      | [0;1;32m                                                            
[0m[1mhistory.c:535:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |                 if (position_history == NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  536 |                         position_history = theone;[0m
  537 |                 else[0m
      | [0;32m                } 
[0m[1mhistory.c:537:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  538 |                         previous->next = theone;[0m
      | [0;1;32m                                                
[0m[1mhistory.c:538:19: [0m[0;1;35mwarning: [0m[1mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'previous') [clang-analyzer-core.NullDereference][0m
  538 |                         previous->next = theone;[0m
      | [0;1;32m                        ~~~~~~~~       ^
[0m[1mhistory.c:496:2: [0m[0;1;36mnote: [0m'previous' initialized to a null pointer value[0m
  496 |         poshiststruct *previous = NULL;[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:499:6: [0m[0;1;36mnote: [0mAssuming 'fullpath' is not equal to NULL[0m
  499 |         if (fullpath == NULL || openfile->filename[0] == '\0') {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~
[0m[1mhistory.c:499:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mhistory.c:499:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  499 |         if (fullpath == NULL || openfile->filename[0] == '\0') {[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:499:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  499 |         if (fullpath == NULL || openfile->filename[0] == '\0') {[0m
      | [0;1;32m        ^
[0m[1mhistory.c:507:32: [0m[0;1;36mnote: [0mAssuming 'item' is equal to NULL[0m
  507 |         for (item = position_history; item != NULL; item = item->next) {[0m
      | [0;1;32m                                      ^~~~~~~~~~~~
[0m[1mhistory.c:507:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 514[0m
  507 |         for (item = position_history; item != NULL; item = item->next) {[0m
      | [0;1;32m        ^
[0m[1mhistory.c:514:6: [0m[0;1;36mnote: [0mAssuming field 'lineno' is not equal to 1[0m
  514 |         if (openfile->current->lineno == 1 && openfile->current_x == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:514:37: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  514 |         if (openfile->current->lineno == 1 && openfile->current_x == 0) {[0m
      | [0;1;32m                                           ^
[0m[1mhistory.c:532:6: [0m[0;1;36mnote: [0m'theone' is equal to NULL[0m
  532 |         if (theone == NULL) {[0m
      | [0;1;32m            ^~~~~~
[0m[1mhistory.c:532:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  532 |         if (theone == NULL) {[0m
      | [0;1;32m        ^
[0m[1mhistory.c:535:7: [0m[0;1;36mnote: [0mAssuming 'position_history' is not equal to NULL[0m
  535 |                 if (position_history == NULL)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mhistory.c:535:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  535 |                 if (position_history == NULL)[0m
      | [0;1;32m                ^
[0m[1mhistory.c:538:19: [0m[0;1;36mnote: [0mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'previous')[0m
  538 |                         previous->next = theone;[0m
      | [0;1;32m                        ~~~~~~~~       ^
[0m[1mhistory.c:540:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |                 if (previous == NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  541 |                         position_history = item->next;[0m
  542 |                 else[0m
      | [0;32m                } 
[0m[1mhistory.c:542:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  543 |                         previous->next = item->next;[0m
      | [0;1;32m                                                    
[0m[1mhistory.c:544:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  544 |                 while (item->next != NULL)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  545 |                         item = item->next;[0m
      | [0;1;32m                                          
[0m[1mhistory.c:567:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |         if (fullpath == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  568 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mhistory.c:573:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  573 |         while (item != NULL && strcmp(item->filename, fullpath) != 0)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  574 |                 item = item->next;[0m
      | [0;1;32m                                  
[0m[1mhistory.c:578:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  578 |         if (item == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  579 |                 return FALSE;[0m
      | [0;1;32m                             
[0m49 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[56/70][83.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmppuup6aiy.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/printf-parse.c
[1mprintf-parse.c:149:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |               for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  150 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:155:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  156 |                     n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                         
[0m[1mprintf-parse.c:157:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |                   if (n == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  158 |                     /* Positional argument 0.  */[0m
  159 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:160:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |                   if (size_overflow_p (n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  161 |                     /* n too large, would lead to out of memory later.  */[0m
  162 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:208:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  209 |                 break;[0m
      | [0;1;32m                      
[0m[1mprintf-parse.c:218:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |               if (max_width_length < 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  219 |                 max_width_length = 1;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:226:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  227 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:232:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  233 |                         n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                             
[0m[1mprintf-parse.c:234:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |                       if (n == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  235 |                         /* Positional argument 0.  */[0m
  236 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:237:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                       if (size_overflow_p (n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  238 |                         /* n too large, would lead to out of memory later.  */[0m
  239 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:247:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                   if (dp->width_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  248 |                     /* arg_posn wrapped around.  */[0m
  249 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:251:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:251:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:258:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |               for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  259 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:262:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |               if (max_width_length < width_length)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  263 |                 max_width_length = width_length;[0m
      | [0;1;32m                                                
[0m[1mprintf-parse.c:275:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |                   if (max_precision_length < 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  276 |                     max_precision_length = 2;[0m
      | [0;1;32m                                             
[0m[1mprintf-parse.c:283:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  284 |                         ;[0m
      | [0;1;32m                         
[0m[1mprintf-parse.c:289:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                           for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  290 |                             n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                                 
[0m[1mprintf-parse.c:291:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                           if (n == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  292 |                             /* Positional argument 0.  */[0m
  293 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:294:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                           if (size_overflow_p (n))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  295 |                             /* n too large, would lead to out of memory[0m
  296 |                                later.  */[0m
  297 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:305:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                       if (dp->precision_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  306 |                         /* arg_posn wrapped around.  */[0m
  307 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:309:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:309:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:316:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |                   for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  317 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:320:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |                   if (max_precision_length < precision_length)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  321 |                     max_precision_length = precision_length;[0m
      | [0;1;32m                                                            
[0m[1mprintf-parse.c:432:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  433 |                     break;[0m
      | [0;1;32m                          
[0m[1mprintf-parse.c:442:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  442 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  443 |                     type = TYPE_LONGLONGINT;[0m
  444 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:447:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  448 |                     type = TYPE_LONGINT;[0m
  449 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:449:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  450 |                     type = TYPE_SCHAR;[0m
  451 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:451:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  452 |                     type = TYPE_SHORT;[0m
  453 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:453:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  454 |                     type = TYPE_INT;[0m
      | [0;1;32m                                    
[0m[1mprintf-parse.c:455:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  455 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:458:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  459 |                     type = TYPE_ULONGLONGINT;[0m
  460 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:463:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  464 |                     type = TYPE_ULONGINT;[0m
  465 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:465:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  465 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  466 |                     type = TYPE_UCHAR;[0m
  467 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:467:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  468 |                     type = TYPE_USHORT;[0m
  469 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:469:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  469 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  470 |                     type = TYPE_UINT;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:471:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  471 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:474:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  475 |                     type = TYPE_LONGDOUBLE;[0m
  476 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:476:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  477 |                     type = TYPE_DOUBLE;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:478:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  478 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:480:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  480 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  481 | #if HAVE_WINT_T[0m
  482 |                     type = TYPE_WIDE_CHAR;[0m
  483 | #else[0m
  484 |                     goto error;[0m
  485 | #endif[0m
  486 |                   else[0m
  487 |                     type = TYPE_CHAR;[0m
  488 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:480:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  481 | #if HAVE_WINT_T[0m
  482 |                     type = TYPE_WIDE_CHAR;[0m
  483 | #else[0m
  484 |                     goto error;[0m
  485 | #endif[0m
  486 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:486:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  487 |                     type = TYPE_CHAR;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:491:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |                   type = TYPE_WIDE_CHAR;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  492 |                   c = 'c';[0m
  493 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:496:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  496 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  497 | #if HAVE_WCHAR_T[0m
  498 |                     type = TYPE_WIDE_STRING;[0m
  499 | #else[0m
  500 |                     goto error;[0m
  501 | #endif[0m
  502 |                   else[0m
  503 |                     type = TYPE_STRING;[0m
  504 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:496:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  497 | #if HAVE_WCHAR_T[0m
  498 |                     type = TYPE_WIDE_STRING;[0m
  499 | #else[0m
  500 |                     goto error;[0m
  501 | #endif[0m
  502 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:502:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  502 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  503 |                     type = TYPE_STRING;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:507:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  507 |                   type = TYPE_WIDE_STRING;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  508 |                   c = 's';[0m
  509 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:512:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  512 |                   type = TYPE_POINTER;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  513 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:516:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  516 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  517 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  518 |                   else[0m
  519 |                   /* If 'long long' is the same as 'long', we parse "lln" into[0m
  520 |                      TYPE_COUNT_LONGINT_POINTER.  */[0m
  521 |                   if (flags >= 8)[0m
  522 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  523 |                   else if (flags & 2)[0m
  524 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  525 |                   else if (flags & 1)[0m
  526 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  527 |                   else[0m
  528 |                     type = TYPE_COUNT_INT_POINTER;[0m
  529 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:516:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  517 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  518 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:521:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  521 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  522 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  523 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:523:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  524 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  525 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:525:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  525 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  526 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  527 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:527:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  528 |                     type = TYPE_COUNT_INT_POINTER;[0m
      | [0;1;32m                                                  
[0m[1mprintf-parse.c:542:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  542 |                   type = TYPE_NONE;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  543 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:546:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  546 |                   goto error;[0m
      | [0;1;32m                  ^         
[0m      | [0;32m                  {         ;} 
[0m[1mprintf-parse.c:556:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  556 |                     if (dp->arg_index == ARG_NONE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  557 |                       /* arg_posn wrapped around.  */[0m
  558 |                       goto error;[0m
      | [0;1;32m                                 
[0m[1mprintf-parse.c:560:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  560 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:560:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  560 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:574:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  574 |               if (size_overflow_p (memory_size))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  575 |                 /* Overflow, would lead to out of memory.  */[0m
  576 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:580:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  580 |               if (memory == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  581 |                 /* Out of memory.  */[0m
  582 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:583:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |               if (d->dir == d->direct_alloc_dir)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  584 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                                                                       
[0m[1mprintf-parse.c:584:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  584 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:584:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  584 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:603:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  604 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:605:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  606 |     free (d->dir);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:611:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  611 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  612 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:613:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  614 |     free (d->dir);[0m
      | [0;1;32m                  
[0m68 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[57/70][94.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmptw9j8tux.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/chars.c
[1mchars.c:54:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |         if (mbtowide(&wc, c) < 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   55 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:70:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |         if (mbtowide(&wc, c) < 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   71 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:85:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |         if ((signed char)*c >= 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   86 |                 return (*c == ' ' || *c == '\t');[0m
      | [0;1;32m                                                 
[0m[1mchars.c:88:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   88 |         if (mbtowide(&wc, c) < 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   89 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:104:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  105 | #endif[0m
  106 |                 return ((*c & 0x60) == 0 || *c == DEL_CODE);[0m
      | [0;1;32m                                                            
[0m[1mchars.c:115:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |         if (mbtowide(&wc, c) < 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  116 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:128:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |         if (*c == '\0')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  129 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:131:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |         if (is_alnum_char(c))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  132 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mchars.c:134:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |         if (allow_punct && is_punct_char(c))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  135 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mchars.c:143:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  144 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:150:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |         if (c == DEL_CODE)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  151 |                 return '?';[0m
  152 |         else if (c == -97)[0m
      | [0;32m        } 
[0m[1mchars.c:152:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |         else if (c == -97)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  153 |                 return '=';[0m
  154 |         else if (c < 0)[0m
      | [0;32m        } 
[0m[1mchars.c:154:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |         else if (c < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  155 |                 return c + 224;[0m
  156 |         else[0m
      | [0;32m        } 
[0m[1mchars.c:156:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  157 |                 return c + 64;[0m
      | [0;1;32m                              
[0m[1mchars.c:164:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |         if (*c == '\n' && (isdata || as_an_at))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  165 |                 return '@';[0m
      | [0;1;32m                           
[0m[1mchars.c:169:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |                 if ((unsigned char)c[0] < 128)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  170 |                         return control_rep(c[0]);[0m
  171 |                 else[0m
      | [0;32m                } 
[0m[1mchars.c:171:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  172 |                         return control_rep(c[1]);[0m
      | [0;1;32m                                                 
[0m[1mchars.c:173:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  174 | #endif[0m
  175 |                 return control_rep(*c);[0m
      | [0;1;32m                                       
[0m[1mchars.c:187:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  187 |                 if (v2 > 0x3F || v1 < 0xC2)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  188 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mchars.c:197:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |                 if (v3 > 0x3F)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  198 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mchars.c:205:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  206 |                                 return -1;[0m
      | [0;1;32m                                          
[0m[1mchars.c:211:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |                 if (v4 > 0x3F || v1 > 0xF4)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  212 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mchars.c:218:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  219 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mchars.c:232:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |         if ((unsigned char)*ch < 0xE1 || !use_utf8)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  233 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:235:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |         if (mbtowide(&wc, ch) < 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  236 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:247:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |         if ((unsigned char)*ch < 0xCC || !use_utf8)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  248 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:250:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |         if (mbtowide(&wc, ch) < 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  251 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mchars.c:271:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |                 if ((c2 ^ 0x80) > 0x3F)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  272 |                         return 1;[0m
      | [0;1;32m                                 
[0m[1mchars.c:274:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |                 if (c1 < 0xE0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  275 |                         return 2;[0m
      | [0;1;32m                                 
[0m[1mchars.c:277:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |                 if (((unsigned char)pointer[2] ^ 0x80) > 0x3F)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  278 |                         return 1;[0m
      | [0;1;32m                                 
[0m[1mchars.c:281:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |                         if ((c1 > 0xE0 || c2 >= 0xA0) && (c1 != 0xED || c2 < 0xA0))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m  282 |                                 return 3;[0m
  283 |                         else[0m
      | [0;32m                        } 
[0m[1mchars.c:283:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  284 |                                 return 1;[0m
      | [0;1;32m                                         
[0m[1mchars.c:287:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |                 if (((unsigned char)pointer[3] ^ 0x80) > 0x3F)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  288 |                         return 1;[0m
      | [0;1;32m                                 
[0m[1mchars.c:290:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |                 if (c1 > 0xF4)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  291 |                         return 1;[0m
      | [0;1;32m                                 
[0m[1mchars.c:293:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  293 |                 if ((c1 > 0xF0 || c2 >= 0x90) && (c1 != 0xF4 || c2 < 0x90))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  294 |                         return 4;[0m
      | [0;1;32m                                 
[0m[1mchars.c:319:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |         for (int i = 0; i < charlen; i++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  320 |                 thechar[i] = string[i];[0m
      | [0;1;32m                                       
[0m[1mchars.c:357:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |                 if (*string == '\t')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  358 |                         *column += tabsize - *column % tabsize;[0m
  359 |                 else[0m
      | [0;32m                } 
[0m[1mchars.c:359:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  360 |                         *column += 2;[0m
      | [0;1;32m                                     
[0m[1mchars.c:361:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |         } else if (0x7E < (unsigned char)*string && (unsigned char)*string < 0xA0)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  362 |                 *column += 2;[0m
  363 |         else[0m
      | [0;32m        } 
[0m[1mchars.c:363:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  364 |                 *column += 1;[0m
      | [0;1;32m                             
[0m[1mchars.c:377:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |                 if (pos < 4)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  378 |                         before = 0;[0m
  379 |                 else {[0m
      | [0;32m                } 
[0m[1mchars.c:383:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |                         if ((signed char)*(--ptr) > -65)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  384 |                                 before = pos - 1;[0m
  385 |                         else if ((signed char)*(--ptr) > -65)[0m
      | [0;32m                        } 
[0m[1mchars.c:385:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |                         else if ((signed char)*(--ptr) > -65)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  386 |                                 before = pos - 2;[0m
  387 |                         else if ((signed char)*(--ptr) > -65)[0m
      | [0;32m                        } 
[0m[1mchars.c:387:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |                         else if ((signed char)*(--ptr) > -65)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  388 |                                 before = pos - 3;[0m
  389 |                         else if ((signed char)*(--ptr) > -65)[0m
      | [0;32m                        } 
[0m[1mchars.c:389:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |                         else if ((signed char)*(--ptr) > -65)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  390 |                                 before = pos - 4;[0m
  391 |                         else[0m
      | [0;32m                        } 
[0m[1mchars.c:391:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  392 |                                 before = pos - 1;[0m
      | [0;1;32m                                                 
[0m[1mchars.c:403:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  404 | #endif[0m
  405 |                 return (pos == 0 ? 0 : pos - 1);[0m
      | [0;1;32m                                                
[0m[1mchars.c:432:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |                                                 if ((*s1 & 0x5F) != (*s2 & 0x5F))[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  433 |                                                         return ((*s1 & 0x5F) - (*s2 & 0x5F));[0m
      | [0;1;32m                                                                                             
[0m[1mchars.c:434:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  434 |                                         } else[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  435 |                                                 return ((*s1 | 0x20) - *s2);[0m
      | [0;1;32m                                                                            
[0m[1mchars.c:436:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  436 |                                 } else if ('A' <= (*s2 & 0x5F) && (*s2 & 0x5F) <= 'Z')[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m  437 |                                         return (*s1 - (*s2 | 0x20));[0m
  438 |                                 else if (*s1 != *s2)[0m
      | [0;32m                                } 
[0m[1mchars.c:438:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  438 |                                 else if (*s1 != *s2)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  439 |                                         return (*s1 - *s2);[0m
      | [0;1;32m                                                           
[0m[1mchars.c:449:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |                                 if (*s1 != *s2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  450 |                                         return (unsigned char)*s1 - (unsigned char)*s2;[0m
      | [0;1;32m                                                                                       
[0m[1mchars.c:452:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |                                 if (bad1 != bad2)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  453 |                                         return (bad1 ? 1 : -1);[0m
      | [0;1;32m                                                               
[0m[1mchars.c:457:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |                                 if (difference != 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  458 |                                         return difference;[0m
      | [0;1;32m                                                          
[0m[1mchars.c:467:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  468 | #endif[0m
  469 |                 return strncasecmp(s1, s2, n);[0m
      | [0;1;32m                                              
[0m[1mchars.c:480:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |                         if (mbstrncasecmp(haystack, needle, needle_len) == 0)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  481 |                                 return (char *)haystack;[0m
      | [0;1;32m                                                        
[0m[1mchars.c:487:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  488 | #endif[0m
  489 |                 return (char *)strcasestr(haystack, needle);[0m
      | [0;1;32m                                                            
[0m[1mchars.c:500:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |         if (tail_len < needle_len)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  501 |                 pointer -= (needle_len - tail_len);[0m
      | [0;1;32m                                                   
[0m[1mchars.c:504:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  504 |                 if (strncmp(pointer, needle, needle_len) == 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  505 |                         return (char *)pointer;[0m
      | [0;1;32m                                               
[0m[1mchars.c:520:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |         if (tail_len < needle_len)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  521 |                 pointer -= (needle_len - tail_len);[0m
      | [0;1;32m                                                   
[0m[1mchars.c:524:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |                 if (strncasecmp(pointer, needle, needle_len) == 0)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  525 |                         return (char *)pointer;[0m
      | [0;1;32m                                               
[0m[1mchars.c:542:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |                 if (tail_len < needle_len)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  543 |                         pointer -= (needle_len - tail_len);[0m
      | [0;1;32m                                                           
[0m[1mchars.c:545:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |                 if (pointer < haystack)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  546 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mchars.c:549:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |                         if (mbstrncasecmp(pointer, needle, needle_len) == 0)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  550 |                                 return (char *)pointer;[0m
      | [0;1;32m                                                       
[0m[1mchars.c:552:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |                         if (pointer == haystack)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  553 |                                 return NULL;[0m
      | [0;1;32m                                            
[0m[1mchars.c:557:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  557 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  558 | #endif[0m
  559 |                 return revstrcasestr(haystack, needle, pointer);[0m
      | [0;1;32m                                                                
[0m[1mchars.c:584:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  584 |                         if (ws == wc && bad_s == bad_c)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  585 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mchars.c:590:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |                 if (*string == '\0')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  591 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mchars.c:594:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  595 | #endif[0m
  596 |                 return strchr(string, *chr);[0m
      | [0;1;32m                                            
[0m[1mchars.c:606:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |                 if (mbstrchr(accept, string) != NULL)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  607 |                         return (char *)string;[0m
      | [0;1;32m                                              
[0m[1mchars.c:620:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  620 |                 if (pointer == head)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  621 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mchars.c:626:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |                 if (mbstrchr(accept, pointer) != NULL)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  627 |                         return (char *)pointer;[0m
      | [0;1;32m                                               
[0m[1mchars.c:630:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  630 |                 if (pointer == head)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  631 |                         return NULL;[0m
      | [0;1;32m                                    
[0m[1mchars.c:642:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |         while (*string != '\0' && !is_blank_char(string))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  643 |                 string += char_length(string);[0m
      | [0;1;32m                                              
[0m[1mchars.c:652:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |         while (*string != '\0' && (is_blank_char(string) || *string == '\r'))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  653 |                 string += char_length(string);[0m
      | [0;1;32m                                              
[0m77 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[58/70][98.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp9pu2vvrj.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/help.c
[1mhelp.c:211:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |         if (htx[1] != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  212 |                 htx[1] = _(htx[1]);[0m
      | [0;1;32m                                   
[0m[1mhelp.c:213:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |         if (htx[2] != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  214 |                 htx[2] = _(htx[2]);[0m
      | [0;1;32m                                   
[0m[1mhelp.c:217:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |         if (htx[1] != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  218 |                 allocsize += strlen(htx[1]);[0m
      | [0;1;32m                                            
[0m[1mhelp.c:219:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |         if (htx[2] != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  220 |                 allocsize += strlen(htx[2]);[0m
      | [0;1;32m                                            
[0m[1mhelp.c:225:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  225 |         for (f = allfuncs; f != NULL; f = f->next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  226 |                 if (f->menus & currmenu)[0m
  227 |                         allocsize += strlen(_(f->phrase)) + 21;[0m
      | [0;1;32m                                                               
[0m[1mhelp.c:226:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                 if (f->menus & currmenu)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  227 |                         allocsize += strlen(_(f->phrase)) + 21;[0m
      | [0;1;32m                                                               
[0m[1mhelp.c:236:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |                 for (s = sclist; s != NULL; s = s->next)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  237 |                         if (s->func == do_toggle)[0m
  238 |                                 allocsize += strlen(_(epithet_of_flag(s->toggle))) + onoff_len + 9;[0m
      | [0;1;32m                                                                                                   
[0m[1mhelp.c:237:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                         if (s->func == do_toggle)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  238 |                                 allocsize += strlen(_(epithet_of_flag(s->toggle))) + onoff_len + 9;[0m
      | [0;1;32m                                                                                                   
[0m[1mhelp.c:246:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  246 |         strcpy(help_text, htx[0]);[0m
      | [0;1;32m        ^~~~~~
[0m[1mhelp.c:246:2: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  246 |         strcpy(help_text, htx[0]);[0m
      | [0;1;32m        ^~~~~~
[0m[1mhelp.c:247:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |         if (htx[1] != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  248 |                 strcat(help_text, htx[1]);[0m
      | [0;1;32m                                          
[0m[1mhelp.c:248:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  248 |                 strcat(help_text, htx[1]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mhelp.c:248:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  248 |                 strcat(help_text, htx[1]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mhelp.c:249:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |         if (htx[2] != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  250 |                 strcat(help_text, htx[2]);[0m
      | [0;1;32m                                          
[0m[1mhelp.c:250:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  250 |                 strcat(help_text, htx[2]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mhelp.c:250:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  250 |                 strcat(help_text, htx[2]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mhelp.c:260:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  260 |                 if ((f->menus & currmenu) == 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  261 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mhelp.c:268:6: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  268 |                                         sprintf(ptr, "%s                ", s->keystr);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mhelp.c:268:6: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  268 |                                         sprintf(ptr, "%s                ", s->keystr);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mhelp.c:272:6: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  272 |                                         sprintf(ptr, "(%s)       ", s->keystr);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mhelp.c:272:6: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  272 |                                         sprintf(ptr, "(%s)       ", s->keystr);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mhelp.c:279:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |                 if (tally == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  280 |                         ptr += sprintf(ptr, "\t\t ");[0m
  281 |                 else if (tally == 1)[0m
      | [0;32m                } 
[0m[1mhelp.c:280:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  280 |                         ptr += sprintf(ptr, "\t\t ");[0m
      | [0;1;32m                               ^~~~~~~
[0m[1mhelp.c:280:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  280 |                         ptr += sprintf(ptr, "\t\t ");[0m
      | [0;1;32m                               ^~~~~~~
[0m[1mhelp.c:281:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |                 else if (tally == 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  282 |                         ptr += 10;[0m
      | [0;1;32m                                  
[0m[1mhelp.c:285:10: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  285 |                 ptr += sprintf(ptr, "%s\n", _(f->phrase));[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mhelp.c:285:10: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  285 |                 ptr += sprintf(ptr, "%s\n", _(f->phrase));[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mhelp.c:287:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |                 if (f->blank_after)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  288 |                         ptr += sprintf(ptr, "\n");[0m
      | [0;1;32m                                                  
[0m[1mhelp.c:288:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  288 |                         ptr += sprintf(ptr, "\n");[0m
      | [0;1;32m                               ^~~~~~~
[0m[1mhelp.c:288:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  288 |                         ptr += sprintf(ptr, "\n");[0m
      | [0;1;32m                               ^~~~~~~
[0m[1mhelp.c:297:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |                 for (s = sclist; s != NULL; s = s->next)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  298 |                         maximum = (s->toggle && s->ordinal > maximum) ? s->ordinal : maximum;[0m
      | [0;1;32m                                                                                             
[0m[1mhelp.c:303:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |                         for (s = sclist; s != NULL; s = s->next)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  304 |                                 if (s->toggle && s->ordinal == counter) {[0m
  305 |                                         ptr += sprintf(ptr, "%s\t\t %s %s\n", (s->menus & MMAIN ? s->keystr : ""),[0m
  306 |                                                                 _(epithet_of_flag(s->toggle)), _("enable/disable"));[0m
  307 |                                         /* Add a blank like between two groups. */[0m
  308 |                                         if (s->toggle == NO_SYNTAX)[0m
  309 |                                                 ptr += sprintf(ptr, "\n");[0m
  310 |                                         break;[0m
  311 |                                 }[0m
      | [0;1;32m                                 
[0m[1mhelp.c:305:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  305 |                                         ptr += sprintf(ptr, "%s\t\t %s %s\n", (s->menus & MMAIN ? s->keystr : ""),[0m
      | [0;1;32m                                               ^~~~~~~
[0m[1mhelp.c:305:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  305 |                                         ptr += sprintf(ptr, "%s\t\t %s %s\n", (s->menus & MMAIN ? s->keystr : ""),[0m
      | [0;1;32m                                               ^~~~~~~
[0m[1mhelp.c:308:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |                                         if (s->toggle == NO_SYNTAX)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  309 |                                                 ptr += sprintf(ptr, "\n");[0m
      | [0;1;32m                                                                          
[0m[1mhelp.c:309:14: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |                                                 ptr += sprintf(ptr, "\n");[0m
      | [0;1;32m                                                       ^~~~~~~
[0m[1mhelp.c:309:14: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  309 |                                                 ptr += sprintf(ptr, "\n");[0m
      | [0;1;32m                                                       ^~~~~~~
[0m[1mhelp.c:339:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |                 if (ptr == end_of_intro)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  340 |                         wrapping_point = ((COLS < 40) ? 40 : COLS) - thebar;[0m
      | [0;1;32m                                                                            
[0m[1mhelp.c:346:4: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  346 |                         snprintf(oneline, length + shim, "%s", ptr);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mhelp.c:346:4: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  346 |                         snprintf(oneline, length + shim, "%s", ptr);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mhelp.c:350:4: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  350 |                         snprintf(oneline, length + 5, "\t\t  %s", ptr);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mhelp.c:350:4: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  350 |                         snprintf(oneline, length + 5, "\t\t  %s", ptr);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mhelp.c:357:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |                 if (*ptr != '\n')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  358 |                         ptr--;[0m
      | [0;1;32m                              
[0m[1mhelp.c:380:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |                 if (sum > location)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  381 |                         break;[0m
      | [0;1;32m                              
[0m[1mhelp.c:411:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  411 |         memcpy(stash, flags, sizeof(flags));[0m
      | [0;1;32m        ^~~~~~
[0m[1mhelp.c:411:2: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  411 |         memcpy(stash, flags, sizeof(flags));[0m
      | [0;1;32m        ^~~~~~
[0m[1mhelp.c:418:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  419 |                 blank_statusbar();[0m
      | [0;1;32m                                  
[0m[1mhelp.c:455:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |         while (*start_of_body == '\n')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  456 |                 start_of_body++;[0m
      | [0;1;32m                                
[0m[1mhelp.c:488:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |                         if (openfile->edittop->lineno + editwinrows - 1 < openfile->filebot->lineno)[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m  489 |                                 do_scroll_down();[0m
      | [0;1;32m                                                 
[0m[1mhelp.c:512:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  512 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  513 |                         unbound_key(kbinput);[0m
      | [0;1;32m                                             
[0m[1mhelp.c:531:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  531 |         memcpy(flags, stash, sizeof(flags));[0m
      | [0;1;32m        ^~~~~~
[0m[1mhelp.c:531:2: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  531 |         memcpy(flags, stash, sizeof(flags));[0m
      | [0;1;32m        ^~~~~~
[0m[1mhelp.c:552:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |         if (ISSET(NO_HELP) || ISSET(ZERO))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  553 |                 window_init();[0m
  554 |         else[0m
      | [0;32m        } 
[0m[1mhelp.c:554:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  555 |                 blank_statusbar();[0m
      | [0;1;32m                                  
[0m[1mhelp.c:560:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |         if (oldmenu & (MBROWSER|MWHEREISFILE|MGOTODIR))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  561 |                 browser_refresh();[0m
  562 |         else[0m
      | [0;32m        } 
[0m43 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[59/70][108.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp70rtyhp5.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/browser.c
[1mbrowser.c:59:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   59 |                 if (span > widest)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   60 |                         widest = span;[0m
      | [0;1;32m                                      
[0m[1mbrowser.c:69:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |         if (gauge < 15)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   70 |                 gauge = 15;[0m
      | [0;1;32m                           
[0m[1mbrowser.c:72:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |         if (gauge > COLS)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   73 |                 gauge = COLS;[0m
      | [0;1;32m                             
[0m[1mbrowser.c:86:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |                 if (strcmp(entry->d_name, ".") == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m   87 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mbrowser.c:90:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   90 |                 sprintf(filelist[index], "%s%s", path, entry->d_name);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mbrowser.c:90:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   90 |                 sprintf(filelist[index], "%s%s", path, entry->d_name);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mbrowser.c:115:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |         while (looking_at < list_length && strcmp(filelist[looking_at], name) != 0)[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m  116 |                 looking_at++;[0m
      | [0;1;32m                             
[0m[1mbrowser.c:121:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |         if (looking_at < list_length)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  122 |                 selected = looking_at;[0m
  123 |         else if (selected > list_length)[0m
      | [0;32m        } 
[0m[1mbrowser.c:123:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |         else if (selected > list_length)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  124 |                 selected = list_length - 1;[0m
  125 |         else[0m
      | [0;32m        } 
[0m[1mbrowser.c:125:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  126 |                 --selected;[0m
      | [0;1;32m                           
[0m[1mbrowser.c:172:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |                 if (dots)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  173 |                         mvwaddstr(midwin, row, col, "...");[0m
      | [0;1;32m                                                           
[0m[1mbrowser.c:182:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |                         if (stat(filelist[index], &state) == -1 || !S_ISDIR(state.st_mode))[0m
      | [0;1;32m                                                                                           ^
[0m      | [0;32m                                                                                            {
[0m  183 |                                 info = copy_of("--");[0m
  184 |                         else[0m
      | [0;32m                        } 
[0m[1mbrowser.c:184:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  185 |                                 /* TRANSLATORS: Try to keep this at most 7 characters. */[0m
  186 |                                 info = copy_of(_("(dir)"));[0m
      | [0;1;32m                                                           
[0m[1mbrowser.c:192:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  193 |                                 info = copy_of(_("(dir)"));[0m
      | [0;1;32m                                                           
[0m[1mbrowser.c:201:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |                         if (state.st_size < (1 << 10))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  202 |                                 modifier = ' ';  /* bytes */[0m
  203 |                         else if (state.st_size < (1 << 20)) {[0m
      | [0;32m                        } 
[0m[1mbrowser.c:215:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |                         if (result < (1 << 10))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  216 |                                 sprintf(info, "%4ju %cB", (intmax_t)result, modifier);[0m
  217 |                         else[0m
      | [0;32m                        } 
[0m[1mbrowser.c:216:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  216 |                                 sprintf(info, "%4ju %cB", (intmax_t)result, modifier);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mbrowser.c:216:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  216 |                                 sprintf(info, "%4ju %cB", (intmax_t)result, modifier);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mbrowser.c:217:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  218 |                                 /* TRANSLATORS: Try to keep this at most 7 characters.[0m
  219 |                                  * If necessary, you can leave out the parentheses. */[0m
  220 |                                 info = mallocstrcpy(info, _("(huge)"));[0m
      | [0;1;32m                                                                       
[0m[1mbrowser.c:233:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |                 if (index == selected)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  234 |                         wattroff(midwin, interface_color_pair[SELECTED_TEXT]);[0m
      | [0;1;32m                                                                              
[0m[1mbrowser.c:280:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |                         if (selected == began_at)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  281 |                                 statusbar(_("This is the only occurrence"));[0m
      | [0;1;32m                                                                            
[0m[1mbrowser.c:306:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  306 |                 sprintf(thedefault, " [%s%s]", disp,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mbrowser.c:306:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  306 |                 sprintf(thedefault, " [%s%s]", disp,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mbrowser.c:309:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  310 |                 thedefault = copy_of("");[0m
      | [0;1;32m                                         
[0m[1mbrowser.c:334:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |         if (response == 0 || response == -2)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  335 |                 findfile(last_search, forwards);[0m
      | [0;1;32m                                                
[0m[1mbrowser.c:344:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |         if (*last_search == '\0' && searchbot->prev != NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  345 |                 last_search = mallocstrcpy(last_search, searchbot->prev->data);[0m
      | [0;1;32m                                                                               
[0m[1mbrowser.c:348:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  348 |         if (*last_search == '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  349 |                 statusbar(_("No current search pattern"));[0m
  350 |         else {[0m
      | [0;32m        } 
[0m[1mbrowser.c:375:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |         if (last_slash != NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  376 |                 *last_slash = '\0';[0m
      | [0;1;32m                                   
[0m[1mbrowser.c:400:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |         if (path != NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  401 |                 dir = opendir(path);[0m
      | [0;1;32m                                    
[0m[1mbrowser.c:417:10: [0m[0;1;35mwarning: [0m[1mThe left operand of '!=' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
  417 |         if (dir != NULL) {[0m
      | [0;1;32m            ~~~ ^
[0m[1mbrowser.c:390:2: [0m[0;1;36mnote: [0m'dir' declared without an initial value[0m
  390 |         DIR *dir;[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mbrowser.c:400:6: [0m[0;1;36mnote: [0mAssuming 'path' is equal to NULL[0m
  400 |         if (path != NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mbrowser.c:400:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  400 |         if (path != NULL)[0m
      | [0;1;32m        ^
[0m[1mbrowser.c:403:6: [0m[0;1;36mnote: [0m'path' is equal to NULL[0m
  403 |         if (path == NULL || dir == NULL) {[0m
      | [0;1;32m            ^~~~
[0m[1mbrowser.c:403:19: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  403 |         if (path == NULL || dir == NULL) {[0m
      | [0;1;32m                         ^
[0m[1mbrowser.c:406:7: [0m[0;1;36mnote: [0mAssuming 'filelist' is not equal to NULL[0m
  406 |                 if (filelist == NULL) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~
[0m[1mbrowser.c:406:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  406 |                 if (filelist == NULL) {[0m
      | [0;1;32m                ^
[0m[1mbrowser.c:417:10: [0m[0;1;36mnote: [0mThe left operand of '!=' is a garbage value[0m
  417 |         if (dir != NULL) {[0m
      | [0;1;32m            ~~~ ^
[0m[1mbrowser.c:430:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  431 |                 selected = 0;[0m
      | [0;1;32m                             
[0m[1mbrowser.c:449:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |                 if (old_selected != selected || ISSET(SHOW_CURSOR))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  450 |                         browser_refresh();[0m
      | [0;1;32m                                          
[0m[1mbrowser.c:467:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |                                 if (mouse_x > piles * (gauge + 2))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  468 |                                         selected--;[0m
      | [0;1;32m                                                   
[0m[1mbrowser.c:471:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |                                 if (selected > list_length - 1)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  472 |                                         selected = list_length - 1;[0m
      | [0;1;32m                                                                   
[0m[1mbrowser.c:475:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  475 |                                 if (old_selected == selected)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  476 |                                         kbinput = KEY_ENTER;[0m
      | [0;1;32m                                                            
[0m[1mbrowser.c:479:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |                         if (kbinput == KEY_MOUSE)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  480 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mbrowser.c:484:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |                 while (bracketed_paste)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  485 |                         kbinput = get_kbinput(midwin, BLIND);[0m
      | [0;1;32m                                                             
[0m[1mbrowser.c:513:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  513 |                         if (selected > 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  514 |                                 selected--;[0m
      | [0;1;32m                                           
[0m[1mbrowser.c:516:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |                         if (selected < list_length - 1)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  517 |                                 selected++;[0m
      | [0;1;32m                                           
[0m[1mbrowser.c:522:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |                         if (selected >= list_length)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  523 |                                 selected = list_length - 1;[0m
      | [0;1;32m                                                           
[0m[1mbrowser.c:525:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  525 |                         if (selected >= piles)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  526 |                                 selected -= piles;[0m
      | [0;1;32m                                                  
[0m[1mbrowser.c:528:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |                         if (selected + piles <= list_length - 1)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  529 |                                 selected += piles;[0m
      | [0;1;32m                                                  
[0m[1mbrowser.c:536:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |                         if (selected >= list_length)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  537 |                                 selected = (list_length / piles) * piles + selected % piles;[0m
      | [0;1;32m                                                                                            
[0m[1mbrowser.c:538:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |                         if (selected >= list_length)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  539 |                                 selected -= piles;[0m
      | [0;1;32m                                                  
[0m[1mbrowser.c:541:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |                         if (selected < piles)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  542 |                                 selected = 0;[0m
  543 |                         else if (selected < usable_rows * piles)[0m
      | [0;32m                        } 
[0m[1mbrowser.c:543:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  543 |                         else if (selected < usable_rows * piles)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  544 |                                 selected = selected % piles;[0m
  545 |                         else[0m
      | [0;32m                        } 
[0m[1mbrowser.c:545:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  546 |                                 selected -= usable_rows * piles;[0m
      | [0;1;32m                                                                
[0m[1mbrowser.c:548:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  548 |                         if (selected + piles >= list_length - 1)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  549 |                                 selected = list_length - 1;[0m
  550 |                         else if (selected + usable_rows * piles >= list_length)[0m
      | [0;32m                        } 
[0m[1mbrowser.c:550:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |                         else if (selected + usable_rows * piles >= list_length)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  551 |                                 selected = (selected + usable_rows * piles - list_length) % piles +[0m
  552 |                                                                 list_length - piles;[0m
  553 |                         else[0m
      | [0;32m                        } 
[0m[1mbrowser.c:553:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  553 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  554 |                                 selected += usable_rows * piles;[0m
      | [0;1;32m                                                                
[0m[1mbrowser.c:574:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  574 |                                 sprintf(path, "%s%s", present_path, answer);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mbrowser.c:574:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  574 |                                 sprintf(path, "%s%s", present_path, answer);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mbrowser.c:587:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  587 |                         while (strlen(path) > 1 && path[strlen(path) - 1] == '/')[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  588 |                                 path[strlen(path) - 1] = '\0';[0m
      | [0;1;32m                                                              
[0m[1mbrowser.c:592:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  592 |                         for (size_t j = 0; j < list_length; j++)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  593 |                                 if (strcmp(filelist[j], path) == 0)[0m
  594 |                                         selected = j;[0m
      | [0;1;32m                                                     
[0m[1mbrowser.c:593:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |                                 if (strcmp(filelist[j], path) == 0)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  594 |                                         selected = j;[0m
      | [0;1;32m                                                     
[0m[1mbrowser.c:631:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  631 |                         if (strcmp(tail(filelist[selected]), "..") == 0)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  632 |                                 present_name = strip_last_component(filelist[selected]);[0m
      | [0;1;32m                                                                                        
[0m[1mbrowser.c:647:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  648 |                         unbound_key(kbinput);[0m
      | [0;1;32m                                             
[0m[1mbrowser.c:698:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  698 |         if (outside_of_confinement(path, FALSE))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  699 |                 path = mallocstrcpy(path, operating_dir);[0m
      | [0;1;32m                                                         
[0m56 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[60/70][108.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp9gm2gg2k.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/vasnprintf.c
[1mvasnprintf.c:1862:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1862 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1863 |     /* errno is already set.  */[0m
 1864 |     return NULL;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1873:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1873 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1874 |     goto fail_1_with_EINVAL;[0m
      | [0;1;32m                            
[0m[1mvasnprintf.c:1902:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1902 |         if (size_overflow_p (buf_memsize))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1903 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1905:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1905 |         if (buf == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1906 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1952:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1958:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1958 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1958:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1958 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1963:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1963 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1964 |                   result[length++] = *cp++;[0m
 1965 |                 while (--n > 0);[0m
      | [0;32m                } 
[0m[1mvasnprintf.c:1968:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1968 |         if (i == d.count)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1969 |           break;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1976:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1976 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1977 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:1979:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1979 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1979:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1979 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1980:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1980 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1862:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1862 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:155:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  155 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1862:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1862 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1873:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1873 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1873:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1873 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1893:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1893 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1893:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1893 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1911:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1911 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1911:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:1945:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1945 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1947:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1947 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1947:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1947 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1921:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1921:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1926:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1926 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1926:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1926 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1927:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1927 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1927:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1927 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1929:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1929 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:97:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   97 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1930:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1930 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:101:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  101 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1930:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1930 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1932:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1932 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1932:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1932 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1936:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1936 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1936:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1936 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1938:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1938 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1938:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1938 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1938:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1938 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1938:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1938 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1956:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1956 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1968:13: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to field 'count'[0m
 1968 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1968:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1968 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1972:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1972 |         if (dp->conversion == '%')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1972:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1972 |         if (dp->conversion == '%')[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1976:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1976 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1976:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1976 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1978:32: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 1978 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   66 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:1978:32: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 1978 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1979:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is <= 'allocated'[0m
 1979 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1921:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1979:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1979 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1921:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1980:13: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 1980 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1985:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1985 |             if (!(dp->arg_index != ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1986 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:1993:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1993 |                     *a.arg[dp->arg_index].a.a_count_schar_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1994 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:1996:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1996 |                     *a.arg[dp->arg_index].a.a_count_short_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1997 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:1999:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1999 |                     *a.arg[dp->arg_index].a.a_count_int_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2000 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2002:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2002 |                     *a.arg[dp->arg_index].a.a_count_longint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2003 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2005:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2005 |                     *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2006 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2008:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2008 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mvasnprintf.c:4894:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4894 |                 if (flags & FLAG_GROUP)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 4895 |                   *fbp++ = '\'';[0m
      | [0;1;32m                                
[0m[1mvasnprintf.c:4897:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4897 |                 if (flags & FLAG_LEFT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 4898 |                   *fbp++ = '-';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4899:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4899 |                 if (flags & FLAG_SHOWSIGN)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 4900 |                   *fbp++ = '+';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4901:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4901 |                 if (flags & FLAG_SPACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 4902 |                   *fbp++ = ' ';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4903:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4903 |                 if (flags & FLAG_ALT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 4904 |                   *fbp++ = '#';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4906:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4906 |                 if (flags & FLAG_LOCALIZED)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 4907 |                   *fbp++ = 'I';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4911:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4911 |                     if (flags & FLAG_ZERO)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 4912 |                       *fbp++ = '0';[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:4920:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4920 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:4920:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 4920 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:4926:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4926 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4927 |                               *fbp++ = *mp++;[0m
 4928 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:4941:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4941 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:4941:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 4941 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:4947:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4947 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4948 |                               *fbp++ = *mp++;[0m
 4949 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:4966:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4966 |                     FALLTHROUGH;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                    {           ;} 
[0m[1m./attribute.h:150:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  150 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2005:37: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2005 | #  define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                    ^
[0m[1mvasnprintf.c:4976:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4976 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:4978:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4978 |                     *fbp++ = 'L';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 4979 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:4981:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4981 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5045:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5045 |                     if (!(a.arg[dp->width_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 5046 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5051:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5051 |                     if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 5052 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5065:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5065 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5065:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5065 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5084:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5084 |                     if (maxlen > INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 5085 |                       maxlen = INT_MAX / TCHARS_PER_DCHAR;[0m
      | [0;1;32m                                                          
[0m[1mvasnprintf.c:5132:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5132 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5133 |                           int arg = a.arg[dp->arg_index].a.a_schar;[0m
 5134 |                           SNPRINTF_BUF (arg);[0m
 5135 |                         }[0m
 5136 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5134:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5134 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5134:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5134 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5138:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5138 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5139 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uchar;[0m
 5140 |                           SNPRINTF_BUF (arg);[0m
 5141 |                         }[0m
 5142 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5140:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5140 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5140:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5140 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5144:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5144 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5145 |                           int arg = a.arg[dp->arg_index].a.a_short;[0m
 5146 |                           SNPRINTF_BUF (arg);[0m
 5147 |                         }[0m
 5148 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5146:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5146 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5146:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5146 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5150:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5150 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5151 |                           unsigned int arg = a.arg[dp->arg_index].a.a_ushort;[0m
 5152 |                           SNPRINTF_BUF (arg);[0m
 5153 |                         }[0m
 5154 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5152:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5152 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5152:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5152 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5156:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5156 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5157 |                           int arg = a.arg[dp->arg_index].a.a_int;[0m
 5158 |                           SNPRINTF_BUF (arg);[0m
 5159 |                         }[0m
 5160 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5158:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5158 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5158:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5158 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5162:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5162 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5163 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uint;[0m
 5164 |                           SNPRINTF_BUF (arg);[0m
 5165 |                         }[0m
 5166 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5164:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5164 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5164:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5164 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5168:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5168 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5169 |                           long int arg = a.arg[dp->arg_index].a.a_longint;[0m
 5170 |                           SNPRINTF_BUF (arg);[0m
 5171 |                         }[0m
 5172 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5170:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5170 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5170:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5170 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5174:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5174 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5175 |                           unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;[0m
 5176 |                           SNPRINTF_BUF (arg);[0m
 5177 |                         }[0m
 5178 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5176:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5176 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5176:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5176 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5180:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5180 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5181 |                           long long int arg = a.arg[dp->arg_index].a.a_longlongint;[0m
 5182 |                           SNPRINTF_BUF (arg);[0m
 5183 |                         }[0m
 5184 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5182:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5182 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5182:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5182 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5186:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5186 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5187 |                           unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;[0m
 5188 |                           SNPRINTF_BUF (arg);[0m
 5189 |                         }[0m
 5190 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5188:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5188 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5188:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5188 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5192:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5192 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5193 |                           double arg = a.arg[dp->arg_index].a.a_double;[0m
 5194 |                           SNPRINTF_BUF (arg);[0m
 5195 |                         }[0m
 5196 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5194:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5194 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5194:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5194 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5198:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5198 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5199 |                           long double arg = a.arg[dp->arg_index].a.a_longdouble;[0m
 5200 |                           SNPRINTF_BUF (arg);[0m
 5201 |                         }[0m
 5202 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5200:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5200 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5200:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5200 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5204:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5204 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5205 |                           int arg = a.arg[dp->arg_index].a.a_char;[0m
 5206 |                           SNPRINTF_BUF (arg);[0m
 5207 |                         }[0m
 5208 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5206:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5206 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5206:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5206 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5211:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5211 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5212 |                           wint_t arg = a.arg[dp->arg_index].a.a_wide_char;[0m
 5213 |                           SNPRINTF_BUF (arg);[0m
 5214 |                         }[0m
 5215 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5213:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5213 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5213:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5213 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5218:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5218 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5219 |                           const char *arg = a.arg[dp->arg_index].a.a_string;[0m
 5220 |                           SNPRINTF_BUF (arg);[0m
 5221 |                         }[0m
 5222 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5220:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5220 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5220:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5220 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5225:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5225 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5226 |                           const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;[0m
 5227 |                           SNPRINTF_BUF (arg);[0m
 5228 |                         }[0m
 5229 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5227:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5227 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5227:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5227 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5232:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5232 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5233 |                           void *arg = a.arg[dp->arg_index].a.a_pointer;[0m
 5234 |                           SNPRINTF_BUF (arg);[0m
 5235 |                         }[0m
 5236 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5234:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5234 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5234:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5234 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:5091:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 5091 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:204:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  204 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5238:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5238 |                         abort ();[0m
      | [0;1;32m                        ^       
[0m      | [0;32m                        {       ;} 
[0m[1mvasnprintf.c:5251:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5251 |                             && ((TCHAR_T *) (result + length)) [count] != '\0')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5252 |                           abort ();[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5254:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5254 |                         if (retcount > count)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 5255 |                           count = retcount;[0m
      | [0;1;32m                                           
[0m[1mvasnprintf.c:5313:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5313 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5314 |                               count = retcount;[0m
      | [0;1;32m                                               
[0m[1mvasnprintf.c:5326:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5326 |                             if (dp->conversion == 'c' || dp->conversion == 's')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5327 |                               errno = EILSEQ;[0m
 5328 |                             else[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5328:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5328 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5329 |                               errno = EINVAL;[0m
      | [0;1;32m                                             
[0m[1mvasnprintf.c:5346:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5346 |                         if (maxlen == INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 5347 |                           goto overflow;[0m
 5348 |                         else[0m
      | [0;32m                        } 
[0m[1mvasnprintf.c:5366:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5366 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5366:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5366 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5666:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5666 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5666:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5666 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1939:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1939 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:156:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  156 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5667:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 5667 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1862:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1862 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:155:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  155 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1862:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1862 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1873:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1873 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1873:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1873 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1893:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1893 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1893:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1893 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1911:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1911 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1911:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:1945:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1945 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1947:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1947 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1947:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1947 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1921:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1921:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1926:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1926 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1926:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1926 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1927:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1927 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1927:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1927 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1929:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1929 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:97:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   97 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1930:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1930 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:101:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  101 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1930:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1930 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1932:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1932 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1932:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1932 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1936:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1936 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1936:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1936 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1938:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1938 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1938:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1938 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1938:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1938 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1952:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1952 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1938:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1938 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1956:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1956 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1968:13: [0m[0;1;36mnote: [0mAssuming 'i' is equal to field 'count'[0m
 1968 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1968:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1968 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1969:11: [0m[0;1;36mnote: [0m Execution continues on line 5666[0m
 1969 |           break;[0m
      | [0;1;32m          ^
[0m[1mvasnprintf.c:5666:24: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 5666 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1943:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:1921:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   66 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:5666:24: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 5666 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1943:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:1921:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1mvasnprintf.c:5666:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 5666 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1921:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5666:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 5666 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1943:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1943 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1921:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 1921 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:5667:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 5667 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5675:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5675 |         if (memory != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 5676 |           result = memory;[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5679:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5679 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5680 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5706:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5706 |     if (result != resultbuf)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 5707 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:5708:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5708 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5709 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m121 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[61/70][141.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpdy1mont3.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/nano.c
[1mnano.c:90:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |         if (afterthis->next != NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   91 |                 afterthis->next->prev = newnode;[0m
      | [0;1;32m                                                
[0m[1mnano.c:95:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |         if (openfile && openfile->filebot == afterthis)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m   96 |                 openfile->filebot = newnode;[0m
      | [0;1;32m                                            
[0m[1mnano.c:103:14: [0m[0;1;35mwarning: [0m[1mAccess to field 'edittop' results in a dereference of a null pointer (loaded from variable 'openfile') [clang-analyzer-core.NullDereference][0m
  103 |         if (line == openfile->edittop)[0m
      | [0;1;32m                    ^
[0m[1mnano.c:120:6: [0m[0;1;36mnote: [0mAssuming field 'prev' is equal to NULL[0m
  120 |         if (line->prev != NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mnano.c:120:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  120 |         if (line->prev != NULL)[0m
      | [0;1;32m        ^
[0m[1mnano.c:122:6: [0m[0;1;36mnote: [0mAssuming field 'next' is equal to NULL[0m
  122 |         if (line->next != NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mnano.c:122:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  122 |         if (line->next != NULL)[0m
      | [0;1;32m        ^
[0m[1mnano.c:126:6: [0m[0;1;36mnote: [0mAssuming 'openfile' is null[0m
  126 |         if (openfile && openfile->filebot == line)[0m
      | [0;1;32m            ^~~~~~~~
[0m[1mnano.c:126:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  126 |         if (openfile && openfile->filebot == line)[0m
      | [0;1;32m                     ^
[0m[1mnano.c:129:2: [0m[0;1;36mnote: [0mCalling 'delete_node'[0m
  129 |         delete_node(line);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mnano.c:103:14: [0m[0;1;36mnote: [0mAccess to field 'edittop' results in a dereference of a null pointer (loaded from variable 'openfile')[0m
  103 |         if (line == openfile->edittop)[0m
      | [0;1;32m                    ^~~~~~~~
[0m[1mnano.c:103:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |         if (line == openfile->edittop)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  104 |                 openfile->edittop = line->prev;[0m
      | [0;1;32m                                               
[0m[1mnano.c:107:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |         if (line == openfile->spillage_line)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  108 |                 openfile->spillage_line = NULL;[0m
      | [0;1;32m                                               
[0m[1mnano.c:110:7: [0m[0;1;35mwarning: [0m[1mAccess to field 'data' results in a dereference of a null pointer (loaded from variable 'line') [clang-analyzer-core.NullDereference][0m
  110 |         free(line->data);[0m
      | [0;1;32m             ^
[0m[1mnano.c:1573:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1573 |         if (input == KEY_WINCH)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1573:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1573 |         if (input == KEY_WINCH)[0m
      | [0;1;32m        ^
[0m[1mnano.c:1577:6: [0m[0;1;36mnote: [0mAssuming 'input' is not equal to KEY_MOUSE[0m
 1577 |         if (input == KEY_MOUSE) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1577:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1577 |         if (input == KEY_MOUSE) {[0m
      | [0;1;32m        ^
[0m[1mnano.c:1589:14: [0m[0;1;36mnote: [0mAssuming 'shortcut' is non-null[0m
 1589 |         function = (shortcut ? shortcut->func : NULL);[0m
      | [0;1;32m                    ^~~~~~~~
[0m[1mnano.c:1589:14: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mnano.c:1592:6: [0m[0;1;36mnote: [0mAssuming 'function' is non-null[0m
 1592 |         if (!function) {[0m
      | [0;1;32m            ^~~~~~~~~
[0m[1mnano.c:1592:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1592 |         if (!function) {[0m
      | [0;1;32m        ^
[0m[1mnano.c:1618:6: [0m[0;1;36mnote: [0m'depth' is <= 0[0m
 1618 |         if (depth > 0 && (function || waiting_keycodes() == 0)) {[0m
      | [0;1;32m            ^~~~~
[0m[1mnano.c:1618:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1618 |         if (depth > 0 && (function || waiting_keycodes() == 0)) {[0m
      | [0;1;32m                      ^
[0m[1mnano.c:1624:7: [0m[0;1;36mnote: [0m'function' is non-null[0m
 1624 |         if (!function) {[0m
      | [0;1;32m             ^~~~~~~~
[0m[1mnano.c:1624:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1624 |         if (!function) {[0m
      | [0;1;32m        ^
[0m[1mnano.c:1630:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1630 |         if (ISSET(VIEW_MODE) && changes_something(function)) {[0m
      | [0;1;32m            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1630:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1630 |         if (ISSET(VIEW_MODE) && changes_something(function)) {[0m
      | [0;1;32m                             ^
[0m[1mnano.c:1635:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1635 |         if (input == '\b' && give_a_hint && openfile->current_x == 0 &&[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mnano.c:1635:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1635 |         if (input == '\b' && give_a_hint && openfile->current_x == 0 &&[0m
      | [0;1;32m                          ^
[0m[1mnano.c:1639:13: [0m[0;1;36mnote: [0mAssuming 'meta_key' is false[0m
 1639 |         } else if (meta_key)[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mnano.c:1639:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1639 |         } else if (meta_key)[0m
      | [0;1;32m               ^
[0m[1mnano.c:1643:6: [0m[0;1;36mnote: [0mAssuming 'function' is equal to cut_text[0m
 1643 |         if (function != cut_text) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1643:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1643 |         if (function != cut_text) {[0m
      | [0;1;32m        ^
[0m[1mnano.c:1651:6: [0m[0;1;36mnote: [0mAssuming 'function' is equal to complete_a_word[0m
 1651 |         if (function != complete_a_word)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1651:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1651 |         if (function != complete_a_word)[0m
      | [0;1;32m        ^
[0m[1mnano.c:1655:6: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to implant[0m
 1655 |         if (function == (functionptrtype)implant) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1655:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1655 |         if (function == (functionptrtype)implant) {[0m
      | [0;1;32m        ^
[0m[1mnano.c:1661:6: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to do_toggle[0m
 1661 |         if (function == do_toggle) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1661:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1661 |         if (function == do_toggle) {[0m
      | [0;1;32m        ^
[0m[1mnano.c:1672:6: [0m[0;1;36mnote: [0mAssuming 'shift_held' is false[0m
 1672 |         if (shift_held && !openfile->mark) {[0m
      | [0;1;32m            ^~~~~~~~~~
[0m[1mnano.c:1672:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1672 |         if (shift_held && !openfile->mark) {[0m
      | [0;1;32m                       ^
[0m[1mnano.c:1686:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is null[0m
 1686 |         if (openfile->mark && openfile->softmark && !shift_held &&[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mnano.c:1686:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1686 |         if (openfile->mark && openfile->softmark && !shift_held &&[0m
      | [0;1;32m                           ^
[0m[1mnano.c:1692:13: [0m[0;1;36mnote: [0mAssuming 'was_current' is equal to field 'current'[0m
 1692 |         } else if (openfile->current != was_current)[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1692:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1692 |         } else if (openfile->current != was_current)[0m
      | [0;1;32m               ^
[0m[1mnano.c:1695:6: [0m[0;1;36mnote: [0mAssuming 'bracketed_paste' is true[0m
 1695 |         if (bracketed_paste)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~
[0m[1mnano.c:1695:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1695 |         if (bracketed_paste)[0m
      | [0;1;32m        ^
[0m[1mnano.c:1696:3: [0m[0;1;36mnote: [0mCalling 'suck_up_input_and_paste_it'[0m
 1696 |                 suck_up_input_and_paste_it();[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1429:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1446[0m
 1429 |         while (bracketed_paste) {[0m
      | [0;1;32m        ^
[0m[1mnano.c:1446:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1446 |         if (ISSET(VIEW_MODE))[0m
      | [0;1;32m            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:1446:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1446 |         if (ISSET(VIEW_MODE))[0m
      | [0;1;32m        ^
[0m[1mnano.c:1451:2: [0m[0;1;36mnote: [0mCalling 'free_lines'[0m
 1451 |         free_lines(cutbuffer);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:135:6: [0m[0;1;36mnote: [0mAssuming 'src' is not equal to NULL[0m
  135 |         if (src == NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mnano.c:135:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  135 |         if (src == NULL)[0m
      | [0;1;32m        ^
[0m[1mnano.c:138:9: [0m[0;1;36mnote: [0mAssuming field 'next' is not equal to NULL[0m
  138 |         while (src->next != NULL) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~
[0m[1mnano.c:138:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  138 |         while (src->next != NULL) {[0m
      | [0;1;32m        ^
[0m[1mnano.c:138:9: [0m[0;1;36mnote: [0mAssuming field 'next' is not equal to NULL[0m
  138 |         while (src->next != NULL) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~
[0m[1mnano.c:138:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  138 |         while (src->next != NULL) {[0m
      | [0;1;32m        ^
[0m[1mnano.c:140:15: [0m[0;1;36mnote: [0mPassing value via 1st parameter 'line'[0m
  140 |                 delete_node(src->prev);[0m
      | [0;1;32m                            ^~~~~~~~~
[0m[1mnano.c:140:3: [0m[0;1;36mnote: [0mCalling 'delete_node'[0m
  140 |                 delete_node(src->prev);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:103:6: [0m[0;1;36mnote: [0mAssuming 'line' is not equal to field 'edittop'[0m
  103 |         if (line == openfile->edittop)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:103:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  103 |         if (line == openfile->edittop)[0m
      | [0;1;32m        ^
[0m[1mnano.c:107:6: [0m[0;1;36mnote: [0mAssuming 'line' is equal to field 'spillage_line'[0m
  107 |         if (line == openfile->spillage_line)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnano.c:107:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  107 |         if (line == openfile->spillage_line)[0m
      | [0;1;32m        ^
[0m[1mnano.c:110:7: [0m[0;1;36mnote: [0mAccess to field 'data' results in a dereference of a null pointer (loaded from variable 'line')[0m
  110 |         free(line->data);[0m
      | [0;1;32m             ^~~~
[0m[1mnano.c:120:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  120 |         if (line->prev != NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  121 |                 line->prev->next = line->next;[0m
      | [0;1;32m                                              
[0m[1mnano.c:122:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |         if (line->next != NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  123 |                 line->next->prev = line->prev;[0m
      | [0;1;32m                                              
[0m[1mnano.c:126:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |         if (openfile && openfile->filebot == line)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  127 |                 openfile->filebot = line->prev;[0m
      | [0;1;32m                                               
[0m[1mnano.c:135:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  135 |         if (src == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  136 |                 return;[0m
      | [0;1;32m                       
[0m[1mnano.c:211:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  212 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mnano.c:221:94: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |                         first_sc_for(MEXECUTE, do_suspend) && first_sc_for(MEXECUTE, do_suspend)->keycode == 0x1A)[0m
      | [0;1;32m                                                                                                                  ^
[0m      | [0;32m                                                                                                                   {
[0m  222 | #endif[0m
  223 |                 statusline(AHEM, _("To suspend, type ^T^Z"));[0m
      | [0;1;32m                                                             
[0m[1mnano.c:250:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |         if (topwin != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  251 |                 delwin(topwin);[0m
      | [0;1;32m                               
[0m[1mnano.c:270:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |         if (openfile->lock_filename)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  271 |                 delete_lockfile(openfile->lock_filename);[0m
      | [0;1;32m                                                         
[0m[1mnano.c:274:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |         if (ISSET(POSITIONLOG))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  275 |                 update_poshistory();[0m
      | [0;1;32m                                    
[0m[1mnano.c:290:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |                 if (ISSET(HISTORYLOG))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  291 |                         save_history();[0m
      | [0;1;32m                                       
[0m[1mnano.c:306:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |         if (!openfile->modified)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  307 |                 choice = NO;[0m
  308 |         else if (ISSET(SAVE_ON_EXIT) && openfile->filename[0] != '\0')[0m
      | [0;32m        } 
[0m[1mnano.c:308:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |         else if (ISSET(SAVE_ON_EXIT) && openfile->filename[0] != '\0')[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  309 |                 choice = YES;[0m
  310 |         else {[0m
      | [0;32m        } 
[0m[1mnano.c:311:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |                 if (ISSET(SAVE_ON_EXIT))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  312 |                         warn_and_briefly_pause(_("No file name"));[0m
      | [0;1;32m                                                                  
[0m[1mnano.c:318:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |         if (choice == NO || (choice == YES && write_it_out(TRUE, TRUE) > 0))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  319 |                 close_and_go();[0m
  320 |         else if (choice != YES)[0m
      | [0;32m        } 
[0m[1mnano.c:320:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |         else if (choice != YES)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  321 |                 statusbar(_("Cancelled"));[0m
      | [0;1;32m                                          
[0m[1mnano.c:332:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  332 |                 sprintf(plainname, "nano.%u", getpid());[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnano.c:332:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  332 |                 sprintf(plainname, "nano.%u", getpid());[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnano.c:333:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  334 |                 plainname = copy_of(filename);[0m
      | [0;1;32m                                              
[0m[1mnano.c:338:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |         if (*targetname == '\0')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  339 |                 fprintf(stderr, _("\nToo many .save files\n"));[0m
  340 |         else if (write_file(targetname, NULL, SPECIAL, OVERWRITE, NONOTES)) {[0m
      | [0;32m        } 
[0m[1mnano.c:339:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  339 |                 fprintf(stderr, _("\nToo many .save files\n"));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnano.c:339:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  339 |                 fprintf(stderr, _("\nToo many .save files\n"));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnano.c:341:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  341 |                 fprintf(stderr, _("\nBuffer written to %s\n"), targetname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnano.c:341:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  341 |                 fprintf(stderr, _("\nBuffer written to %s\n"), targetname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnano.c:366:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |         if (++stabs > 1)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  367 |                 exit(11);[0m
      | [0;1;32m                         
[0m[1mnano.c:383:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |                 if (openfile->lock_filename)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  384 |                         delete_lockfile(openfile->lock_filename);[0m
      | [0;1;32m                                                                 
[0m[1mnano.c:388:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |                 if (openfile->modified && !ISSET(RESTRICTED))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  389 |                         emergency_save(openfile->filename);[0m
      | [0;1;32m                                                           
[0m[1mnano.c:394:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |                 if (openfile == firstone)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  395 |                         break;[0m
      | [0;1;32m                              
[0m[1mnano.c:407:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |                 if (topwin != NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  408 |                         delwin(topwin);[0m
      | [0;1;32m                                       
[0m[1mnano.c:426:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  426 |                 if (ISSET(MINIBAR) || ISSET(ZERO))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  427 |                         toprows = 0;[0m
      | [0;1;32m                                    
[0m[1mnano.c:432:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |                 if (toprows > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  433 |                         topwin = newwin(toprows, COLS, 0, 0);[0m
      | [0;1;32m                                                             
[0m[1mnano.c:449:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |         if (COLS + fill < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  450 |                 wrap_at = 0;[0m
  451 |         else if (fill <= 0)[0m
      | [0;32m        } 
[0m[1mnano.c:451:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |         else if (fill <= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  452 |                 wrap_at = COLS + fill;[0m
  453 |         else[0m
      | [0;32m        } 
[0m[1mnano.c:453:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  454 |                 wrap_at = fill;[0m
      | [0;1;32m                               
[0m[1mnano.c:474:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |         if (ISSET(USE_MOUSE))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  475 |                 enable_mouse_support();[0m
  476 |         else[0m
      | [0;32m        } 
[0m[1mnano.c:476:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  477 |                 disable_mouse_support();[0m
      | [0;1;32m                                        
[0m[1mnano.c:488:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |         if (firstwidth < 14)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  489 |                 printf("%*s", 14 - firstwidth, " ");[0m
      | [0;1;32m                                                    
[0m[1mnano.c:492:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |         if (secondwidth < 24)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  493 |                 printf("%*s", 24 - secondwidth, " ");[0m
      | [0;1;32m                                                     
[0m[1mnano.c:524:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  525 |                 print_opt("-F", "--multibuffer",[0m
  526 |                                         N_("Read a file into a new buffer by default"));[0m
      | [0;1;32m                                                                                        
[0m[1mnano.c:532:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  533 |                 print_opt("-H", "--historylog",[0m
  534 |                                         N_("Save & reload old search/replace strings"));[0m
      | [0;1;32m                                                                                        
[0m[1mnano.c:560:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  561 |                 print_opt("-P", "--positionlog",[0m
  562 |                                         N_("Save & restore position of the cursor"));[0m
      | [0;1;32m                                                                                     
[0m[1mnano.c:570:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  570 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  571 |                 print_opt("-R", "--restricted", N_("Restrict access to the filesystem"));[0m
      | [0;1;32m                                                                                         
[0m[1mnano.c:586:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  586 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  587 |                 print_opt(_("-Y <name>"), _("--syntax=<name>"),[0m
  588 |                                         N_("Syntax definition to use for coloring"));[0m
      | [0;1;32m                                                                                     
[0m[1mnano.c:638:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  638 |         if (!ISSET(RESTRICTED))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  639 |                 print_opt(_("-s <program>"), _("--speller=<program>"),[0m
  640 |                                         N_("Use this alternative spell checker"));[0m
      | [0;1;32m                                                                                  
[0m[1mnano.c:837:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  837 |         if (thetty < 0 || dup2(thetty, STDIN_FILENO) < 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  838 |                 die(_("Could not reconnect stdin to keyboard\n"));[0m
      | [0;1;32m                                                                  
[0m[1mnano.c:843:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  843 |         if (!control_C_was_pressed)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  844 |                 tcgetattr(STDIN_FILENO, &original_state);[0m
      | [0;1;32m                                                         
[0m[1mnano.c:855:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  855 |         if (isatty(STDIN_FILENO))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  856 |                 fprintf(stderr, _("Reading data from keyboard; "[0m
  857 |                                                         "type ^D or ^D^D to finish.\n"));[0m
      | [0;1;32m                                                                                         
[0m[1mnano.c:856:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  856 |                 fprintf(stderr, _("Reading data from keyboard; "[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnano.c:856:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  856 |                 fprintf(stderr, _("Reading data from keyboard; "[0m
      | [0;1;32m                ^~~~~~~
[0m[1mnano.c:883:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  883 |         if (!ISSET(VIEW_MODE) && openfile->totsize > 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  884 |                 set_modified();[0m
      | [0;1;32m                               
[0m[1mnano.c:982:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  982 |         if (in_restricted_mode())[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  983 |                 return;[0m
      | [0;1;32m                       
[0m[1mnano.c:995:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  995 |         if (ISSET(USE_MOUSE))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  996 |                 enable_mouse_support();[0m
      | [0;1;32m                                       
[0m[1mnano.c:1024:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1024 |         if (the_window_resized)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1025 |                 regenerate_screen();[0m
      | [0;1;32m                                    
[0m[1mnano.c:1076:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1076 |                         window_init();[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1077 |                         draw_all_subwindows();[0m
 1078 |                         return;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnano.c:1080:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1080 |                         if (LINES < 6) {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1081 |                                 statusline(AHEM, _("Too tiny"));[0m
 1082 |                                 TOGGLE(flag);[0m
 1083 |                                 return;[0m
 1084 |                         }[0m
 1085 |                         window_init();[0m
 1086 |                         draw_all_subwindows();[0m
 1087 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mnano.c:1089:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1089 |                         if (ISSET(ZERO) || LINES == 1) {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1090 |                                 statusline(AHEM, _("Not possible"));[0m
 1091 |                                 TOGGLE(flag);[0m
 1092 |                         } else if (!ISSET(MINIBAR))[0m
 1093 |                                 wipe_statusbar();[0m
 1094 |                         return;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnano.c:1092:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1092 |                         } else if (!ISSET(MINIBAR))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1093 |                                 wipe_statusbar();[0m
      | [0;1;32m                                                 
[0m[1mnano.c:1096:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1096 |                         if (!ISSET(SOFTWRAP))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1097 |                                 openfile->firstcolumn = 0;[0m
 1098 |                         refresh_needed = TRUE;[0m
 1099 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mnano.c:1096:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |                         if (!ISSET(SOFTWRAP))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1097 |                                 openfile->firstcolumn = 0;[0m
      | [0;1;32m                                                          
[0m[1mnano.c:1101:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1101 |                         titlebar(NULL);[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1102 |                         refresh_needed = TRUE;[0m
 1103 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mnano.c:1106:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1106 |                         precalc_multicolorinfo();[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1107 |                         refresh_needed = TRUE;[0m
 1108 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mnano.c:1110:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1110 |                         if (openfile->syntax && openfile->syntax->tab) {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1111 |                                 statusline(AHEM, _("Current syntax determines Tab"));[0m
 1112 |                                 TOGGLE(flag);[0m
 1113 |                                 return;[0m
 1114 |                         }[0m
 1115 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mnano.c:1119:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1119 |                         mouse_init();[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1120 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mnano.c:1125:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |                 if (ISSET(MINIBAR) && !ISSET(ZERO) && ISSET(STATEFLAGS))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1126 |                         return;[0m
      | [0;1;32m                               
[0m[1mnano.c:1127:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1127 |                 if (ISSET(STATEFLAGS))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1128 |                         titlebar(NULL);[0m
      | [0;1;32m                                       
[0m[1mnano.c:1131:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1131 |         if (flag == NO_HELP || flag == LINE_NUMBERS || flag == WHITESPACE_DISPLAY)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m 1132 |                 if (ISSET(MINIBAR) || ISSET(ZERO) || LINES == 1)[0m
 1133 |                         return;[0m
      | [0;1;32m                               
[0m[1mnano.c:1132:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1132 |                 if (ISSET(MINIBAR) || ISSET(ZERO) || LINES == 1)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1133 |                         return;[0m
      | [0;1;32m                               
[0m[1mnano.c:1135:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1135 |         if (flag == NO_HELP || flag == NO_SYNTAX)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1136 |                 enabled = !enabled;[0m
      | [0;1;32m                                   
[0m[1mnano.c:1220:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1220 |         if (ISSET(PRESERVE))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1221 |                 enable_flow_control();[0m
      | [0;1;32m                                      
[0m[1mnano.c:1238:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1238 |         if (keyvalue != 0 && keyvalue != (char *)-1 && key_defined(keyvalue))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1239 |                 return key_defined(keyvalue);[0m
      | [0;1;32m                                             
[0m[1mnano.c:1255:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1255 |         if (!ISSET(LINE_NUMBERS) || needed_margin > COLS - 4)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1256 |                 needed_margin = 0;[0m
      | [0;1;32m                                  
[0m[1mnano.c:1279:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1279 |         if (code == FOREIGN_SEQUENCE)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1280 |                 /* TRANSLATORS: This refers to a sequence of escape codes[0m
 1281 |                  * (from the keyboard) that nano does not recognize. */[0m
 1282 |                 statusline(AHEM, _("Unknown sequence"));[0m
 1283 | #ifdef ENABLE_NANORC[0m
 1284 |         else if (code == NO_SUCH_FUNCTION)[0m
      | [0;32m        } 
[0m[1mnano.c:1284:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1284 |         else if (code == NO_SUCH_FUNCTION)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1285 |                 statusline(AHEM, _("Unknown function: %s"), commandname);[0m
 1286 |         else if (code == MISSING_BRACE)[0m
      | [0;32m        } 
[0m[1mnano.c:1286:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1286 |         else if (code == MISSING_BRACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1287 |                 statusline(AHEM, _("Missing }"));[0m
 1288 | #endif[0m
 1289 | #ifndef NANO_TINY[0m
 1290 |         else if (code > KEY_F0 && code < KEY_F0 + 25)[0m
      | [0;32m        } 
[0m[1mnano.c:1290:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1290 |         else if (code > KEY_F0 && code < KEY_F0 + 25)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1291 |                 /* TRANSLATORS: This refers to an unbound function key. */[0m
 1292 |                 statusline(AHEM, _("Unbound key: F%i"), code - KEY_F0);[0m
 1293 | #endif[0m
 1294 |         else if (code > 0x7F)[0m
      | [0;32m        } 
[0m[1mnano.c:1294:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1294 |         else if (code > 0x7F)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1295 |                 statusline(AHEM, _("Unbound key"));[0m
 1296 |         else if (meta_key) {[0m
      | [0;32m        } 
[0m[1mnano.c:1298:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1298 |                 if (code < 0x20)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1299 |                         statusline(AHEM, _("Unbindable key: M-^%c"), code + 0x40);[0m
 1300 |                 else[0m
      | [0;32m                } 
[0m[1mnano.c:1303:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1303 |                 if (shifted_metas && 'A' <= code && code <= 'Z')[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1304 |                         statusline(AHEM, _("Unbound key: %s%c"), "Sh-M-", code);[0m
 1305 |                 else[0m
      | [0;32m                } 
[0m[1mnano.c:1305:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1305 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1306 | #endif[0m
 1307 |                         statusline(AHEM, _("Unbound key: %s%c"), "M-", toupper(code));[0m
      | [0;1;32m                                                                                      
[0m[1mnano.c:1308:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1308 |         } else if (code == ESC_CODE)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1309 |                 statusline(AHEM, _("Unbindable key: ^["));[0m
 1310 |         else if (code < 0x20)[0m
      | [0;32m        } 
[0m[1mnano.c:1310:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1310 |         else if (code < 0x20)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1311 |                 statusline(AHEM, _("Unbound key: %s%c"), "^", code + 0x40);[0m
 1312 | #if defined(ENABLE_BROWSER) || defined (ENABLE_HELP)[0m
 1313 |         else[0m
      | [0;32m        } 
[0m[1mnano.c:1313:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1313 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1314 |                 statusline(AHEM, _("Unbound key: %s%c"), "", code);[0m
      | [0;1;32m                                                                   
[0m[1mnano.c:1327:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1327 |         if (retval != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1328 |                 return retval;[0m
      | [0;1;32m                              
[0m[1mnano.c:1340:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1340 |                 if (ISSET(SOFTWRAP))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1341 |                         leftedge = leftedge_for(xplustabs(), openfile->current);[0m
 1342 |                 else[0m
      | [0;32m                } 
[0m[1mnano.c:1342:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1342 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1343 | #endif[0m
 1344 |                         leftedge = get_page_start(xplustabs());[0m
      | [0;1;32m                                                               
[0m[1mnano.c:1347:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1347 |                 if (row_count < 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1348 |                         go_back_chunks(-row_count, &openfile->current, &leftedge);[0m
 1349 |                 else[0m
      | [0;32m                } 
[0m[1mnano.c:1349:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1349 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1350 |                         go_forward_chunks(row_count, &openfile->current, &leftedge);[0m
      | [0;1;32m                                                                                    
[0m[1mnano.c:1360:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1360 |                         if (ISSET(STATEFLAGS))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1361 |                                 titlebar(NULL);[0m
      | [0;1;32m                                               
[0m[1mnano.c:1362:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1362 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1363 | #endif[0m
 1364 |                         /* The cursor moved; clean the cutbuffer on the next cut. */[0m
 1365 |                         keep_cutbuffer = FALSE;[0m
      | [0;1;32m                                               
[0m[1mnano.c:1442:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1442 |                 } else if (input != BRACKETED_PASTE_MARKER)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1443 |                         beep();[0m
      | [0;1;32m                               
[0m[1mnano.c:1446:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1446 |         if (ISSET(VIEW_MODE))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1447 |                 print_view_warning();[0m
 1448 |         else[0m
      | [0;32m        } 
[0m[1mnano.c:1448:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1448 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1449 |                 paste_text();[0m
      | [0;1;32m                             
[0m[1mnano.c:1466:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1466 |                 if (openfile->current_y == editwinrows - 1)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1467 |                         original_row = chunk_for(xplustabs(), thisline);[0m
      | [0;1;32m                                                                        
[0m[1mnano.c:1473:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1473 |         for (size_t index = 0; index < count; index++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1474 |                 if (burst[index] == '\0')[0m
 1475 |                         burst[index] = '\n';[0m
      | [0;1;32m                                            
[0m[1mnano.c:1474:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1474 |                 if (burst[index] == '\0')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1475 |                         burst[index] = '\n';[0m
      | [0;1;32m                                            
[0m[1mnano.c:1482:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1482 |                                 openfile->current_undo->tail_x != openfile->current_x)[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m 1483 |                 add_undo(ADD, NULL);[0m
      | [0;1;32m                                    
[0m[1mnano.c:1488:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1488 |         memmove(thisline->data + openfile->current_x + count,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnano.c:1488:2: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1488 |         memmove(thisline->data + openfile->current_x + count,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnano.c:1491:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1491 |         strncpy(thisline->data + openfile->current_x, burst, count);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnano.c:1491:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1491 |         strncpy(thisline->data + openfile->current_x, burst, count);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mnano.c:1495:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1495 |         if (thisline == openfile->mark && openfile->current_x < openfile->mark_x)[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m 1496 |                 openfile->mark_x += count;[0m
      | [0;1;32m                                          
[0m[1mnano.c:1509:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1509 |                 if (margin > 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1510 |                         refresh_needed = TRUE;[0m
      | [0;1;32m                                              
[0m[1mnano.c:1523:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1523 |         if (ISSET(BREAK_LONG_LINES))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1524 |                 do_wrap();[0m
      | [0;1;32m                          
[0m[1mnano.c:1542:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1542 |         if (!refresh_needed)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1543 |                 check_the_multis(openfile->current);[0m
      | [0;1;32m                                                    
[0m[1mnano.c:1545:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1545 |         if (!refresh_needed)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1546 |                 update_line(openfile->current, openfile->current_x);[0m
      | [0;1;32m                                                                    
[0m[1mnano.c:1573:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1573 |         if (input == KEY_WINCH)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1574 |                 return;[0m
      | [0;1;32m                       
[0m[1mnano.c:1580:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1580 |                 if (do_mouse() == 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1581 |                         input = get_kbinput(midwin, BLIND);[0m
 1582 |                 else[0m
      | [0;32m                } 
[0m[1mnano.c:1582:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1582 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1583 |                         return;[0m
      | [0;1;32m                               
[0m[1mnano.c:1593:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1593 |                 if (input < 0x20 || input > 0xFF || meta_key)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1594 |                         unbound_key(input);[0m
 1595 |                 else if (ISSET(VIEW_MODE))[0m
      | [0;32m                } 
[0m[1mnano.c:1595:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1595 |                 else if (ISSET(VIEW_MODE))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1596 |                         print_view_warning();[0m
 1597 |                 else {[0m
      | [0;32m                } 
[0m[1mnano.c:1609:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1609 |                         } else if (!puddle)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1610 |                                 puddle = nmalloc(capacity);[0m
      | [0;1;32m                                                           
[0m[1mnano.c:1639:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1639 |         } else if (meta_key)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1640 |                 give_a_hint = FALSE;[0m
      | [0;1;32m                                    
[0m[1mnano.c:1645:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1645 |                 if (function != copy_text && function != zap_text)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1646 | #endif[0m
 1647 |                         keep_cutbuffer = FALSE;[0m
      | [0;1;32m                                               
[0m[1mnano.c:1651:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1651 |         if (function != complete_a_word)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1652 |                 pletion_line = NULL;[0m
      | [0;1;32m                                    
[0m[1mnano.c:1663:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1663 |                 if (shortcut->toggle == CUT_FROM_CURSOR)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1664 |                         keep_cutbuffer = FALSE;[0m
      | [0;1;32m                                               
[0m[1mnano.c:1692:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1692 |         } else if (openfile->current != was_current)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1693 |                 also_the_last = FALSE;[0m
      | [0;1;32m                                      
[0m[1mnano.c:1695:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1695 |         if (bracketed_paste)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1696 |                 suck_up_input_and_paste_it();[0m
      | [0;1;32m                                             
[0m[1mnano.c:1698:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1698 |         if (ISSET(STATEFLAGS) && openfile->mark != was_mark)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1699 |                 titlebar(NULL);[0m
      | [0;1;32m                               
[0m[1mnano.c:1826:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1826 |         if (stdin_flags != -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1827 |                 fcntl(STDIN_FILENO, F_SETFL, stdin_flags & ~O_NONBLOCK);[0m
      | [0;1;32m                                                                        
[0m[1mnano.c:1833:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1833 |         if (setlocale(LC_ALL, "") && strcmp(nl_langinfo(CODESET), "UTF-8") == 0)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 1834 |                 utf8_init();[0m
      | [0;1;32m                            
[0m[1mnano.c:1848:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1848 |         if (*(tail(argv[0])) == 'r')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1849 |                 SET(RESTRICTED);[0m
      | [0;1;32m                                
[0m[1mnano.c:1856:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1856 |                                 SET(SMART_HOME);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1857 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1859:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1859 |                                 SET(MAKE_BACKUP);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1860 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1862:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1862 |                                 backup_dir = mallocstrcpy(backup_dir, optarg);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1863 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:1866:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1866 |                                 SET(BOLD_TEXT);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1867 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1870:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1870 |                                 SET(TABS_TO_SPACES);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1871 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1875:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1875 |                                 SET(MULTIBUFFER);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1876 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1880:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1880 |                                 SET(LOCKING);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1881 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1885:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1885 |                                 SET(HISTORYLOG);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1886 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1890:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1890 |                                 ignore_rcfiles = TRUE;[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1891 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:1895:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1895 |                                 if (!parse_num(optarg, &stripe_column) || stripe_column <= 0) {[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1896 |                                         fprintf(stderr, _("Guide column \"%s\" is invalid"), optarg);[0m
 1897 |                                         fprintf(stderr, "\n");[0m
 1898 |                                         exit(1);[0m
 1899 |                                 }[0m
 1900 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:1896:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1896 |                                         fprintf(stderr, _("Guide column \"%s\" is invalid"), optarg);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:1896:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1896 |                                         fprintf(stderr, _("Guide column \"%s\" is invalid"), optarg);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:1897:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1897 |                                         fprintf(stderr, "\n");[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:1897:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1897 |                                         fprintf(stderr, "\n");[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:1903:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1903 |                                 SET(RAW_SEQUENCES);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1904 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1907:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1907 |                                 SET(NO_NEWLINES);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1908 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1912:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1912 |                                 SET(TRIM_BLANKS);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1913 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1917:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1917 |                                 SET(NO_CONVERT);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1918 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1920:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1920 |                                 SET(BOOKSTYLE);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1921 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1925:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1925 |                                 SET(POSITIONLOG);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1926 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1930:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1930 |                                 quotestr = mallocstrcpy(quotestr, optarg);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1931 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:1934:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1934 |                                 SET(RESTRICTED);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1935 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1940:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1940 |                                 break;[0m
      | [0;1;32m                                ^    
[0m      | [0;32m                                {    ;} 
[0m[1mnano.c:1942:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1942 |                                 if (!parse_num(optarg, &tabsize) || tabsize <= 0) {[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1943 |                                         fprintf(stderr, _("Requested tab size \"%s\" is invalid"), optarg);[0m
 1944 |                                         fprintf(stderr, "\n");[0m
 1945 |                                         exit(1);[0m
 1946 |                                 }[0m
 1947 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:1943:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1943 |                                         fprintf(stderr, _("Requested tab size \"%s\" is invalid"), optarg);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:1943:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1943 |                                         fprintf(stderr, _("Requested tab size \"%s\" is invalid"), optarg);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:1944:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1944 |                                         fprintf(stderr, "\n");[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:1944:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1944 |                                         fprintf(stderr, "\n");[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:1950:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1950 |                                 SET(QUICK_BLANK);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1951 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1953:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1953 |                                 version();[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1954 |                                 exit(0);[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mnano.c:1957:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1957 |                                 SET(WORD_BOUNDS);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1958 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1960:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1960 |                                 word_chars = mallocstrcpy(word_chars, optarg);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1961 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:1965:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1965 |                                 syntaxstr = mallocstrcpy(syntaxstr, optarg);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1966 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:1970:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1970 |                                 SET(LET_THEM_ZAP);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1971 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1973:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1973 |                                 SET(AT_BLANKS);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1974 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1978:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1978 |                                 hardwrap = 1;[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1979 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:1982:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1982 |                                 SET(CONSTANT_SHOW);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1983 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1985:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1985 |                                 SET(REBIND_DELETE);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1986 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1989:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1989 |                                 SET(EMPTY_LINE);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1990 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:1994:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1994 |                                 custom_nanorc = mallocstrcpy(custom_nanorc, optarg);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 1995 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:1999:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1999 |                                 SET(SHOW_CURSOR);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2000 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2003:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2003 |                                 usage();[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2004 |                                 exit(0);[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mnano.c:2007:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2007 |                                 SET(AUTOINDENT);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2008 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2010:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2010 |                                 SET(JUMPY_SCROLLING);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2011 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2013:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2013 |                                 SET(CUT_FROM_CURSOR);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2014 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2018:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2018 |                                 SET(LINE_NUMBERS);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2019 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2023:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2023 |                                 SET(USE_MOUSE);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2024 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2028:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2028 |                                 SET(NOREAD_MODE);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2029 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2033:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2033 |                                 operating_dir = mallocstrcpy(operating_dir, optarg);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2034 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:2037:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2037 |                                 SET(PRESERVE);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2038 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2041:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2041 |                                 SET(INDICATOR);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2042 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2046:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2046 |                                 if (!parse_num(optarg, &fill)) {[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2047 |                                         fprintf(stderr, _("Requested fill size \"%s\" is invalid"), optarg);[0m
 2048 |                                         fprintf(stderr, "\n");[0m
 2049 |                                         exit(1);[0m
 2050 |                                 }[0m
 2051 | #ifdef ENABLE_NANORC[0m
 2052 |                                 fill_used = TRUE;[0m
 2053 | #endif[0m
 2054 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:2047:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2047 |                                         fprintf(stderr, _("Requested fill size \"%s\" is invalid"), optarg);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:2047:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 2047 |                                         fprintf(stderr, _("Requested fill size \"%s\" is invalid"), optarg);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:2048:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2048 |                                         fprintf(stderr, "\n");[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:2048:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 2048 |                                         fprintf(stderr, "\n");[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mnano.c:2058:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2058 |                                 alt_speller = mallocstrcpy(alt_speller, optarg);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2059 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:2062:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2062 |                                 SET(SAVE_ON_EXIT);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2063 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2066:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2066 |                                 SET(MAKE_IT_UNIX);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2067 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2070:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2070 |                                 SET(VIEW_MODE);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2071 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2074:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2074 |                                 hardwrap = 0;[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2075 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mnano.c:2078:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2078 |                                 SET(NO_HELP);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2079 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2082:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2082 |                                 SET(AFTER_ENDS);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2083 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2092:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2092 |                                 SET(STATEFLAGS);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2093 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2095:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2095 |                                 SET(MINIBAR);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2096 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2098:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2098 |                                 SET(ZERO);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2099 |                                 break;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2102:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2102 |                                 printf(_("Type '%s -h' for a list of available options.\n"), argv[0]);[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                {
[0m 2103 |                                 exit(1);[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mnano.c:2108:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2108 |         if (getenv("TERM") == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2109 |                 putenv("TERM=vt220");[0m
      | [0;1;32m                                     
[0m[1mnano.c:2112:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2112 |         if (initscr() == NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2113 |                 exit(1);[0m
      | [0;1;32m                        
[0m[1mnano.c:2117:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2117 |         if (has_colors())[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2118 |                 start_color();[0m
      | [0;1;32m                              
[0m[1mnano.c:2152:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2152 |                 memcpy(flags_cmdline, flags, sizeof(flags_cmdline));[0m
      | [0;1;32m                ^~~~~~
[0m[1mnano.c:2152:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2152 |                 memcpy(flags_cmdline, flags, sizeof(flags_cmdline));[0m
      | [0;1;32m                ^~~~~~
[0m[1mnano.c:2173:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2173 |                 if (fill_used)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2174 |                         fill = fill_cmdline;[0m
      | [0;1;32m                                            
[0m[1mnano.c:2185:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2185 |                 if (stripeclm_cmdline > 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2186 |                         stripe_column = stripeclm_cmdline;[0m
      | [0;1;32m                                                          
[0m[1mnano.c:2187:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2187 |                 if (tabsize_cmdline != -1)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2188 |                         tabsize = tabsize_cmdline;[0m
      | [0;1;32m                                                  
[0m[1mnano.c:2208:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2208 |                 while (alt_speller && *alt_speller && isblank(*alt_speller))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 2209 |                         memmove(alt_speller, alt_speller + 1, strlen(alt_speller));[0m
      | [0;1;32m                                                                                   
[0m[1mnano.c:2209:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2209 |                         memmove(alt_speller, alt_speller + 1, strlen(alt_speller));[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mnano.c:2209:4: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 2209 |                         memmove(alt_speller, alt_speller + 1, strlen(alt_speller));[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mnano.c:2213:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2213 |                 if (!ISSET(NO_WRAP))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2214 |                         SET(BREAK_LONG_LINES);[0m
      | [0;1;32m                                              
[0m[1mnano.c:2217:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2217 |                 for (size_t i = 0; i < sizeof(flags) / sizeof(flags[0]); i++)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 2218 |                         flags[i] |= flags_cmdline[i];[0m
      | [0;1;32m                                                     
[0m[1mnano.c:2223:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2223 |         if (hardwrap == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2224 |                 UNSET(BREAK_LONG_LINES);[0m
 2225 |         else if (hardwrap == 1)[0m
      | [0;32m        } 
[0m[1mnano.c:2225:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2225 |         else if (hardwrap == 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2226 |                 SET(BREAK_LONG_LINES);[0m
      | [0;1;32m                                      
[0m[1mnano.c:2230:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2230 |         if (ISSET(BOLD_TEXT))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2231 |                 hilite_attribute = A_BOLD;[0m
      | [0;1;32m                                          
[0m[1mnano.c:2244:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2244 |         if (ISSET(RAW_SEQUENCES))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2245 |                 UNSET(USE_MOUSE);[0m
      | [0;1;32m                                 
[0m[1mnano.c:2248:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2248 |         if (ISSET(ZERO))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2249 |                 SET(NO_HELP);[0m
      | [0;1;32m                             
[0m[1mnano.c:2263:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2263 |         if (ISSET(HISTORYLOG))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2264 |                 load_history();[0m
      | [0;1;32m                               
[0m[1mnano.c:2265:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2265 |         if (ISSET(POSITIONLOG))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2266 |                 load_poshistory();[0m
      | [0;1;32m                                  
[0m[1mnano.c:2272:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2272 |         if (backup_dir != NULL && !ISSET(RESTRICTED))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2273 |                 init_backup_dir();[0m
      | [0;1;32m                                  
[0m[1mnano.c:2278:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2278 |         if (operating_dir != NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2279 |                 init_operating_dir();[0m
      | [0;1;32m                                     
[0m[1mnano.c:2284:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2284 |         if (punct == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2285 |                 punct = copy_of("!.?");[0m
      | [0;1;32m                                       
[0m[1mnano.c:2286:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2286 |         if (brackets == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2287 |                 brackets = copy_of("\"')>]}");[0m
      | [0;1;32m                                              
[0m[1mnano.c:2288:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2288 |         if (quotestr == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2289 |                 quotestr = copy_of("^([ \t]*([!#%:;>|}]|/{2}))+");[0m
      | [0;1;32m                                                                  
[0m[1mnano.c:2299:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2299 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2300 |                 free(quotestr);[0m
      | [0;1;32m                               
[0m[1mnano.c:2312:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2312 |                 if (spellenv != NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2313 |                         alt_speller = copy_of(spellenv);[0m
      | [0;1;32m                                                        
[0m[1mnano.c:2319:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2319 |         if (matchbrackets == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2320 |                 matchbrackets = copy_of("(<[{)>]}");[0m
      | [0;1;32m                                                    
[0m[1mnano.c:2346:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2346 |         if (tabsize == -1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2347 |                 tabsize = WIDTH_OF_TAB;[0m
      | [0;1;32m                                       
[0m[1mnano.c:2351:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2351 |         if (has_colors())[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2352 |                 set_interface_colorpairs();[0m
 2353 |         else[0m
      | [0;32m        } 
[0m[1mnano.c:2448:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2448 |                                         case 'c': SET(CASE_SENSITIVE); break;[0m
      | [0;1;32m                                                  ^                         
[0m      | [0;32m                                                  {                         ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2449:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2449 |                                         case 'C': UNSET(CASE_SENSITIVE); break;[0m
      | [0;1;32m                                                  ^                           
[0m      | [0;32m                                                  {                           ;} 
[0m[1m./definitions.h:104:22: [0m[0;1;36mnote: [0mexpanded from macro 'UNSET'[0m
  104 | #define UNSET(flag)  FLAGS(flag) &= ~FLAGMASK(flag)[0m
      | [0;1;32m                     ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2450:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2450 |                                         case 'r': SET(USE_REGEXP); break;[0m
      | [0;1;32m                                                  ^                     
[0m      | [0;32m                                                  {                     ;} 
[0m[1m./definitions.h:103:20: [0m[0;1;36mnote: [0mexpanded from macro 'SET'[0m
  103 | #define SET(flag)  FLAGS(flag) |= FLAGMASK(flag)[0m
      | [0;1;32m                   ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2451:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2451 |                                         case 'R': UNSET(USE_REGEXP); break;[0m
      | [0;1;32m                                                  ^                       
[0m      | [0;32m                                                  {                       ;} 
[0m[1m./definitions.h:104:22: [0m[0;1;36mnote: [0mexpanded from macro 'UNSET'[0m
  104 | #define UNSET(flag)  FLAGS(flag) &= ~FLAGMASK(flag)[0m
      | [0;1;32m                     ^
[0m[1m./definitions.h:101:22: [0m[0;1;36mnote: [0mexpanded from macro 'FLAGS'[0m
  101 | #define FLAGS(flag)  flags[((flag) / (sizeof(unsigned) * 8))][0m
      | [0;1;32m                     ^
[0m[1mnano.c:2453:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2453 |                                                 statusline(ALERT, _("Invalid search modifier '%c'"),[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                {
[0m 2454 |                                                                                         argv[optind][n - 1]);[0m
      | [0;1;32m                                                                                                            
[0m      | [0;32m                                                                                                            ;} 
[0m[1mnano.c:2461:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2461 |                                         if (argv[optind][n] == '?')[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 2462 |                                                 SET(BACKWARDS_SEARCH);[0m
      | [0;1;32m                                                                      
[0m[1mnano.c:2463:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2463 |                                 } else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2464 |                                         statusline(ALERT, _("Empty search string"));[0m
      | [0;1;32m                                                                                    
[0m[1mnano.c:2470:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2470 |                         if (argv[optind++][1] == '\0')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2471 |                                 givenline = -1;[0m
 2472 |                         else if (!parse_line_column(&argv[optind - 1][1], &givenline, &givencol))[0m
      | [0;32m                        } 
[0m[1mnano.c:2472:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2472 |                         else if (!parse_line_column(&argv[optind - 1][1], &givenline, &givencol))[0m
      | [0;1;32m                                                                                                 ^
[0m      | [0;32m                                                                                                  {
[0m 2473 |                                 statusline(ALERT, _("Invalid line or column number"));[0m
      | [0;1;32m                                                                                      
[0m[1mnano.c:2481:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2481 |                         if (!scoop_stdin())[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2482 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mnano.c:2485:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2485 |                  if (!open_buffer(argv[optind++], TRUE))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2486 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mnano.c:2489:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2489 |                 if (givenline != 0 || givencol != 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2490 |                         goto_line_and_column(givenline, givencol, FALSE, FALSE);[0m
 2491 | #ifndef NANO_TINY[0m
 2492 |                 else if (searchstring != NULL) {[0m
      | [0;32m                } 
[0m[1mnano.c:2493:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2493 |                         if (ISSET(USE_REGEXP))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2494 |                                 regexp_init(searchstring);[0m
      | [0;1;32m                                                          
[0m[1mnano.c:2496:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2496 |                                                         ISSET(BACKWARDS_SEARCH), openfile->filetop, 0))[0m
      | [0;1;32m                                                                                                       ^
[0m      | [0;32m                                                                                                        {
[0m 2497 |                                 not_found_msg(searchstring);[0m
 2498 |                         else if (lastmessage <= REMARK)[0m
      | [0;32m                        } 
[0m[1mnano.c:2498:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2498 |                         else if (lastmessage <= REMARK)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2499 |                                 wipe_statusbar();[0m
      | [0;1;32m                                                 
[0m[1mnano.c:2502:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2502 |                         if (ISSET(USE_REGEXP))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2503 |                                 tidy_up_after_search();[0m
      | [0;1;32m                                                       
[0m[1mnano.c:2513:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2513 |                         if (has_old_position(argv[optind - 1], &savedline, &savedcol))[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m 2514 |                                 goto_line_and_column(savedline, savedcol, FALSE, FALSE);[0m
      | [0;1;32m                                                                                        
[0m[1mnano.c:2523:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2523 |         if (!isatty(STDIN_FILENO))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2524 |                 die(_("Standard input is not a terminal\n"));[0m
      | [0;1;32m                                                             
[0m[1mnano.c:2536:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2536 |                 if (more_than_one)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2537 |                         mention_name_and_linecount();[0m
      | [0;1;32m                                                     
[0m[1mnano.c:2538:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2538 |                 if (ISSET(VIEW_MODE))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2539 |                         SET(MULTIBUFFER);[0m
      | [0;1;32m                                         
[0m[1mnano.c:2549:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2549 |         if (startup_problem != NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2550 |                 statusline(ALERT, startup_problem);[0m
      | [0;1;32m                                                   
[0m[1mnano.c:2560:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2560 |                                 openfile->next == openfile && !ISSET(NO_HELP) && NOTREBOUND)[0m
      | [0;1;32m                                                                                            ^
[0m      | [0;32m                                                                                             {
[0m 2561 |                 statusbar(_("Welcome to nano.  For basic help, type Ctrl+G."));[0m
      | [0;1;32m                                                                               
[0m[1mnano.c:2576:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2576 |                 if (on_a_vt && waiting_keycodes() == 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2577 |                         mute_modifiers = FALSE;[0m
      | [0;1;32m                                               
[0m[1mnano.c:2579:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2579 |                 if (currmenu != MMAIN)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2580 |                         bottombars(MMAIN);[0m
      | [0;1;32m                                          
[0m[1mnano.c:2583:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2583 |                 if (ISSET(MINIBAR) && !ISSET(ZERO) && LINES > 1 && lastmessage < REMARK)[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m 2584 |                         minibar();[0m
 2585 |                 else[0m
      | [0;32m                } 
[0m[1mnano.c:2590:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2590 |                                                                 !ISSET(ZERO) && waiting_keycodes() == 0)[0m
      | [0;1;32m                                                                                                        ^
[0m      | [0;32m                                                                                                         {
[0m 2591 |                         report_cursor_position();[0m
      | [0;1;32m                                                 
[0m[1mnano.c:2595:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2595 |                 if ((refresh_needed && LINES > 1) || (LINES == 1 && lastmessage <= HUSH))[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m 2596 |                         edit_refresh();[0m
 2597 |                 else[0m
      | [0;32m                } 
[0m[1mnano.c:2597:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2597 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2598 |                         place_the_cursor();[0m
      | [0;1;32m                                           
[0m[1mnano.c:2611:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2611 |                 } else if (ISSET(ZERO) && lastmessage > VACUUM)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2612 |                         wredrawln(midwin, editwinrows - 1, 1);[0m
      | [0;1;32m                                                              
[0m240 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[62/70][144.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpb89v264f.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/color.c
[1mcolor.c:49:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |                                 if (combo->fg == THE_DEFAULT)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   50 |                                         combo->fg = COLOR_WHITE;[0m
      | [0;1;32m                                                                
[0m[1mcolor.c:51:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |                                 if (combo->bg == THE_DEFAULT)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   52 |                                         combo->bg = COLOR_BLACK;[0m
      | [0;1;32m                                                                
[0m[1mcolor.c:58:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |                         if (index == FUNCTION_TAG || index == SCROLL_BAR)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m   59 |                                 interface_color_pair[index] = A_NORMAL;[0m
   60 |                         else if (index == GUIDE_STRIPE)[0m
      | [0;32m                        } 
[0m[1mcolor.c:60:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   60 |                         else if (index == GUIDE_STRIPE)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m   61 |                                 interface_color_pair[index] = A_REVERSE;[0m
   62 |                         else if (index == SPOTLIGHTED) {[0m
      | [0;32m                        } 
[0m[1mcolor.c:65:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |                         } else if (index == MINI_INFOBAR || index == PROMPT_BAR)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m   66 |                                 interface_color_pair[index] = interface_color_pair[TITLE_BAR];[0m
   67 |                         else if (index == ERROR_MESSAGE) {[0m
      | [0;32m                        } 
[0m[1mcolor.c:70:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   70 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   71 |                                 interface_color_pair[index] = hilite_attribute;[0m
      | [0;1;32m                                                                               
[0m[1mcolor.c:92:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |                         if (ink->fg == THE_DEFAULT)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   93 |                                 ink->fg = COLOR_WHITE;[0m
      | [0;1;32m                                                      
[0m[1mcolor.c:94:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |                         if (ink->bg == THE_DEFAULT)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   95 |                                 ink->bg = COLOR_BLACK;[0m
      | [0;1;32m                                                      
[0m[1mcolor.c:100:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |                 while (older != ink && (older->fg != ink->fg || older->bg != ink->bg))[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m  101 |                         older = older->next;[0m
      | [0;1;32m                                            
[0m[1mcolor.c:115:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |         for (colortype *ink = openfile->syntax->color; ink != NULL; ink = ink->next)[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m  116 |                 if (ink->pairnum > number) {[0m
  117 |                         init_pair(ink->pairnum, ink->fg, ink->bg);[0m
  118 |                         number = ink->pairnum;[0m
  119 |                 }[0m
      | [0;1;32m                 
[0m[1mcolor.c:128:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |         for (regexlisttype *item = head; item != NULL; item = item->next)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  129 |                 if (regexec(item->one_rgx, shibboleth, 0, NULL, 0) == 0)[0m
  130 |                         return TRUE;[0m
      | [0;1;32m                                    
[0m[1mcolor.c:129:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |                 if (regexec(item->one_rgx, shibboleth, 0, NULL, 0) == 0)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  130 |                         return TRUE;[0m
      | [0;1;32m                                    
[0m[1mcolor.c:142:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |         if (syntaxes == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  143 |                 return;[0m
      | [0;1;32m                       
[0m[1mcolor.c:148:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |                 if (strcmp(syntaxstr, "none") == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  149 |                         return;[0m
      | [0;1;32m                               
[0m[1mcolor.c:151:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |                 for (sntx = syntaxes; sntx != NULL; sntx = sntx->next)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  152 |                         if (strcmp(sntx->name, syntaxstr) == 0)[0m
  153 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mcolor.c:152:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |                         if (strcmp(sntx->name, syntaxstr) == 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  153 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mcolor.c:155:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                 if (sntx == NULL && !inhelp)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  156 |                         statusline(ALERT, _("Unknown syntax name: %s"), syntaxstr);[0m
      | [0;1;32m                                                                                   
[0m[1mcolor.c:164:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |                 if (fullname == NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  165 |                         fullname = mallocstrcpy(fullname, openfile->filename);[0m
      | [0;1;32m                                                                              
[0m[1mcolor.c:167:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  167 |                 for (sntx = syntaxes; sntx != NULL; sntx = sntx->next)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  168 |                         if (found_in_list(sntx->extensions, fullname))[0m
  169 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mcolor.c:168:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |                         if (found_in_list(sntx->extensions, fullname))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  169 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mcolor.c:176:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  176 |                 for (sntx = syntaxes; sntx != NULL; sntx = sntx->next)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  177 |                         if (found_in_list(sntx->headers, openfile->filetop->data))[0m
  178 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mcolor.c:177:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |                         if (found_in_list(sntx->headers, openfile->filetop->data))[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  178 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mcolor.c:219:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |                 for (sntx = syntaxes; sntx != NULL; sntx = sntx->next)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  220 |                         if (strcmp(sntx->name, "default") == 0)[0m
  221 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mcolor.c:220:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  220 |                         if (strcmp(sntx->name, "default") == 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  221 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mcolor.c:243:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |         if (openfile->syntax == NULL || openfile->syntax->nmultis == 0)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  244 |                 return;[0m
      | [0;1;32m                       
[0m[1mcolor.c:253:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |                 if (ink->end == NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  254 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mcolor.c:262:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |                         if (!astart)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  263 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mcolor.c:267:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |                                                                                                 &endmatch, 0) != 0))[0m
      | [0;1;32m                                                                                                                    ^
[0m      | [0;32m                                                                                                                     {
[0m  268 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mcolor.c:271:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |                                                                                         endmatch.rm_eo, 1, &startmatch, 0) != 0)[0m
      | [0;1;32m                                                                                                                                ^
[0m      | [0;32m                                                                                                                                 {
[0m  272 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mcolor.c:274:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |                         if (astart && !anend)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  275 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mcolor.c:277:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |                         if (!astart && anend)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  278 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mcolor.c:296:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |         if (!openfile->syntax || openfile->syntax->nmultis == 0 || ISSET(NO_SYNTAX))[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m  297 |                 return;[0m
      | [0;1;32m                       
[0m[1mcolor.c:306:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |         for (line = openfile->filetop; line != NULL; line = line->next)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  307 |                 if (!line->multidata)[0m
  308 |                         line->multidata = nmalloc(openfile->syntax->nmultis * sizeof(short));[0m
      | [0;1;32m                                                                                             
[0m[1mcolor.c:307:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |                 if (!line->multidata)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  308 |                         line->multidata = nmalloc(openfile->syntax->nmultis * sizeof(short));[0m
      | [0;1;32m                                                                                             
[0m[1mcolor.c:312:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |                 if (ink->end == NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  313 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mcolor.c:339:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |                                                 if (line->data[index] == '\0')[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  340 |                                                         break;[0m
      | [0;1;32m                                                              
[0m[1mcolor.c:351:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |                                                                                         1, &endmatch, 0) != 0)[0m
      | [0;1;32m                                                                                                              ^
[0m      | [0;32m                                                                                                               {
[0m  352 |                                         tailline = tailline->next;[0m
      | [0;1;32m                                                                  
[0m[1mcolor.c:357:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |                                 for (line = line->next; line != tailline; line = line->next)[0m
      | [0;1;32m                                                                                            ^
[0m      | [0;32m                                                                                             {
[0m  358 |                                         line->multidata[ink->id] = WHOLELINE;[0m
      | [0;1;32m                                                                             
[0m40 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[63/70][156.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpofsh4y2f.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/prompt.c
[1mprompt.c:53:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |                 if (is_word_char(answer + typing_x, FALSE))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   54 |                         seen_a_word = TRUE;[0m
   55 | #ifdef ENABLE_UTF8[0m
   56 |                 else if (is_zerowidth(answer + typing_x))[0m
      | [0;32m                } 
[0m[1mprompt.c:56:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |                 else if (is_zerowidth(answer + typing_x))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   57 |                         ; /* skip */[0m
   58 | #endif[0m
   59 |                 else if (seen_a_word) {[0m
      | [0;32m                } 
[0m[1mprompt.c:66:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |         if (step_forward)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   67 |                 /* Move one character forward again to sit on the start of the word. */[0m
   68 |                 typing_x = step_right(answer, typing_x);[0m
      | [0;1;32m                                                        
[0m[1mprompt.c:85:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |                         if (is_word_char(answer + typing_x, FALSE))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m   86 |                                 seen_word = TRUE;[0m
   87 | #ifdef ENABLE_UTF8[0m
   88 |                         else if (is_zerowidth(answer + typing_x))[0m
      | [0;32m                        } 
[0m[1mprompt.c:88:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   88 |                         else if (is_zerowidth(answer + typing_x))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m   89 |                                 ; /* skip */[0m
   90 | #endif[0m
   91 |                         else if (seen_word)[0m
      | [0;32m                        } 
[0m[1mprompt.c:91:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   91 |                         else if (seen_word)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m   92 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mprompt.c:95:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |                         if (is_zerowidth(answer + typing_x))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m   96 |                                 ; /* skip */[0m
   97 |                         else[0m
      | [0;32m                        } 
[0m[1mprompt.c:101:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |                         if (!is_word_char(answer + typing_x, FALSE))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  102 |                                 seen_space = TRUE;[0m
  103 |                         else if (seen_space)[0m
      | [0;32m                        } 
[0m[1mprompt.c:103:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |                         else if (seen_space)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  104 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mprompt.c:116:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |                 while (typing_x > 0 && is_zerowidth(answer + typing_x))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  117 |                         typing_x = step_left(answer, typing_x);[0m
      | [0;1;32m                                                               
[0m[1mprompt.c:128:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |                 while (answer[typing_x] != '\0' && is_zerowidth(answer + typing_x))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m  129 |                         typing_x = step_right(answer, typing_x);[0m
      | [0;1;32m                                                                
[0m[1mprompt.c:141:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  141 |                 memmove(answer + typing_x, answer + was_x, strlen(answer) - was_x + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprompt.c:141:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  141 |                 memmove(answer + typing_x, answer + was_x, strlen(answer) - was_x + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprompt.c:151:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  151 |                 memmove(answer + typing_x, answer + typing_x + charlen,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprompt.c:151:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  151 |                 memmove(answer + typing_x, answer + typing_x + charlen,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprompt.c:154:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |                 if (is_zerowidth(answer + typing_x))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  155 |                         do_statusbar_delete();[0m
      | [0;1;32m                                              
[0m[1mprompt.c:163:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |         if (answer[typing_x] == '\0')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  164 |                 typing_x = 0;[0m
      | [0;1;32m                             
[0m[1mprompt.c:187:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  187 |         memmove(answer + typing_x + pastelen, answer + typing_x,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mprompt.c:187:2: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  187 |         memmove(answer + typing_x + pastelen, answer + typing_x,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mprompt.c:189:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  189 |         strncpy(answer + typing_x, cutbuffer->data, pastelen);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mprompt.c:189:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  189 |         strncpy(answer + typing_x, cutbuffer->data, pastelen);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mprompt.c:207:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  207 |                 if (click_row == 0 && click_col >= start_col)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  208 |                         typing_x = actual_x(answer,[0m
  209 |                                                         get_statusbar_page_start(start_col, start_col +[0m
  210 |                                                         wideness(answer, typing_x)) + click_col - start_col);[0m
      | [0;1;32m                                                                                                             
[0m[1mprompt.c:221:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |         for (size_t index = 0; index < count; index++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  222 |                 if (burst[index] == '\0')[0m
  223 |                         burst[index] = '\n';[0m
      | [0;1;32m                                            
[0m[1mprompt.c:222:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |                 if (burst[index] == '\0')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  223 |                         burst[index] = '\n';[0m
      | [0;1;32m                                            
[0m[1mprompt.c:226:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  226 |         memmove(answer + typing_x + count, answer + typing_x,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mprompt.c:226:2: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  226 |         memmove(answer + typing_x + count, answer + typing_x,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mprompt.c:228:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  228 |         strncpy(answer + typing_x, burst, count);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mprompt.c:228:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  228 |         strncpy(answer + typing_x, burst, count);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mprompt.c:241:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |         if (0 < count && count < 999)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  242 |                 inject_into_answer(bytes, count);[0m
  243 |         else if (count == 0)[0m
      | [0;32m        } 
[0m[1mprompt.c:243:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |         else if (count == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  244 |                 beep();[0m
      | [0;1;32m                       
[0m[1mprompt.c:264:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |                 if (input < 0x20 || input > 0xFF || meta_key)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  265 |                         beep();[0m
  266 |                 else if (!ISSET(RESTRICTED) || currmenu != MWRITEFILE ||[0m
      | [0;32m                } 
[0m[1mprompt.c:273:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |                         } else if (!puddle)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  274 |                                 puddle = nmalloc(capacity);[0m
      | [0;1;32m                                                           
[0m[1mprompt.c:292:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |         if (function == do_left)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  293 |                 do_statusbar_left();[0m
  294 |         else if (function == do_right)[0m
      | [0;32m        } 
[0m[1mprompt.c:294:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |         else if (function == do_right)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  295 |                 do_statusbar_right();[0m
  296 | #ifndef NANO_TINY[0m
  297 |         else if (function == to_prev_word)[0m
      | [0;32m        } 
[0m[1mprompt.c:297:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |         else if (function == to_prev_word)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  298 |                 do_statusbar_prev_word();[0m
  299 |         else if (function == to_next_word)[0m
      | [0;32m        } 
[0m[1mprompt.c:299:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |         else if (function == to_next_word)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  300 |                 do_statusbar_next_word();[0m
  301 | #endif[0m
  302 |         else if (function == do_home)[0m
      | [0;32m        } 
[0m[1mprompt.c:302:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |         else if (function == do_home)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  303 |                 do_statusbar_home();[0m
  304 |         else if (function == do_end)[0m
      | [0;32m        } 
[0m[1mprompt.c:304:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |         else if (function == do_end)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  305 |                 do_statusbar_end();[0m
  306 |         /* When in restricted mode at the "Write File" prompt and the[0m
  307 |          * filename isn't blank, disallow any input and deletion. */[0m
  308 |         else if (ISSET(RESTRICTED) && currmenu == MWRITEFILE &&[0m
      | [0;32m        } 
[0m[1mprompt.c:312:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |                                                         function == cut_text || function == paste_text))[0m
      | [0;1;32m                                                                                                        ^
[0m      | [0;32m                                                                                                         {
[0m  313 |                 ;[0m
  314 |         else if (function == do_verbatim_input)[0m
      | [0;32m        } 
[0m[1mprompt.c:314:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |         else if (function == do_verbatim_input)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  315 |                 do_statusbar_verbatim_input();[0m
  316 |         else if (function == do_delete)[0m
      | [0;32m        } 
[0m[1mprompt.c:316:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |         else if (function == do_delete)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  317 |                 do_statusbar_delete();[0m
  318 |         else if (function == do_backspace)[0m
      | [0;32m        } 
[0m[1mprompt.c:318:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |         else if (function == do_backspace)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  319 |                 do_statusbar_backspace();[0m
  320 |         else if (function == cut_text)[0m
      | [0;32m        } 
[0m[1mprompt.c:320:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |         else if (function == cut_text)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  321 |                 lop_the_answer();[0m
  322 | #ifndef NANO_TINY[0m
  323 |         else if (function == copy_text)[0m
      | [0;32m        } 
[0m[1mprompt.c:323:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |         else if (function == copy_text)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  324 |                 copy_the_answer();[0m
  325 |         else if (function == paste_text) {[0m
      | [0;32m        } 
[0m[1mprompt.c:326:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |                 if (cutbuffer != NULL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  327 |                         paste_into_answer();[0m
      | [0;1;32m                                            
[0m[1mprompt.c:330:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  331 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mprompt.c:343:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |         if (column == base || column < COLS - 1)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  344 |                 return 0;[0m
  345 |         else if (COLS > base + 2)[0m
      | [0;32m        } 
[0m[1mprompt.c:345:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |         else if (COLS > base + 2)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  346 |                 return column - base - 1 - (column - base - 1) % (COLS - base - 2);[0m
  347 |         else[0m
      | [0;32m        } 
[0m[1mprompt.c:347:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  348 |                 return column - 2;[0m
      | [0;1;32m                                  
[0m[1mprompt.c:380:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |         if (the_page < end_page && base + breadth(answer) - the_page > COLS)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  381 |                 mvwaddch(footwin, 0, COLS - 1, '>');[0m
      | [0;1;32m                                                    
[0m[1mprompt.c:403:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  403 |                 memmove(answer, answer + 1, strlen(answer));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprompt.c:403:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  403 |                 memmove(answer, answer + 1, strlen(answer));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprompt.c:404:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  404 |                 if (typing_x > 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  405 |                         typing_x--;[0m
      | [0;1;32m                                   
[0m[1mprompt.c:408:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  408 |                 memmove(answer + 1, answer, strlen(answer) + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprompt.c:408:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  408 |                 memmove(answer + 1, answer, strlen(answer) + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mprompt.c:433:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |         if (typing_x > strlen(answer))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  434 |                 typing_x = strlen(answer);[0m
      | [0;1;32m                                          
[0m[1mprompt.c:455:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |                 if (input == KEY_MOUSE && do_statusbar_mouse() == 1)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  456 |                         input = get_kbinput(footwin, BLIND);[0m
      | [0;1;32m                                                            
[0m[1mprompt.c:457:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |                 if (input == KEY_MOUSE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  458 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mprompt.c:468:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |                 if (function == do_cancel || function == do_enter)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  469 |                         break;[0m
      | [0;1;32m                              
[0m[1mprompt.c:475:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  475 |                                 if (!previous_was_tab)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  476 |                                         fragment_length = strlen(answer);[0m
      | [0;1;32m                                                                         
[0m[1mprompt.c:486:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |                         if ((currmenu & (MINSERTFILE|MWRITEFILE|MGOTODIR)) && !ISSET(RESTRICTED))[0m
      | [0;1;32m                                                                                                 ^
[0m      | [0;32m                                                                                                  {
[0m  487 |                                 answer = input_tab(answer, &typing_x, refresh_func, listed);[0m
      | [0;1;32m                                                                                            
[0m[1mprompt.c:493:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |                         if (stored_string == NULL)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  494 |                                 reset_history_pointer_for(*history_list);[0m
      | [0;1;32m                                                                         
[0m[1mprompt.c:497:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  497 |                         if ((*history_list)->next == NULL)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  498 |                                 stored_string = mallocstrcpy(stored_string, answer);[0m
      | [0;1;32m                                                                                    
[0m[1mprompt.c:521:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  521 |                 if (function == do_help || function == full_refresh)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  522 |                         function();[0m
  523 | #ifndef NANO_TINY[0m
  524 |                 else if (function == do_toggle && shortcut->toggle == NO_HELP) {[0m
      | [0;32m                } 
[0m[1mprompt.c:530:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |                 } else if (function == do_nothing)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  531 |                         ;[0m
  532 | #endif[0m
  533 | #ifdef ENABLE_NANORC[0m
  534 |                 else if (function == (functionptrtype)implant)[0m
      | [0;32m                } 
[0m[1mprompt.c:534:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  534 |                 else if (function == (functionptrtype)implant)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  535 |                         implant(shortcut->expansion);[0m
  536 | #endif[0m
  537 |                 else if (function && !handle_editing(function)) {[0m
      | [0;32m                } 
[0m[1mprompt.c:542:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  543 |                                 beep();[0m
      | [0;1;32m                                       
[0m[1mprompt.c:581:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |         if (answer != provided)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  582 |                 answer = mallocstrcpy(answer, provided);[0m
      | [0;1;32m                                                        
[0m[1mprompt.c:589:2: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  589 |         vsnprintf(prompt, COLS * MAXCHARLEN, msg, ap);[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mprompt.c:589:2: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
  589 |         vsnprintf(prompt, COLS * MAXCHARLEN, msg, ap);[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mprompt.c:600:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |         if (retval == KEY_WINCH)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  601 |                 goto redo_theprompt;[0m
      | [0;1;32m                                    
[0m[1mprompt.c:606:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |         if (function == do_cancel || function == do_enter)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  607 |                 typing_x = was_typing_x;[0m
      | [0;1;32m                                        
[0m[1mprompt.c:610:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  610 |         if (function == do_cancel)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  611 |                 retval = -1;[0m
  612 |         else if (function == do_enter)[0m
      | [0;32m        } 
[0m[1mprompt.c:612:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  612 |         else if (function == do_enter)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  613 |                 retval = (*answer == '\0') ? -2 : 0;[0m
      | [0;1;32m                                                    
[0m[1mprompt.c:615:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  615 |         if (lastmessage == VACUUM)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  616 |                 wipe_statusbar();[0m
      | [0;1;32m                                 
[0m[1mprompt.c:620:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  620 |         if (listed)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  621 |                 refresh_func();[0m
      | [0;1;32m                               
[0m[1mprompt.c:657:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  657 |                         if (COLS < 32)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  658 |                                 width = COLS / 2;[0m
      | [0;1;32m                                                 
[0m[1mprompt.c:664:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  664 |                         sprintf(shortstr, " %c", yesstr[0]);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mprompt.c:664:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  664 |                         sprintf(shortstr, " %c", yesstr[0]);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mprompt.c:695:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  695 |                 if (kbinput == KEY_WINCH)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  696 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mprompt.c:699:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  699 |                 if (bracketed_paste)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  700 |                         kbinput = get_kbinput(footwin, BLIND);[0m
      | [0;1;32m                                                              
[0m[1mprompt.c:701:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  701 |                 while (bracketed_paste)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  702 |                         get_kbinput(footwin, BLIND);[0m
      | [0;1;32m                                                    
[0m[1mprompt.c:713:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  713 |                         while (extras <= waiting_keycodes() && extras-- > 0)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  714 |                                 letter[index++] = (unsigned char)get_kbinput(footwin, !withall);[0m
      | [0;1;32m                                                                                                
[0m[1mprompt.c:720:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  720 |                 if (strstr(yesstr, letter) != NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  721 |                         choice = YES;[0m
  722 |                 else if (strstr(nostr, letter) != NULL)[0m
      | [0;32m                } 
[0m[1mprompt.c:722:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  722 |                 else if (strstr(nostr, letter) != NULL)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  723 |                         choice = NO;[0m
  724 |                 else if (withall && strstr(allstr, letter) != NULL)[0m
      | [0;32m                } 
[0m[1mprompt.c:724:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  724 |                 else if (withall && strstr(allstr, letter) != NULL)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  725 |                         choice = ALL;[0m
  726 |                 else[0m
      | [0;32m                } 
[0m[1mprompt.c:728:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  728 |                 if (strchr("Yy", kbinput) != NULL)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  729 |                         choice = YES;[0m
  730 |                 else if (strchr("Nn", kbinput) != NULL)[0m
      | [0;32m                } 
[0m[1mprompt.c:730:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  730 |                 else if (strchr("Nn", kbinput) != NULL)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  731 |                         choice = NO;[0m
  732 |                 else if (withall && strchr("Aa", kbinput) != NULL)[0m
      | [0;32m                } 
[0m[1mprompt.c:732:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |                 else if (withall && strchr("Aa", kbinput) != NULL)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  733 |                         choice = ALL;[0m
      | [0;1;32m                                     
[0m[1mprompt.c:735:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |                 if (choice != UNDECIDED)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  736 |                         break;[0m
      | [0;1;32m                              
[0m[1mprompt.c:741:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  741 |                 if (function == do_cancel)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  742 |                         choice = CANCEL;[0m
  743 |                 else if (function == full_refresh)[0m
      | [0;32m                } 
[0m[1mprompt.c:743:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  743 |                 else if (function == full_refresh)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  744 |                         full_refresh();[0m
  745 | #ifndef NANO_TINY[0m
  746 |                 else if (function == do_toggle && shortcut->toggle == NO_HELP) {[0m
      | [0;32m                } 
[0m[1mprompt.c:756:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |                 else if (kbinput == '\x0E' || kbinput == '\x11')[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  757 |                         choice = NO;[0m
  758 |                 /* And interpret ^Y as "Yes". */[0m
  759 |                 else if (kbinput == '\x19')[0m
      | [0;32m                } 
[0m[1mprompt.c:759:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |                 else if (kbinput == '\x19')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  760 |                         choice = YES;[0m
  761 | #ifdef ENABLE_MOUSE[0m
  762 |                 else if (kbinput == KEY_MOUSE) {[0m
      | [0;32m                } 
[0m[1mprompt.c:774:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |                                 if (choice == ALL && !withall)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  775 |                                         choice = UNDECIDED;[0m
      | [0;1;32m                                                           
[0m[1mprompt.c:779:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  779 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  780 |                         beep();[0m
      | [0;1;32m                               
[0m88 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[64/70][154.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpohj5j2_9.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/lib/glob.c
[1m./glob_internal.h:36:21: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
   36 |   for (p = pattern; *p != '\0'; ++p)[0m
      | [0;1;32m                    ^
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mAssuming 'pattern' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:316:26: [0m[0;1;36mnote: [0mAssuming 'pglob' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^
[0m[1mglob.c:316:43: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:316:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m  ^
[0m[1mglob.c:324:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mglob.c:324:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m                 ^
[0m[1mglob.c:327:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:327:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mglob.c:332:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:332:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m  ^
[0m[1mglob.c:354:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:354:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m  ^
[0m[1mglob.c:500:7: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to NULL[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mglob.c:500:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to 'pattern'[0m
  527 |   else if (filename == pattern[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:528:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:528:40: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m                                       ^
[0m[1mglob.c:559:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  559 |       if (glob_use_alloca (alloca_used, dirlen + 1))[0m
      | [0;1;32m      ^
[0m[1mglob.c:564:15: [0m[0;1;36mnote: [0mAssuming 'newp' is not equal to NULL[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1mglob.c:564:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m          ^
[0m[1mglob.c:568:7: [0m[0;1;36mnote: [0mAssuming byte offset is non-negative and less than the extent of the heap area[0m
  568 |       *((char *) mempcpy (newp, pattern, dirlen)) = '\0';[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:581:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:581:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mglob.c:581:34: [0m[0;1;36mnote: [0mAssuming 'dirlen' is <= 1[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m                                 ^~~~~~~~~~
[0m[1mglob.c:581:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m                                            ^
[0m[1mglob.c:615:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:615:47: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m                                              ^
[0m[1mglob.c:911:7: [0m[0;1;36mnote: [0m'filename' is not equal to NULL[0m
  911 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mglob.c:911:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  911 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:962:40: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  962 |   meta = __glob_pattern_type (dirname, !(flags & GLOB_NOESCAPE));[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:962:10: [0m[0;1;36mnote: [0mCalling '__glob_pattern_type'[0m
  962 |   meta = __glob_pattern_type (dirname, !(flags & GLOB_NOESCAPE));[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./glob_internal.h:36:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   36 |   for (p = pattern; *p != '\0'; ++p)[0m
      | [0;1;32m  ^
[0m[1m./glob_internal.h:37:5: [0m[0;1;36mnote: [0mControl jumps to 'case 92:'  at line 43[0m
   37 |     switch (*p)[0m
      | [0;1;32m    ^
[0m[1m./glob_internal.h:44:13: [0m[0;1;36mnote: [0m'quote' is 1[0m
   44 |         if (quote)[0m
      | [0;1;32m            ^~~~~
[0m[1m./glob_internal.h:44:9: [0m[0;1;36mnote: [0mTaking true branch[0m
   44 |         if (quote)[0m
      | [0;1;32m        ^
[0m[1m./glob_internal.h:46:17: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
   46 |             if (p[1] != '\0')[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1m./glob_internal.h:46:13: [0m[0;1;36mnote: [0mTaking true branch[0m
   46 |             if (p[1] != '\0')[0m
      | [0;1;32m            ^
[0m[1m./glob_internal.h:50:9: [0m[0;1;36mnote: [0m Execution continues on line 36[0m
   50 |         break;[0m
      | [0;1;32m        ^
[0m[1m./glob_internal.h:36:21: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at index 2[0m
   36 |   for (p = pattern; *p != '\0'; ++p)[0m
      | [0;1;32m                    ^~
[0m[1m./glob_internal.h:46:17: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
   46 |             if (p[1] != '\0')[0m
      | [0;1;32m                ^
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mAssuming 'pattern' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:316:26: [0m[0;1;36mnote: [0mAssuming 'pglob' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^
[0m[1mglob.c:316:43: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:316:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m  ^
[0m[1mglob.c:324:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mglob.c:324:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m                 ^
[0m[1mglob.c:327:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:327:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mglob.c:332:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:332:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m  ^
[0m[1mglob.c:354:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:354:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m  ^
[0m[1mglob.c:500:7: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to NULL[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mglob.c:500:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to 'pattern'[0m
  527 |   else if (filename == pattern[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:528:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:528:40: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m                                       ^
[0m[1mglob.c:559:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  559 |       if (glob_use_alloca (alloca_used, dirlen + 1))[0m
      | [0;1;32m      ^
[0m[1mglob.c:564:15: [0m[0;1;36mnote: [0mAssuming 'newp' is not equal to NULL[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1mglob.c:564:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m          ^
[0m[1mglob.c:568:7: [0m[0;1;36mnote: [0mAssuming byte offset is non-negative and less than the extent of the heap area[0m
  568 |       *((char *) mempcpy (newp, pattern, dirlen)) = '\0';[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:581:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:581:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mglob.c:581:34: [0m[0;1;36mnote: [0mAssuming 'dirlen' is <= 1[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m                                 ^~~~~~~~~~
[0m[1mglob.c:581:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m                                            ^
[0m[1mglob.c:615:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:615:47: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m                                              ^
[0m[1mglob.c:911:7: [0m[0;1;36mnote: [0m'filename' is not equal to NULL[0m
  911 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mglob.c:911:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  911 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:962:40: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  962 |   meta = __glob_pattern_type (dirname, !(flags & GLOB_NOESCAPE));[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:962:10: [0m[0;1;36mnote: [0mCalling '__glob_pattern_type'[0m
  962 |   meta = __glob_pattern_type (dirname, !(flags & GLOB_NOESCAPE));[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./glob_internal.h:36:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   36 |   for (p = pattern; *p != '\0'; ++p)[0m
      | [0;1;32m  ^
[0m[1m./glob_internal.h:37:5: [0m[0;1;36mnote: [0m'Default' branch taken. Execution continues on line 36[0m
   37 |     switch (*p)[0m
      | [0;1;32m    ^
[0m[1m./glob_internal.h:36:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   36 |   for (p = pattern; *p != '\0'; ++p)[0m
      | [0;1;32m  ^
[0m[1m./glob_internal.h:37:5: [0m[0;1;36mnote: [0mControl jumps to 'case 92:'  at line 43[0m
   37 |     switch (*p)[0m
      | [0;1;32m    ^
[0m[1m./glob_internal.h:44:13: [0m[0;1;36mnote: [0m'quote' is 1[0m
   44 |         if (quote)[0m
      | [0;1;32m            ^~~~~
[0m[1m./glob_internal.h:44:9: [0m[0;1;36mnote: [0mTaking true branch[0m
   44 |         if (quote)[0m
      | [0;1;32m        ^
[0m[1m./glob_internal.h:46:17: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at index 2[0m
   46 |             if (p[1] != '\0')[0m
      | [0;1;32m                ^~~~
[0m[1mglob.c:259:14: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
  259 |           : (GLOB_FSTATAT64 (AT_FDCWD, filename, &st64, 0) == 0[0m
      | [0;1;32m             ^
[0m[1mglob.c:90:33: [0m[0;1;36mnote: [0mexpanded from macro 'GLOB_FSTATAT64'[0m
   90 | # define GLOB_FSTATAT64         fstatat[0m
      | [0;1;32m                                ^
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mAssuming 'pattern' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:316:26: [0m[0;1;36mnote: [0mAssuming 'pglob' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^
[0m[1mglob.c:316:43: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:316:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m  ^
[0m[1mglob.c:324:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mglob.c:324:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m                 ^
[0m[1mglob.c:327:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:327:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mglob.c:332:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:332:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m  ^
[0m[1mglob.c:354:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:354:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m  ^
[0m[1mglob.c:500:7: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to NULL[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mglob.c:500:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to 'pattern'[0m
  527 |   else if (filename == pattern[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:528:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:528:40: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m                                       ^
[0m[1mglob.c:559:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  559 |       if (glob_use_alloca (alloca_used, dirlen + 1))[0m
      | [0;1;32m      ^
[0m[1mglob.c:564:15: [0m[0;1;36mnote: [0mAssuming 'newp' is not equal to NULL[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1mglob.c:564:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m          ^
[0m[1mglob.c:581:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:581:31: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m                              ^
[0m[1mglob.c:615:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:615:47: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m                                              ^
[0m[1mglob.c:911:7: [0m[0;1;36mnote: [0m'filename' is not equal to NULL[0m
  911 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mglob.c:911:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  911 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:962:40: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  962 |   meta = __glob_pattern_type (dirname, !(flags & GLOB_NOESCAPE));[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:968:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  968 |   if (meta & (GLOBPAT_SPECIAL | GLOBPAT_BRACKET))[0m
      | [0;1;32m  ^
[0m[1mglob.c:975:36: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  975 |       if (!(flags & GLOB_NOESCAPE) && dirlen > 0 && dirname[dirlen - 1] == '\\')[0m
      | [0;1;32m                                   ^
[0m[1mglob.c:986:29: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  986 |       if (__glibc_unlikely ((flags & GLOB_ALTDIRFUNC) != 0))[0m
      | [0;1;32m                            ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/cdefs.h:510:52: [0m[0;1;36mnote: [0mexpanded from macro '__glibc_unlikely'[0m
  510 | # define __glibc_unlikely(cond) __builtin_expect ((cond), 0)[0m
      | [0;1;32m                                                   ^~~~
[0m[1mglob.c:986:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  986 |       if (__glibc_unlikely ((flags & GLOB_ALTDIRFUNC) != 0))[0m
      | [0;1;32m      ^
[0m[1mglob.c:1001:11: [0m[0;1;36mnote: [0mAssuming 'status' is not equal to 0[0m
 1001 |       if (status != 0)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mglob.c:1001:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1001 |       if (status != 0)[0m
      | [0;1;32m      ^
[0m[1mglob.c:1003:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1003 |           if ((flags & GLOB_NOCHECK) == 0 || status != GLOB_NOMATCH)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1003:15: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:1003:46: [0m[0;1;36mnote: [0mAssuming 'status' is equal to GLOB_NOMATCH[0m
 1003 |           if ((flags & GLOB_NOCHECK) == 0 || status != GLOB_NOMATCH)[0m
      | [0;1;32m                                             ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1003:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1003 |           if ((flags & GLOB_NOCHECK) == 0 || status != GLOB_NOMATCH)[0m
      | [0;1;32m          ^
[0m[1mglob.c:1008:11: [0m[0;1;36mnote: [0mControl jumps to line 1058[0m
 1008 |           goto no_matches;[0m
      | [0;1;32m          ^
[0m[1mglob.c:1058:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1058 |           if (flags & GLOB_NOCHECK)[0m
      | [0;1;32m          ^
[0m[1mglob.c:1063:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1063 |               if (newcount > SIZE_MAX / sizeof (char *) - 2)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1063:15: [0m[0;1;36mnote: [0mTaking false branch[0m
 1063 |               if (newcount > SIZE_MAX / sizeof (char *) - 2)[0m
      | [0;1;32m              ^
[0m[1mglob.c:1073:19: [0m[0;1;36mnote: [0mAssuming 'new_gl_pathv' is not equal to NULL[0m
 1073 |               if (new_gl_pathv == NULL)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1073:15: [0m[0;1;36mnote: [0mTaking false branch[0m
 1073 |               if (new_gl_pathv == NULL)[0m
      | [0;1;32m              ^
[0m[1mglob.c:1078:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1078 |               if (pglob->gl_pathv[newcount] == NULL)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1078:15: [0m[0;1;36mnote: [0mTaking false branch[0m
 1078 |               if (pglob->gl_pathv[newcount] == NULL)[0m
      | [0;1;32m              ^
[0m[1mglob.c:1090:15: [0m[0;1;36mnote: [0mAssuming index is less than the number of 'char *' elements in the heap area[0m
 1090 |               pglob->gl_pathv[newcount] = NULL;[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1090:15: [0m[0;1;36mnote: [0mStoring null pointer value[0m
 1090 |               pglob->gl_pathv[newcount] = NULL;[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1162:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1162 |   if (flags & GLOB_MARK)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mglob.c:1162:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1162 |   if (flags & GLOB_MARK)[0m
      | [0;1;32m  ^
[0m[1mglob.c:1167:26: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1167:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m      ^
[0m[1mglob.c:1168:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1168 |         if (is_dir (pglob->gl_pathv[i], flags, pglob))[0m
      | [0;1;32m        ^
[0m[1mglob.c:1167:64: [0m[0;1;36mnote: [0mValue assigned to 'i'[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m                                                               ^~~
[0m[1mglob.c:1167:26: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1167:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m      ^
[0m[1mglob.c:1168:21: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 'filename'[0m
 1168 |         if (is_dir (pglob->gl_pathv[i], flags, pglob))[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1168:13: [0m[0;1;36mnote: [0mCalling 'is_dir'[0m
 1168 |         if (is_dir (pglob->gl_pathv[i], flags, pglob))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:257:11: [0m[0;1;36mnote: [0m'?' condition is false[0m
  257 |   return (__glibc_unlikely (flags & GLOB_ALTDIRFUNC)[0m
      | [0;1;32m          ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/cdefs.h:510:33: [0m[0;1;36mnote: [0mexpanded from macro '__glibc_unlikely'[0m
  510 | # define __glibc_unlikely(cond) __builtin_expect ((cond), 0)[0m
      | [0;1;32m                                ^
[0m[1mglob.c:259:14: [0m[0;1;36mnote: [0mNull pointer passed to 2nd parameter expecting 'nonnull'[0m
  259 |           : (GLOB_FSTATAT64 (AT_FDCWD, filename, &st64, 0) == 0[0m
      | [0;1;32m             ^                         ~~~~~~~~
[0m[1mglob.c:90:33: [0m[0;1;36mnote: [0mexpanded from macro 'GLOB_FSTATAT64'[0m
   90 | # define GLOB_FSTATAT64         fstatat[0m
      | [0;1;32m                                ^
[0m[1mglob.c:268:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |   while (*cp != '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  269 |     if ((flags & GLOB_NOESCAPE) == 0 && *cp == '\\')[0m
  270 |       {[0m
  271 |         if (*++cp == '\0')[0m
  272 |           break;[0m
  273 |         ++cp;[0m
  274 |       }[0m
  275 |     else[0m
  276 |       {[0m
  277 |         if ((*cp == '}' && depth-- == 0) || (*cp == ',' && depth == 0))[0m
  278 |           break;[0m
  279 | [0m
  280 |         if (*cp++ == '{')[0m
  281 |           depth++;[0m
  282 |       }[0m
      | [0;1;32m       
[0m[1mglob.c:271:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |         if (*++cp == '\0')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  272 |           break;[0m
      | [0;1;32m                
[0m[1mglob.c:277:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |         if ((*cp == '}' && depth-- == 0) || (*cp == ',' && depth == 0))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  278 |           break;[0m
      | [0;1;32m                
[0m[1mglob.c:280:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |         if (*cp++ == '{')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  281 |           depth++;[0m
      | [0;1;32m                  
[0m[1mglob.c:324:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  325 |     flags |= GLOB_ONLYDIR;[0m
      | [0;1;32m                          
[0m[1mglob.c:327:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  328 |     /* Have to do this so 'globfree' knows where to start freeing.  It[0m
  329 |        also makes all the code that uses gl_offs simpler. */[0m
  330 |     pglob->gl_offs = 0;[0m
      | [0;1;32m                       
[0m[1mglob.c:335:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |       if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  336 |         pglob->gl_pathv = NULL;[0m
  337 |       else[0m
      | [0;32m      } 
[0m[1mglob.c:341:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |           if (pglob->gl_offs >= ~((size_t) 0) / sizeof (char *))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  342 |             return GLOB_NOSPACE;[0m
      | [0;1;32m                                
[0m[1mglob.c:346:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |           if (pglob->gl_pathv == NULL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  347 |             return GLOB_NOSPACE;[0m
      | [0;1;32m                                
[0m[1mglob.c:349:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |           for (i = 0; i <= pglob->gl_offs; ++i)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  350 |             pglob->gl_pathv[i] = NULL;[0m
      | [0;1;32m                                      
[0m[1mglob.c:358:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |       if (flags & GLOB_NOESCAPE)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  359 |         begin = strchr (pattern, '{');[0m
  360 |       else[0m
      | [0;32m      } 
[0m[1mglob.c:371:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |               if (*begin == '\\' && begin[1] != '\0')[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  372 |                 ++begin;[0m
  373 |               else if (*begin == '{')[0m
      | [0;32m              } 
[0m[1mglob.c:373:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |               else if (*begin == '{')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  374 |                 break;[0m
      | [0;1;32m                      
[0m[1mglob.c:393:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |           if (alloca_onealt)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  394 |             onealt = alloca_account (pattern_len, alloca_used);[0m
  395 |           else[0m
      | [0;32m          } 
[0m[1mglob.c:398:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |               if (onealt == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  399 |                 return GLOB_NOSPACE;[0m
      | [0;1;32m                                    
[0m[1mglob.c:412:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |               if (__glibc_unlikely (!alloca_onealt))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  413 |                 free (onealt);[0m
      | [0;1;32m                              
[0m[1mglob.c:423:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |               if (rest == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  424 |                 /* It is an illegal expression.  */[0m
  425 |                 goto illegal_brace;[0m
      | [0;1;32m                                   
[0m[1mglob.c:454:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |                   if (__glibc_unlikely (!alloca_onealt))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  455 |                     free (onealt);[0m
      | [0;1;32m                                  
[0m[1mglob.c:464:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |               if (*next == '}')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  465 |                 /* We saw the last entry.  */[0m
  466 |                 break;[0m
      | [0;1;32m                      
[0m[1mglob.c:473:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  473 |           if (__glibc_unlikely (!alloca_onealt))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  474 |             free (onealt);[0m
      | [0;1;32m                          
[0m[1mglob.c:476:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |           if (pglob->gl_pathc != firstc)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  477 |             /* We found some entries.  */[0m
  478 |             return 0;[0m
  479 |           else if (!(flags & (GLOB_NOCHECK|GLOB_NOMAGIC)))[0m
      | [0;32m          } 
[0m[1mglob.c:479:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |           else if (!(flags & (GLOB_NOCHECK|GLOB_NOMAGIC)))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  480 |             return GLOB_NOMATCH;[0m
      | [0;1;32m                                
[0m[1mglob.c:559:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |       if (glob_use_alloca (alloca_used, dirlen + 1))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  560 |         newp = alloca_account (dirlen + 1, alloca_used);[0m
  561 |       else[0m
      | [0;32m      } 
[0m[1mglob.c:564:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  565 |             return GLOB_NOSPACE;[0m
      | [0;1;32m                                
[0m[1mglob.c:591:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |               while (p > dirname && p[-1] == '\\') --p;[0m
      | [0;1;32m                                                  ^    
[0m      | [0;32m                                                   {
[0m[1mglob.c:599:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  599 |           if (val == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  600 |             pglob->gl_flags = ((pglob->gl_flags & ~GLOB_MARK)[0m
  601 |                                | (flags & GLOB_MARK));[0m
  602 |           else if (val == GLOB_NOMATCH && flags != orig_flags)[0m
      | [0;32m          } 
[0m[1mglob.c:619:19: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  619 |               && (dirname[2] == '\0' || dirname[2] == '/')))[0m
      | [0;1;32m                  ^~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mAssuming 'pattern' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:316:26: [0m[0;1;36mnote: [0mAssuming 'pglob' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^
[0m[1mglob.c:316:43: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:316:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m  ^
[0m[1mglob.c:324:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mglob.c:324:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m                 ^
[0m[1mglob.c:327:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:327:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mglob.c:332:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:332:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m  ^
[0m[1mglob.c:354:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:354:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m  ^
[0m[1mglob.c:500:7: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to NULL[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mglob.c:500:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to 'pattern'[0m
  527 |   else if (filename == pattern[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:528:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:528:40: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m                                       ^
[0m[1mglob.c:559:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  559 |       if (glob_use_alloca (alloca_used, dirlen + 1))[0m
      | [0;1;32m      ^
[0m[1mglob.c:564:15: [0m[0;1;36mnote: [0mAssuming 'newp' is not equal to NULL[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1mglob.c:564:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m          ^
[0m[1mglob.c:568:7: [0m[0;1;36mnote: [0mAssuming byte offset is non-negative and less than the extent of the heap area[0m
  568 |       *((char *) mempcpy (newp, pattern, dirlen)) = '\0';[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:581:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:581:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mglob.c:581:34: [0m[0;1;36mnote: [0mAssuming 'dirlen' is <= 1[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m                                 ^~~~~~~~~~
[0m[1mglob.c:581:45: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m                                            ^
[0m[1mglob.c:615:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:615:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m      ^
[0m[1mglob.c:615:50: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m                                                 ^~~~~~~~~~~~~~~~~
[0m[1mglob.c:615:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m  ^
[0m[1mglob.c:617:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  617 |       if (dirname[1] == '\0' || dirname[1] == '/'[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:617:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:617:33: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  617 |       if (dirname[1] == '\0' || dirname[1] == '/'[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~
[0m[1mglob.c:617:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  617 |       if (dirname[1] == '\0' || dirname[1] == '/'[0m
      | [0;1;32m          ^
[0m[1mglob.c:618:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  618 |           || (!(flags & GLOB_NOESCAPE) && dirname[1] == '\\'[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:618:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mglob.c:618:43: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  618 |           || (!(flags & GLOB_NOESCAPE) && dirname[1] == '\\'[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:618:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  618 |           || (!(flags & GLOB_NOESCAPE) && dirname[1] == '\\'[0m
      | [0;1;32m              ^
[0m[1mglob.c:619:19: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at index 2[0m
  619 |               && (dirname[2] == '\0' || dirname[2] == '/')))[0m
      | [0;1;32m                  ^~~~~~~~~~
[0m[1mglob.c:667:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  667 |                   if (err != ERANGE)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  668 |                     break;[0m
      | [0;1;32m                          
[0m[1mglob.c:690:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  690 |               if (__glibc_unlikely (malloc_home_dir))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  691 |                 free (home_dir);[0m
      | [0;1;32m                                
[0m[1mglob.c:706:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  706 |               if (__glibc_unlikely (malloc_dirname))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  707 |                 free (dirname);[0m
      | [0;1;32m                               
[0m[1mglob.c:718:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |               if (use_alloca)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  719 |                 newp = alloca_account (home_len + dirlen, alloca_used);[0m
  720 |               else[0m
      | [0;32m              } 
[0m[1mglob.c:725:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |                       if (__glibc_unlikely (malloc_home_dir))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  726 |                         free (home_dir);[0m
      | [0;1;32m                                        
[0m[1mglob.c:735:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |               if (__glibc_unlikely (malloc_dirname))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  736 |                 free (dirname);[0m
      | [0;1;32m                               
[0m[1mglob.c:742:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  742 |               if (__glibc_unlikely (malloc_home_dir))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  743 |                 free (home_dir);[0m
      | [0;1;32m                                
[0m[1mglob.c:762:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  762 |                   if (unescape)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  763 |                     end_name = strchr (unescape, '\0');[0m
      | [0;1;32m                                                       
[0m[1mglob.c:765:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  765 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  766 |                 unescape = memchr (dirname, '\\', end_name - dirname);[0m
      | [0;1;32m                                                                      
[0m[1mglob.c:768:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  768 |           if (end_name == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  769 |             user_name = dirname + 1;[0m
  770 |           else[0m
      | [0;32m          } 
[0m[1mglob.c:773:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  773 |               if (glob_use_alloca (alloca_used, end_name - dirname))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  774 |                 newp = alloca_account (end_name - dirname, alloca_used);[0m
  775 |               else[0m
      | [0;32m              } 
[0m[1mglob.c:799:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  799 |                               if (filename == NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  800 |                                 *p++ = '\\';[0m
      | [0;1;32m                                            
[0m[1mglob.c:809:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  810 |                 *((char *) mempcpy (newp, dirname + 1, end_name - dirname - 1))[0m
  811 |                   = '\0';[0m
      | [0;1;32m                         
[0m[1mglob.c:830:30: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'user_name' [clang-analyzer-unix.Malloc][0m
  830 |                     retval = GLOB_NOSPACE;[0m
      | [0;1;32m                             ^
[0m[1m./glob-libc.gl.h:63:25: [0m[0;1;36mnote: [0mexpanded from macro 'GLOB_NOSPACE'[0m
   63 | #define GLOB_NOSPACE    1       /* Ran out of memory.  */[0m
      | [0;1;32m                        ^
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mAssuming 'pattern' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:316:26: [0m[0;1;36mnote: [0mAssuming 'pglob' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^
[0m[1mglob.c:316:43: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:316:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m  ^
[0m[1mglob.c:324:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mglob.c:324:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m                 ^
[0m[1mglob.c:327:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:327:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mglob.c:332:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:332:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m  ^
[0m[1mglob.c:354:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:354:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m  ^
[0m[1mglob.c:500:7: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to NULL[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mglob.c:500:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to 'pattern'[0m
  527 |   else if (filename == pattern[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:528:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:528:40: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m                                       ^
[0m[1mglob.c:559:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  559 |       if (glob_use_alloca (alloca_used, dirlen + 1))[0m
      | [0;1;32m      ^
[0m[1mglob.c:564:15: [0m[0;1;36mnote: [0mAssuming 'newp' is not equal to NULL[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1mglob.c:564:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m          ^
[0m[1mglob.c:581:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:581:31: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m                              ^
[0m[1mglob.c:615:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:615:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m      ^
[0m[1mglob.c:615:50: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m                                                 ^~~~~~~~~~~~~~~~~
[0m[1mglob.c:615:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m  ^
[0m[1mglob.c:617:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  617 |       if (dirname[1] == '\0' || dirname[1] == '/'[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:617:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:617:33: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  617 |       if (dirname[1] == '\0' || dirname[1] == '/'[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~
[0m[1mglob.c:617:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  617 |       if (dirname[1] == '\0' || dirname[1] == '/'[0m
      | [0;1;32m          ^
[0m[1mglob.c:618:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  618 |           || (!(flags & GLOB_NOESCAPE) && dirname[1] == '\\'[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:618:40: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  618 |           || (!(flags & GLOB_NOESCAPE) && dirname[1] == '\\'[0m
      | [0;1;32m                                       ^
[0m[1mglob.c:757:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  757 |           if (!(flags & GLOB_NOESCAPE))[0m
      | [0;1;32m          ^
[0m[1mglob.c:768:15: [0m[0;1;36mnote: [0mAssuming 'end_name' is not equal to NULL[0m
  768 |           if (end_name == NULL)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~
[0m[1mglob.c:768:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  768 |           if (end_name == NULL)[0m
      | [0;1;32m          ^
[0m[1mglob.c:773:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  773 |               if (glob_use_alloca (alloca_used, end_name - dirname))[0m
      | [0;1;32m              ^
[0m[1mglob.c:777:26: [0m[0;1;36mnote: [0mMemory is allocated[0m
  777 |                   newp = malloc (end_name - dirname);[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:778:23: [0m[0;1;36mnote: [0mAssuming 'newp' is not equal to NULL[0m
  778 |                   if (newp == NULL)[0m
      | [0;1;32m                      ^~~~~~~~~~~~
[0m[1mglob.c:778:19: [0m[0;1;36mnote: [0mTaking false branch[0m
  778 |                   if (newp == NULL)[0m
      | [0;1;32m                  ^
[0m[1mglob.c:785:19: [0m[0;1;36mnote: [0m'unescape' is equal to NULL[0m
  785 |               if (unescape != NULL)[0m
      | [0;1;32m                  ^~~~~~~~
[0m[1mglob.c:785:15: [0m[0;1;36mnote: [0mTaking false branch[0m
  785 |               if (unescape != NULL)[0m
      | [0;1;32m              ^
[0m[1mglob.c:824:20: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  824 |             while (getpwnam_r (user_name, &pwbuf,[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  825 |                                pwtmpbuf.data, pwtmpbuf.length, &p)[0m
      | [0;1;32m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  826 |                    == ERANGE)[0m
      | [0;1;32m                   ~~~~~~~~~
[0m[1mglob.c:824:13: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  824 |             while (getpwnam_r (user_name, &pwbuf,[0m
      | [0;1;32m            ^
[0m[1mglob.c:828:21: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  828 |                 if (!scratch_buffer_grow (&pwtmpbuf))[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:828:17: [0m[0;1;36mnote: [0mTaking true branch[0m
  828 |                 if (!scratch_buffer_grow (&pwtmpbuf))[0m
      | [0;1;32m                ^
[0m[1mglob.c:830:30: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'user_name'[0m
  830 |                     retval = GLOB_NOSPACE;[0m
      | [0;1;32m                             ^
[0m[1m./glob-libc.gl.h:63:25: [0m[0;1;36mnote: [0mexpanded from macro 'GLOB_NOSPACE'[0m
   63 | #define GLOB_NOSPACE    1       /* Ran out of memory.  */[0m
      | [0;1;32m                        ^
[0m[1mglob.c:838:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  838 |             if (__glibc_unlikely (malloc_user_name))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  839 |               free (user_name);[0m
      | [0;1;32m                               
[0m[1mglob.c:853:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  853 |                 if (glob_use_alloca (alloca_used, home_len + rest_len + 1))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  854 |                   dirname = alloca_account (home_len + rest_len + 1,[0m
  855 |                                             alloca_used);[0m
  856 |                 else[0m
      | [0;32m                } 
[0m[1mglob.c:869:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  869 |                 if (end_name != NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  870 |                   d = mempcpy (d, end_name, rest_len);[0m
      | [0;1;32m                                                      
[0m[1mglob.c:928:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  928 |       if (new_gl_pathv == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  929 |         goto nospace;[0m
      | [0;1;32m                     
[0m[1mglob.c:936:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  936 |           if (pglob->gl_pathv[newcount] == NULL)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  937 |             goto nospace;[0m
      | [0;1;32m                         
[0m[1mglob.c:941:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  941 |           if (__glibc_unlikely (malloc_dirname))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  942 |             free (dirname);[0m
      | [0;1;32m                           
[0m[1mglob.c:946:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |           if (__glibc_unlikely (malloc_dirname))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  947 |             pglob->gl_pathv[newcount] = dirname;[0m
  948 |           else[0m
      | [0;32m          } 
[0m[1mglob.c:951:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  951 |               if (pglob->gl_pathv[newcount] == NULL)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  952 |                 goto nospace;[0m
      | [0;1;32m                             
[0m[1mglob.c:981:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  981 |           while (p > dirname && p[-1] == '\\') --p;[0m
      | [0;1;32m                                              ^    
[0m      | [0;32m                                               {
[0m[1mglob.c:982:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  982 |           if ((&dirname[dirlen] - p) & 1)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  983 |             *(char *) &dirname[--dirlen] = '\0';[0m
      | [0;1;32m                                                
[0m[1mglob.c:1023:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |           if (status == GLOB_NOMATCH)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1024 |             /* No matches in this directory.  Try the next.  */[0m
 1025 |             continue;[0m
      | [0;1;32m                     
[0m[1mglob.c:1073:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1073 |               if (new_gl_pathv == NULL)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1074 |                 goto nospace2;[0m
      | [0;1;32m                              
[0m[1mglob.c:1122:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1122 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1123 |                 *q = *p;[0m
      | [0;1;32m                        
[0m[1mglob.c:1129:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1129 |       if (dirname_modified)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1130 |         flags &= ~(GLOB_NOCHECK | GLOB_NOMAGIC);[0m
      | [0;1;32m                                                
[0m[1mglob.c:1167:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1168 |         if (is_dir (pglob->gl_pathv[i], flags, pglob))[0m
 1169 |           {[0m
 1170 |             size_t len = strlen (pglob->gl_pathv[i]) + 2;[0m
 1171 |             char *new = realloc (pglob->gl_pathv[i], len);[0m
 1172 |             if (new == NULL)[0m
 1173 |               {[0m
 1174 |                 globfree (pglob);[0m
 1175 |                 pglob->gl_pathc = 0;[0m
 1176 |                 retval = GLOB_NOSPACE;[0m
 1177 |                 goto out;[0m
 1178 |               }[0m
 1179 |             strcpy (&new[len - 2], "/");[0m
 1180 |             pglob->gl_pathv[i] = new;[0m
 1181 |           }[0m
      | [0;1;32m           
[0m[1mglob.c:1170:26: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 1170 |             size_t len = strlen (pglob->gl_pathv[i]) + 2;[0m
      | [0;1;32m                         ^       ~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mAssuming 'pattern' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:316:26: [0m[0;1;36mnote: [0mAssuming 'pglob' is not equal to NULL[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~
[0m[1mglob.c:316:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m      ^
[0m[1mglob.c:316:43: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:316:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  316 |   if (pattern == NULL || pglob == NULL || (flags & ~__GLOB_FLAGS) != 0)[0m
      | [0;1;32m  ^
[0m[1mglob.c:324:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mglob.c:324:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  324 |   if (pattern[0] && pattern[strlen (pattern) - 1] == '/')[0m
      | [0;1;32m                 ^
[0m[1mglob.c:327:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:327:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  327 |   if (!(flags & GLOB_DOOFFS))[0m
      | [0;1;32m  ^
[0m[1mglob.c:332:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:332:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  332 |   if (!(flags & GLOB_APPEND))[0m
      | [0;1;32m  ^
[0m[1mglob.c:354:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~
[0m[1mglob.c:354:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  354 |   if (flags & GLOB_BRACE)[0m
      | [0;1;32m  ^
[0m[1mglob.c:500:7: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to NULL[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~
[0m[1mglob.c:500:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  500 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mAssuming 'filename' is not equal to 'pattern'[0m
  527 |   else if (filename == pattern[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:527:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mglob.c:528:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:528:40: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  528 |            || (filename == pattern + 1 && pattern[0] == '\\'[0m
      | [0;1;32m                                       ^
[0m[1mglob.c:559:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  559 |       if (glob_use_alloca (alloca_used, dirlen + 1))[0m
      | [0;1;32m      ^
[0m[1mglob.c:564:15: [0m[0;1;36mnote: [0mAssuming 'newp' is not equal to NULL[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m              ^~~~~~~~~~~~
[0m[1mglob.c:564:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  564 |           if (newp == NULL)[0m
      | [0;1;32m          ^
[0m[1mglob.c:581:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:581:31: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  581 |       if (filename[0] == '\0' && dirlen > 1 && !drive_root)[0m
      | [0;1;32m                              ^
[0m[1mglob.c:615:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:615:47: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  615 |   if ((flags & (GLOB_TILDE|GLOB_TILDE_CHECK)) && dirname[0] == '~')[0m
      | [0;1;32m                                              ^
[0m[1mglob.c:911:7: [0m[0;1;36mnote: [0m'filename' is not equal to NULL[0m
  911 |   if (filename == NULL)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1mglob.c:911:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  911 |   if (filename == NULL)[0m
      | [0;1;32m  ^
[0m[1mglob.c:962:40: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  962 |   meta = __glob_pattern_type (dirname, !(flags & GLOB_NOESCAPE));[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:968:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  968 |   if (meta & (GLOBPAT_SPECIAL | GLOBPAT_BRACKET))[0m
      | [0;1;32m  ^
[0m[1mglob.c:975:36: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  975 |       if (!(flags & GLOB_NOESCAPE) && dirlen > 0 && dirname[dirlen - 1] == '\\')[0m
      | [0;1;32m                                   ^
[0m[1mglob.c:986:29: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  986 |       if (__glibc_unlikely ((flags & GLOB_ALTDIRFUNC) != 0))[0m
      | [0;1;32m                            ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/cdefs.h:510:52: [0m[0;1;36mnote: [0mexpanded from macro '__glibc_unlikely'[0m
  510 | # define __glibc_unlikely(cond) __builtin_expect ((cond), 0)[0m
      | [0;1;32m                                                   ^~~~
[0m[1mglob.c:986:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  986 |       if (__glibc_unlikely ((flags & GLOB_ALTDIRFUNC) != 0))[0m
      | [0;1;32m      ^
[0m[1mglob.c:1001:11: [0m[0;1;36mnote: [0mAssuming 'status' is equal to 0[0m
 1001 |       if (status != 0)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mglob.c:1001:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1001 |       if (status != 0)[0m
      | [0;1;32m      ^
[0m[1mglob.c:1014:19: [0m[0;1;36mnote: [0mAssuming 'i' is >= field 'gl_pathc'[0m
 1014 |       for (i = 0; i < dirs.gl_pathc; ++i)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~
[0m[1mglob.c:1014:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1049[0m
 1014 |       for (i = 0; i < dirs.gl_pathc; ++i)[0m
      | [0;1;32m      ^
[0m[1mglob.c:1054:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1054 |       if (pglob->gl_pathc + pglob->gl_offs == oldcount)[0m
      | [0;1;32m      ^
[0m[1mglob.c:1058:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1058 |           if (flags & GLOB_NOCHECK)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1058:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1058 |           if (flags & GLOB_NOCHECK)[0m
      | [0;1;32m          ^
[0m[1mglob.c:1063:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1063 |               if (newcount > SIZE_MAX / sizeof (char *) - 2)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1063:15: [0m[0;1;36mnote: [0mTaking false branch[0m
 1063 |               if (newcount > SIZE_MAX / sizeof (char *) - 2)[0m
      | [0;1;32m              ^
[0m[1mglob.c:1073:19: [0m[0;1;36mnote: [0mAssuming 'new_gl_pathv' is not equal to NULL[0m
 1073 |               if (new_gl_pathv == NULL)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1073:15: [0m[0;1;36mnote: [0mTaking false branch[0m
 1073 |               if (new_gl_pathv == NULL)[0m
      | [0;1;32m              ^
[0m[1mglob.c:1078:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1078 |               if (pglob->gl_pathv[newcount] == NULL)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1078:15: [0m[0;1;36mnote: [0mTaking false branch[0m
 1078 |               if (pglob->gl_pathv[newcount] == NULL)[0m
      | [0;1;32m              ^
[0m[1mglob.c:1090:15: [0m[0;1;36mnote: [0mAssuming index is less than the number of 'char *' elements in the heap area[0m
 1090 |               pglob->gl_pathv[newcount] = NULL;[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1090:15: [0m[0;1;36mnote: [0mStoring null pointer value[0m
 1090 |               pglob->gl_pathv[newcount] = NULL;[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1162:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1162 |   if (flags & GLOB_MARK)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mglob.c:1162:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1162 |   if (flags & GLOB_MARK)[0m
      | [0;1;32m  ^
[0m[1mglob.c:1167:26: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1167:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m      ^
[0m[1mglob.c:1168:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1168 |         if (is_dir (pglob->gl_pathv[i], flags, pglob))[0m
      | [0;1;32m        ^
[0m[1mglob.c:1167:64: [0m[0;1;36mnote: [0mValue assigned to 'i'[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m                                                               ^~~
[0m[1mglob.c:1167:26: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1167:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1167 |       for (i = oldcount; i < pglob->gl_pathc + pglob->gl_offs; ++i)[0m
      | [0;1;32m      ^
[0m[1mglob.c:1168:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1168 |         if (is_dir (pglob->gl_pathv[i], flags, pglob))[0m
      | [0;1;32m        ^
[0m[1mglob.c:1170:26: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 1170 |             size_t len = strlen (pglob->gl_pathv[i]) + 2;[0m
      | [0;1;32m                         ^       ~~~~~~~~~~~~~~~~~~
[0m[1mglob.c:1179:13: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1179 |             strcpy (&new[len - 2], "/");[0m
      | [0;1;32m            ^~~~~~
[0m[1mglob.c:1179:13: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1179 |             strcpy (&new[len - 2], "/");[0m
      | [0;1;32m            ^~~~~~
[0m[1mglob.c:1193:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1193 |   if (__glibc_unlikely (malloc_dirname))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1194 |     free (dirname);[0m
      | [0;1;32m                   
[0m[1mglob.c:1211:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1211 |   if (s1 == s2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1212 |     return 0;[0m
      | [0;1;32m             
[0m[1mglob.c:1213:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1213 |   if (s1 == NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1214 |     return 1;[0m
      | [0;1;32m             
[0m[1mglob.c:1215:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1215 |   if (s2 == NULL)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1216 |     return -1;[0m
      | [0;1;32m              
[0m[1mglob.c:1232:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1232 |   if (dirlen == 1 && dirname[0] == '/')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1233 |     /* DIRNAME is just "/", so normal prepending would get us "//foo".[0m
 1234 |        We want "/foo" instead, so don't prepend any chars from DIRNAME.  */[0m
 1235 |     dirlen = 0;[0m
      | [0;1;32m               
[0m[1mglob.c:1258:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1258 |           while (i > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1259 |             free (array[--i]);[0m
      | [0;1;32m                              
[0m[1mglob.c:1324:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1324 |       if (alloca_fullname)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1325 |         fullname = alloca_account (fullsize, alloca_used);[0m
 1326 |       else[0m
      | [0;32m      } 
[0m[1mglob.c:1329:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1329 |           if (fullname == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1330 |             return GLOB_NOSPACE;[0m
      | [0;1;32m                                
[0m[1mglob.c:1337:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1337 |           || errno == EOVERFLOW)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1338 |         /* We found this file to be existing.  Now tell the rest[0m
 1339 |            of the function to copy this name into the result.  */[0m
 1340 |         flags |= GLOB_NOCHECK;[0m
      | [0;1;32m                              
[0m[1mglob.c:1342:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1342 |       if (__glibc_unlikely (!alloca_fullname))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1343 |         free (fullname);[0m
      | [0;1;32m                        
[0m[1mglob.c:1354:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1354 |                   || (flags & GLOB_ERR)))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1355 |             return GLOB_ABORTED;[0m
      | [0;1;32m                                
[0m[1mglob.c:1369:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1369 |                 if (__builtin_expect (flags & GLOB_ALTDIRFUNC, 0))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1370 |                   d = convert_dirent (GL_READDIR (pglob, stream));[0m
 1371 |                 else[0m
      | [0;32m                } 
[0m[1mglob.c:1380:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1380 |               if (d.name == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1381 |                 break;[0m
      | [0;1;32m                      
[0m[1mglob.c:1385:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1385 |               if (flags & GLOB_ONLYDIR)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m[1mglob.c:1388:28: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1388 |                   default: continue;[0m
      | [0;1;32m                           ^       
[0m      | [0;32m                           {       ;} 
[0m[1mglob.c:1389:32: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1389 |                   case DT_DIR: break;[0m
      | [0;1;32m                               ^    
[0m      | [0;32m                               {    ;} 
[0m[1mglob.c:1398:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1398 |                             && !scratch_buffer_set_array_size (&s, need, 1))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1399 |                           goto memory_error;[0m
      | [0;1;32m                                            
[0m[1mglob.c:1403:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1403 |                         memcpy (p, d.name, namelen + 1);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mglob.c:1403:25: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1403 |                         memcpy (p, d.name, namelen + 1);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mglob.c:1404:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1404 |                         if (! is_dir (s.data, flags, pglob))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1405 |                           continue;[0m
      | [0;1;32m                                   
[0m[1mglob.c:1411:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1411 |                                && S_ISDIR (st64.st_mode)))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1412 |                           continue;[0m
      | [0;1;32m                                   
[0m[1mglob.c:1426:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1426 |                           < names->count)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1427 |                         goto memory_error;[0m
      | [0;1;32m                                          
[0m[1mglob.c:1428:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1428 |                       if (glob_use_alloca (alloca_used, size))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1429 |                         newnames = names_alloca[0m
 1430 |                           = alloca_account (size, alloca_used);[0m
 1431 |                       else if ((newnames = malloc (size))[0m
      | [0;32m                      } 
[0m[1mglob.c:1432:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1432 |                                == NULL)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1433 |                         goto memory_error;[0m
      | [0;1;32m                                          
[0m[1mglob.c:1440:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1440 |                   if (names->name[cur] == NULL)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1441 |                     goto memory_error;[0m
      | [0;1;32m                                      
[0m[1mglob.c:1444:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1444 |                   if (SIZE_MAX - pglob->gl_offs <= nfound)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1445 |                     goto memory_error;[0m
      | [0;1;32m                                      
[0m[1mglob.c:1456:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1456 |       if (names->name[cur] == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1457 |         goto memory_error;[0m
      | [0;1;32m                          
[0m[1mglob.c:1468:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1468 |           < pglob->gl_offs + nfound + 1)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1469 |         goto memory_error;[0m
      | [0;1;32m                          
[0m[1mglob.c:1482:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1482 |               for (size_t i = 0; i < cur; ++i)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1483 |                 free (names->name[i]);[0m
      | [0;1;32m                                      
[0m[1mglob.c:1495:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1495 |               if (old == names_alloca)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1496 |                 names_alloca = names;[0m
 1497 |               else[0m
      | [0;32m              } 
[0m[1mglob.c:1497:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1497 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1498 |                 free (old);[0m
      | [0;1;32m                           
[0m[1mglob.c:1507:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1507 |               for (size_t i = 0; i < cur; ++i)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1508 |                 new_gl_pathv[pglob->gl_offs + pglob->gl_pathc++][0m
 1509 |                   = names->name[i];[0m
      | [0;1;32m                                   
[0m[1mglob.c:1521:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1521 |               if (old == names_alloca)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1522 |                 names_alloca = names;[0m
 1523 |               else[0m
      | [0;32m              } 
[0m[1mglob.c:1523:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1523 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1524 |                 free (old);[0m
      | [0;1;32m                           
[0m[1mglob.c:1538:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1538 |       if (__glibc_unlikely (flags & GLOB_ALTDIRFUNC))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1539 |         (*pglob->gl_closedir) (stream);[0m
 1540 |       else[0m
      | [0;32m      } 
[0m[1mglob.c:1540:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1540 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1541 |         closedir (stream);[0m
      | [0;1;32m                          
[0m105 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[65/70][170.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpwmmw7qz6.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/rcfile.c
[1mrcfile.c:166:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |         for (linestruct *error = errors_head; error != NULL; error = error->next)[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m  167 |                 fprintf(stderr, "%s\n", error->data);[0m
      | [0;1;32m                                                     
[0m[1mrcfile.c:167:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  167 |                 fprintf(stderr, "%s\n", error->data);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrcfile.c:167:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  167 |                 fprintf(stderr, "%s\n", error->data);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mrcfile.c:180:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |         if (errors_head == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  181 |                 errors_head = error;[0m
  182 |         else[0m
      | [0;32m        } 
[0m[1mrcfile.c:182:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  183 |                 errors_tail->next = error;[0m
      | [0;1;32m                                          
[0m[1mrcfile.c:189:4: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  189 |                         snprintf(textbuf, MAXSIZE, _("Mistakes in '%s'"), nanorc);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mrcfile.c:189:4: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  189 |                         snprintf(textbuf, MAXSIZE, _("Mistakes in '%s'"), nanorc);[0m
      | [0;1;32m                        ^~~~~~~~
[0m[1mrcfile.c:191:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  192 | #endif[0m
  193 |                         startup_problem = copy_of(_("Problems with history file"));[0m
      | [0;1;32m                                                                                   
[0m[1mrcfile.c:196:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |         if (lineno > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  197 |                 length = snprintf(textbuf, MAXSIZE, _("Error in %s on line %zu: "),[0m
  198 |                                                                                         nanorc, lineno);[0m
      | [0;1;32m                                                                                                        
[0m[1mrcfile.c:197:12: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  197 |                 length = snprintf(textbuf, MAXSIZE, _("Error in %s on line %zu: "),[0m
      | [0;1;32m                         ^~~~~~~~
[0m[1mrcfile.c:197:12: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  197 |                 length = snprintf(textbuf, MAXSIZE, _("Error in %s on line %zu: "),[0m
      | [0;1;32m                         ^~~~~~~~
[0m[1mrcfile.c:201:12: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  201 |         length += vsnprintf(textbuf + length, MAXSIZE - length, _(msg), ap);[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mrcfile.c:201:12: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
  201 |         length += vsnprintf(textbuf + length, MAXSIZE - length, _(msg), ap);[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mrcfile.c:205:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  205 |         sprintf(error->data, "%s", textbuf);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrcfile.c:205:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  205 |         sprintf(error->data, "%s", textbuf);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrcfile.c:220:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  220 |         if (!strcmp(input, "cancel"))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  221 |                 s->func = do_cancel;[0m
  222 | #ifdef ENABLE_HELP[0m
  223 |         else if (!strcmp(input, "help"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:223:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |         else if (!strcmp(input, "help"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  224 |                 s->func = do_help;[0m
  225 | #endif[0m
  226 |         else if (!strcmp(input, "exit"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:226:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |         else if (!strcmp(input, "exit"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  227 |                 s->func = do_exit;[0m
  228 |         else if (!strcmp(input, "discardbuffer"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:228:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |         else if (!strcmp(input, "discardbuffer"))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  229 |                 s->func = discard_buffer;[0m
  230 |         else if (!strcmp(input, "writeout"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:230:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |         else if (!strcmp(input, "writeout"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  231 |                 s->func = do_writeout;[0m
  232 |         else if (!strcmp(input, "savefile"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:232:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |         else if (!strcmp(input, "savefile"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  233 |                 s->func = do_savefile;[0m
  234 |         else if (!strcmp(input, "insert"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:234:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |         else if (!strcmp(input, "insert"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  235 |                 s->func = do_insertfile;[0m
  236 |         else if (!strcmp(input, "whereis"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:236:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |         else if (!strcmp(input, "whereis"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  237 |                 s->func = do_search_forward;[0m
  238 |         else if (!strcmp(input, "wherewas"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:238:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |         else if (!strcmp(input, "wherewas"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  239 |                 s->func = do_search_backward;[0m
  240 |         else if (!strcmp(input, "findprevious"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:240:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |         else if (!strcmp(input, "findprevious"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  241 |                 s->func = do_findprevious;[0m
  242 |         else if (!strcmp(input, "findnext"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:242:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |         else if (!strcmp(input, "findnext"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  243 |                 s->func = do_findnext;[0m
  244 |         else if (!strcmp(input, "replace"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:244:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |         else if (!strcmp(input, "replace"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  245 |                 s->func = do_replace;[0m
  246 |         else if (!strcmp(input, "cut"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:246:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |         else if (!strcmp(input, "cut"))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  247 |                 s->func = cut_text;[0m
  248 |         else if (!strcmp(input, "paste"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:248:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |         else if (!strcmp(input, "paste"))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  249 |                 s->func = paste_text;[0m
  250 | #ifndef NANO_TINY[0m
  251 |         else if (!strcmp(input, "execute"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:251:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |         else if (!strcmp(input, "execute"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  252 |                 s->func = do_execute;[0m
  253 |         else if (!strcmp(input, "cutrestoffile"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:253:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |         else if (!strcmp(input, "cutrestoffile"))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  254 |                 s->func = cut_till_eof;[0m
  255 |         else if (!strcmp(input, "copy"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:255:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  255 |         else if (!strcmp(input, "copy"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  256 |                 s->func = copy_text;[0m
  257 |         else if (!strcmp(input, "zap"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:257:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |         else if (!strcmp(input, "zap"))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  258 |                 s->func = zap_text;[0m
  259 |         else if (!strcmp(input, "mark"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:259:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  259 |         else if (!strcmp(input, "mark"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  260 |                 s->func = do_mark;[0m
  261 | #endif[0m
  262 | #ifdef ENABLE_SPELLER[0m
  263 |         else if (!strcmp(input, "tospell") ||[0m
      | [0;32m        } 
[0m[1mrcfile.c:264:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |                  !strcmp(input, "speller"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  265 |                 s->func = do_spell;[0m
  266 | #endif[0m
  267 | #ifdef ENABLE_LINTER[0m
  268 |         else if (!strcmp(input, "linter"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:268:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |         else if (!strcmp(input, "linter"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  269 |                 s->func = do_linter;[0m
  270 | #endif[0m
  271 | #ifdef ENABLE_FORMATTER[0m
  272 |         else if (!strcmp(input, "formatter"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:272:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |         else if (!strcmp(input, "formatter"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  273 |                 s->func = do_formatter;[0m
  274 | #endif[0m
  275 |         else if (!strcmp(input, "location"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:275:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |         else if (!strcmp(input, "location"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  276 |                 s->func = report_cursor_position;[0m
  277 |         else if (!strcmp(input, "gotoline"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:277:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |         else if (!strcmp(input, "gotoline"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  278 |                 s->func = do_gotolinecolumn;[0m
  279 | #ifdef ENABLE_JUSTIFY[0m
  280 |         else if (!strcmp(input, "justify"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:280:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |         else if (!strcmp(input, "justify"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  281 |                 s->func = do_justify;[0m
  282 |         else if (!strcmp(input, "fulljustify"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:282:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |         else if (!strcmp(input, "fulljustify"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  283 |                 s->func = do_full_justify;[0m
  284 |         else if (!strcmp(input, "beginpara"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:284:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  284 |         else if (!strcmp(input, "beginpara"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  285 |                 s->func = to_para_begin;[0m
  286 |         else if (!strcmp(input, "endpara"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:286:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  286 |         else if (!strcmp(input, "endpara"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  287 |                 s->func = to_para_end;[0m
  288 | #endif[0m
  289 | #ifdef ENABLE_COMMENT[0m
  290 |         else if (!strcmp(input, "comment"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:290:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |         else if (!strcmp(input, "comment"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  291 |                 s->func = do_comment;[0m
  292 | #endif[0m
  293 | #ifdef ENABLE_WORDCOMPLETION[0m
  294 |         else if (!strcmp(input, "complete"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:294:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |         else if (!strcmp(input, "complete"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  295 |                 s->func = complete_a_word;[0m
  296 | #endif[0m
  297 | #ifndef NANO_TINY[0m
  298 |         else if (!strcmp(input, "indent"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:298:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |         else if (!strcmp(input, "indent"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  299 |                 s->func = do_indent;[0m
  300 |         else if (!strcmp(input, "unindent"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:300:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |         else if (!strcmp(input, "unindent"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  301 |                 s->func = do_unindent;[0m
  302 |         else if (!strcmp(input, "chopwordleft"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:302:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |         else if (!strcmp(input, "chopwordleft"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  303 |                 s->func = chop_previous_word;[0m
  304 |         else if (!strcmp(input, "chopwordright"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:304:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |         else if (!strcmp(input, "chopwordright"))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  305 |                 s->func = chop_next_word;[0m
  306 |         else if (!strcmp(input, "findbracket"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:306:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |         else if (!strcmp(input, "findbracket"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  307 |                 s->func = do_find_bracket;[0m
  308 |         else if (!strcmp(input, "wordcount"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:308:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |         else if (!strcmp(input, "wordcount"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  309 |                 s->func = count_lines_words_and_characters;[0m
  310 |         else if (!strcmp(input, "recordmacro"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:310:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  310 |         else if (!strcmp(input, "recordmacro"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  311 |                 s->func = record_macro;[0m
  312 |         else if (!strcmp(input, "runmacro"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:312:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |         else if (!strcmp(input, "runmacro"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  313 |                 s->func = run_macro;[0m
  314 |         else if (!strcmp(input, "anchor"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:314:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |         else if (!strcmp(input, "anchor"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  315 |                 s->func = put_or_lift_anchor;[0m
  316 |         else if (!strcmp(input, "prevanchor"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:316:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |         else if (!strcmp(input, "prevanchor"))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  317 |                 s->func = to_prev_anchor;[0m
  318 |         else if (!strcmp(input, "nextanchor"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:318:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |         else if (!strcmp(input, "nextanchor"))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  319 |                 s->func = to_next_anchor;[0m
  320 |         else if (!strcmp(input, "undo"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:320:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |         else if (!strcmp(input, "undo"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  321 |                 s->func = do_undo;[0m
  322 |         else if (!strcmp(input, "redo"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:322:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |         else if (!strcmp(input, "redo"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  323 |                 s->func = do_redo;[0m
  324 | #endif[0m
  325 |         else if (!strcmp(input, "left") ||[0m
      | [0;32m        } 
[0m[1mrcfile.c:326:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |                  !strcmp(input, "back"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  327 |                 s->func = do_left;[0m
  328 |         else if (!strcmp(input, "right") ||[0m
      | [0;32m        } 
[0m[1mrcfile.c:329:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |                  !strcmp(input, "forward"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  330 |                 s->func = do_right;[0m
  331 |         else if (!strcmp(input, "up") ||[0m
      | [0;32m        } 
[0m[1mrcfile.c:332:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |                  !strcmp(input, "prevline"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  333 |                 s->func = do_up;[0m
  334 |         else if (!strcmp(input, "down") ||[0m
      | [0;32m        } 
[0m[1mrcfile.c:335:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |                  !strcmp(input, "nextline"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  336 |                 s->func = do_down;[0m
  337 | #if !defined(NANO_TINY) || defined(ENABLE_HELP)[0m
  338 |         else if (!strcmp(input, "scrollup"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:338:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |         else if (!strcmp(input, "scrollup"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  339 |                 s->func = do_scroll_up;[0m
  340 |         else if (!strcmp(input, "scrolldown"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:340:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |         else if (!strcmp(input, "scrolldown"))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  341 |                 s->func = do_scroll_down;[0m
  342 |         else if (!strcmp(input, "center"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:342:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |         else if (!strcmp(input, "center"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  343 |                 s->func = do_center;[0m
  344 | #endif[0m
  345 |         else if (!strcmp(input, "prevword"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:345:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  345 |         else if (!strcmp(input, "prevword"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  346 |                 s->func = to_prev_word;[0m
  347 |         else if (!strcmp(input, "nextword"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:347:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |         else if (!strcmp(input, "nextword"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  348 |                 s->func = to_next_word;[0m
  349 |         else if (!strcmp(input, "home"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:349:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |         else if (!strcmp(input, "home"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  350 |                 s->func = do_home;[0m
  351 |         else if (!strcmp(input, "end"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:351:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |         else if (!strcmp(input, "end"))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  352 |                 s->func = do_end;[0m
  353 |         else if (!strcmp(input, "prevblock"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:353:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  353 |         else if (!strcmp(input, "prevblock"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  354 |                 s->func = to_prev_block;[0m
  355 |         else if (!strcmp(input, "nextblock"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:355:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  355 |         else if (!strcmp(input, "nextblock"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  356 |                 s->func = to_next_block;[0m
  357 |         else if (!strcmp(input, "pageup") ||[0m
      | [0;32m        } 
[0m[1mrcfile.c:358:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |                  !strcmp(input, "prevpage"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  359 |                 s->func = do_page_up;[0m
  360 |         else if (!strcmp(input, "pagedown") ||[0m
      | [0;32m        } 
[0m[1mrcfile.c:361:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |                  !strcmp(input, "nextpage"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  362 |                 s->func = do_page_down;[0m
  363 |         else if (!strcmp(input, "firstline"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:363:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |         else if (!strcmp(input, "firstline"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  364 |                 s->func = to_first_line;[0m
  365 |         else if (!strcmp(input, "lastline"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:365:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  365 |         else if (!strcmp(input, "lastline"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  366 |                 s->func = to_last_line;[0m
  367 | #ifdef ENABLE_MULTIBUFFER[0m
  368 |         else if (!strcmp(input, "prevbuf"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:368:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |         else if (!strcmp(input, "prevbuf"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  369 |                 s->func = switch_to_prev_buffer;[0m
  370 |         else if (!strcmp(input, "nextbuf"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:370:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |         else if (!strcmp(input, "nextbuf"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  371 |                 s->func = switch_to_next_buffer;[0m
  372 | #endif[0m
  373 |         else if (!strcmp(input, "verbatim"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:373:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |         else if (!strcmp(input, "verbatim"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  374 |                 s->func = do_verbatim_input;[0m
  375 |         else if (!strcmp(input, "tab"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:375:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |         else if (!strcmp(input, "tab"))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  376 |                 s->func = do_tab;[0m
  377 |         else if (!strcmp(input, "enter"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:377:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |         else if (!strcmp(input, "enter"))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  378 |                 s->func = do_enter;[0m
  379 |         else if (!strcmp(input, "delete"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:379:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |         else if (!strcmp(input, "delete"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  380 |                 s->func = do_delete;[0m
  381 |         else if (!strcmp(input, "backspace"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:381:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |         else if (!strcmp(input, "backspace"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  382 |                 s->func = do_backspace;[0m
  383 |         else if (!strcmp(input, "refresh"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:383:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |         else if (!strcmp(input, "refresh"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  384 |                 s->func = full_refresh;[0m
  385 | #ifndef NANO_TINY[0m
  386 |         else if (!strcmp(input, "suspend"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:386:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |         else if (!strcmp(input, "suspend"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  387 |                 s->func = do_suspend;[0m
  388 | #endif[0m
  389 |         else if (!strcmp(input, "casesens"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:389:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |         else if (!strcmp(input, "casesens"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  390 |                 s->func = case_sens_void;[0m
  391 |         else if (!strcmp(input, "regexp"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:391:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |         else if (!strcmp(input, "regexp"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  392 |                 s->func = regexp_void;[0m
  393 |         else if (!strcmp(input, "backwards"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:393:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |         else if (!strcmp(input, "backwards"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  394 |                 s->func = backwards_void;[0m
  395 |         else if (!strcmp(input, "flipreplace"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:395:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |         else if (!strcmp(input, "flipreplace"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  396 |                 s->func = flip_replace;[0m
  397 |         else if (!strcmp(input, "flipgoto"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:397:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |         else if (!strcmp(input, "flipgoto"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  398 |                 s->func = flip_goto;[0m
  399 | #ifdef ENABLE_HISTORIES[0m
  400 |         else if (!strcmp(input, "older"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:400:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |         else if (!strcmp(input, "older"))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  401 |                 s->func = get_older_item;[0m
  402 |         else if (!strcmp(input, "newer"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:402:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |         else if (!strcmp(input, "newer"))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  403 |                 s->func = get_newer_item;[0m
  404 | #endif[0m
  405 | #ifndef NANO_TINY[0m
  406 |         else if (!strcmp(input, "dosformat"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:406:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |         else if (!strcmp(input, "dosformat"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  407 |                 s->func = dos_format;[0m
  408 |         else if (!strcmp(input, "macformat"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:408:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |         else if (!strcmp(input, "macformat"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  409 |                 s->func = mac_format;[0m
  410 |         else if (!strcmp(input, "append"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:410:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |         else if (!strcmp(input, "append"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  411 |                 s->func = append_it;[0m
  412 |         else if (!strcmp(input, "prepend"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:412:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |         else if (!strcmp(input, "prepend"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  413 |                 s->func = prepend_it;[0m
  414 |         else if (!strcmp(input, "backup"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:414:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |         else if (!strcmp(input, "backup"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  415 |                 s->func = back_it_up;[0m
  416 |         else if (!strcmp(input, "flipexecute"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:416:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  416 |         else if (!strcmp(input, "flipexecute"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  417 |                 s->func = flip_execute;[0m
  418 |         else if (!strcmp(input, "flippipe"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:418:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |         else if (!strcmp(input, "flippipe"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  419 |                 s->func = flip_pipe;[0m
  420 |         else if (!strcmp(input, "flipconvert"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:420:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |         else if (!strcmp(input, "flipconvert"))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  421 |                 s->func = flip_convert;[0m
  422 | #endif[0m
  423 | #ifdef ENABLE_MULTIBUFFER[0m
  424 |         else if (!strcmp(input, "flipnewbuffer"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:424:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |         else if (!strcmp(input, "flipnewbuffer"))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  425 |                 s->func = flip_newbuffer;[0m
  426 | #endif[0m
  427 | #ifdef ENABLE_BROWSER[0m
  428 |         else if (!strcmp(input, "tofiles") ||[0m
      | [0;32m        } 
[0m[1mrcfile.c:429:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |                  !strcmp(input, "browser"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  430 |                 s->func = to_files;[0m
  431 |         else if (!strcmp(input, "gotodir"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:431:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  431 |         else if (!strcmp(input, "gotodir"))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  432 |                 s->func = goto_dir;[0m
  433 |         else if (!strcmp(input, "firstfile"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:433:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |         else if (!strcmp(input, "firstfile"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  434 |                 s->func = to_first_file;[0m
  435 |         else if (!strcmp(input, "lastfile"))[0m
      | [0;32m        } 
[0m[1mrcfile.c:435:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  435 |         else if (!strcmp(input, "lastfile"))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  436 |                 s->func = to_last_file;[0m
  437 | #endif[0m
  438 |         else {[0m
      | [0;32m        } 
[0m[1mrcfile.c:441:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |                 if (!strcmp(input, "nohelp"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  442 |                         s->toggle = NO_HELP;[0m
  443 |                 else if (!strcmp(input, "zero"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:443:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |                 else if (!strcmp(input, "zero"))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  444 |                         s->toggle = ZERO;[0m
  445 |                 else if (!strcmp(input, "constantshow"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:445:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  445 |                 else if (!strcmp(input, "constantshow"))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  446 |                         s->toggle = CONSTANT_SHOW;[0m
  447 |                 else if (!strcmp(input, "softwrap"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:447:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |                 else if (!strcmp(input, "softwrap"))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  448 |                         s->toggle = SOFTWRAP;[0m
  449 | #ifdef ENABLE_LINENUMBERS[0m
  450 |                 else if (!strcmp(input, "linenumbers"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:450:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |                 else if (!strcmp(input, "linenumbers"))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  451 |                         s->toggle = LINE_NUMBERS;[0m
  452 | #endif[0m
  453 |                 else if (!strcmp(input, "whitespacedisplay"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:453:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |                 else if (!strcmp(input, "whitespacedisplay"))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  454 |                         s->toggle = WHITESPACE_DISPLAY;[0m
  455 | #ifdef ENABLE_COLOR[0m
  456 |                 else if (!strcmp(input, "nosyntax"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:456:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  456 |                 else if (!strcmp(input, "nosyntax"))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  457 |                         s->toggle = NO_SYNTAX;[0m
  458 | #endif[0m
  459 |                 else if (!strcmp(input, "smarthome"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:459:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |                 else if (!strcmp(input, "smarthome"))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  460 |                         s->toggle = SMART_HOME;[0m
  461 |                 else if (!strcmp(input, "autoindent"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:461:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  461 |                 else if (!strcmp(input, "autoindent"))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  462 |                         s->toggle = AUTOINDENT;[0m
  463 |                 else if (!strcmp(input, "cutfromcursor"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:463:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |                 else if (!strcmp(input, "cutfromcursor"))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  464 |                         s->toggle = CUT_FROM_CURSOR;[0m
  465 | #ifdef ENABLE_WRAPPING[0m
  466 |                 else if (!strcmp(input, "breaklonglines") ||[0m
      | [0;32m                } 
[0m[1mrcfile.c:467:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |                          !strcmp(input, "nowrap"))  /* Deprecated; remove in 2024. */[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  468 |                         s->toggle = BREAK_LONG_LINES;[0m
  469 | #endif[0m
  470 |                 else if (!strcmp(input, "tabstospaces"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:470:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |                 else if (!strcmp(input, "tabstospaces"))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  471 |                         s->toggle = TABS_TO_SPACES;[0m
  472 | #ifdef ENABLE_MOUSE[0m
  473 |                 else if (!strcmp(input, "mouse"))[0m
      | [0;32m                } 
[0m[1mrcfile.c:473:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  473 |                 else if (!strcmp(input, "mouse"))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  474 |                         s->toggle = USE_MOUSE;[0m
  475 | #endif[0m
  476 |                 else[0m
      | [0;32m                } 
[0m[1mrcfile.c:503:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  503 |         while (++index < NUMBER_OF_MENUS)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  504 |                 if (strcmp(name, menunames[index]) == 0)[0m
  505 |                         return menusymbols[index];[0m
      | [0;1;32m                                                  
[0m[1mrcfile.c:504:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  504 |                 if (strcmp(name, menunames[index]) == 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  505 |                         return menusymbols[index];[0m
      | [0;1;32m                                                  
[0m[1mrcfile.c:515:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |         while (++index < NUMBER_OF_MENUS)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  516 |                 if (menusymbols[index] == menu)[0m
  517 |                         return menunames[index];[0m
      | [0;1;32m                                                
[0m[1mrcfile.c:516:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |                 if (menusymbols[index] == menu)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  517 |                         return menunames[index];[0m
      | [0;1;32m                                                
[0m[1mrcfile.c:527:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |         while (!isblank((unsigned char)*ptr) && *ptr != '\0')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  528 |                 ptr++;[0m
      | [0;1;32m                      
[0m[1mrcfile.c:530:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |         if (*ptr == '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  531 |                 return ptr;[0m
      | [0;1;32m                           
[0m[1mrcfile.c:536:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |         while (isblank((unsigned char)*ptr))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  537 |                 ptr++;[0m
      | [0;1;32m                      
[0m[1mrcfile.c:551:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |         if (*ptr != '"')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  552 |                 return parse_next_word(ptr);[0m
      | [0;1;32m                                            
[0m[1mrcfile.c:555:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |                 if (*++ptr == '"')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  556 |                         last_quote = ptr;[0m
      | [0;1;32m                                         
[0m[1mrcfile.c:567:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |         while (isblank((unsigned char)*ptr))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  568 |                 ptr++;[0m
      | [0;1;32m                      
[0m[1mrcfile.c:588:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  588 |                                                 (ptr[1] != '\0' && !isblank((unsigned char)ptr[1]))))[0m
      | [0;1;32m                                                                                                     ^
[0m      | [0;32m                                                                                                      {
[0m  589 |                 ptr++;[0m
      | [0;1;32m                      
[0m[1mrcfile.c:604:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  604 |         while (isblank((unsigned char)*ptr))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  605 |                 ptr++;[0m
      | [0;1;32m                      
[0m[1mrcfile.c:627:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  627 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  628 |                 *packed = compiled;[0m
      | [0;1;32m                                   
[0m[1mrcfile.c:698:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  698 |         if (*ptr != '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  699 |                 grab_and_store("extension", ptr, &live_syntax->extensions);[0m
      | [0;1;32m                                                                           
[0m[1mrcfile.c:751:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |         if (keycopy[0] == '^')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  752 |                 keycopy[1] = toupper((unsigned char)keycopy[1]);[0m
  753 |         else[0m
      | [0;32m        } 
[0m[1mrcfile.c:753:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  753 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  754 |                 keycopy[0] = toupper((unsigned char)keycopy[0]);[0m
      | [0;1;32m                                                                
[0m[1mrcfile.c:776:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  776 |                 } else if (ptr == NULL)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  777 |                         goto free_things;[0m
      | [0;1;32m                                         
[0m[1mrcfile.c:781:2: [0m[0;1;35mwarning: [0m[1mValue stored to 'ptr' is never read [clang-analyzer-deadcode.DeadStores][0m
  781 |         ptr = parse_next_word(ptr);[0m
      | [0;1;32m        ^     ~~~~~~~~~~~~~~~~~~~~
[0m[1mrcfile.c:781:2: [0m[0;1;36mnote: [0mValue stored to 'ptr' is never read[0m
  781 |         ptr = parse_next_word(ptr);[0m
      | [0;1;32m        ^     ~~~~~~~~~~~~~~~~~~~~
[0m[1mrcfile.c:806:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  806 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  807 |                         newsc = strtosc(funcptr);[0m
      | [0;1;32m                                                 
[0m[1mrcfile.c:816:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  816 |         for (keystruct *s = sclist; s != NULL; s = s->next)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  817 |                 if ((s->menus & menu) && s->keycode == keycode)[0m
  818 |                         s->menus &= ~menu;[0m
      | [0;1;32m                                          
[0m[1mrcfile.c:817:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  817 |                 if ((s->menus & menu) && s->keycode == keycode)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  818 |                         s->menus &= ~menu;[0m
      | [0;1;32m                                          
[0m[1mrcfile.c:821:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  821 |         if (!dobind)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  822 |                 goto free_things;[0m
      | [0;1;32m                                 
[0m[1mrcfile.c:826:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  826 |         if (is_universal(newsc->func))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  827 |                 menu &= MMOST|MBROWSER;[0m
  828 | #ifndef NANO_TINY[0m
  829 |         else if (newsc->func == do_toggle && newsc->toggle == NO_HELP)[0m
      | [0;32m        } 
[0m[1mrcfile.c:829:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |         else if (newsc->func == do_toggle && newsc->toggle == NO_HELP)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  830 |                 menu &= (MMOST|MBROWSER|MYESNO) & ~MFINDINHELP;[0m
  831 |         else if (newsc->func == do_toggle)[0m
      | [0;32m        } 
[0m[1mrcfile.c:831:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |         else if (newsc->func == do_toggle)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  832 |                 menu &= MMAIN;[0m
  833 | #endif[0m
  834 |         else if (newsc->func == full_refresh)[0m
      | [0;32m        } 
[0m[1mrcfile.c:834:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  834 |         else if (newsc->func == full_refresh)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  835 |                 menu &= MMOST|MBROWSER|MHELP|MYESNO;[0m
  836 |         else if (newsc->func == (functionptrtype)implant)[0m
      | [0;32m        } 
[0m[1mrcfile.c:836:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  836 |         else if (newsc->func == (functionptrtype)implant)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  837 |                 menu &= MMOST|MBROWSER|MHELP;[0m
  838 |         else {[0m
      | [0;32m        } 
[0m[1mrcfile.c:840:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  840 |                 for (funcstruct *f = allfuncs; f != NULL; f = f->next)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  841 |                         if (f->func == newsc->func)[0m
  842 |                                 mask |= f->menus;[0m
      | [0;1;32m                                                 
[0m[1mrcfile.c:841:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  841 |                         if (f->func == newsc->func)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  842 |                                 mask |= f->menus;[0m
      | [0;1;32m                                                 
[0m[1mrcfile.c:848:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  848 |                 if (!ISSET(RESTRICTED) && !ISSET(VIEW_MODE))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  849 |                         jot_error(N_("Function '%s' does not exist in menu '%s'"),[0m
  850 |                                                                 funcptr, menuptr);[0m
      | [0;1;32m                                                                                  
[0m[1mrcfile.c:870:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  870 |                 for (keystruct *s = sclist; s != NULL; s = s->next)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  871 |                         if (s->func == do_toggle && s->toggle == newsc->toggle)[0m
  872 |                                 newsc->ordinal = s->ordinal;[0m
      | [0;1;32m                                                            
[0m[1mrcfile.c:871:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  871 |                         if (s->func == do_toggle && s->toggle == newsc->toggle)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  872 |                                 newsc->ordinal = s->ordinal;[0m
      | [0;1;32m                                                            
[0m[1mrcfile.c:873:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  873 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  874 |                 newsc->ordinal = 0;[0m
      | [0;1;32m                                   
[0m[1mrcfile.c:887:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |         if (access(file, R_OK) != 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  888 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mrcfile.c:896:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  896 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  897 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mrcfile.c:911:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |         if (access(file, R_OK) == 0 && !is_good_file(file))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  912 |                 return;[0m
      | [0;1;32m                       
[0m[1mrcfile.c:950:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  950 |                 if (!parse_syntax_commands(keyword, therest))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  951 |                         jot_error(N_("Command \"%s\" not understood"), keyword);[0m
      | [0;1;32m                                                                                
[0m[1mrcfile.c:973:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  973 |         if (*pattern == '"')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  974 |                 pattern++;[0m
      | [0;1;32m                          
[0m[1mrcfile.c:975:2: [0m[0;1;35mwarning: [0m[1mValue stored to 'ptr' is never read [clang-analyzer-deadcode.DeadStores][0m
  975 |         ptr = parse_argument(ptr);[0m
      | [0;1;32m        ^     ~~~~~~~~~~~~~~~~~~~
[0m[1mrcfile.c:975:2: [0m[0;1;36mnote: [0mValue stored to 'ptr' is never read[0m
  975 |         ptr = parse_argument(ptr);[0m
      | [0;1;32m        ^     ~~~~~~~~~~~~~~~~~~~
[0m[1mrcfile.c:984:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  984 |                 for (size_t i = 0; i < files.gl_pathc; ++i)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  985 |                         parse_one_include(files.gl_pathv[i], NULL);[0m
      | [0;1;32m                                                                   
[0m[1mrcfile.c:986:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  986 |         } else if (result != GLOB_NOMATCH)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  987 |                 jot_error(N_("Error expanding %s: %s"), pattern, strerror(errno));[0m
      | [0;1;32m                                                                                  
[0m[1mrcfile.c:1000:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1000 |         if (COLORS == 256)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1001 |                 return (36 * level[red] + 6 * level[green] + level[blue] + 16);[0m
 1002 |         else[0m
      | [0;32m        } 
[0m[1mrcfile.c:1002:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1002 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1003 |                 return THE_DEFAULT;[0m
      | [0;1;32m                                   
[0m[1mrcfile.c:1055:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1055 |                 if (sscanf(colorname, "#%1hX%1hX%1hX", &r, &g, &b) == 3)[0m
      | [0;1;32m                    ^~~~~~
[0m[1mrcfile.c:1055:7: [0m[0;1;36mnote: [0mCall to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11[0m
 1055 |                 if (sscanf(colorname, "#%1hX%1hX%1hX", &r, &g, &b) == 3)[0m
      | [0;1;32m                    ^~~~~~
[0m[1mrcfile.c:1055:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1055 |                 if (sscanf(colorname, "#%1hX%1hX%1hX", &r, &g, &b) == 3)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1056 |                         return closest_index_color(r, g, b);[0m
      | [0;1;32m                                                            
[0m[1mrcfile.c:1059:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1059 |         for (int index = 0; index < COLORCOUNT; index++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1060 |                 if (strcmp(colorname, hues[index]) == 0) {[0m
 1061 |                         if (index > 7 && *vivid) {[0m
 1062 |                                 jot_error(N_("Color '%s' takes no prefix"), colorname);[0m
 1063 |                                 return BAD_COLOR;[0m
 1064 |                         } else if (index > 8 && COLORS < 255)[0m
 1065 |                                 return THE_DEFAULT;[0m
 1066 |                         else[0m
 1067 |                                 return indices[index];[0m
 1068 |                 }[0m
      | [0;1;32m                 
[0m[1mrcfile.c:1064:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1064 |                         } else if (index > 8 && COLORS < 255)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1065 |                                 return THE_DEFAULT;[0m
 1066 |                         else[0m
      | [0;32m                        } 
[0m[1mrcfile.c:1066:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1066 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1067 |                                 return indices[index];[0m
      | [0;1;32m                                                      
[0m[1mrcfile.c:1105:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1105 |         if (comma)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1106 |                 *comma = '\0';[0m
      | [0;1;32m                              
[0m[1mrcfile.c:1110:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1110 |                 if (*fg == BAD_COLOR)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1111 |                         return FALSE;[0m
      | [0;1;32m                                     
[0m[1mrcfile.c:1112:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1112 |                 if (vivid && !thick && COLORS > 8)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1113 |                         *fg += 8;[0m
 1114 |                 else if (vivid)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1114:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1114 |                 else if (vivid)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1115 |                         *attributes |= A_BOLD;[0m
      | [0;1;32m                                              
[0m[1mrcfile.c:1116:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1116 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1117 |                 *fg = THE_DEFAULT;[0m
      | [0;1;32m                                  
[0m[1mrcfile.c:1121:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |                 if (*bg == BAD_COLOR)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1122 |                         return FALSE;[0m
      | [0;1;32m                                     
[0m[1mrcfile.c:1123:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1123 |                 if (vivid && COLORS > 8)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1124 |                         *bg += 8;[0m
      | [0;1;32m                                 
[0m[1mrcfile.c:1125:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1126 |                 *bg = THE_DEFAULT;[0m
      | [0;1;32m                                  
[0m[1mrcfile.c:1148:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1148 |         if (!parse_combination(names, &fg, &bg, &attributes))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1149 |                 return;[0m
      | [0;1;32m                       
[0m[1mrcfile.c:1173:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1173 |                 if (ptr == NULL || !compile(regexstring, rex_flags, &start_rgx))[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 1174 |                         return;[0m
      | [0;1;32m                               
[0m[1mrcfile.c:1205:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1205 |                 if (lastcolor == NULL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1206 |                         live_syntax->color = newcolor;[0m
 1207 |                 else[0m
      | [0;32m                } 
[0m[1mrcfile.c:1207:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1207 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1208 |                         lastcolor->next = newcolor;[0m
      | [0;1;32m                                                   
[0m[1mrcfile.c:1229:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1229 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1230 |                 return trio;[0m
      | [0;1;32m                            
[0m[1mrcfile.c:1259:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1259 |         while (lastthing != NULL && lastthing->next != NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1260 |                 lastthing = lastthing->next;[0m
      | [0;1;32m                                            
[0m[1mrcfile.c:1269:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1269 |                 if (ptr == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1270 |                         return;[0m
      | [0;1;32m                               
[0m[1mrcfile.c:1273:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1273 |                 if (!compile(regexstring, NANO_REG_EXTENDED | REG_NOSUB, &packed_rgx))[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m 1274 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mrcfile.c:1281:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1281 |                 if (lastthing == NULL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1282 |                         *storage = newthing;[0m
 1283 |                 else[0m
      | [0;32m                } 
[0m[1mrcfile.c:1283:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1283 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1284 |                         lastthing->next = newthing;[0m
      | [0;1;32m                                                   
[0m[1mrcfile.c:1319:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1319 |         if (strcmp(keyword, "color") == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1320 |                 parse_rule(ptr, NANO_REG_EXTENDED);[0m
 1321 |         else if (strcmp(keyword, "icolor") == 0)[0m
      | [0;32m        } 
[0m[1mrcfile.c:1321:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1321 |         else if (strcmp(keyword, "icolor") == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1322 |                 parse_rule(ptr, NANO_REG_EXTENDED | REG_ICASE);[0m
 1323 |         else if (strcmp(keyword, "comment") == 0) {[0m
      | [0;32m        } 
[0m[1mrcfile.c:1329:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1329 |         } else if (strcmp(keyword, "linter") == 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1330 |                 pick_up_name("linter", ptr, &live_syntax->linter);[0m
 1331 |         else if (strcmp(keyword, "formatter") == 0)[0m
      | [0;32m        } 
[0m[1mrcfile.c:1331:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1331 |         else if (strcmp(keyword, "formatter") == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1332 |                 pick_up_name("formatter", ptr, &live_syntax->formatter);[0m
 1333 |         else[0m
      | [0;32m        } 
[0m[1mrcfile.c:1333:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1333 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1334 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mrcfile.c:1356:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1356 |                                 } else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1357 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mrcfile.c:1384:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1384 |                 if (just_syntax && !intros_only && lineno <= live_syntax->lineno)[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m 1385 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mrcfile.c:1388:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1388 |                 if (buffer[length - 1] == '\n')[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1389 |                         buffer[--length] = '\0';[0m
      | [0;1;32m                                                
[0m[1mrcfile.c:1390:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1390 |                 if (length > 0 && buffer[length - 1] == '\r')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1391 |                         buffer[--length] = '\0';[0m
      | [0;1;32m                                                
[0m[1mrcfile.c:1394:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1394 |                 while (isblank((unsigned char)*ptr))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1395 |                         ptr++;[0m
      | [0;1;32m                              
[0m[1mrcfile.c:1398:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1398 |                 if (*ptr == '\0' || *ptr == '#')[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1399 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mrcfile.c:1416:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1416 |                         for (sntx = syntaxes; sntx != NULL; sntx = sntx->next)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1417 |                                 if (!strcmp(sntx->name, syntaxname))[0m
 1418 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mrcfile.c:1417:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1417 |                                 if (!strcmp(sntx->name, syntaxname))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1418 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mrcfile.c:1446:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1446 |                                         while (extra->next != NULL)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1447 |                                                 extra = extra->next;[0m
      | [0;1;32m                                                                    
[0m[1mrcfile.c:1449:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1449 |                                 } else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1450 |                                         sntx->augmentations = newitem;[0m
      | [0;1;32m                                                                      
[0m[1mrcfile.c:1461:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1461 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1462 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mrcfile.c:1464:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1464 |                         if (intros_only)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1465 |                                 grab_and_store("header", ptr, &live_syntax->headers);[0m
      | [0;1;32m                                                                                     
[0m[1mrcfile.c:1477:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1477 |                         if (intros_only)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1478 |                                 jot_error(N_("Command \"%s\" not allowed in included file"),[0m
 1479 |                                                                         keyword);[0m
 1480 |                         else[0m
      | [0;32m                        } 
[0m[1mrcfile.c:1480:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1480 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1481 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mrcfile.c:1488:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1488 |                         if (!opensyntax)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1489 |                                 jot_error(N_("A '%s' command requires a preceding "[0m
 1490 |                                                                         "'syntax' command"), keyword);[0m
      | [0;1;32m                                                                                                      
[0m[1mrcfile.c:1491:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1491 |                         if (strstr("icolor", keyword))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1492 |                                 seen_color_command = TRUE;[0m
      | [0;1;32m                                                          
[0m[1mrcfile.c:1494:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1494 |                 } else if (parse_syntax_commands(keyword, ptr))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1495 |                         ;[0m
 1496 |                 else if (strcmp(keyword, "include") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1496:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1496 |                 else if (strcmp(keyword, "include") == 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1497 |                         parse_includes(ptr);[0m
 1498 |                 else[0m
      | [0;32m                } 
[0m[1mrcfile.c:1500:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1500 |                 if (strcmp(keyword, "set") == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1501 |                         set = 1;[0m
 1502 |                 else if (strcmp(keyword, "unset") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1502:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1502 |                 else if (strcmp(keyword, "unset") == 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1503 |                         set = -1;[0m
 1504 |                 else if (strcmp(keyword, "bind") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1504:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1504 |                 else if (strcmp(keyword, "bind") == 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1505 |                         parse_binding(ptr, TRUE);[0m
 1506 |                 else if (strcmp(keyword, "unbind") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1506:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1506 |                 else if (strcmp(keyword, "unbind") == 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1507 |                         parse_binding(ptr, FALSE);[0m
 1508 |                 else if (intros_only)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1508:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1508 |                 else if (intros_only)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1509 |                         jot_error(N_("Command \"%s\" not understood"), keyword);[0m
      | [0;1;32m                                                                                
[0m[1mrcfile.c:1512:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1512 |                 if (drop_open)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1513 |                         opensyntax = FALSE;[0m
      | [0;1;32m                                           
[0m[1mrcfile.c:1515:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1515 |                 if (set == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1516 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mrcfile.c:1530:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1530 |                         if (strcmp(option, rcopts[i].name) == 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1531 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mrcfile.c:1541:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1541 |                         if (set == 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1542 |                                 SET(rcopts[i].flag);[0m
 1543 |                         else[0m
      | [0;32m                        } 
[0m[1mrcfile.c:1543:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1543 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1544 |                                 UNSET(rcopts[i].flag);[0m
      | [0;1;32m                                                      
[0m[1mrcfile.c:1560:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1560 |                 if (*argument == '"')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1561 |                         argument++;[0m
      | [0;1;32m                                   
[0m[1mrcfile.c:1562:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'ptr' is never read [clang-analyzer-deadcode.DeadStores][0m
 1562 |                 ptr = parse_argument(ptr);[0m
      | [0;1;32m                ^     ~~~~~~~~~~~~~~~~~~~
[0m[1mrcfile.c:1562:3: [0m[0;1;36mnote: [0mValue stored to 'ptr' is never read[0m
 1562 |                 ptr = parse_argument(ptr);[0m
      | [0;1;32m                ^     ~~~~~~~~~~~~~~~~~~~
[0m[1mrcfile.c:1572:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1572 |                 if (strcmp(option, "titlecolor") == 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1573 |                         color_combo[TITLE_BAR] = parse_interface_color(argument);[0m
 1574 |                 else if (strcmp(option, "numbercolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1574:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1574 |                 else if (strcmp(option, "numbercolor") == 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1575 |                         color_combo[LINE_NUMBER] = parse_interface_color(argument);[0m
 1576 |                 else if (strcmp(option, "stripecolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1576:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1576 |                 else if (strcmp(option, "stripecolor") == 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1577 |                         color_combo[GUIDE_STRIPE] = parse_interface_color(argument);[0m
 1578 |                 else if (strcmp(option, "scrollercolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1578:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1578 |                 else if (strcmp(option, "scrollercolor") == 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1579 |                         color_combo[SCROLL_BAR] = parse_interface_color(argument);[0m
 1580 |                 else if (strcmp(option, "selectedcolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1580:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1580 |                 else if (strcmp(option, "selectedcolor") == 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1581 |                         color_combo[SELECTED_TEXT] = parse_interface_color(argument);[0m
 1582 |                 else if (strcmp(option, "spotlightcolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1582:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1582 |                 else if (strcmp(option, "spotlightcolor") == 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1583 |                         color_combo[SPOTLIGHTED] = parse_interface_color(argument);[0m
 1584 |                 else if (strcmp(option, "minicolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1584:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1584 |                 else if (strcmp(option, "minicolor") == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1585 |                         color_combo[MINI_INFOBAR] = parse_interface_color(argument);[0m
 1586 |                 else if (strcmp(option, "promptcolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1586:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1586 |                 else if (strcmp(option, "promptcolor") == 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1587 |                         color_combo[PROMPT_BAR] = parse_interface_color(argument);[0m
 1588 |                 else if (strcmp(option, "statuscolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1588:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1588 |                 else if (strcmp(option, "statuscolor") == 0)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1589 |                         color_combo[STATUS_BAR] = parse_interface_color(argument);[0m
 1590 |                 else if (strcmp(option, "errorcolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1590:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1590 |                 else if (strcmp(option, "errorcolor") == 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1591 |                         color_combo[ERROR_MESSAGE] = parse_interface_color(argument);[0m
 1592 |                 else if (strcmp(option, "keycolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1592:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1592 |                 else if (strcmp(option, "keycolor") == 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1593 |                         color_combo[KEY_COMBO] = parse_interface_color(argument);[0m
 1594 |                 else if (strcmp(option, "functioncolor") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1594:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1594 |                 else if (strcmp(option, "functioncolor") == 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1595 |                         color_combo[FUNCTION_TAG] = parse_interface_color(argument);[0m
 1596 |                 else[0m
      | [0;32m                } 
[0m[1mrcfile.c:1599:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1599 |                 if (strcmp(option, "operatingdir") == 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1600 |                         operating_dir = mallocstrcpy(operating_dir, argument);[0m
 1601 |                 else[0m
      | [0;32m                } 
[0m[1mrcfile.c:1613:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1613 |                         if (has_blank_char(argument))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1614 |                                 jot_error(N_("Non-blank characters required"));[0m
 1615 |                         else if (mbstrlen(argument) % 2 != 0)[0m
      | [0;32m                        } 
[0m[1mrcfile.c:1615:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1615 |                         else if (mbstrlen(argument) % 2 != 0)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1616 |                                 jot_error(N_("Even number of characters required"));[0m
 1617 |                         else[0m
      | [0;32m                        } 
[0m[1mrcfile.c:1617:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1617 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1618 |                                 matchbrackets = mallocstrcpy(matchbrackets, argument);[0m
      | [0;1;32m                                                                                      
[0m[1mrcfile.c:1620:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1620 |                         if (mbstrlen(argument) != 2 || breadth(argument) != 2)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1621 |                                 jot_error(N_("Two single-column characters required"));[0m
 1622 |                         else {[0m
      | [0;32m                        } 
[0m[1mrcfile.c:1631:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1631 |                         if (has_blank_char(argument))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1632 |                                 jot_error(N_("Non-blank characters required"));[0m
 1633 |                         else[0m
      | [0;32m                        } 
[0m[1mrcfile.c:1633:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1633 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1634 |                                 punct = mallocstrcpy(punct, argument);[0m
      | [0;1;32m                                                                      
[0m[1mrcfile.c:1636:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1636 |                         if (has_blank_char(argument))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1637 |                                 jot_error(N_("Non-blank characters required"));[0m
 1638 |                         else[0m
      | [0;32m                        } 
[0m[1mrcfile.c:1638:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1638 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1639 |                                 brackets = mallocstrcpy(brackets, argument);[0m
      | [0;1;32m                                                                            
[0m[1mrcfile.c:1640:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1640 |                 } else if (strcmp(option, "quotestr") == 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1641 |                         quotestr = mallocstrcpy(quotestr, argument);[0m
 1642 |                 else[0m
      | [0;32m                } 
[0m[1mrcfile.c:1645:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1645 |                 if (strcmp(option, "speller") == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1646 |                         alt_speller = mallocstrcpy(alt_speller, argument);[0m
 1647 |                 else[0m
      | [0;32m                } 
[0m[1mrcfile.c:1650:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1650 |                 if (strcmp(option, "backupdir") == 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1651 |                         backup_dir = mallocstrcpy(backup_dir, argument);[0m
 1652 |                 else if (strcmp(option, "wordchars") == 0)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1652:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1652 |                 else if (strcmp(option, "wordchars") == 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1653 |                         word_chars = mallocstrcpy(word_chars, argument);[0m
 1654 |                 else if (strcmp(option, "guidestripe") == 0) {[0m
      | [0;32m                } 
[0m[1mrcfile.c:1670:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1670 |         if (intros_only)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1671 |                 check_for_nonempty_syntax();[0m
      | [0;1;32m                                            
[0m[1mrcfile.c:1687:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1687 |         if (rcstream != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1688 |                 parse_rcfile(rcstream, FALSE, TRUE);[0m
 1689 |         else if (errno != ENOENT)[0m
      | [0;32m        } 
[0m[1mrcfile.c:1689:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1689 |         else if (errno != ENOENT)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1690 |                 jot_error(N_("Error reading %s: %s"), nanorc, strerror(errno));[0m
      | [0;1;32m                                                                               
[0m[1mrcfile.c:1695:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1695 |         if (path == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1696 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mrcfile.c:1710:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1710 |                 if (nanorc == NULL || access(nanorc, F_OK) != 0)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1711 |                         die(_("Specified rcfile does not exist\n"));[0m
      | [0;1;32m                                                                    
[0m[1mrcfile.c:1712:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1712 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1713 |                 nanorc = mallocstrcpy(nanorc, SYSCONFDIR "/nanorc");[0m
      | [0;1;32m                                                                    
[0m[1mrcfile.c:1715:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1715 |         if (is_good_file(nanorc))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1716 |                 parse_one_nanorc();[0m
      | [0;1;32m                                   
[0m[1mrcfile.c:1727:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1727 |                                         have_nanorc(homedir, "/.config/nano/" RCFILE_NAME))[0m
      | [0;1;32m                                                                                           ^
[0m      | [0;32m                                                                                            {
[0m 1728 |                         parse_one_nanorc();[0m
 1729 |                 else if (homedir == NULL && xdgconfdir == NULL)[0m
      | [0;32m                } 
[0m[1mrcfile.c:1729:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1729 |                 else if (homedir == NULL && xdgconfdir == NULL)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1730 |                         jot_error(N_("I can't find my home directory!  Wah!"));[0m
      | [0;1;32m                                                                               
[0m249 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[66/70][189.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpkk9gbh8g.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/cut.c
[1mcut.c:42:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |                                         openfile->current->lineno != openfile->current_undo->head_lineno)[0m
      | [0;1;32m                                                                                                         ^
[0m      | [0;32m                                                                                                          {
[0m   43 |                         add_undo(action, NULL);[0m
   44 |                 else[0m
      | [0;32m                } 
[0m[1mcut.c:44:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m   45 |                         update_undo(action);[0m
      | [0;1;32m                                            
[0m[1mcut.c:48:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   48 |                 memmove(&openfile->current->data[openfile->current_x],[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcut.c:48:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
   48 |                 memmove(&openfile->current->data[openfile->current_x],[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcut.c:53:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |                 if (ISSET(SOFTWRAP) && extra_chunks_in(openfile->current) != old_amount)[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m   54 |                         refresh_needed = TRUE;[0m
      | [0;1;32m                                              
[0m[1mcut.c:58:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |                                                                 openfile->mark_x > openfile->current_x)[0m
      | [0;1;32m                                                                                                       ^
[0m      | [0;32m                                                                                                        {
[0m   59 |                         openfile->mark_x -= charlen;[0m
      | [0;1;32m                                                    
[0m[1mcut.c:69:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   69 |                         if (action == BACK)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m   70 |                                 add_undo(BACK, NULL);[0m
      | [0;1;32m                                                     
[0m[1mcut.c:89:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   89 |                 strcat(openfile->current->data, joining->data);[0m
      | [0;1;32m                ^~~~~~
[0m[1mcut.c:89:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
   89 |                 strcat(openfile->current->data, joining->data);[0m
      | [0;1;32m                ^~~~~~
[0m[1mcut.c:96:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   97 |                 /* We're at the end-of-file: nothing to do. */[0m
   98 |                 return;[0m
      | [0;1;32m                       
[0m[1mcut.c:101:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |         if (!refresh_needed)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  102 |                 check_the_multis(openfile->current);[0m
      | [0;1;32m                                                    
[0m[1mcut.c:104:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |         if (!refresh_needed)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  105 |                 update_line(openfile->current, openfile->current_x);[0m
      | [0;1;32m                                                                    
[0m[1mcut.c:119:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |         if (openfile->mark && ISSET(LET_THEM_ZAP))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  120 |                 zap_text();[0m
  121 |         else[0m
      | [0;32m        } 
[0m[1mcut.c:127:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  127 |                                 is_zerowidth(openfile->current->data + openfile->current_x))[0m
      | [0;1;32m                                                                                            ^
[0m      | [0;32m                                                                                             {
[0m  128 |                         do_deletion(DEL);[0m
      | [0;1;32m                                         
[0m[1mcut.c:138:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |         if (openfile->mark && ISSET(LET_THEM_ZAP))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  139 |                 zap_text();[0m
  140 |         else[0m
      | [0;32m        } 
[0m[1mcut.c:173:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  174 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mcut.c:200:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  201 |                                 openfile->current_x = strlen(openfile->current->data);[0m
      | [0;1;32m                                                                                      
[0m[1mcut.c:233:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |         if (openfile->current->prev == NULL && openfile->current_x == 0)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  234 |                 statusbar(_("Nothing was cut"));[0m
  235 |         else[0m
      | [0;32m        } 
[0m[1mcut.c:235:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  236 |                 chop_word(BACKWARD);[0m
      | [0;1;32m                                    
[0m[1mcut.c:244:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |         if (is_cuttable(TRUE))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  245 |                 chop_word(FORWARD);[0m
      | [0;1;32m                                   
[0m[1mcut.c:262:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |         if (top == bot && top_x == bot_x)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  263 |                 return;[0m
      | [0;1;32m                       
[0m[1mcut.c:265:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |         if (top != bot)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  266 |                 for (linestruct *line = top->next; line != bot->next; line = line->next)[0m
  267 |                         had_anchor |= line->has_anchor;[0m
      | [0;1;32m                                                       
[0m[1mcut.c:266:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |                 for (linestruct *line = top->next; line != bot->next; line = line->next)[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m  267 |                         had_anchor |= line->has_anchor;[0m
      | [0;1;32m                                                       
[0m[1mcut.c:273:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  273 |                 memmove(top->data + top_x, top->data + bot_x, strlen(top->data + bot_x) + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcut.c:273:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  273 |                 memmove(top->data + top_x, top->data + bot_x, strlen(top->data + bot_x) + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcut.c:287:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |                 if (top->prev)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  288 |                         top->prev->next = bot;[0m
  289 |                 else[0m
      | [0;32m                } 
[0m[1mcut.c:289:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  290 |                         openfile->filetop = bot;[0m
      | [0;1;32m                                                
[0m[1mcut.c:300:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |                 if (bot->next)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  301 |                         bot->next->prev = top;[0m
      | [0;1;32m                                              
[0m[1mcut.c:304:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  304 |                 strcpy(top->data + top_x, bot->data + bot_x);[0m
      | [0;1;32m                ^~~~~~
[0m[1mcut.c:304:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  304 |                 strcpy(top->data + top_x, bot->data + bot_x);[0m
      | [0;1;32m                ^~~~~~
[0m[1mcut.c:327:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  327 |                 strcat(cutbottom->data, taken->data);[0m
      | [0;1;32m                ^~~~~~
[0m[1mcut.c:327:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  327 |                 strcat(cutbottom->data, taken->data);[0m
      | [0;1;32m                ^~~~~~
[0m[1mcut.c:346:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |         if (post_marked || same_line)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  347 |                 openfile->mark = openfile->current;[0m
      | [0;1;32m                                                   
[0m[1mcut.c:348:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  348 |         if (post_marked)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  349 |                 openfile->mark_x = openfile->current_x;[0m
      | [0;1;32m                                                       
[0m[1mcut.c:351:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  351 |         if (openfile->filebot == bot)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  352 |                 openfile->filebot = openfile->current;[0m
      | [0;1;32m                                                      
[0m[1mcut.c:363:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |         if (!ISSET(NO_NEWLINES) && openfile->filebot->data[0] != '\0')[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  364 |                 new_magicline();[0m
      | [0;1;32m                                
[0m[1mcut.c:381:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |         while (botline->next != NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  382 |                 botline = botline->next;[0m
      | [0;1;32m                                        
[0m[1mcut.c:387:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |         if (topline != botline)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  388 |                 length = xpos;[0m
      | [0;1;32m                              
[0m[1mcut.c:393:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  393 |                 memmove(line->data + xpos + extralen, line->data + xpos, length - xpos + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcut.c:393:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  393 |                 memmove(line->data + xpos + extralen, line->data + xpos, length - xpos + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcut.c:394:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  394 |                 strncpy(line->data + xpos, topline->data, extralen);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcut.c:394:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  394 |                 strncpy(line->data + xpos, topline->data, extralen);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcut.c:399:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |                 if (line->next == NULL)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  400 |                         openfile->filebot = botline;[0m
      | [0;1;32m                                                    
[0m[1mcut.c:406:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |                 if (botline->next)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  407 |                         botline->next->prev = botline;[0m
      | [0;1;32m                                                      
[0m[1mcut.c:415:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  415 |                 strcpy(botline->data + length, tailtext);[0m
      | [0;1;32m                ^~~~~~
[0m[1mcut.c:415:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  415 |                 strcpy(botline->data + length, tailtext);[0m
      | [0;1;32m                ^~~~~~
[0m[1mcut.c:420:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  420 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  421 |                 openfile->current_x += extralen;[0m
      | [0;1;32m                                                
[0m[1mcut.c:428:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  428 |         } else if (mark_follows)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  429 |                 openfile->mark_x += extralen;[0m
      | [0;1;32m                                             
[0m[1mcut.c:438:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  438 |         if (!ISSET(NO_NEWLINES) && openfile->filebot->data[0] != '\0')[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  439 |                 new_magicline();[0m
      | [0;1;32m                                
[0m[1mcut.c:453:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |         if (openfile->current->lineno > threshold || ISSET(SOFTWRAP))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  454 |                 recook = TRUE;[0m
  455 |         else[0m
      | [0;32m        } 
[0m[1mcut.c:455:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  456 |                 perturbed = TRUE;[0m
      | [0;1;32m                                 
[0m[1mcut.c:495:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  495 |         if (until_eof)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  496 |                 extract_segment(openfile->current, openfile->current_x,[0m
  497 |                                 openfile->filebot, strlen(openfile->filebot->data));[0m
  498 |         else if (openfile->mark) {[0m
      | [0;32m        } 
[0m[1mcut.c:505:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  505 |                 if (line->data[openfile->current_x] != '\0')[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  506 |                         extract_segment(line, openfile->current_x, line, strlen(line->data));[0m
  507 |                 else if (openfile->current != openfile->filebot) {[0m
      | [0;32m                } 
[0m[1mcut.c:516:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |                 if (openfile->current != openfile->filebot)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  517 |                         extract_segment(line, 0, line->next, 0);[0m
  518 |                 else[0m
      | [0;32m                } 
[0m[1mcut.c:518:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  519 |                         extract_segment(line, 0, line, strlen(line->data));[0m
      | [0;1;32m                                                                           
[0m[1mcut.c:538:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |         if (!is_cuttable(ISSET(CUT_FROM_CURSOR) && openfile->mark == NULL))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  539 |                 return;[0m
      | [0;1;32m                       
[0m[1mcut.c:584:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  584 |         if (!is_cuttable(ISSET(CUT_FROM_CURSOR) && openfile->mark == NULL))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  585 |                 return;[0m
      | [0;1;32m                       
[0m[1mcut.c:589:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |         if (openfile->last_action != ZAP || !keep_cutbuffer)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  590 |                 add_undo(ZAP, NULL);[0m
      | [0;1;32m                                    
[0m[1mcut.c:671:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |         if (ISSET(CUT_FROM_CURSOR))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  672 |                 sans_newline = !at_eol;[0m
      | [0;1;32m                                       
[0m[1mcut.c:704:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  705 |                 openfile->current_x = strlen(openfile->current->data);[0m
      | [0;1;32m                                                                      
[0m[1mcut.c:735:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |         if (ISSET(SOFTWRAP))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  736 |                 was_leftedge = leftedge_for(xplustabs(), openfile->current);[0m
      | [0;1;32m                                                                            
[0m[1mcut.c:745:90: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  745 |         for (linestruct *line = was_current; line != openfile->current->next; line = line->next)[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m  746 |                 line->has_anchor = FALSE;[0m
      | [0;1;32m                                         
[0m[1mcut.c:755:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |         if (openfile->current == was_current && ISSET(BREAK_LONG_LINES))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  756 |                 do_wrap();[0m
      | [0;1;32m                          
[0m[1mcut.c:760:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  760 |         if (less_than_a_screenful(was_lineno, was_leftedge))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  761 |                 focusing = FALSE;[0m
  762 | #ifdef ENABLE_COLOR[0m
  763 |         else[0m
      | [0;32m        } 
[0m[1mcut.c:763:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  763 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  764 |                 precalc_multicolorinfo();[0m
      | [0;1;32m                                         
[0m59 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[67/70][209.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpe7gigelh.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/search.c
[1msearch.c:65:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |         if (openfile->mark)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   66 |                 refresh_needed = TRUE;[0m
      | [0;1;32m                                      
[0m[1msearch.c:87:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   87 |                 sprintf(thedefault, " [%s%s]", disp,[0m
      | [0;1;32m                ^~~~~~~
[0m[1msearch.c:87:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   87 |                 sprintf(thedefault, " [%s%s]", disp,[0m
      | [0;1;32m                ^~~~~~~
[0m[1msearch.c:90:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   91 |                 thedefault = copy_of("");[0m
      | [0;1;32m                                         
[0m[1msearch.c:128:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |                         if (ISSET(USE_REGEXP) && !regexp_init(last_search))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  129 |                                 break;[0m
      | [0;1;32m                                      
[0m[1msearch.c:131:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |                         if (replacing)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  132 |                                 ask_for_and_do_replacements();[0m
  133 |                         else[0m
      | [0;32m                        } 
[0m[1msearch.c:133:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  134 |                                 go_looking();[0m
      | [0;1;32m                                             
[0m[1msearch.c:145:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |                 if (function == case_sens_void)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  146 |                         TOGGLE(CASE_SENSITIVE);[0m
  147 |                 else if (function == backwards_void)[0m
      | [0;32m                } 
[0m[1msearch.c:147:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |                 else if (function == backwards_void)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  148 |                         TOGGLE(BACKWARDS_SEARCH);[0m
  149 |                 else if (function == regexp_void)[0m
      | [0;32m                } 
[0m[1msearch.c:149:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |                 else if (function == regexp_void)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  150 |                         TOGGLE(USE_REGEXP);[0m
  151 |                 else if (function == flip_replace) {[0m
      | [0;32m                } 
[0m[1msearch.c:155:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  156 |                                 replacing = !replacing;[0m
      | [0;1;32m                                                       
[0m[1msearch.c:161:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  162 |                         break;[0m
      | [0;1;32m                              
[0m[1msearch.c:194:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |         if (begin == NULL)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  195 |                 came_full_circle = FALSE;[0m
      | [0;1;32m                                         
[0m[1msearch.c:209:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  210 |                         found = strstrwrapper(line->data, needle, from);[0m
      | [0;1;32m                                                                        
[0m[1msearch.c:214:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |                         if (ISSET(USE_REGEXP))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  215 |                                 found_len = regmatches[0].rm_eo - regmatches[0].rm_so;[0m
      | [0;1;32m                                                                                      
[0m[1msearch.c:226:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                         if (line->next || line->data[0])[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  227 |                                 break;[0m
      | [0;1;32m                                      
[0m[1msearch.c:265:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  265 |                 if (line == begin)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  266 |                         came_full_circle = TRUE;[0m
      | [0;1;32m                                                
[0m[1msearch.c:270:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |                 if (ISSET(BACKWARDS_SEARCH))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  271 |                         from += strlen(line->data);[0m
      | [0;1;32m                                                   
[0m[1msearch.c:285:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |                                 } else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  286 |                                         meta_key = FALSE;[0m
      | [0;1;32m                                                         
[0m[1msearch.c:290:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |                                         if (the_window_resized)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  291 |                                                 regenerate_screen();[0m
      | [0;1;32m                                                                    
[0m[1msearch.c:295:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |                                         while (input != ERR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  296 |                                                 input = get_input(NULL);[0m
      | [0;1;32m                                                                        
[0m[1msearch.c:304:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |                         if (++feedback > 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  305 |                                 /* TRANSLATORS: This is shown when searching takes[0m
  306 |                                  * more than half a second. */[0m
  307 |                                 statusbar(_("Searching..."));[0m
      | [0;1;32m                                                             
[0m[1msearch.c:318:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |                                                 (ISSET(BACKWARDS_SEARCH) && found_x < begin_x)))[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m  319 |                 return 0;[0m
      | [0;1;32m                         
[0m[1msearch.c:326:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |         if (match_len != NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  327 |                 *match_len = found_len;[0m
      | [0;1;32m                                       
[0m[1msearch.c:338:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |         if (feedback > 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  339 |                 wipe_statusbar();[0m
      | [0;1;32m                                 
[0m[1msearch.c:364:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |         if (*last_search == '\0' && searchbot->prev != NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  365 |                 last_search = mallocstrcpy(last_search, searchbot->prev->data);[0m
      | [0;1;32m                                                                               
[0m[1msearch.c:373:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |         if (ISSET(USE_REGEXP) && !regexp_init(last_search))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  374 |                 return;[0m
      | [0;1;32m                       
[0m[1msearch.c:379:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  379 |         if (LINES > 1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  380 |                 wipe_statusbar();[0m
      | [0;1;32m                                 
[0m[1msearch.c:433:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |                                                 openfile->current_x == was_current_x)[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m  434 |                 statusline(REMARK, _("This is the only occurrence"));[0m
  435 |         else if (didfind == 0)[0m
      | [0;32m        } 
[0m[1msearch.c:435:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  435 |         else if (didfind == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  436 |                 not_found_msg(last_search);[0m
      | [0;1;32m                                           
[0m[1msearch.c:459:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |                         if (create)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  460 |                                 *string++ = *c;[0m
      | [0;1;32m                                               
[0m[1msearch.c:475:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  475 |                                 strncpy(string, openfile->current->data + regmatches[num].rm_so, i);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1msearch.c:475:5: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  475 |                                 strncpy(string, openfile->current->data + regmatches[num].rm_so, i);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1msearch.c:481:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  481 |         if (create)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  482 |                 *string = '\0';[0m
      | [0;1;32m                               
[0m[1msearch.c:506:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  506 |         strncpy(copy, openfile->current->data, openfile->current_x);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msearch.c:506:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  506 |         strncpy(copy, openfile->current->data, openfile->current_x);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msearch.c:509:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |         if (ISSET(USE_REGEXP))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  510 |                 replace_regexp(copy + openfile->current_x, TRUE);[0m
  511 |         else[0m
      | [0;32m        } 
[0m[1msearch.c:511:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  511 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  512 |                 strcpy(copy + openfile->current_x, answer);[0m
      | [0;1;32m                                                           
[0m[1msearch.c:512:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  512 |                 strcpy(copy + openfile->current_x, answer);[0m
      | [0;1;32m                ^~~~~~
[0m[1msearch.c:512:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  512 |                 strcpy(copy + openfile->current_x, answer);[0m
      | [0;1;32m                ^~~~~~
[0m[1msearch.c:515:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  515 |         strcat(copy, openfile->current->data + openfile->current_x + match_len);[0m
      | [0;1;32m        ^~~~~~
[0m[1msearch.c:515:2: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  515 |         strcat(copy, openfile->current->data + openfile->current_x + match_len);[0m
      | [0;1;32m        ^~~~~~
[0m[1msearch.c:566:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  566 |                         if (result < 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  567 |                                 numreplaced = -2;  /* It's a Cancel instead of Not found. */[0m
      | [0;1;32m                                                                                            
[0m[1msearch.c:573:48: [0m[0;1;35mwarning: [0m[1mAccess to field 'lineno' results in a dereference of an undefined pointer value (loaded from variable 'bot') [clang-analyzer-core.NullDereference][0m
  573 |                 if (was_mark && (openfile->current->lineno > bot->lineno ||[0m
      | [0;1;32m                                                             ^
[0m[1msearch.c:692:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  692 |         if (ISSET(VIEW_MODE))[0m
      | [0;1;32m            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:692:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  692 |         if (ISSET(VIEW_MODE))[0m
      | [0;1;32m        ^
[0m[1msearch.c:696:3: [0m[0;1;36mnote: [0mCalling 'search_init'[0m
  696 |                 search_init(TRUE, FALSE);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:82:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   82 |         if (*last_search != '\0') {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:82:2: [0m[0;1;36mnote: [0mTaking false branch[0m
   82 |         if (*last_search != '\0') {[0m
      | [0;1;32m        ^
[0m[1msearch.c:93:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   93 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1msearch.c:97:6: [0m[0;1;36mnote: [0mAssuming 'inhelp' is true[0m
   97 |                                         inhelp ? MFINDINHELP : (replacing ? MREPLACE : MWHEREIS),[0m
      | [0;1;32m                                        ^~~~~~
[0m[1msearch.c:97:6: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1msearch.c:98:6: [0m[0;1;36mnote: [0m'retain_answer' is false[0m
   98 |                                         retain_answer ? answer : "", &search_history, edit_refresh,[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~
[0m[1msearch.c:98:6: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1msearch.c:102:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  102 |                                         ISSET(CASE_SENSITIVE) ? _(" [Case Sensitive]") : "",[0m
      | [0;1;32m                                        ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:102:6: [0m[0;1;36mnote: [0m'?' condition is false[0m
  102 |                                         ISSET(CASE_SENSITIVE) ? _(" [Case Sensitive]") : "",[0m
      | [0;1;32m                                        ^
[0m[1m./definitions.h:105:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                     ^
[0m[1msearch.c:103:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  103 |                                         ISSET(USE_REGEXP) ? _(" [Regexp]") : "",[0m
      | [0;1;32m                                        ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:103:6: [0m[0;1;36mnote: [0m'?' condition is false[0m
  103 |                                         ISSET(USE_REGEXP) ? _(" [Regexp]") : "",[0m
      | [0;1;32m                                        ^
[0m[1m./definitions.h:105:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                     ^
[0m[1msearch.c:104:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  104 |                                         ISSET(BACKWARDS_SEARCH) ? _(" [Backwards]") : "",[0m
      | [0;1;32m                                        ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:104:6: [0m[0;1;36mnote: [0m'?' condition is false[0m
  104 |                                         ISSET(BACKWARDS_SEARCH) ? _(" [Backwards]") : "",[0m
      | [0;1;32m                                        ^
[0m[1m./definitions.h:105:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                     ^
[0m[1msearch.c:105:6: [0m[0;1;36mnote: [0m'replacing' is true[0m
  105 |                                         replacing ?[0m
      | [0;1;32m                                        ^~~~~~~~~
[0m[1msearch.c:105:6: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1msearch.c:107:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is null[0m
  107 |                                         openfile->mark ? _(" (to replace) in selection") :[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~
[0m[1msearch.c:107:6: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1msearch.c:113:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  113 |                 if (response == -1 || (response == -2 && *last_search == '\0')) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1msearch.c:113:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msearch.c:113:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  113 |                 if (response == -1 || (response == -2 && *last_search == '\0')) {[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~
[0m[1msearch.c:113:41: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  113 |                 if (response == -1 || (response == -2 && *last_search == '\0')) {[0m
      | [0;1;32m                                                      ^
[0m[1msearch.c:119:7: [0m[0;1;36mnote: [0mAssuming 'response' is equal to 0[0m
  119 |                 if (response == 0 || response == -2) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~
[0m[1msearch.c:119:21: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  119 |                 if (response == 0 || response == -2) {[0m
      | [0;1;32m                                  ^
[0m[1msearch.c:121:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  121 |                         if (*answer != '\0') {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~
[0m[1msearch.c:121:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  121 |                         if (*answer != '\0') {[0m
      | [0;1;32m                        ^
[0m[1msearch.c:128:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  128 |                         if (ISSET(USE_REGEXP) && !regexp_init(last_search))[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:128:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  128 |                         if (ISSET(USE_REGEXP) && !regexp_init(last_search))[0m
      | [0;1;32m                                              ^
[0m[1msearch.c:131:8: [0m[0;1;36mnote: [0m'replacing' is true[0m
  131 |                         if (replacing)[0m
      | [0;1;32m                            ^~~~~~~~~
[0m[1msearch.c:131:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  131 |                         if (replacing)[0m
      | [0;1;32m                        ^
[0m[1msearch.c:132:5: [0m[0;1;36mnote: [0mCalling 'ask_for_and_do_replacements'[0m
  132 |                                 ask_for_and_do_replacements();[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:714:6: [0m[0;1;36mnote: [0mAssuming 'response' is not equal to 0[0m
  714 |         if (response == 0)[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1msearch.c:714:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  714 |         if (response == 0)[0m
      | [0;1;32m        ^
[0m[1msearch.c:719:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  719 |         if (response == -1) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1msearch.c:719:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  719 |         if (response == -1) {[0m
      | [0;1;32m        ^
[0m[1msearch.c:722:13: [0m[0;1;36mnote: [0mAssuming 'response' is <= 0[0m
  722 |         } else if (response > 0)[0m
      | [0;1;32m                   ^~~~~~~~~~~~
[0m[1msearch.c:722:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  722 |         } else if (response > 0)[0m
      | [0;1;32m               ^
[0m[1msearch.c:725:16: [0m[0;1;36mnote: [0mCalling 'do_replace_loop'[0m
  725 |         numreplaced = do_replace_loop(last_search, FALSE, beginline, &begin_x);[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:529:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  529 |         bool skipone = ISSET(BACKWARDS_SEARCH);[0m
      | [0;1;32m                       ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msearch.c:536:20: [0m[0;1;36mnote: [0m'bot' declared without an initial value[0m
  536 |         linestruct *top, *bot;[0m
      | [0;1;32m                          ^~~
[0m[1msearch.c:538:24: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
  538 |         bool right_side_up = (openfile->mark && mark_is_before_cursor());[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1msearch.c:538:24: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msearch.c:541:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is null[0m
  541 |         if (openfile->mark) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1msearch.c:541:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  541 |         if (openfile->mark) {[0m
      | [0;1;32m        ^
[0m[1msearch.c:559:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  559 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1msearch.c:565:7: [0m[0;1;36mnote: [0mAssuming 'result' is >= 1[0m
  565 |                 if (result < 1) {[0m
      | [0;1;32m                    ^~~~~~~~~~
[0m[1msearch.c:565:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  565 |                 if (result < 1) {[0m
      | [0;1;32m                ^
[0m[1msearch.c:573:7: [0m[0;1;36mnote: [0m'was_mark' is non-null[0m
  573 |                 if (was_mark && (openfile->current->lineno > bot->lineno ||[0m
      | [0;1;32m                    ^~~~~~~~
[0m[1msearch.c:573:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1msearch.c:573:48: [0m[0;1;36mnote: [0mAccess to field 'lineno' results in a dereference of an undefined pointer value (loaded from variable 'bot')[0m
  573 |                 if (was_mark && (openfile->current->lineno > bot->lineno ||[0m
      | [0;1;32m                                                             ^~~
[0m[1msearch.c:578:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  578 |                                                                 openfile->current_x < top_x)))[0m
      | [0;1;32m                                                                                              ^
[0m      | [0;32m                                                                                               {
[0m  579 |                         break;[0m
      | [0;1;32m                              
[0m[1msearch.c:583:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |                 if (numreplaced == -1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  584 |                         numreplaced = 0;[0m
      | [0;1;32m                                        
[0m[1msearch.c:600:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |                         if (choice == CANCEL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  601 |                                 break;[0m
      | [0;1;32m                                      
[0m[1msearch.c:626:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |                                         if (openfile->mark_x < openfile->current_x + match_len)[0m
      | [0;1;32m                                                                                               ^
[0m      | [0;32m                                                                                                {
[0m  627 |                                                 openfile->mark_x = openfile->current_x;[0m
  628 |                                         else[0m
      | [0;32m                                        } 
[0m[1msearch.c:628:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  628 |                                         else[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  629 |                                                 openfile->mark_x += length_change;[0m
      | [0;1;32m                                                                                  
[0m[1msearch.c:641:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  641 |                                         if (*real_current_x < openfile->current_x + match_len)[0m
      | [0;1;32m                                                                                              ^
[0m      | [0;32m                                                                                               {
[0m  642 |                                                 *real_current_x = openfile->current_x + match_len;[0m
      | [0;1;32m                                                                                                  
[0m[1msearch.c:651:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  651 |                         if (match_len == 0 || (*needle == '^' && ISSET(USE_REGEXP)))[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m  652 |                                 skipone = TRUE;[0m
      | [0;1;32m                                               
[0m[1msearch.c:656:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |                         if (!ISSET(BACKWARDS_SEARCH))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  657 |                                 openfile->current_x += match_len + length_change;[0m
      | [0;1;32m                                                                                 
[0m[1msearch.c:674:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |         if (numreplaced == -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  675 |                 not_found_msg(needle);[0m
      | [0;1;32m                                      
[0m[1msearch.c:683:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  683 |         if (!ISSET(NO_NEWLINES) && openfile->filebot->data[0] != '\0')[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  684 |                 new_magicline();[0m
      | [0;1;32m                                
[0m[1msearch.c:692:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  692 |         if (ISSET(VIEW_MODE))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  693 |                 print_view_warning();[0m
  694 |         else {[0m
      | [0;32m        } 
[0m[1msearch.c:714:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |         if (response == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  715 |                 update_history(&replace_history, answer, PRUNE_DUPLICATE);[0m
      | [0;1;32m                                                                          
[0m[1msearch.c:722:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  722 |         } else if (response > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  723 |                 return;[0m
      | [0;1;32m                       
[0m[1msearch.c:735:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |         if (numreplaced >= 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  736 |                 statusline(REMARK, P_("Replaced %zd occurrence",[0m
  737 |                                         "Replaced %zd occurrences", numreplaced), numreplaced);[0m
      | [0;1;32m                                                                                               
[0m[1msearch.c:746:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  746 |                                 (ISSET(SOFTWRAP) && linenumber > openfile->current->lineno))[0m
      | [0;1;32m                                                                                            ^
[0m      | [0;32m                                                                                             {
[0m  747 |                 recook |= perturbed;[0m
      | [0;1;32m                                    
[0m[1msearch.c:750:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  750 |         if (linenumber < openfile->filebot->lineno)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  751 |                 openfile->current = line_from_number(linenumber);[0m
  752 |         else[0m
      | [0;32m        } 
[0m[1msearch.c:752:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  752 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  753 |                 openfile->current = openfile->filebot;[0m
      | [0;1;32m                                                      
[0m[1msearch.c:788:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  788 |                 if (response > 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  789 |                         return;[0m
      | [0;1;32m                               
[0m[1msearch.c:797:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  797 |                 if (line == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  798 |                         line = openfile->current->lineno;[0m
      | [0;1;32m                                                         
[0m[1msearch.c:800:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |                 if (column == 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  801 |                         column = openfile->placewewant + 1;[0m
      | [0;1;32m                                                           
[0m[1msearch.c:805:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  805 |         if (line < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  806 |                 line = openfile->filebot->lineno + line + 1;[0m
      | [0;1;32m                                                            
[0m[1msearch.c:807:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |         if (line < 1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  808 |                 line = 1;[0m
      | [0;1;32m                         
[0m[1msearch.c:812:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |                                 (ISSET(SOFTWRAP) && line > openfile->current->lineno))[0m
      | [0;1;32m                                                                                      ^
[0m      | [0;32m                                                                                       {
[0m  813 |                 recook |= perturbed;[0m
      | [0;1;32m                                    
[0m[1msearch.c:818:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |                                 openfile->current != openfile->filebot; line--)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  819 |                 openfile->current = openfile->current->next;[0m
      | [0;1;32m                                                            
[0m[1msearch.c:822:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  822 |         if (column < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  823 |                 column = breadth(openfile->current->data) + column + 2;[0m
      | [0;1;32m                                                                       
[0m[1msearch.c:824:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |         if (column < 1)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  825 |                 column = 1;[0m
      | [0;1;32m                           
[0m[1msearch.c:833:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |                                                 breadth(openfile->current->data) / editwincols)[0m
      | [0;1;32m                                                                                               ^
[0m      | [0;32m                                                                                                {
[0m  834 |                 openfile->placewewant = breadth(openfile->current->data);[0m
      | [0;1;32m                                                                         
[0m[1msearch.c:851:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  851 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  852 | #endif[0m
  853 |                         rows_from_tail = openfile->filebot->lineno -[0m
  854 |                                                                 openfile->current->lineno;[0m
      | [0;1;32m                                                                                          
[0m[1msearch.c:862:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  862 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  863 |                         adjust_viewport(CENTERING);[0m
      | [0;1;32m                                                   
[0m[1msearch.c:887:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |                         if (line == NULL)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  888 |                                 return FALSE;[0m
      | [0;1;32m                                             
[0m[1msearch.c:890:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  890 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  891 |                         pointer = line->data + step_left(line->data, openfile->current_x);[0m
      | [0;1;32m                                                                                          
[0m[1msearch.c:896:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  896 |                         if (line == NULL)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  897 |                                 return FALSE;[0m
      | [0;1;32m                                             
[0m[1msearch.c:905:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  905 |                         if (line == NULL)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  906 |                                 return FALSE;[0m
      | [0;1;32m                                             
[0m[1msearch.c:952:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  952 |         for (size_t i = 0; i < charcount; i++)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  953 |                 halfway += char_length(matchbrackets + halfway);[0m
      | [0;1;32m                                                                
[0m[1msearch.c:963:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  963 |                 if (reverse)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  964 |                         wanted_ch = matchbrackets + step_left(matchbrackets,[0m
  965 |                                                                                                         wanted_ch - matchbrackets);[0m
  966 |                 else[0m
      | [0;32m                } 
[0m[1msearch.c:966:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  966 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  967 |                         wanted_ch += char_length(wanted_ch);[0m
      | [0;1;32m                                                            
[0m[1msearch.c:974:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  974 |         strncpy(bracket_pair, ch, ch_len);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msearch.c:974:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  974 |         strncpy(bracket_pair, ch, ch_len);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msearch.c:975:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  975 |         strncpy(bracket_pair + ch_len, wanted_ch, wanted_ch_len);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msearch.c:975:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  975 |         strncpy(bracket_pair + ch_len, wanted_ch, wanted_ch_len);[0m
      | [0;1;32m        ^~~~~~~
[0m[1msearch.c:1004:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1004 |         if (openfile->current->has_anchor)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1005 |                 statusline(REMARK, _("Placed anchor"));[0m
 1006 |         else[0m
      | [0;32m        } 
[0m[1msearch.c:1006:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1006 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1007 |                 statusline(REMARK, _("Removed anchor"));[0m
      | [0;1;32m                                                        
[0m[1msearch.c:1020:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1020 |                                         (ISSET(SOFTWRAP) && line->lineno > was_current->lineno))[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m 1021 |                         recook |= perturbed;[0m
      | [0;1;32m                                            
[0m[1msearch.c:1025:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1025 |         } else if (openfile->current->has_anchor)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1026 |                 statusline(REMARK, _("This is the only anchor"));[0m
 1027 |         else[0m
      | [0;32m        } 
[0m[1msearch.c:1027:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1028 |                 statusline(AHEM, _("There are no anchors"));[0m
      | [0;1;32m                                                            
[0m84 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[68/70][228.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp8iv8r908.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/files.c
[1mfiles.c:113:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |         if (breadth(name) <= room)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  114 |                 return display_string(name, 0, room, FALSE, FALSE);[0m
      | [0;1;32m                                                                   
[0m[1mfiles.c:116:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |         if (room < 4)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  117 |                 return copy_of("_");[0m
      | [0;1;32m                                    
[0m[1mfiles.c:122:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  122 |         memmove(clipped + 3, clipped, strlen(clipped) + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:122:2: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  122 |         memmove(clipped + 3, clipped, strlen(clipped) + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:136:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  137 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mfiles.c:169:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  170 |                 myhostname[31] = '\0';[0m
      | [0;1;32m                                      
[0m[1mfiles.c:173:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |         if (!delete_lockfile(lockfilename))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  174 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mfiles.c:179:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |         if (fd > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  180 |                 filestream = fdopen(fd, "wb");[0m
      | [0;1;32m                                              
[0m[1mfiles.c:185:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |                 if (fd > 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  186 |                         close(fd);[0m
      | [0;1;32m                                  
[0m[1mfiles.c:191:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  191 |         memset(lockdata, 0, LOCKSIZE);[0m
      | [0;1;32m        ^~~~~~
[0m[1mfiles.c:191:2: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  191 |         memset(lockdata, 0, LOCKSIZE);[0m
      | [0;1;32m        ^~~~~~
[0m[1mfiles.c:211:2: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  211 |         snprintf(&lockdata[2], 11, "nano %s", VERSION);[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mfiles.c:211:2: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  211 |         snprintf(&lockdata[2], 11, "nano %s", VERSION);[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mfiles.c:216:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  216 |         strncpy(&lockdata[28], mypwuid->pw_name, 16);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:216:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  216 |         strncpy(&lockdata[28], mypwuid->pw_name, 16);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:217:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  217 |         strncpy(&lockdata[68], myhostname, 32);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:217:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  217 |         strncpy(&lockdata[68], myhostname, 32);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:218:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  218 |         strncpy(&lockdata[108], filename, 768);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:218:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  218 |         strncpy(&lockdata[108], filename, 768);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:247:2: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  247 |         snprintf(lockfilename, locknamesize, "%s/%s%s%s", dirname(namecopy),[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mfiles.c:247:2: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
  247 |         snprintf(lockfilename, locknamesize, "%s/%s%s%s", dirname(namecopy),[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mfiles.c:284:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  284 |                 strncpy(lockprog, &lockbuf[2], 10);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:284:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  284 |                 strncpy(lockprog, &lockbuf[2], 10);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:288:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  288 |                 strncpy(lockuser, &lockbuf[28], 16);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:288:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  288 |                 strncpy(lockuser, &lockbuf[28], 16);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:293:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  293 |                 sprintf (pidstring, "%u", (unsigned int)lockpid);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:293:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  293 |                 sprintf (pidstring, "%u", (unsigned int)lockpid);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:306:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  306 |                 sprintf(promptstr, question, postedname, lockuser, lockprog, pidstring);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:306:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  306 |                 sprintf(promptstr, question, postedname, lockuser, lockprog, pidstring);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:314:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |                 if (choice == CANCEL && !we_are_running)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  315 |                         finish();[0m
      | [0;1;32m                                 
[0m[1mfiles.c:324:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |         if (write_lockfile(lockfilename, filename, FALSE))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  325 |                 return lockfilename;[0m
      | [0;1;32m                                    
[0m[1mfiles.c:336:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |         if (*pstat == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  337 |                 *pstat = nmalloc(sizeof(struct stat));[0m
      | [0;1;32m                                                      
[0m[1mfiles.c:362:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |         if (gone)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  363 |                 statusline(ALERT, _("The working directory has disappeared"));[0m
  364 |         else if (stat(parentdir, &parentinfo) == -1) {[0m
      | [0;32m        } 
[0m[1mfiles.c:365:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  365 |                 if (errno == ENOENT)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  366 |                         /* TRANSLATORS: Keep the next ten messages at most 76 characters. */[0m
  367 |                         statusline(ALERT, _("Directory '%s' does not exist"), parentdir);[0m
  368 |                 else[0m
      | [0;32m                } 
[0m[1mfiles.c:368:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  369 |                         statusline(ALERT, _("Path '%s': %s"), parentdir, strerror(errno));[0m
      | [0;1;32m                                                                                          
[0m[1mfiles.c:370:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |         } else if (!S_ISDIR(parentinfo.st_mode))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  371 |                 statusline(ALERT, _("Path '%s' is not a directory"), parentdir);[0m
  372 |         else if (access(parentdir, X_OK) == -1)[0m
      | [0;32m        } 
[0m[1mfiles.c:372:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  372 |         else if (access(parentdir, X_OK) == -1)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  373 |                 statusline(ALERT, _("Path '%s' is not accessible"), parentdir);[0m
  374 | #ifndef NANO_TINY[0m
  375 |         else if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && access(parentdir, W_OK) < 0)[0m
      | [0;32m        } 
[0m[1mfiles.c:375:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |         else if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && access(parentdir, W_OK) < 0)[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m  376 |                 statusline(MILD, _("Directory '%s' is not writable"), parentdir);[0m
  377 | #endif[0m
  378 |         else[0m
      | [0;32m        } 
[0m[1mfiles.c:378:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  379 |                 validity = TRUE;[0m
      | [0;1;32m                                
[0m[1mfiles.c:430:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |                                                 geteuid() == ROOT_UID)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  431 |                         statusline(ALERT, _("%s is meant to be read-only"), realname);[0m
      | [0;1;32m                                                                                      
[0m[1mfiles.c:452:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |                                 } else[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  453 |                                         openfile->lock_filename = thelocksname;[0m
      | [0;1;32m                                                                               
[0m[1mfiles.c:460:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |         if (filename[0] != '\0' && !ISSET(NOREAD_MODE))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  461 |                 descriptor = open_file(realname, new_one, &f);[0m
      | [0;1;32m                                                              
[0m[1mfiles.c:472:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |                 if (openfile->statinfo == NULL)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  473 |                         stat_with_alloc(realname, &openfile->statinfo);[0m
      | [0;1;32m                                                                       
[0m[1mfiles.c:478:6: [0m[0;1;35mwarning: [0m[1mOpened stream never closed. Potential resource leak [clang-analyzer-unix.Stream][0m
  478 |         if (descriptor >= 0 && new_one) {[0m
      | [0;1;32m            ^
[0m[1mfiles.c:1382:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1382 |         if (!in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1382:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1382 |         if (!in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1383:3: [0m[0;1;36mnote: [0mCalling 'insert_a_file_or'[0m
 1383 |                 insert_a_file_or(TRUE);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1188:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1188 |         bool was_multibuffer = ISSET(MULTIBUFFER);[0m
      | [0;1;32m                               ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1197:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1197 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1199:7: [0m[0;1;36mnote: [0m'execute' is true[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mfiles.c:1199:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1201:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1201 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'execute' is true[0m
 1230 |                 response = do_prompt(execute ? MEXECUTE : MINSERTFILE, given,[0m
      | [0;1;32m                                     ^~~~~~~
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'execute' is true[0m
 1231 |                                                         execute ? &execute_history : NULL,[0m
      | [0;1;32m                                                        ^~~~~~~
[0m[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1234:8: [0m[0;1;36mnote: [0mAssuming 'operating_dir' is equal to NULL[0m
 1234 |                                                         operating_dir != NULL ? operating_dir :[0m
      | [0;1;32m                                                        ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1234:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mfiles.c:1240:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:41: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                                      ^
[0m[1mfiles.c:1251:8: [0m[0;1;36mnote: [0mAssuming 'ran_a_tool' is false[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                            ^~~~~~~~~~
[0m[1mfiles.c:1251:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1255:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_newbuffer[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1255:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1265:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_convert[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1265:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1269:8: [0m[0;1;36mnote: [0mAssuming 'function' is equal to flip_execute[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1269:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1271:5: [0m[0;1;36mnote: [0m Execution continues on line 1197[0m
 1271 |                                 continue;[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1197:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1197 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1199:7: [0m[0;1;36mnote: [0m'execute' is false[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mfiles.c:1199:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1211:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1211 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1211:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1221:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1221 |                                 if ISSET(NO_CONVERT)[0m
      | [0;1;32m                                   ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1221:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1221 |                                 if ISSET(NO_CONVERT)[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'execute' is false[0m
 1230 |                 response = do_prompt(execute ? MEXECUTE : MINSERTFILE, given,[0m
      | [0;1;32m                                     ^~~~~~~
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'execute' is false[0m
 1231 |                                                         execute ? &execute_history : NULL,[0m
      | [0;1;32m                                                        ^~~~~~~
[0m[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1234:8: [0m[0;1;36mnote: [0mAssuming 'operating_dir' is equal to NULL[0m
 1234 |                                                         operating_dir != NULL ? operating_dir :[0m
      | [0;1;32m                                                        ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1234:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mfiles.c:1240:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:41: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                                      ^
[0m[1mfiles.c:1251:8: [0m[0;1;36mnote: [0mAssuming 'ran_a_tool' is false[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                            ^~~~~~~~~~
[0m[1mfiles.c:1251:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1255:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_newbuffer[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1255:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1265:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_convert[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1265:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1269:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_execute[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1269:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1273:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_pipe[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1273:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1280:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to to_files[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1280:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1293:8: [0m[0;1;36mnote: [0mAssuming 'response' is equal to 0[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1mfiles.c:1293:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                                          ^
[0m[1mfiles.c:1297:8: [0m[0;1;36mnote: [0m'execute' is false[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                            ^~~~~~~
[0m[1mfiles.c:1297:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1329:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1329 |                                 open_buffer(answer, ISSET(MULTIBUFFER));[0m
      | [0;1;32m                                                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1329:5: [0m[0;1;36mnote: [0mCalling 'open_buffer'[0m
 1329 |                                 open_buffer(answer, ISSET(MULTIBUFFER));[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:402:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  402 |         if (outside_of_confinement(filename, FALSE)) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:411:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  411 |         if (*filename != '\0' && stat(realname, &fileinfo) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mfiles.c:411:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mfiles.c:411:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  411 |         if (*filename != '\0' && stat(realname, &fileinfo) == 0) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:437:6: [0m[0;1;36mnote: [0m'new_one' is false[0m
  437 |         if (new_one) {[0m
      | [0;1;32m            ^~~~~~~
[0m[1mfiles.c:437:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  437 |         if (new_one) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:460:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  460 |         if (filename[0] != '\0' && !ISSET(NOREAD_MODE))[0m
      | [0;1;32m            ^
[0m[1mfiles.c:460:30: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  460 |         if (filename[0] != '\0' && !ISSET(NOREAD_MODE))[0m
      | [0;1;32m                                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:460:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  460 |         if (filename[0] != '\0' && !ISSET(NOREAD_MODE))[0m
      | [0;1;32m        ^
[0m[1mfiles.c:461:16: [0m[0;1;36mnote: [0mCalling 'open_file'[0m
  461 |                 descriptor = open_file(realname, new_one, &f);[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:882:6: [0m[0;1;36mnote: [0mAssuming 'full_filename' is not equal to NULL[0m
  882 |         if (full_filename == NULL || stat(full_filename, &fileinfo) == -1)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:882:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mfiles.c:882:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  882 |         if (full_filename == NULL || stat(full_filename, &fileinfo) == -1)[0m
      | [0;1;32m        ^
[0m[1mfiles.c:885:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  885 |         if (stat(full_filename, &fileinfo) == -1) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:898:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  898 |         if (S_ISFIFO(fileinfo.st_mode))[0m
      | [0;1;32m            ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:130:26: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISFIFO'[0m
  130 | # define S_ISFIFO(mode)  __S_ISTYPE((mode), __S_IFIFO)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:898:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  898 |         if (S_ISFIFO(fileinfo.st_mode))[0m
      | [0;1;32m        ^
[0m[1mfiles.c:913:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  913 |         if (fd == -1) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:920:8: [0m[0;1;36mnote: [0mStream opened here[0m
  920 |                 *f = fdopen(fd, "rb");[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~
[0m[1mfiles.c:920:8: [0m[0;1;36mnote: [0mAssuming that 'fdopen' is successful[0m
  920 |                 *f = fdopen(fd, "rb");[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~
[0m[1mfiles.c:922:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  922 |                 if (*f == NULL) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:926:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  926 |                 } else if (!ISSET(ZERO) || we_are_running)[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:926:14: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  926 |                 } else if (!ISSET(ZERO) || we_are_running)[0m
      | [0;1;32m                           ^
[0m[1mfiles.c:926:30: [0m[0;1;36mnote: [0mAssuming 'we_are_running' is false[0m
  926 |                 } else if (!ISSET(ZERO) || we_are_running)[0m
      | [0;1;32m                                           ^~~~~~~~~~~~~~
[0m[1mfiles.c:926:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  926 |                 } else if (!ISSET(ZERO) || we_are_running)[0m
      | [0;1;32m                       ^
[0m[1mfiles.c:461:16: [0m[0;1;36mnote: [0mReturning from 'open_file'[0m
  461 |                 descriptor = open_file(realname, new_one, &f);[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:464:6: [0m[0;1;36mnote: [0mAssuming 'descriptor' is <= 0[0m
  464 |         if (descriptor > 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mfiles.c:464:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  464 |         if (descriptor > 0) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:478:6: [0m[0;1;36mnote: [0mOpened stream never closed. Potential resource leak[0m
  478 |         if (descriptor >= 0 && new_one) {[0m
      | [0;1;32m            ^~~~~~~~~~
[0m[1mfiles.c:487:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |         if (new_one)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  488 |                 find_and_prime_applicable_syntax();[0m
      | [0;1;32m                                                   
[0m[1mfiles.c:499:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  499 |         if (openfile->modified)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  500 |                 return;[0m
      | [0;1;32m                       
[0m[1mfiles.c:506:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |         if (openfile->lock_filename != NULL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  507 |                 write_lockfile(openfile->lock_filename, openfile->filename, TRUE);[0m
      | [0;1;32m                                                                                  
[0m[1mfiles.c:515:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |         if (!inhelp)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  516 |                 titlebar(NULL);[0m
      | [0;1;32m                               
[0m[1mfiles.c:520:7: [0m[0;1;35mwarning: [0m[1mAccess to field 'filetop' results in a dereference of a null pointer (loaded from variable 'openfile') [clang-analyzer-core.NullDereference][0m
  520 |         if (!openfile->filetop->multidata)[0m
      | [0;1;32m             ^
[0m[1mfiles.c:1374:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1374 |         if (!in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1374:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1374 |         if (!in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1375:3: [0m[0;1;36mnote: [0mCalling 'insert_a_file_or'[0m
 1375 |                 insert_a_file_or(FALSE);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1188:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1188 |         bool was_multibuffer = ISSET(MULTIBUFFER);[0m
      | [0;1;32m                               ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1197:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1197 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1199:7: [0m[0;1;36mnote: [0m'execute' is false[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mfiles.c:1199:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1211:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1221:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1221 |                                 if ISSET(NO_CONVERT)[0m
      | [0;1;32m                                   ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1221:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1221 |                                 if ISSET(NO_CONVERT)[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'execute' is false[0m
 1230 |                 response = do_prompt(execute ? MEXECUTE : MINSERTFILE, given,[0m
      | [0;1;32m                                     ^~~~~~~
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'execute' is false[0m
 1231 |                                                         execute ? &execute_history : NULL,[0m
      | [0;1;32m                                                        ^~~~~~~
[0m[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1234:8: [0m[0;1;36mnote: [0mAssuming 'operating_dir' is equal to NULL[0m
 1234 |                                                         operating_dir != NULL ? operating_dir :[0m
      | [0;1;32m                                                        ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1234:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mfiles.c:1240:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:41: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                                      ^
[0m[1mfiles.c:1251:8: [0m[0;1;36mnote: [0mAssuming 'ran_a_tool' is false[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                            ^~~~~~~~~~
[0m[1mfiles.c:1251:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1255:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_newbuffer[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1255:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1265:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_convert[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1265:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1269:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_execute[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1269:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1273:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_pipe[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1273:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1280:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to to_files[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1280:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1293:8: [0m[0;1;36mnote: [0mAssuming 'response' is equal to 0[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1mfiles.c:1293:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                                          ^
[0m[1mfiles.c:1297:8: [0m[0;1;36mnote: [0m'execute' is false[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                            ^~~~~~~
[0m[1mfiles.c:1297:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1329:25: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1329 |                                 open_buffer(answer, ISSET(MULTIBUFFER));[0m
      | [0;1;32m                                                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1329:5: [0m[0;1;36mnote: [0mCalling 'open_buffer'[0m
 1329 |                                 open_buffer(answer, ISSET(MULTIBUFFER));[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:402:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  402 |         if (outside_of_confinement(filename, FALSE)) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:411:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  411 |         if (*filename != '\0' && stat(realname, &fileinfo) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mfiles.c:411:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mfiles.c:411:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  411 |         if (*filename != '\0' && stat(realname, &fileinfo) == 0) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:437:6: [0m[0;1;36mnote: [0m'new_one' is true[0m
  437 |         if (new_one) {[0m
      | [0;1;32m            ^~~~~~~
[0m[1mfiles.c:437:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  437 |         if (new_one) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:440:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  440 |                 if (has_valid_path(realname)) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:440:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  440 |                 if (has_valid_path(realname)) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:442:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:442:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                     ^
[0m[1mfiles.c:442:27: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                                               ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:442:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                     ^
[0m[1mfiles.c:442:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:446:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  446 |                                 if (thelocksname == SKIPTHISFILE) {[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:446:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  446 |                                 if (thelocksname == SKIPTHISFILE) {[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:448:6: [0m[0;1;36mnote: [0mCalling 'close_buffer'[0m
  448 |                                         close_buffer();[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~
[0m[1mfiles.c:606:6: [0m[0;1;36mnote: [0mAssuming 'orphan' is not equal to 'startfile'[0m
  606 |         if (orphan == startfile)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:606:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  606 |         if (orphan == startfile)[0m
      | [0;1;32m        ^
[0m[1mfiles.c:623:6: [0m[0;1;36mnote: [0mAssuming 'openfile' is equal to 'orphan'[0m
  623 |         if (openfile == orphan)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:623:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  623 |         if (openfile == orphan)[0m
      | [0;1;32m        ^
[0m[1mfiles.c:624:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'openfile'[0m
  624 |                 openfile = NULL;[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~
[0m[1mfiles.c:629:6: [0m[0;1;36mnote: [0m'openfile' is null[0m
  629 |         if (openfile && openfile == openfile->next)[0m
      | [0;1;32m            ^~~~~~~~
[0m[1mfiles.c:629:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  629 |         if (openfile && openfile == openfile->next)[0m
      | [0;1;32m                     ^
[0m[1mfiles.c:448:6: [0m[0;1;36mnote: [0mReturning from 'close_buffer'[0m
  448 |                                         close_buffer();[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~
[0m[1mfiles.c:1329:5: [0m[0;1;36mnote: [0mReturning from 'open_buffer'[0m
 1329 |                                 open_buffer(answer, ISSET(MULTIBUFFER));[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1333:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1333 |                         if (ISSET(MULTIBUFFER)) {[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1333:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1333 |                         if (ISSET(MULTIBUFFER)) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1335:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1335 |                                 if (ISSET(POSITIONLOG)) {[0m
      | [0;1;32m                                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1335:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1335 |                                 if (ISSET(POSITIONLOG)) {[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1345:5: [0m[0;1;36mnote: [0mCalling 'prepare_for_display'[0m
 1345 |                                 prepare_for_display();[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:515:6: [0m[0;1;36mnote: [0mAssuming 'inhelp' is true[0m
  515 |         if (!inhelp)[0m
      | [0;1;32m            ^~~~~~~
[0m[1mfiles.c:515:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  515 |         if (!inhelp)[0m
      | [0;1;32m        ^
[0m[1mfiles.c:520:7: [0m[0;1;36mnote: [0mAccess to field 'filetop' results in a dereference of a null pointer (loaded from variable 'openfile')[0m
  520 |         if (!openfile->filetop->multidata)[0m
      | [0;1;32m             ^~~~~~~~
[0m[1mfiles.c:520:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |         if (!openfile->filetop->multidata)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  521 |                 precalc_multicolorinfo();[0m
      | [0;1;32m                                         
[0m[1mfiles.c:540:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |         if (openfile->fmt > NIX_FILE)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  541 |                 /* TRANSLATORS: First %s is file name, second %s is file format. */[0m
  542 |                 statusline(HUSH, P_("%s -- %zu line (%s)", "%s -- %zu lines (%s)", count),[0m
  543 |                                                 openfile->filename[0] == '\0' ?[0m
  544 |                                                 _("New Buffer") : tail(openfile->filename), count,[0m
  545 |                                                 openfile->fmt == DOS_FILE ? _("DOS") : _("Mac"));[0m
  546 |         else[0m
      | [0;32m        } 
[0m[1mfiles.c:546:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  546 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  547 | #endif[0m
  548 |                 statusline(HUSH, P_("%s -- %zu line", "%s -- %zu lines", count),[0m
  549 |                                                 openfile->filename[0] == '\0' ?[0m
  550 |                                                 _("New Buffer") : tail(openfile->filename), count);[0m
      | [0;1;32m                                                                                                   
[0m[1mfiles.c:583:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  584 |                 mention_name_and_linecount();[0m
      | [0;1;32m                                             
[0m[1mfiles.c:606:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |         if (orphan == startfile)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  607 |                 startfile = startfile->next;[0m
      | [0;1;32m                                            
[0m[1mfiles.c:623:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |         if (openfile == orphan)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  624 |                 openfile = NULL;[0m
      | [0;1;32m                                
[0m[1mfiles.c:629:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  629 |         if (openfile && openfile == openfile->next)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  630 |                 exitfunc->tag = exit_tag;[0m
      | [0;1;32m                                         
[0m[1mfiles.c:678:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  678 |         if (undoable)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  679 |                 add_undo(INSERT, NULL);[0m
      | [0;1;32m                                       
[0m[1mfiles.c:681:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  681 |         if (ISSET(SOFTWRAP))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  682 |                 was_leftedge = leftedge_for(xplustabs(), openfile->current);[0m
      | [0;1;32m                                                                            
[0m[1mfiles.c:707:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  707 |                 if (control_C_was_pressed)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  708 |                         break;[0m
      | [0;1;32m                              
[0m[1mfiles.c:717:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |                                 if (num_lines == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  718 |                                         format = DOS_FILE;[0m
      | [0;1;32m                                                          
[0m[1mfiles.c:756:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |                 if (input != '\n')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  757 |                         buf[len++] = input;[0m
      | [0;1;32m                                           
[0m[1mfiles.c:773:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  773 |                 if (!isatty(STDIN_FILENO))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  774 |                         reconnect_and_store_state();[0m
      | [0;1;32m                                                    
[0m[1mfiles.c:781:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |         if (ferror(f) && errornumber != EINTR && errornumber != 0)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  782 |                 statusline(ALERT, strerror(errornumber));[0m
      | [0;1;32m                                                         
[0m[1mfiles.c:784:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |         if (control_C_was_pressed)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  785 |                 statusline(ALERT, _("Interrupted"));[0m
      | [0;1;32m                                                    
[0m[1mfiles.c:789:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |         if (fd > 0 && !undoable && !ISSET(VIEW_MODE))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  790 |                 writable = (access(filename, W_OK) == 0);[0m
      | [0;1;32m                                                         
[0m[1mfiles.c:794:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  794 |         if (len == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  795 |                 bottomline->data = copy_of("");[0m
  796 |         else {[0m
      | [0;32m        } 
[0m[1mfiles.c:803:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  803 |                         if (num_lines == 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  804 |                                 format = MAC_FILE;[0m
      | [0;1;32m                                                  
[0m[1mfiles.c:830:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  830 |         if (!writable)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  831 |                 statusline(ALERT, _("File '%s' is unwritable"), filename);[0m
  832 | #ifndef NANO_TINY[0m
  833 |         else if (format == MAC_FILE)[0m
      | [0;32m        } 
[0m[1mfiles.c:833:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |         else if (format == MAC_FILE)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  834 |                 /* TRANSLATORS: Keep the next three messages at most 78 characters. */[0m
  835 |                 statusline(REMARK, P_("Read %zu line (Converted from Mac format)",[0m
  836 |                                                 "Read %zu lines (Converted from Mac format)",[0m
  837 |                                                 num_lines), num_lines);[0m
  838 |         else if (format == DOS_FILE)[0m
      | [0;32m        } 
[0m[1mfiles.c:838:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  838 |         else if (format == DOS_FILE)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  839 |                 statusline(REMARK, P_("Read %zu line (Converted from DOS format)",[0m
  840 |                                                 "Read %zu lines (Converted from DOS format)",[0m
  841 |                                                 num_lines), num_lines);[0m
  842 | #endif[0m
  843 |         else if ((!ISSET(MINIBAR) && !ISSET(ZERO)) || (we_are_running && undoable))[0m
      | [0;32m        } 
[0m[1mfiles.c:843:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  843 |         else if ((!ISSET(MINIBAR) && !ISSET(ZERO)) || (we_are_running && undoable))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m  844 |                 statusline(REMARK, P_("Read %zu line", "Read %zu lines",[0m
  845 |                                                 num_lines), num_lines);[0m
      | [0;1;32m                                                                       
[0m[1mfiles.c:860:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  860 |         if (undoable)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  861 |                 update_undo(INSERT);[0m
      | [0;1;32m                                    
[0m[1mfiles.c:863:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  863 |         if (ISSET(MAKE_IT_UNIX))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  864 |                 openfile->fmt = NIX_FILE;[0m
  865 |         else if (openfile->fmt == UNSPECIFIED)[0m
      | [0;32m        } 
[0m[1mfiles.c:865:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  865 |         else if (openfile->fmt == UNSPECIFIED)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  866 |                 openfile->fmt = format;[0m
      | [0;1;32m                                       
[0m[1mfiles.c:882:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  882 |         if (full_filename == NULL || stat(full_filename, &fileinfo) == -1)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  883 |                 full_filename = mallocstrcpy(full_filename, filename);[0m
      | [0;1;32m                                                                      
[0m[1mfiles.c:898:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  898 |         if (S_ISFIFO(fileinfo.st_mode))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  899 |                 statusbar(_("Reading from FIFO..."));[0m
      | [0;1;32m                                                     
[0m[1mfiles.c:914:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  914 |                 if (errno == EINTR || errno == 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  915 |                         statusline(ALERT, _("Interrupted"));[0m
  916 |                 else[0m
      | [0;32m                } 
[0m[1mfiles.c:916:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  916 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  917 |                         statusline(ALERT, _("Error reading %s: %s"), filename, strerror(errno));[0m
      | [0;1;32m                                                                                                
[0m[1mfiles.c:926:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  926 |                 } else if (!ISSET(ZERO) || we_are_running)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  927 |                         statusbar(_("Reading..."));[0m
      | [0;1;32m                                                   
[0m[1mfiles.c:948:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  948 |         sprintf(buf, "%s%s", name, suffix);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:948:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  948 |         sprintf(buf, "%s%s", name, suffix);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:953:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  953 |                 if (stat(buf, &fs) == -1)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  954 |                         return buf;[0m
      | [0;1;32m                                   
[0m[1mfiles.c:957:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  957 |                 if (++i == 100000)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  958 |                         break;[0m
      | [0;1;32m                              
[0m[1mfiles.c:960:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  960 |                 sprintf(buf + wholenamelen, ".%lu", i);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:960:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  960 |                 sprintf(buf + wholenamelen, ".%lu", i);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:981:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  981 |         if (pid_of_command > 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  982 |                 kill(pid_of_command, SIGKILL);[0m
      | [0;1;32m                                              
[0m[1mfiles.c:983:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |         if (should_pipe && pid_of_sender > 0)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  984 |                 kill(pid_of_sender, SIGKILL);[0m
      | [0;1;32m                                             
[0m[1mfiles.c:993:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  993 |         if (tube == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  994 |                 exit(4);[0m
      | [0;1;32m                        
[0m[1mfiles.c:1000:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1000 |                 if (fwrite(line->data, 1, length, tube) < length)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1001 |                         exit(5);[0m
      | [0;1;32m                                
[0m[1mfiles.c:1003:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1003 |                 if (line->next && putc('\n', tube) == EOF)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1004 |                         exit(6);[0m
      | [0;1;32m                                
[0m[1mfiles.c:1037:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1037 |                 if (theshell == NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1038 |                         theshell = (char *)"/bin/sh";[0m
      | [0;1;32m                                                     
[0m[1mfiles.c:1044:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1044 |                 if (dup2(from_fd[1], STDOUT_FILENO) < 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1045 |                         exit(3);[0m
      | [0;1;32m                                
[0m[1mfiles.c:1046:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1046 |                 if (dup2(from_fd[1], STDERR_FILENO) < 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1047 |                         exit(4);[0m
      | [0;1;32m                                
[0m[1mfiles.c:1052:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1052 |                         if (dup2(to_fd[0], STDIN_FILENO) < 0)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1053 |                                 exit(5);[0m
      | [0;1;32m                                        
[0m[1mfiles.c:1059:3: [0m[0;1;35mwarning: [0m[1mUntrusted data is passed to a system call (CERT/STR02-C. Sanitize data passed to complex subsystems) [clang-analyzer-optin.taint.GenericTaint][0m
 1059 |                 execl(theshell, tail(theshell), "-c", should_pipe ? &command[1] : command, NULL);[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1382:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1382 |         if (!in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1382:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1382 |         if (!in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1383:3: [0m[0;1;36mnote: [0mCalling 'insert_a_file_or'[0m
 1383 |                 insert_a_file_or(TRUE);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1188:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1188 |         bool was_multibuffer = ISSET(MULTIBUFFER);[0m
      | [0;1;32m                               ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1197:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1197 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1199:7: [0m[0;1;36mnote: [0m'execute' is true[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mfiles.c:1199:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1201:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1201 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'execute' is true[0m
 1230 |                 response = do_prompt(execute ? MEXECUTE : MINSERTFILE, given,[0m
      | [0;1;32m                                     ^~~~~~~
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'execute' is true[0m
 1231 |                                                         execute ? &execute_history : NULL,[0m
      | [0;1;32m                                                        ^~~~~~~
[0m[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1234:8: [0m[0;1;36mnote: [0mAssuming 'operating_dir' is equal to NULL[0m
 1234 |                                                         operating_dir != NULL ? operating_dir :[0m
      | [0;1;32m                                                        ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1234:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mfiles.c:1240:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:41: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                                      ^
[0m[1mfiles.c:1251:8: [0m[0;1;36mnote: [0mAssuming 'ran_a_tool' is false[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                            ^~~~~~~~~~
[0m[1mfiles.c:1251:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1255:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_newbuffer[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1255:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1265:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_convert[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1265:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1269:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_execute[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1269:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1273:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_pipe[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1273:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1280:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to to_files[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1280:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1293:8: [0m[0;1;36mnote: [0mAssuming 'response' is equal to 0[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1mfiles.c:1293:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                                          ^
[0m[1mfiles.c:1297:8: [0m[0;1;36mnote: [0m'execute' is true[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                            ^~~~~~~
[0m[1mfiles.c:1297:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1300:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1300 |                                 if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1300:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1300 |                                 if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1305:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1305 |                                 if (*answer != '\0') {[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~
[0m[1mfiles.c:1305:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1305 |                                 if (*answer != '\0') {[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1306:6: [0m[0;1;36mnote: [0mCalling 'execute_command'[0m
 1306 |                                         execute_command(answer);[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1020:24: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
 1020 |         ssize_t was_lineno = (openfile->mark ? 0 : openfile->current->lineno);[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1mfiles.c:1020:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1024:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1024 |         should_pipe = (command[0] == '|');[0m
      | [0;1;32m                       ^~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1028:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1028 |         if (pipe(from_fd) == -1 || (should_pipe && pipe(to_fd) == -1)) {[0m
      | [0;1;32m            ^
[0m[1mfiles.c:1028:30: [0m[0;1;36mnote: [0m'should_pipe' is false[0m
 1028 |         if (pipe(from_fd) == -1 || (should_pipe && pipe(to_fd) == -1)) {[0m
      | [0;1;32m                                    ^~~~~~~~~~~
[0m[1mfiles.c:1028:42: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1028 |         if (pipe(from_fd) == -1 || (should_pipe && pipe(to_fd) == -1)) {[0m
      | [0;1;32m                                                ^
[0m[1mfiles.c:1034:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1034 |         if ((pid_of_command = fork()) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1034:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1034 |         if ((pid_of_command = fork()) == 0) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1035:26: [0m[0;1;36mnote: [0mTaint originated here[0m
 1035 |                 const char *theshell = getenv("SHELL");[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~~
[0m[1mfiles.c:1035:26: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
 1035 |                 const char *theshell = getenv("SHELL");[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~~
[0m[1mfiles.c:1035:26: [0m[0;1;36mnote: [0mAssuming the environment variable exists[0m
 1035 |                 const char *theshell = getenv("SHELL");[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~~
[0m[1mfiles.c:1037:7: [0m[0;1;36mnote: [0m'theshell' is not equal to NULL[0m
 1037 |                 if (theshell == NULL)[0m
      | [0;1;32m                    ^~~~~~~~
[0m[1mfiles.c:1037:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1037 |                 if (theshell == NULL)[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1044:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1044 |                 if (dup2(from_fd[1], STDOUT_FILENO) < 0)[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1046:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1046 |                 if (dup2(from_fd[1], STDERR_FILENO) < 0)[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1051:7: [0m[0;1;36mnote: [0m'should_pipe' is false[0m
 1051 |                 if (should_pipe) {[0m
      | [0;1;32m                    ^~~~~~~~~~~
[0m[1mfiles.c:1051:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1051 |                 if (should_pipe) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1059:41: [0m[0;1;36mnote: [0mAssuming 'should_pipe' is false[0m
 1059 |                 execl(theshell, tail(theshell), "-c", should_pipe ? &command[1] : command, NULL);[0m
      | [0;1;32m                                                      ^~~~~~~~~~~
[0m[1mfiles.c:1059:41: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1059:3: [0m[0;1;36mnote: [0mUntrusted data is passed to a system call (CERT/STR02-C. Sanitize data passed to complex subsystems)[0m
 1059 |                 execl(theshell, tail(theshell), "-c", should_pipe ? &command[1] : command, NULL);[0m
      | [0;1;32m                ^     ~~~~~~~~
[0m[1mfiles.c:1086:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1086 |                         if (openfile->mark)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1087 |                                 copy_marked_region();[0m
 1088 |                         else[0m
      | [0;32m                        } 
[0m[1mfiles.c:1088:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1088 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1089 |                                 whole_buffer = TRUE;[0m
      | [0;1;32m                                                    
[0m[1mfiles.c:1101:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1101 |                         if (openfile->filetop->next == NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1102 |                                 openfile->filetop->has_anchor = FALSE;[0m
      | [0;1;32m                                                                      
[0m[1mfiles.c:1108:4: [0m[0;1;35mwarning: [0m[1m2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1108 |                         send_data(whole_buffer ? openfile->filetop : cutbuffer, to_fd[1]);[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1382:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1382 |         if (!in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1382:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1382 |         if (!in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1383:3: [0m[0;1;36mnote: [0mCalling 'insert_a_file_or'[0m
 1383 |                 insert_a_file_or(TRUE);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1188:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1188 |         bool was_multibuffer = ISSET(MULTIBUFFER);[0m
      | [0;1;32m                               ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1197:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1197 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1199:7: [0m[0;1;36mnote: [0m'execute' is true[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mfiles.c:1199:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1201:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1201 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'execute' is true[0m
 1230 |                 response = do_prompt(execute ? MEXECUTE : MINSERTFILE, given,[0m
      | [0;1;32m                                     ^~~~~~~
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'execute' is true[0m
 1231 |                                                         execute ? &execute_history : NULL,[0m
      | [0;1;32m                                                        ^~~~~~~
[0m[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1234:8: [0m[0;1;36mnote: [0mAssuming 'operating_dir' is equal to NULL[0m
 1234 |                                                         operating_dir != NULL ? operating_dir :[0m
      | [0;1;32m                                                        ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1234:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mfiles.c:1240:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:41: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                                      ^
[0m[1mfiles.c:1251:8: [0m[0;1;36mnote: [0mAssuming 'ran_a_tool' is false[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                            ^~~~~~~~~~
[0m[1mfiles.c:1251:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1255:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_newbuffer[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1255:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1265:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_convert[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1265:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1269:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_execute[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1269:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1273:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_pipe[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1273:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1280:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to to_files[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1280:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1293:8: [0m[0;1;36mnote: [0mAssuming 'response' is equal to 0[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1mfiles.c:1293:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                                          ^
[0m[1mfiles.c:1297:8: [0m[0;1;36mnote: [0m'execute' is true[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                            ^~~~~~~
[0m[1mfiles.c:1297:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1300:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1300 |                                 if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1300:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1300 |                                 if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1305:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1305 |                                 if (*answer != '\0') {[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~
[0m[1mfiles.c:1305:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1305 |                                 if (*answer != '\0') {[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1306:6: [0m[0;1;36mnote: [0mCalling 'execute_command'[0m
 1306 |                                         execute_command(answer);[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1020:24: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
 1020 |         ssize_t was_lineno = (openfile->mark ? 0 : openfile->current->lineno);[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1mfiles.c:1020:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1024:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1024 |         should_pipe = (command[0] == '|');[0m
      | [0;1;32m                       ^~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1028:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1028 |         if (pipe(from_fd) == -1 || (should_pipe && pipe(to_fd) == -1)) {[0m
      | [0;1;32m            ^
[0m[1mfiles.c:1028:30: [0m[0;1;36mnote: [0m'should_pipe' is false[0m
 1028 |         if (pipe(from_fd) == -1 || (should_pipe && pipe(to_fd) == -1)) {[0m
      | [0;1;32m                                    ^~~~~~~~~~~
[0m[1mfiles.c:1028:42: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1028 |         if (pipe(from_fd) == -1 || (should_pipe && pipe(to_fd) == -1)) {[0m
      | [0;1;32m                                                ^
[0m[1mfiles.c:1034:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1034 |         if ((pid_of_command = fork()) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1034:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1034 |         if ((pid_of_command = fork()) == 0) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1068:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1068 |         if (pid_of_command == -1) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1068:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1068 |         if (pid_of_command == -1) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1077:6: [0m[0;1;36mnote: [0mAssuming 'should_pipe' is true[0m
 1077 |         if (should_pipe) {[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mfiles.c:1077:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1077 |         if (should_pipe) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1084:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1084 |                 if (ISSET(MULTIBUFFER)) {[0m
      | [0;1;32m                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1084:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1084 |                 if (ISSET(MULTIBUFFER)) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1086:8: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
 1086 |                         if (openfile->mark)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~
[0m[1mfiles.c:1086:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1086 |                         if (openfile->mark)[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1107:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1107 |                 if ((pid_of_sender = fork()) == 0) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1107:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1107 |                 if ((pid_of_sender = fork()) == 0) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1108:14: [0m[0;1;36mnote: [0m'whole_buffer' is false[0m
 1108 |                         send_data(whole_buffer ? openfile->filetop : cutbuffer, to_fd[1]);[0m
      | [0;1;32m                                  ^~~~~~~~~~~~
[0m[1mfiles.c:1108:14: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1108:4: [0m[0;1;36mnote: [0m2nd function call argument is an uninitialized value[0m
 1108 |                         send_data(whole_buffer ? openfile->filetop : cutbuffer, to_fd[1]);[0m
      | [0;1;32m                        ^                                                       ~~~~~~~~
[0m[1mfiles.c:1112:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1112 |                 if (pid_of_sender == -1)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1113 |                         statusline(ALERT, _("Could not fork: %s"), strerror(errno));[0m
      | [0;1;32m                                                                                    
[0m[1mfiles.c:1115:3: [0m[0;1;35mwarning: [0m[1m1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage][0m
 1115 |                 close(to_fd[0]);[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1382:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1382 |         if (!in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1382:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1382 |         if (!in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1383:3: [0m[0;1;36mnote: [0mCalling 'insert_a_file_or'[0m
 1383 |                 insert_a_file_or(TRUE);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1188:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1188 |         bool was_multibuffer = ISSET(MULTIBUFFER);[0m
      | [0;1;32m                               ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1197:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1197 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1199:7: [0m[0;1;36mnote: [0m'execute' is true[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mfiles.c:1199:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1201:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1201 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'execute' is true[0m
 1230 |                 response = do_prompt(execute ? MEXECUTE : MINSERTFILE, given,[0m
      | [0;1;32m                                     ^~~~~~~
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'execute' is true[0m
 1231 |                                                         execute ? &execute_history : NULL,[0m
      | [0;1;32m                                                        ^~~~~~~
[0m[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1234:8: [0m[0;1;36mnote: [0mAssuming 'operating_dir' is equal to NULL[0m
 1234 |                                                         operating_dir != NULL ? operating_dir :[0m
      | [0;1;32m                                                        ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1234:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mfiles.c:1240:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:41: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                                      ^
[0m[1mfiles.c:1251:8: [0m[0;1;36mnote: [0mAssuming 'ran_a_tool' is false[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                            ^~~~~~~~~~
[0m[1mfiles.c:1251:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1255:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_newbuffer[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1255:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1265:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_convert[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1265:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1269:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_execute[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1269:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1273:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_pipe[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1273:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1280:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to to_files[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1280:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1293:8: [0m[0;1;36mnote: [0mAssuming 'response' is equal to 0[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1mfiles.c:1293:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                                          ^
[0m[1mfiles.c:1297:8: [0m[0;1;36mnote: [0m'execute' is true[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                            ^~~~~~~
[0m[1mfiles.c:1297:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1300:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1300 |                                 if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1300:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1300 |                                 if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1305:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1305 |                                 if (*answer != '\0') {[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~
[0m[1mfiles.c:1305:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1305 |                                 if (*answer != '\0') {[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1306:6: [0m[0;1;36mnote: [0mCalling 'execute_command'[0m
 1306 |                                         execute_command(answer);[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1020:24: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
 1020 |         ssize_t was_lineno = (openfile->mark ? 0 : openfile->current->lineno);[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1mfiles.c:1020:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mfiles.c:1024:17: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1024 |         should_pipe = (command[0] == '|');[0m
      | [0;1;32m                       ^~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1028:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 1028 |         if (pipe(from_fd) == -1 || (should_pipe && pipe(to_fd) == -1)) {[0m
      | [0;1;32m            ^
[0m[1mfiles.c:1028:30: [0m[0;1;36mnote: [0m'should_pipe' is false[0m
 1028 |         if (pipe(from_fd) == -1 || (should_pipe && pipe(to_fd) == -1)) {[0m
      | [0;1;32m                                    ^~~~~~~~~~~
[0m[1mfiles.c:1028:42: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1028 |         if (pipe(from_fd) == -1 || (should_pipe && pipe(to_fd) == -1)) {[0m
      | [0;1;32m                                                ^
[0m[1mfiles.c:1034:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1034 |         if ((pid_of_command = fork()) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1034:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1034 |         if ((pid_of_command = fork()) == 0) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1068:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1068 |         if (pid_of_command == -1) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1068:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1068 |         if (pid_of_command == -1) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1077:6: [0m[0;1;36mnote: [0mAssuming 'should_pipe' is true[0m
 1077 |         if (should_pipe) {[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mfiles.c:1077:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1077 |         if (should_pipe) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1084:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1084 |                 if (ISSET(MULTIBUFFER)) {[0m
      | [0;1;32m                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1084:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1084 |                 if (ISSET(MULTIBUFFER)) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1086:8: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
 1086 |                         if (openfile->mark)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~
[0m[1mfiles.c:1086:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1086 |                         if (openfile->mark)[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1107:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1107 |                 if ((pid_of_sender = fork()) == 0) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1107:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1107 |                 if ((pid_of_sender = fork()) == 0) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1112:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1112 |                 if (pid_of_sender == -1)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1112:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1112 |                 if (pid_of_sender == -1)[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1115:3: [0m[0;1;36mnote: [0m1st function call argument is an uninitialized value[0m
 1115 |                 close(to_fd[0]);[0m
      | [0;1;32m                ^     ~~~~~~~~
[0m[1mfiles.c:1119:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1119 |                 if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1120 |                         openfile = openfile->next;[0m
      | [0;1;32m                                                  
[0m[1mfiles.c:1136:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1136 |         if (stream == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1137 |                 statusline(ALERT, _("Failed to open pipe: %s"), strerror(errno));[0m
 1138 |         else[0m
      | [0;32m        } 
[0m[1mfiles.c:1138:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1138 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1139 |                 read_file(stream, 0, "pipe", TRUE);[0m
      | [0;1;32m                                                   
[0m[1mfiles.c:1142:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1142 |                 if (was_lineno)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1143 |                         goto_line_posx(was_lineno, 0);[0m
      | [0;1;32m                                                      
[0m[1mfiles.c:1149:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1149 |         if (should_pipe && pid_of_sender > 0)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1150 |                 waitpid(pid_of_sender, &sender_status, 0);[0m
      | [0;1;32m                                                          
[0m[1mfiles.c:1153:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1153 |         if (WIFEXITED(command_status) == 0 || WEXITSTATUS(command_status))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1154 |                 statusline(ALERT, WIFSIGNALED(command_status) ? _("Cancelled") :[0m
 1155 |                                                         _("Error: %s"), openfile->current->prev &&[0m
 1156 |                                                         strstr(openfile->current->prev->data, ": ") ?[0m
 1157 |                                                         strstr(openfile->current->prev->data, ": ") + 2 : "---");[0m
 1158 |         else if (should_pipe && pid_of_sender > 0 &&[0m
      | [0;32m        } 
[0m[1mfiles.c:1159:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1159 |                                 (WIFEXITED(sender_status) == 0 || WEXITSTATUS(sender_status)))[0m
      | [0;1;32m                                                                                              ^
[0m      | [0;32m                                                                                               {
[0m 1160 |                 statusline(ALERT, _("Piping failed"));[0m
      | [0;1;32m                                                      
[0m[1mfiles.c:1201:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1201 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1202 |                                 /* TRANSLATORS: The next six messages are prompts. */[0m
 1203 |                                 msg = _("Command to execute in new buffer");[0m
 1204 |                         else[0m
      | [0;32m                        } 
[0m[1mfiles.c:1204:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1204 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1205 | #endif[0m
 1206 |                                 msg = _("Command to execute");[0m
      | [0;1;32m                                                              
[0m[1mfiles.c:1211:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1211 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1212 | #ifndef NANO_TINY[0m
 1213 |                                 if ISSET(NO_CONVERT)[0m
 1214 |                                         msg = _("File to read unconverted into new buffer [from %s]");[0m
 1215 |                                 else[0m
 1216 | #endif[0m
 1217 |                                         msg = _("File to read into new buffer [from %s]");[0m
 1218 |                         else[0m
      | [0;32m                        } 
[0m[1mfiles.c:1251:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1252 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mfiles.c:1257:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1257 |                                 if (!ISSET(VIEW_MODE))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1258 |                                         TOGGLE(MULTIBUFFER);[0m
 1259 |                                 else[0m
      | [0;32m                                } 
[0m[1mfiles.c:1259:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1259 |                                 else[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1260 |                                         beep();[0m
      | [0;1;32m                                               
[0m[1mfiles.c:1284:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1284 |                                 if (chosen == NULL)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1285 |                                         continue;[0m
      | [0;1;32m                                                 
[0m[1mfiles.c:1293:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m 1294 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mfiles.c:1300:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1300 |                                 if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 1301 |                                         open_buffer("", TRUE);[0m
      | [0;1;32m                                                              
[0m[1mfiles.c:1338:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1338 |                                         if (!execute)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1339 | #endif[0m
 1340 |                                         if (has_old_position(answer, &priorline, &priorcol))[0m
 1341 |                                                 goto_line_and_column(priorline, priorcol, FALSE, FALSE);[0m
      | [0;1;32m                                                                                                        
[0m[1mfiles.c:1340:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1340 |                                         if (has_old_position(answer, &priorline, &priorcol))[0m
      | [0;1;32m                                                                                            ^
[0m      | [0;32m                                                                                             {
[0m 1341 |                                                 goto_line_and_column(priorline, priorcol, FALSE, FALSE);[0m
      | [0;1;32m                                                                                                        
[0m[1mfiles.c:1350:9: [0m[0;1;35mwarning: [0m[1mAccess to field 'current' results in a dereference of a null pointer (loaded from variable 'openfile') [clang-analyzer-core.NullDereference][0m
 1350 |                                 if (openfile->current->lineno != was_current_lineno ||[0m
      | [0;1;32m                                    ^
[0m[1mfiles.c:1374:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1374 |         if (!in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1374:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1374 |         if (!in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1375:3: [0m[0;1;36mnote: [0mCalling 'insert_a_file_or'[0m
 1375 |                 insert_a_file_or(FALSE);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1188:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1188 |         bool was_multibuffer = ISSET(MULTIBUFFER);[0m
      | [0;1;32m                               ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1197:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1197 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1199:7: [0m[0;1;36mnote: [0m'execute' is false[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mfiles.c:1199:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1199 |                 if (execute) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1211:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1211 |                         if (ISSET(MULTIBUFFER))[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1221:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1221 |                                 if ISSET(NO_CONVERT)[0m
      | [0;1;32m                                   ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1221:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1221 |                                 if ISSET(NO_CONVERT)[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'execute' is false[0m
 1230 |                 response = do_prompt(execute ? MEXECUTE : MINSERTFILE, given,[0m
      | [0;1;32m                                     ^~~~~~~
[0m[1mfiles.c:1230:24: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'execute' is false[0m
 1231 |                                                         execute ? &execute_history : NULL,[0m
      | [0;1;32m                                                        ^~~~~~~
[0m[1mfiles.c:1231:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1234:8: [0m[0;1;36mnote: [0mAssuming 'operating_dir' is equal to NULL[0m
 1234 |                                                         operating_dir != NULL ? operating_dir :[0m
      | [0;1;32m                                                        ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1234:8: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mfiles.c:1240:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~
[0m[1mfiles.c:1240:41: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1240 |                 if (response == -1 || (response == -2 && !ISSET(MULTIBUFFER))) {[0m
      | [0;1;32m                                                      ^
[0m[1mfiles.c:1251:8: [0m[0;1;36mnote: [0mAssuming 'ran_a_tool' is false[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                            ^~~~~~~~~~
[0m[1mfiles.c:1251:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1251 |                         if (ran_a_tool)[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1255:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_newbuffer[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1255:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1255 |                         if (function == flip_newbuffer) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1265:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_convert[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1265:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1265 |                         if (function == flip_convert) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1269:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_execute[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1269:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1269 |                         if (function == flip_execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1273:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to flip_pipe[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1273:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1273 |                         if (function == flip_pipe) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1280:8: [0m[0;1;36mnote: [0mAssuming 'function' is not equal to to_files[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1280:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1280 |                         if (function == to_files) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1293:8: [0m[0;1;36mnote: [0mAssuming 'response' is equal to 0[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1mfiles.c:1293:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1293 |                         if (response != 0 && (!ISSET(MULTIBUFFER) || response != -2))[0m
      | [0;1;32m                                          ^
[0m[1mfiles.c:1297:8: [0m[0;1;36mnote: [0m'execute' is false[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                            ^~~~~~~
[0m[1mfiles.c:1297:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1297 |                         if (execute) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1329:25: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1329 |                                 open_buffer(answer, ISSET(MULTIBUFFER));[0m
      | [0;1;32m                                                    ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1329:5: [0m[0;1;36mnote: [0mCalling 'open_buffer'[0m
 1329 |                                 open_buffer(answer, ISSET(MULTIBUFFER));[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:402:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  402 |         if (outside_of_confinement(filename, FALSE)) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:411:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  411 |         if (*filename != '\0' && stat(realname, &fileinfo) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mfiles.c:411:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mfiles.c:411:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  411 |         if (*filename != '\0' && stat(realname, &fileinfo) == 0) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:437:6: [0m[0;1;36mnote: [0m'new_one' is true[0m
  437 |         if (new_one) {[0m
      | [0;1;32m            ^~~~~~~
[0m[1mfiles.c:437:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  437 |         if (new_one) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:440:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  440 |                 if (has_valid_path(realname)) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:440:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  440 |                 if (has_valid_path(realname)) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:442:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:442:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                     ^
[0m[1mfiles.c:442:27: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                                               ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:442:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                     ^
[0m[1mfiles.c:442:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  442 |                         if (ISSET(LOCKING) && !ISSET(VIEW_MODE) && filename[0] != '\0') {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:446:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  446 |                                 if (thelocksname == SKIPTHISFILE) {[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:446:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  446 |                                 if (thelocksname == SKIPTHISFILE) {[0m
      | [0;1;32m                                ^
[0m[1mfiles.c:448:6: [0m[0;1;36mnote: [0mCalling 'close_buffer'[0m
  448 |                                         close_buffer();[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~
[0m[1mfiles.c:606:6: [0m[0;1;36mnote: [0mAssuming 'orphan' is not equal to 'startfile'[0m
  606 |         if (orphan == startfile)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:606:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  606 |         if (orphan == startfile)[0m
      | [0;1;32m        ^
[0m[1mfiles.c:623:6: [0m[0;1;36mnote: [0mAssuming 'openfile' is equal to 'orphan'[0m
  623 |         if (openfile == orphan)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:623:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  623 |         if (openfile == orphan)[0m
      | [0;1;32m        ^
[0m[1mfiles.c:624:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'openfile'[0m
  624 |                 openfile = NULL;[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~
[0m[1mfiles.c:629:6: [0m[0;1;36mnote: [0m'openfile' is null[0m
  629 |         if (openfile && openfile == openfile->next)[0m
      | [0;1;32m            ^~~~~~~~
[0m[1mfiles.c:629:15: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  629 |         if (openfile && openfile == openfile->next)[0m
      | [0;1;32m                     ^
[0m[1mfiles.c:448:6: [0m[0;1;36mnote: [0mReturning from 'close_buffer'[0m
  448 |                                         close_buffer();[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~
[0m[1mfiles.c:1329:5: [0m[0;1;36mnote: [0mReturning from 'open_buffer'[0m
 1329 |                                 open_buffer(answer, ISSET(MULTIBUFFER));[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1333:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1333 |                         if (ISSET(MULTIBUFFER)) {[0m
      | [0;1;32m                            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1333:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1333 |                         if (ISSET(MULTIBUFFER)) {[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1350:9: [0m[0;1;36mnote: [0mAccess to field 'current' results in a dereference of a null pointer (loaded from variable 'openfile')[0m
 1350 |                                 if (openfile->current->lineno != was_current_lineno ||[0m
      | [0;1;32m                                    ^~~~~~~~
[0m[1mfiles.c:1351:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1351 |                                                                         openfile->current_x != was_current_x)[0m
      | [0;1;32m                                                                                                             ^
[0m      | [0;32m                                                                                                              {
[0m 1352 |                                         set_modified();[0m
      | [0;1;32m                                                       
[0m[1mfiles.c:1364:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1364 |         if (was_multibuffer)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1365 |                 SET(MULTIBUFFER);[0m
 1366 |         else[0m
      | [0;32m        } 
[0m[1mfiles.c:1366:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1366 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1367 |                 UNSET(MULTIBUFFER);[0m
      | [0;1;32m                                   
[0m[1mfiles.c:1374:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1374 |         if (!in_restricted_mode())[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1375 |                 insert_a_file_or(FALSE);[0m
      | [0;1;32m                                        
[0m[1mfiles.c:1382:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1382 |         if (!in_restricted_mode())[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1383 |                 insert_a_file_or(TRUE);[0m
      | [0;1;32m                                       
[0m[1mfiles.c:1394:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1394 |         if (origpath == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1395 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mfiles.c:1410:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1410 |                         strcat(target, slash + 1);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mfiles.c:1410:4: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
 1410 |                         strcat(target, slash + 1);[0m
      | [0;1;32m                        ^~~~~~
[0m[1mfiles.c:1418:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1418 |                 strcat(target, "/");[0m
      | [0;1;32m                ^~~~~~
[0m[1mfiles.c:1418:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
 1418 |                 strcat(target, "/");[0m
      | [0;1;32m                ^~~~~~
[0m[1mfiles.c:1432:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1432 |         if (full_path == NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1433 |                 return NULL;[0m
      | [0;1;32m                            
[0m[1mfiles.c:1455:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1455 |         if (env_dir != NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1456 |                 tempdir = check_writable_directory(env_dir);[0m
      | [0;1;32m                                                            
[0m[1mfiles.c:1458:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1458 |         if (tempdir == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1459 |                 tempdir = check_writable_directory(P_tmpdir);[0m
      | [0;1;32m                                                             
[0m[1mfiles.c:1461:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1461 |         if (tempdir == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1462 |                 tempdir = copy_of("/tmp/");[0m
      | [0;1;32m                                           
[0m[1mfiles.c:1466:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1466 |         if (!extension || strchr(extension, '/'))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1467 |                 extension = openfile->filename + strlen(openfile->filename);[0m
      | [0;1;32m                                                                            
[0m[1mfiles.c:1470:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1470 |         strcat(tempfile_name, "nano.XXXXXX");[0m
      | [0;1;32m        ^~~~~~
[0m[1mfiles.c:1470:2: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
 1470 |         strcat(tempfile_name, "nano.XXXXXX");[0m
      | [0;1;32m        ^~~~~~
[0m[1mfiles.c:1471:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1471 |         strcat(tempfile_name, extension);[0m
      | [0;1;32m        ^~~~~~
[0m[1mfiles.c:1471:2: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
 1471 |         strcat(tempfile_name, extension);[0m
      | [0;1;32m        ^~~~~~
[0m[1mfiles.c:1478:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1478 |                 if (descriptor > 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1479 |                         close(descriptor);[0m
      | [0;1;32m                                          
[0m[1mfiles.c:1494:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1494 |         if (target == NULL || chdir(target) == -1)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1495 |                 die(_("Invalid operating directory: %s\n"), operating_dir);[0m
      | [0;1;32m                                                                           
[0m[1mfiles.c:1498:35: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 1498 |         operating_dir = nrealloc(target, strlen(target) + 1);[0m
      | [0;1;32m                                         ^      ~~~~~~
[0m[1mfiles.c:1491:2: [0m[0;1;36mnote: [0m'target' initialized here[0m
 1491 |         char *target = get_full_path(operating_dir);[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mfiles.c:1494:6: [0m[0;1;36mnote: [0mAssuming 'target' is equal to NULL[0m
 1494 |         if (target == NULL || chdir(target) == -1)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mfiles.c:1494:21: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1494 |         if (target == NULL || chdir(target) == -1)[0m
      | [0;1;32m                           ^
[0m[1mfiles.c:1498:35: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 1498 |         operating_dir = nrealloc(target, strlen(target) + 1);[0m
      | [0;1;32m                                         ^      ~~~~~~
[0m[1mfiles.c:1511:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1511 |         if (operating_dir == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1512 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mfiles.c:1522:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1522 |         if (fullpath == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1523 |                 return tabbing;[0m
      | [0;1;32m                               
[0m[1mfiles.c:1543:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1543 |         if (target == NULL || target[strlen(target) - 1] != '/')[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1544 |                 die(_("Invalid backup directory: %s\n"), backup_dir);[0m
      | [0;1;32m                                                                     
[0m[1mfiles.c:1547:32: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 1547 |         backup_dir = nrealloc(target, strlen(target) + 1);[0m
      | [0;1;32m                                      ^      ~~~~~~
[0m[1mfiles.c:1539:2: [0m[0;1;36mnote: [0m'target' initialized here[0m
 1539 |         char *target = get_full_path(backup_dir);[0m
      | [0;1;32m        ^~~~~~~~~~~~
[0m[1mfiles.c:1543:6: [0m[0;1;36mnote: [0mAssuming 'target' is equal to NULL[0m
 1543 |         if (target == NULL || target[strlen(target) - 1] != '/')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mfiles.c:1543:21: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1543 |         if (target == NULL || target[strlen(target) - 1] != '/')[0m
      | [0;1;32m                           ^
[0m[1mfiles.c:1547:32: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 1547 |         backup_dir = nrealloc(target, strlen(target) + 1);[0m
      | [0;1;32m                                      ^      ~~~~~~
[0m[1mfiles.c:1563:15: [0m[0;1;35mwarning: [0m[1mFile position of the stream might be 'indeterminate' after a failed operation. Can cause undefined behavior [clang-analyzer-unix.Stream][0m
 1563 |                 charsread = fread(buf, 1, BUFSIZ, inn);[0m
      | [0;1;32m                            ^
[0m[1mfiles.c:1773:6: [0m[0;1;36mnote: [0mAssuming 'normal' is false[0m
 1773 |         if (normal && outside_of_confinement(realname, FALSE)) {[0m
      | [0;1;32m            ^~~~~~
[0m[1mfiles.c:1773:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1773 |         if (normal && outside_of_confinement(realname, FALSE)) {[0m
      | [0;1;32m                   ^
[0m[1mfiles.c:1780:21: [0m[0;1;36mnote: [0m'normal' is false[0m
 1780 |         is_existing_file = normal && (stat(realname, &fileinfo) != -1);[0m
      | [0;1;32m                           ^~~~~~
[0m[1mfiles.c:1780:28: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1780 |         is_existing_file = normal && (stat(realname, &fileinfo) != -1);[0m
      | [0;1;32m                                  ^
[0m[1mfiles.c:1785:6: [0m[0;1;36mnote: [0mAssuming field 'statinfo' is not equal to NULL[0m
 1785 |         if (openfile->statinfo == NULL && is_existing_file)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1785:33: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1785 |         if (openfile->statinfo == NULL && is_existing_file)[0m
      | [0;1;32m                                       ^
[0m[1mfiles.c:1791:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1791 |         if (ISSET(MAKE_BACKUP) && is_existing_file && !S_ISFIFO(fileinfo.st_mode) &&[0m
      | [0;1;32m            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1791:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1791 |         if (ISSET(MAKE_BACKUP) && is_existing_file && !S_ISFIFO(fileinfo.st_mode) &&[0m
      | [0;1;32m                               ^
[0m[1mfiles.c:1800:6: [0m[0;1;36mnote: [0mAssuming 'method' is equal to PREPEND[0m
 1800 |         if (method == PREPEND) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1800:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1800 |         if (method == PREPEND) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1805:7: [0m[0;1;36mnote: [0m'is_existing_file' is false[0m
 1805 |                 if (is_existing_file && S_ISFIFO(fileinfo.st_mode)) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~
[0m[1mfiles.c:1805:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1805 |                 if (is_existing_file && S_ISFIFO(fileinfo.st_mode)) {[0m
      | [0;1;32m                                     ^
[0m[1mfiles.c:1812:7: [0m[0;1;36mnote: [0m'source' is not equal to NULL[0m
 1812 |                 if (source == NULL) {[0m
      | [0;1;32m                    ^~~~~~
[0m[1mfiles.c:1812:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1812 |                 if (source == NULL) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1819:7: [0m[0;1;36mnote: [0m'tempname' is not equal to NULL[0m
 1819 |                 if (tempname == NULL) {[0m
      | [0;1;32m                    ^~~~~~~~
[0m[1mfiles.c:1819:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1819 |                 if (tempname == NULL) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1825:13: [0m[0;1;36mnote: [0mCalling 'copy_file'[0m
 1825 |                 verdict = copy_file(source, target, TRUE);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1560:34: [0m[0;1;36mnote: [0m'close_out' is true[0m
 1560 |         int (*flush_out_fnc)(FILE *) = (close_out) ? fclose : fflush;[0m
      | [0;1;32m                                        ^~~~~~~~~
[0m[1mfiles.c:1560:33: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1560 |         int (*flush_out_fnc)(FILE *) = (close_out) ? fclose : fflush;[0m
      | [0;1;32m                                       ^
[0m[1mfiles.c:1563:15: [0m[0;1;36mnote: [0mAssuming this stream operation fails[0m
 1563 |                 charsread = fread(buf, 1, BUFSIZ, inn);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1564:7: [0m[0;1;36mnote: [0mAssuming 'charsread' is not equal to 0[0m
 1564 |                 if (charsread == 0 && ferror(inn)) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1mfiles.c:1564:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1564 |                 if (charsread == 0 && ferror(inn)) {[0m
      | [0;1;32m                                   ^
[0m[1mfiles.c:1568:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1568 |                 if (fwrite(buf, 1, charsread, out) < charsread) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1572:11: [0m[0;1;36mnote: [0m'charsread' is > 0[0m
 1572 |         } while (charsread > 0);[0m
      | [0;1;32m                 ^~~~~~~~~
[0m[1mfiles.c:1562:2: [0m[0;1;36mnote: [0mLoop condition is true. Execution continues on line 1563[0m
 1562 |         do {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1563:15: [0m[0;1;36mnote: [0mFile position of the stream might be 'indeterminate' after a failed operation. Can cause undefined behavior[0m
 1563 |                 charsread = fread(buf, 1, BUFSIZ, inn);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1563:15: [0m[0;1;35mwarning: [0m[1mRead function called when stream is in EOF state. Function has no effect [clang-analyzer-unix.Stream][0m
 1563 |                 charsread = fread(buf, 1, BUFSIZ, inn);[0m
      | [0;1;32m                            ^
[0m[1mfiles.c:1773:6: [0m[0;1;36mnote: [0mAssuming 'normal' is false[0m
 1773 |         if (normal && outside_of_confinement(realname, FALSE)) {[0m
      | [0;1;32m            ^~~~~~
[0m[1mfiles.c:1773:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1773 |         if (normal && outside_of_confinement(realname, FALSE)) {[0m
      | [0;1;32m                   ^
[0m[1mfiles.c:1780:21: [0m[0;1;36mnote: [0m'normal' is false[0m
 1780 |         is_existing_file = normal && (stat(realname, &fileinfo) != -1);[0m
      | [0;1;32m                           ^~~~~~
[0m[1mfiles.c:1780:28: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1780 |         is_existing_file = normal && (stat(realname, &fileinfo) != -1);[0m
      | [0;1;32m                                  ^
[0m[1mfiles.c:1785:6: [0m[0;1;36mnote: [0mAssuming field 'statinfo' is not equal to NULL[0m
 1785 |         if (openfile->statinfo == NULL && is_existing_file)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1785:33: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1785 |         if (openfile->statinfo == NULL && is_existing_file)[0m
      | [0;1;32m                                       ^
[0m[1mfiles.c:1791:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1791 |         if (ISSET(MAKE_BACKUP) && is_existing_file && !S_ISFIFO(fileinfo.st_mode) &&[0m
      | [0;1;32m            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1791:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1791 |         if (ISSET(MAKE_BACKUP) && is_existing_file && !S_ISFIFO(fileinfo.st_mode) &&[0m
      | [0;1;32m                               ^
[0m[1mfiles.c:1800:6: [0m[0;1;36mnote: [0mAssuming 'method' is equal to PREPEND[0m
 1800 |         if (method == PREPEND) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1800:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1800 |         if (method == PREPEND) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1805:7: [0m[0;1;36mnote: [0m'is_existing_file' is false[0m
 1805 |                 if (is_existing_file && S_ISFIFO(fileinfo.st_mode)) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~
[0m[1mfiles.c:1805:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1805 |                 if (is_existing_file && S_ISFIFO(fileinfo.st_mode)) {[0m
      | [0;1;32m                                     ^
[0m[1mfiles.c:1812:7: [0m[0;1;36mnote: [0m'source' is not equal to NULL[0m
 1812 |                 if (source == NULL) {[0m
      | [0;1;32m                    ^~~~~~
[0m[1mfiles.c:1812:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1812 |                 if (source == NULL) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1819:7: [0m[0;1;36mnote: [0m'tempname' is not equal to NULL[0m
 1819 |                 if (tempname == NULL) {[0m
      | [0;1;32m                    ^~~~~~~~
[0m[1mfiles.c:1819:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1819 |                 if (tempname == NULL) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1825:13: [0m[0;1;36mnote: [0mCalling 'copy_file'[0m
 1825 |                 verdict = copy_file(source, target, TRUE);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1560:34: [0m[0;1;36mnote: [0m'close_out' is true[0m
 1560 |         int (*flush_out_fnc)(FILE *) = (close_out) ? fclose : fflush;[0m
      | [0;1;32m                                        ^~~~~~~~~
[0m[1mfiles.c:1560:33: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1560 |         int (*flush_out_fnc)(FILE *) = (close_out) ? fclose : fflush;[0m
      | [0;1;32m                                       ^
[0m[1mfiles.c:1563:15: [0m[0;1;36mnote: [0mAssuming stream reaches end-of-file here[0m
 1563 |                 charsread = fread(buf, 1, BUFSIZ, inn);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1564:7: [0m[0;1;36mnote: [0mAssuming 'charsread' is not equal to 0[0m
 1564 |                 if (charsread == 0 && ferror(inn)) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~
[0m[1mfiles.c:1564:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1564 |                 if (charsread == 0 && ferror(inn)) {[0m
      | [0;1;32m                                   ^
[0m[1mfiles.c:1568:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1568 |                 if (fwrite(buf, 1, charsread, out) < charsread) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1572:11: [0m[0;1;36mnote: [0m'charsread' is > 0[0m
 1572 |         } while (charsread > 0);[0m
      | [0;1;32m                 ^~~~~~~~~
[0m[1mfiles.c:1562:2: [0m[0;1;36mnote: [0mLoop condition is true. Execution continues on line 1563[0m
 1562 |         do {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1563:15: [0m[0;1;36mnote: [0mRead function called when stream is in EOF state. Function has no effect[0m
 1563 |                 charsread = fread(buf, 1, BUFSIZ, inn);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1574:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1574 |         if (fclose(inn) == EOF)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1575 |                 retval = -3;[0m
      | [0;1;32m                            
[0m[1mfiles.c:1576:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1576 |         if (flush_out_fnc(out) == EOF)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1577 |                 retval = 4;[0m
      | [0;1;32m                           
[0m[1mfiles.c:1606:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1606 |                 sprintf(backupname, "%s~", realname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:1606:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1606 |                 sprintf(backupname, "%s~", realname);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:1614:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1614 |                         for (int i = 0; thename[i] != '\0'; i++)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 1615 |                                 if (thename[i] == '/')[0m
 1616 |                                         thename[i] = '!';[0m
      | [0;1;32m                                                         
[0m[1mfiles.c:1615:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1615 |                                 if (thename[i] == '/')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1616 |                                         thename[i] = '!';[0m
      | [0;1;32m                                                         
[0m[1mfiles.c:1617:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1617 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1618 |                         thename = copy_of(tail(realname));[0m
      | [0;1;32m                                                          
[0m[1mfiles.c:1621:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1621 |                 sprintf(backupname, "%s%s", backup_dir, thename);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:1621:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1621 |                 sprintf(backupname, "%s%s", backup_dir, thename);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:1638:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1638 |         if (unlink(backupname) < 0 && errno != ENOENT && !ISSET(INSECURE_BACKUP))[0m
      | [0;1;32m                                                                                 ^
[0m      | [0;32m                                                                                  {
[0m 1639 |                 goto problem;[0m
      | [0;1;32m                             
[0m[1mfiles.c:1647:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1647 |         if (descriptor >= 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1648 |                 backup_file = fdopen(descriptor, "wb");[0m
      | [0;1;32m                                                       
[0m[1mfiles.c:1650:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1650 |         if (backup_file == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1651 |                 goto problem;[0m
      | [0;1;32m                             
[0m[1mfiles.c:1675:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1675 |         if (original != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1676 |                 verdict = copy_file(original, backup_file, FALSE);[0m
      | [0;1;32m                                                                  
[0m[1mfiles.c:1716:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1716 |                 sprintf(backupname, "%s/%s~XXXXXX", homedir, tail(realname));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:1716:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1716 |                 sprintf(backupname, "%s/%s~XXXXXX", homedir, tail(realname));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:1723:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1723 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1724 |                 warn_and_briefly_pause(_("Cannot make backup"));[0m
      | [0;1;32m                                                                
[0m[1mfiles.c:1736:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1736 |                                                         "continue and save actual file? ")) == YES)[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m 1737 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mfiles.c:1785:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1785 |         if (openfile->statinfo == NULL && is_existing_file)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1786 |                 stat_with_alloc(realname, &openfile->statinfo);[0m
      | [0;1;32m                                                               
[0m[1mfiles.c:1795:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1795 |                 if (!make_backup_of(realname))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1796 |                         goto cleanup_and_exit;[0m
      | [0;1;32m                                              
[0m[1mfiles.c:1838:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1838 |         if (is_existing_file && S_ISFIFO(fileinfo.st_mode))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 1839 |                 statusbar(_("Writing to FIFO..."));[0m
      | [0;1;32m                                                   
[0m[1mfiles.c:1850:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1850 |                 if (normal)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1851 |                         install_handler_for_Ctrl_C();[0m
      | [0;1;32m                                                     
[0m[1mfiles.c:1859:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1859 |                 if (normal)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1860 |                         restore_handler_for_Ctrl_C();[0m
      | [0;1;32m                                                     
[0m[1mfiles.c:1866:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1866 |                         if (errno == EINTR || errno == 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1867 |                                 statusline(ALERT, _("Interrupted"));[0m
 1868 |                         else[0m
      | [0;32m                        } 
[0m[1mfiles.c:1868:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1868 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1869 |                                 statusline(ALERT, _("Error writing %s: %s"), realname, strerror(errno));[0m
      | [0;1;32m                                                                                                        
[0m[1mfiles.c:1871:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1871 |                         if (tempname != NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1872 |                                 unlink(tempname);[0m
      | [0;1;32m                                                 
[0m[1mfiles.c:1886:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1886 |         if (normal)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1887 |                 statusbar(_("Writing..."));[0m
      | [0;1;32m                                           
[0m[1mfiles.c:1910:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1910 |                         if (line->data[0] != '\0')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1911 |                                 lineswritten++;[0m
      | [0;1;32m                                               
[0m[1mfiles.c:1924:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1924 |                 if (openfile->fmt != MAC_FILE)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1925 | #endif[0m
 1926 |                         if (putc('\n', thefile) == EOF) {[0m
 1927 |                                 statusline(ALERT, _("Error writing %s: %s"), realname, strerror(errno));[0m
 1928 |                                 fclose(thefile);[0m
 1929 |                                 goto cleanup_and_exit;[0m
 1930 |                         }[0m
      | [0;1;32m                         
[0m[1mfiles.c:1963:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1963 |         if (!is_existing_file || !S_ISFIFO(fileinfo.st_mode))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1964 |                 /* Ensure the data has reached the disk before reporting it as written. */[0m
 1965 |                 if (fflush(thefile) != 0 || fsync(fileno(thefile)) != 0) {[0m
 1966 |                         statusline(ALERT, _("Error writing %s: %s"), realname, strerror(errno));[0m
 1967 |                         fclose(thefile);[0m
 1968 |                         goto cleanup_and_exit;[0m
 1969 |                 }[0m
      | [0;1;32m                 
[0m[1mfiles.c:1977:7: [0m[0;1;35mwarning: [0m[1mAn undefined value may be read from 'errno' [clang-analyzer-unix.Errno][0m
 1977 |                 if (errno == ENOSPC && normal) {[0m
      | [0;1;32m                    ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1773:6: [0m[0;1;36mnote: [0mAssuming 'normal' is false[0m
 1773 |         if (normal && outside_of_confinement(realname, FALSE)) {[0m
      | [0;1;32m            ^~~~~~
[0m[1mfiles.c:1773:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1773 |         if (normal && outside_of_confinement(realname, FALSE)) {[0m
      | [0;1;32m                   ^
[0m[1mfiles.c:1780:21: [0m[0;1;36mnote: [0m'normal' is false[0m
 1780 |         is_existing_file = normal && (stat(realname, &fileinfo) != -1);[0m
      | [0;1;32m                           ^~~~~~
[0m[1mfiles.c:1780:28: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1780 |         is_existing_file = normal && (stat(realname, &fileinfo) != -1);[0m
      | [0;1;32m                                  ^
[0m[1mfiles.c:1785:6: [0m[0;1;36mnote: [0mAssuming field 'statinfo' is not equal to NULL[0m
 1785 |         if (openfile->statinfo == NULL && is_existing_file)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1785:33: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1785 |         if (openfile->statinfo == NULL && is_existing_file)[0m
      | [0;1;32m                                       ^
[0m[1mfiles.c:1791:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1791 |         if (ISSET(MAKE_BACKUP) && is_existing_file && !S_ISFIFO(fileinfo.st_mode) &&[0m
      | [0;1;32m            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1791:25: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1791 |         if (ISSET(MAKE_BACKUP) && is_existing_file && !S_ISFIFO(fileinfo.st_mode) &&[0m
      | [0;1;32m                               ^
[0m[1mfiles.c:1800:6: [0m[0;1;36mnote: [0mAssuming 'method' is not equal to PREPEND[0m
 1800 |         if (method == PREPEND) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mfiles.c:1800:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1800 |         if (method == PREPEND) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1838:6: [0m[0;1;36mnote: [0m'is_existing_file' is false[0m
 1838 |         if (is_existing_file && S_ISFIFO(fileinfo.st_mode))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~
[0m[1mfiles.c:1838:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1838 |         if (is_existing_file && S_ISFIFO(fileinfo.st_mode))[0m
      | [0;1;32m                             ^
[0m[1mfiles.c:1844:6: [0m[0;1;36mnote: [0mAssuming 'thefile' is not equal to NULL[0m
 1844 |         if (thefile == NULL) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~
[0m[1mfiles.c:1844:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1844 |         if (thefile == NULL) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1886:6: [0m[0;1;36mnote: [0m'normal' is false[0m
 1886 |         if (normal)[0m
      | [0;1;32m            ^~~~~~
[0m[1mfiles.c:1886:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1886 |         if (normal)[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1889:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1889 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1mfiles.c:1900:7: [0m[0;1;36mnote: [0m'wrote' is < 'data_len'[0m
 1900 |                 if (wrote < data_len) {[0m
      | [0;1;32m                    ^~~~~
[0m[1mfiles.c:1900:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1900 |                 if (wrote < data_len) {[0m
      | [0;1;32m                ^
[0m[1mfiles.c:1902:4: [0m[0;1;36mnote: [0mAssuming that 'fclose' is successful; 'errno' becomes undefined after the call[0m
 1902 |                         fclose(thefile);[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~
[0m[1mfiles.c:1903:4: [0m[0;1;36mnote: [0mControl jumps to line 1977[0m
 1903 |                         goto cleanup_and_exit;[0m
      | [0;1;32m                        ^
[0m[1mfiles.c:1977:7: [0m[0;1;36mnote: [0mAn undefined value may be read from 'errno'[0m
 1977 |                 if (errno == ENOSPC && normal) {[0m
      | [0;1;32m                    ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mfiles.c:2005:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2005 |                         if (ISSET(LOCKING))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2006 |                                 openfile->lock_filename = do_lockfile(realname, FALSE);[0m
      | [0;1;32m                                                                                       
[0m[1mfiles.c:2042:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2042 |         if (ISSET(MINIBAR) && !ISSET(ZERO) && LINES > 1 && annotate)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2043 |                 report_size = TRUE;[0m
 2044 |         else[0m
      | [0;32m        } 
[0m[1mfiles.c:2046:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2046 |         if (normal)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2047 |                 statusline(REMARK, P_("Wrote %zu line", "Wrote %zu lines",[0m
 2048 |                                                                 lineswritten), lineswritten);[0m
      | [0;1;32m                                                                                             
[0m[1mfiles.c:2073:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2073 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2074 |                 stopper = NULL;[0m
      | [0;1;32m                               
[0m[1mfiles.c:2094:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2094 |         if (stopper)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2095 |                 delete_node(stopper);[0m
      | [0;1;32m                                     
[0m[1mfiles.c:2139:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2139 |                 if (openfile->mark && !exiting && !ISSET(RESTRICTED))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 2140 |                         /* TRANSLATORS: The next six strings are prompts. */[0m
 2141 |                         msg = (method == PREPEND) ? _("Prepend Selection to File") :[0m
 2142 |                                                 (method == APPEND) ? _("Append Selection to File") :[0m
 2143 |                                                 _("Write Selection to File");[0m
 2144 |                 else if (method != OVERWRITE)[0m
      | [0;32m                } 
[0m[1mfiles.c:2144:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2144 |                 else if (method != OVERWRITE)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2145 |                         msg = (method == PREPEND) ? _("File Name to Prepend to") :[0m
 2146 |                                                                                 _("File Name to Append to");[0m
 2147 |                 else[0m
      | [0;32m                } 
[0m[1mfiles.c:2147:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2147 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2148 | #endif[0m
 2149 |                         msg = _("File Name to Write");[0m
      | [0;1;32m                                                      
[0m[1mfiles.c:2156:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2156 |                                                                 openfile->filename[0] != '\0')[0m
      | [0;1;32m                                                                                              ^
[0m      | [0;32m                                                                                               {
[0m 2157 |                         answer = mallocstrcpy(answer, openfile->filename);[0m
 2158 |                 else[0m
      | [0;32m                } 
[0m[1mfiles.c:2158:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2158 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2159 |                         response = do_prompt(MWRITEFILE, given, NULL,[0m
 2160 |                                                 edit_refresh, "%s%s%s", msg,[0m
 2161 | #ifndef NANO_TINY[0m
 2162 |                                                 formatstr, backupstr[0m
 2163 | #else[0m
 2164 |                                                 "", ""[0m
 2165 | #endif[0m
 2166 |                                                 );[0m
      | [0;1;32m                                                  
[0m[1mfiles.c:2188:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2188 |                         if (chosen == NULL)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2189 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mfiles.c:2206:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2206 |                         if (function == prepend_it)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2207 |                                 method = (method == PREPEND) ? OVERWRITE : PREPEND;[0m
 2208 |                         else[0m
      | [0;32m                        } 
[0m[1mfiles.c:2208:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2208 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2209 |                                 method = (method == APPEND) ? OVERWRITE : APPEND;[0m
      | [0;1;32m                                                                                 
[0m[1mfiles.c:2210:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2210 |                         if (strcmp(answer, openfile->filename) == 0)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2211 |                                 given[0] = '\0';[0m
      | [0;1;32m                                                
[0m[1mfiles.c:2215:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2215 |                 if (function == do_help)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2216 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mfiles.c:2227:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2227 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2228 |                                 /* TRANSLATORS: Concisely say the screen is too small. */[0m
 2229 |                                 statusline(AHEM, _("Too tiny"));[0m
      | [0;1;32m                                                                
[0m[1mfiles.c:2246:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2246 |                         if (openfile->filename[0] == '\0')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2247 |                                 do_warning = name_exists;[0m
 2248 |                         else[0m
      | [0;32m                        } 
[0m[1mfiles.c:2248:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2248 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2249 |                                 do_warning = (strcmp((full_answer == NULL) ?[0m
 2250 |                                                                 answer : full_answer, (full_filename == NULL) ?[0m
 2251 |                                                                 openfile->filename : full_filename) != 0);[0m
      | [0;1;32m                                                                                                          
[0m[1mfiles.c:2272:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2272 |                                                                                                 "DIFFERENT NAME? ")) != YES)[0m
      | [0;1;32m                                                                                                                            ^
[0m      | [0;32m                                                                                                                             {
[0m 2273 |                                                         continue;[0m
      | [0;1;32m                                                                 
[0m[1mfiles.c:2283:6: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2283 |                                         sprintf(message, question, name);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mfiles.c:2283:6: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2283 |                                         sprintf(message, question, name);[0m
      | [0;1;32m                                        ^~~~~~~
[0m[1mfiles.c:2290:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2290 |                                         if (choice != YES)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2291 |                                                 continue;[0m
      | [0;1;32m                                                         
[0m[1mfiles.c:2314:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2314 |                                         if (choice == YES)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 2315 |                                                 return write_file(openfile->filename, NULL,[0m
 2316 |                                                                                         NORMAL, OVERWRITE, NONOTES);[0m
 2317 |                                         else if (choice == NO)  /* Discard buffer */[0m
      | [0;32m                                        } 
[0m[1mfiles.c:2317:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2317 |                                         else if (choice == NO)  /* Discard buffer */[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2318 |                                                 return 2;[0m
 2319 |                                         else[0m
      | [0;32m                                        } 
[0m[1mfiles.c:2319:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2319 |                                         else[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2320 |                                                 return 0;[0m
      | [0;1;32m                                                         
[0m[1mfiles.c:2339:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2339 |         if (openfile->mark && withprompt && !exiting && !ISSET(RESTRICTED))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 2340 |                 return write_region_to_file(answer, NULL, NORMAL, method);[0m
 2341 |         else[0m
      | [0;32m        } 
[0m[1mfiles.c:2341:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2341 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2342 | #endif[0m
 2343 |                 return write_file(answer, NULL, NORMAL, method, ANNOTATE);[0m
      | [0;1;32m                                                                          
[0m[1mfiles.c:2350:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2350 |         if (write_it_out(FALSE, TRUE) == 2)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2351 |                 close_and_go();[0m
      | [0;1;32m                               
[0m[1mfiles.c:2357:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2357 |         if (write_it_out(FALSE, FALSE) == 2)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2358 |                 close_and_go();[0m
      | [0;1;32m                               
[0m[1mfiles.c:2368:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2368 |         if (*path != '~')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2369 |                 return copy_of(path);[0m
      | [0;1;32m                                     
[0m[1mfiles.c:2372:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2372 |         while (path[i] != '/' && path[i] != '\0')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 2373 |                 i++;[0m
      | [0;1;32m                    
[0m[1mfiles.c:2389:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2389 |                 if (userdata != NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2390 |                         tilded = mallocstrcpy(tilded, userdata->pw_dir);[0m
      | [0;1;32m                                                                        
[0m[1mfiles.c:2397:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2397 |         sprintf(retval, "%s%s", tilded, path + i);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:2397:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2397 |         sprintf(retval, "%s%s", tilded, path + i);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:2415:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2415 |         if (aisdir && !bisdir)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2416 |                 return -1;[0m
      | [0;1;32m                          
[0m[1mfiles.c:2417:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2417 |         if (!aisdir && bisdir)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2418 |                 return 1;[0m
      | [0;1;32m                         
[0m[1mfiles.c:2423:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2423 |         if (difference == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2424 |                 return strcmp(a, b);[0m
 2425 |         else[0m
      | [0;32m        } 
[0m[1mfiles.c:2425:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2425 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2426 |                 return difference;[0m
      | [0;1;32m                                  
[0m[1mfiles.c:2458:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2458 |                         if (outside_of_confinement(userdata->pw_dir, TRUE))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 2459 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mfiles.c:2463:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2463 |                         sprintf(matches[*num_matches], "~%s", userdata->pw_name);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfiles.c:2463:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2463 |                         sprintf(matches[*num_matches], "~%s", userdata->pw_name);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfiles.c:2511:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2511 |                         sprintf(dirname, "%s%s", present_path, wasdirname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfiles.c:2511:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2511 |                         sprintf(dirname, "%s%s", present_path, wasdirname);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfiles.c:2539:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2539 |                         sprintf(fullname, "%s%s", dirname, entry->d_name);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfiles.c:2539:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2539 |                         sprintf(fullname, "%s%s", dirname, entry->d_name);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mfiles.c:2542:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2542 |                         if (outside_of_confinement(fullname, TRUE))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 2543 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mfiles.c:2545:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2545 |                         if (currmenu == MGOTODIR && !is_dir(fullname))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 2546 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mfiles.c:2577:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2577 |         if (morsel[0] == '~' && strchr(morsel, '/') == NULL)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 2578 |                 matches = username_completion(morsel, *place, &num_matches);[0m
      | [0;1;32m                                                                            
[0m[1mfiles.c:2581:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2581 |         if (matches == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2582 |                 matches = filename_completion(morsel, &num_matches);[0m
      | [0;1;32m                                                                    
[0m[1mfiles.c:2609:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2609 |                         if (len1 != len2 || strncmp(char1, char2, len2) != 0)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 2610 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mfiles.c:2613:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2613 |                 if (match < num_matches || matches[0][common_len] == '\0')[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 2614 |                         break;[0m
      | [0;1;32m                              
[0m[1mfiles.c:2621:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2621 |         strncpy(shared, morsel, length_of_path);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:2621:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 2621 |         strncpy(shared, morsel, length_of_path);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:2622:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2622 |         strncpy(shared + length_of_path, matches[0], common_len);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:2622:2: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 2622 |         strncpy(shared + length_of_path, matches[0], common_len);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:2629:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2629 |         sprintf(glued, "%s%s", present_path, shared);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:2629:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2629 |         sprintf(glued, "%s%s", present_path, shared);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mfiles.c:2631:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2631 |         if (num_matches == 1 && (is_dir(shared) || is_dir(glued)))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 2632 |                 shared[common_len++] = '/';[0m
      | [0;1;32m                                           
[0m[1mfiles.c:2637:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2637 |                 strncpy(morsel, shared, common_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:2637:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 2637 |                 strncpy(morsel, shared, common_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mfiles.c:2640:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2640 |         } else if (num_matches == 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2641 |                 beep();[0m
      | [0;1;32m                       
[0m[1mfiles.c:2650:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2650 |                 if (!*listed)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2651 |                         beep();[0m
      | [0;1;32m                               
[0m[1mfiles.c:2659:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2659 |                         if (namelen > longest_name)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2660 |                                 longest_name = namelen;[0m
      | [0;1;32m                                                       
[0m[1mfiles.c:2663:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2663 |                 if (longest_name > COLS - 1)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2664 |                         longest_name = COLS - 1;[0m
      | [0;1;32m                                                
[0m[1mfiles.c:2693:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2693 |                         if ((match + 1) % ncols == 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2694 |                                 row++;[0m
      | [0;1;32m                                      
[0m216 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[69/70][243.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmpaxfk0mbb.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/winio.c
[1mwinio.c:95:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |         while (macro_length > 0 && macro_buffer[macro_length - 1] == '\x1b')[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m   96 |                 macro_length--;[0m
      | [0;1;32m                               
[0m[1mwinio.c:112:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |         if (ISSET(STATEFLAGS))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  113 |                 titlebar(NULL);[0m
      | [0;1;32m                               
[0m[1mwinio.c:131:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |         if (macro_length > capacity)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  132 |                 reserve_space_for(macro_length);[0m
      | [0;1;32m                                                
[0m[1mwinio.c:134:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |         for (size_t i = 0; i < macro_length; i++)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  135 |                 key_buffer[i] = macro_buffer[i];[0m
      | [0;1;32m                                                
[0m[1mwinio.c:146:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  146 |         if (newsize < capacity)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  147 |                 die(_("Too much input at once\n"));[0m
      | [0;1;32m                                                   
[0m[1mwinio.c:205:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |                                                 (LINES > 1 || lastmessage <= HUSH))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m  206 |                 curs_set(1);[0m
      | [0;1;32m                            
[0m[1mwinio.c:236:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |                                         if (ISSET(ZERO) && lastmessage > VACUUM)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m  237 |                                                 wredrawln(midwin, editwinrows - 1, 1);[0m
      | [0;1;32m                                                                                      
[0m[1mwinio.c:244:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |                                 if (ISSET(MINIBAR) && !ISSET(ZERO) && LINES > 1)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m  245 |                                         minibar();[0m
      | [0;1;32m                                                  
[0m[1mwinio.c:257:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |                 if (input == ERR && ++errcount == 12345678)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  258 |                         die(_("Too many errors from stdin\n"));[0m
      | [0;1;32m                                                               
[0m[1mwinio.c:264:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |         if (!key_buffer)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  265 |                 reserve_space_for(capacity);[0m
      | [0;1;32m                                            
[0m[1mwinio.c:280:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |         if (input == KEY_WINCH)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  281 |                 return;[0m
      | [0;1;32m                       
[0m[1mwinio.c:289:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |         if (input == ESC_CODE && (linger_after_escape || ISSET(RAW_SEQUENCES)))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  290 |                 napms(20);[0m
      | [0;1;32m                          
[0m[1mwinio.c:294:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                 if (recording)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  295 |                         add_to_macrobuffer(input);[0m
      | [0;1;32m                                                  
[0m[1mwinio.c:300:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |                 if (input == ERR)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  301 |                         break;[0m
      | [0;1;32m                              
[0m[1mwinio.c:304:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |                 if (waiting_codes == capacity)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  305 |                         reserve_space_for(2 * capacity);[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:332:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |                 if (waiting_codes == capacity)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  333 |                         reserve_space_for(2 * capacity);[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:334:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  334 |                 memmove(key_buffer + 1, key_buffer, waiting_codes * sizeof(int));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:334:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  334 |                 memmove(key_buffer + 1, key_buffer, waiting_codes * sizeof(int));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:335:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  336 |                 nextcodes--;[0m
      | [0;1;32m                            
[0m[1mwinio.c:359:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |                 if (!closing)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  360 |                         return MISSING_BRACE;[0m
      | [0;1;32m                                             
[0m[1mwinio.c:364:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  364 |                         if (*plants_pointer != '\0')[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  365 |                                 put_back(MORE_PLANTS);[0m
      | [0;1;32m                                                      
[0m[1mwinio.c:375:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |                 if (!planted_shortcut)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  376 |                         return NO_SUCH_FUNCTION;[0m
      | [0;1;32m                                                
[0m[1mwinio.c:380:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |                 if (*plants_pointer != '\0')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  381 |                         put_back(MORE_PLANTS);[0m
      | [0;1;32m                                              
[0m[1mwinio.c:391:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  391 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  392 |                         length = strlen(plants_pointer);[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:394:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |                 for (int index = length - 1; index >= 0; index--)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  395 |                         put_back((unsigned char)plants_pointer[index]);[0m
      | [0;1;32m                                                                       
[0m[1mwinio.c:408:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |         if (waiting_codes)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  409 |                 spotlighted = FALSE;[0m
  410 |         else if (frame)[0m
      | [0;32m        } 
[0m[1mwinio.c:410:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |         else if (frame)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  411 |                 read_keys_from(frame);[0m
      | [0;1;32m                                      
[0m[1mwinio.c:419:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  420 | #endif[0m
  421 |                         return *(nextcodes++);[0m
      | [0;1;32m                                              
[0m[1mwinio.c:422:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  423 |                 return ERR;[0m
      | [0;1;32m                           
[0m[1mwinio.c:430:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |         if (letter < 'C')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  431 |                 return (letter == 'A' ? KEY_UP : KEY_DOWN);[0m
  432 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:432:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  432 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  433 |                 return (letter == 'D' ? KEY_LEFT : KEY_RIGHT);[0m
      | [0;1;32m                                                              
[0m[1mwinio.c:441:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  441 |                         if (length > 3  && seq[1] == ';') {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1mwinio.c:446:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  446 |                                                 if ('A' <= seq[3] && seq[3] <= 'D') {[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                {
[0m  447 |                                                         /* Esc O 1 ; 2 A == Shift-Up on old Terminal. */[0m
  448 |                                                         /* Esc O 1 ; 2 B == Shift-Down on old Terminal. */[0m
  449 |                                                         /* Esc O 1 ; 2 C == Shift-Right on old Terminal. */[0m
  450 |                                                         /* Esc O 1 ; 2 D == Shift-Left on old Terminal. */[0m
  451 |                                                         shift_held = TRUE;[0m
  452 |                                                         return arrow_from_ABCD(seq[3]);[0m
  453 |                                                 }[0m
  454 |                                                 break;[0m
      | [0;1;32m                                                     
[0m      | [0;32m                                                     ;} 
[0m[1mwinio.c:456:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  456 |                                                 switch (seq[3]) {[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                {
[0m  457 |                                                         case 'A': /* Esc O 1 ; 5 A == Ctrl-Up on old Terminal. */[0m
  458 |                                                                 return CONTROL_UP;[0m
  459 |                                                         case 'B': /* Esc O 1 ; 5 B == Ctrl-Down on old Terminal. */[0m
  460 |                                                                 return CONTROL_DOWN;[0m
  461 |                                                         case 'C': /* Esc O 1 ; 5 C == Ctrl-Right on old Terminal. */[0m
  462 |                                                                 return CONTROL_RIGHT;[0m
  463 |                                                         case 'D': /* Esc O 1 ; 5 D == Ctrl-Left on old Terminal. */[0m
  464 |                                                                 return CONTROL_LEFT;[0m
  465 |                                                 }[0m
  466 |                                                 break;[0m
      | [0;1;32m                                                     
[0m      | [0;32m                                                     ;} 
[0m[1mwinio.c:458:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  458 |                                                                 return CONTROL_UP;[0m
      | [0;1;32m                                                                ^                
[0m      | [0;32m                                                                {                ;} 
[0m[1mwinio.c:460:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  460 |                                                                 return CONTROL_DOWN;[0m
      | [0;1;32m                                                                ^                  
[0m      | [0;32m                                                                {                  ;} 
[0m[1mwinio.c:462:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  462 |                                                                 return CONTROL_RIGHT;[0m
      | [0;1;32m                                                                ^                   
[0m      | [0;32m                                                                {                   ;} 
[0m[1mwinio.c:464:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  464 |                                                                 return CONTROL_LEFT;[0m
      | [0;1;32m                                                                ^                  
[0m      | [0;32m                                                                {                  ;} 
[0m[1mwinio.c:481:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  481 |                                 if (seq[0] == '4' || seq[0] > '5')[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  482 |                                         return FOREIGN_SEQUENCE;[0m
      | [0;1;32m                                                                
[0m[1mwinio.c:486:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  486 |                                                 return CONTROL_UP;[0m
      | [0;1;32m                                                ^                
[0m      | [0;32m                                                {                ;} 
[0m[1mwinio.c:488:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  488 |                                                 return CONTROL_DOWN;[0m
      | [0;1;32m                                                ^                  
[0m      | [0;32m                                                {                  ;} 
[0m[1mwinio.c:490:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  490 |                                                 return CONTROL_RIGHT;[0m
      | [0;1;32m                                                ^                   
[0m      | [0;32m                                                {                   ;} 
[0m[1mwinio.c:492:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  492 |                                                 return CONTROL_LEFT;[0m
      | [0;1;32m                                                ^                  
[0m      | [0;32m                                                {                  ;} 
[0m[1mwinio.c:500:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  500 |                         break;[0m
      | [0;1;32m                        ^    
[0m      | [0;32m                        {    ;} 
[0m[1mwinio.c:508:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  508 |                         return KEY_END;[0m
      | [0;1;32m                        ^             
[0m      | [0;32m                        {             ;} 
[0m[1mwinio.c:510:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  510 |                         return KEY_HOME;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                        {              ;} 
[0m[1mwinio.c:513:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  513 |                         return KEY_ENTER;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:529:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  529 |                         return CONTROL_UP;[0m
      | [0;1;32m                        ^                
[0m      | [0;32m                        {                ;} 
[0m[1mwinio.c:531:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  531 |                         return CONTROL_DOWN;[0m
      | [0;1;32m                        ^                  
[0m      | [0;32m                        {                  ;} 
[0m[1mwinio.c:533:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  533 |                         return CONTROL_RIGHT;[0m
      | [0;1;32m                        ^                   
[0m      | [0;32m                        {                   ;} 
[0m[1mwinio.c:535:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  535 |                         return CONTROL_LEFT;[0m
      | [0;1;32m                        ^                  
[0m      | [0;32m                        {                  ;} 
[0m[1mwinio.c:538:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  538 |                         return '*';[0m
      | [0;1;32m                        ^         
[0m      | [0;32m                        {         ;} 
[0m[1mwinio.c:540:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  540 |                         return '+';[0m
      | [0;1;32m                        ^         
[0m      | [0;32m                        {         ;} 
[0m[1mwinio.c:542:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  542 |                         return ',';[0m
      | [0;1;32m                        ^         
[0m      | [0;32m                        {         ;} 
[0m[1mwinio.c:545:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  545 |                         return '-';[0m
      | [0;1;32m                        ^         
[0m      | [0;32m                        {         ;} 
[0m[1mwinio.c:548:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  548 |                         return KEY_DC;[0m
      | [0;1;32m                        ^            
[0m      | [0;32m                        {            ;} 
[0m[1mwinio.c:551:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  551 |                         return '/';[0m
      | [0;1;32m                        ^         
[0m      | [0;32m                        {         ;} 
[0m[1mwinio.c:554:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  554 |                         return KEY_IC;[0m
      | [0;1;32m                        ^            
[0m      | [0;32m                        {            ;} 
[0m[1mwinio.c:556:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  556 |                         return KEY_END;[0m
      | [0;1;32m                        ^             
[0m      | [0;32m                        {             ;} 
[0m[1mwinio.c:558:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  558 |                         return KEY_DOWN;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                        {              ;} 
[0m[1mwinio.c:560:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  560 |                         return KEY_NPAGE;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:562:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  562 |                         return KEY_LEFT;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                        {              ;} 
[0m[1mwinio.c:564:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  564 |                         return KEY_RIGHT;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:566:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  566 |                         return KEY_HOME;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                        {              ;} 
[0m[1mwinio.c:568:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  568 |                         return KEY_UP;[0m
      | [0;1;32m                        ^            
[0m      | [0;32m                        {            ;} 
[0m[1mwinio.c:570:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  570 |                         return KEY_PPAGE;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:580:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  580 |         if (seq[0] < '9' && length > 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  581 |                 *consumed = 2;[0m
      | [0;1;32m                              
[0m[1mwinio.c:585:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  585 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1mwinio.c:585:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  586 |                                 /* Esc [ 1 ~ == Home on VT320/Linux console. */[0m
  587 |                                 return KEY_HOME;[0m
  588 |                         else if (length > 2 && seq[2] == '~') {[0m
      | [0;32m                        } 
[0m[1mwinio.c:610:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  610 |                                                 switch (seq[3]) {[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                {
[0m  611 |                                                         case 'A': /* Esc [ 1 ; 2 A == Shift-Up on xterm. */[0m
  612 |                                                         case 'B': /* Esc [ 1 ; 2 B == Shift-Down on xterm. */[0m
  613 |                                                         case 'C': /* Esc [ 1 ; 2 C == Shift-Right on xterm. */[0m
  614 |                                                         case 'D': /* Esc [ 1 ; 2 D == Shift-Left on xterm. */[0m
  615 |                                                                 shift_held = TRUE;[0m
  616 |                                                                 return arrow_from_ABCD(seq[3]);[0m
  617 |                                                         case 'F': /* Esc [ 1 ; 2 F == Shift-End on xterm. */[0m
  618 |                                                                 return SHIFT_END;[0m
  619 |                                                         case 'H': /* Esc [ 1 ; 2 H == Shift-Home on xterm. */[0m
  620 |                                                                 return SHIFT_HOME;[0m
  621 |                                                 }[0m
  622 |                                                 break;[0m
      | [0;1;32m                                                     
[0m      | [0;32m                                                     ;} 
[0m[1mwinio.c:616:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  616 |                                                                 return arrow_from_ABCD(seq[3]);[0m
      | [0;1;32m                                                                ^                             
[0m      | [0;32m                                                                {                             ;} 
[0m[1mwinio.c:618:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  618 |                                                                 return SHIFT_END;[0m
      | [0;1;32m                                                                ^               
[0m      | [0;32m                                                                {               ;} 
[0m[1mwinio.c:620:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  620 |                                                                 return SHIFT_HOME;[0m
      | [0;1;32m                                                                ^                
[0m      | [0;32m                                                                {                ;} 
[0m[1mwinio.c:627:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  627 |                                                                 return ALT_UP;[0m
      | [0;1;32m                                                                ^            
[0m      | [0;32m                                                                {            ;} 
[0m[1mwinio.c:629:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  629 |                                                                 return ALT_DOWN;[0m
      | [0;1;32m                                                                ^              
[0m      | [0;32m                                                                {              ;} 
[0m[1mwinio.c:631:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  631 |                                                                 return ALT_RIGHT;[0m
      | [0;1;32m                                                                ^               
[0m      | [0;32m                                                                {               ;} 
[0m[1mwinio.c:633:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  633 |                                                                 return ALT_LEFT;[0m
      | [0;1;32m                                                                ^              
[0m      | [0;32m                                                                {              ;} 
[0m[1mwinio.c:635:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  635 |                                                 break;[0m
      | [0;1;32m                                                ^    
[0m      | [0;32m                                                {    ;} 
[0m[1mwinio.c:639:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  639 |                                                 switch (seq[3]) {[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                {
[0m  640 |                                                         case 'A': /* Esc [ 1 ; 4 A == Shift-Alt-Up on xterm. */[0m
  641 |                                                                 return SHIFT_PAGEUP;[0m
  642 |                                                         case 'B': /* Esc [ 1 ; 4 B == Shift-Alt-Down on xterm. */[0m
  643 |                                                                 return SHIFT_PAGEDOWN;[0m
  644 |                                                         case 'C': /* Esc [ 1 ; 4 C == Shift-Alt-Right on xterm. */[0m
  645 |                                                                 return SHIFT_END;[0m
  646 |                                                         case 'D': /* Esc [ 1 ; 4 D == Shift-Alt-Left on xterm. */[0m
  647 |                                                                 return SHIFT_HOME;[0m
  648 |                                                 }[0m
  649 |                                                 break;[0m
      | [0;1;32m                                                     
[0m      | [0;32m                                                     ;} 
[0m[1mwinio.c:641:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  641 |                                                                 return SHIFT_PAGEUP;[0m
      | [0;1;32m                                                                ^                  
[0m      | [0;32m                                                                {                  ;} 
[0m[1mwinio.c:643:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  643 |                                                                 return SHIFT_PAGEDOWN;[0m
      | [0;1;32m                                                                ^                    
[0m      | [0;32m                                                                {                    ;} 
[0m[1mwinio.c:645:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  645 |                                                                 return SHIFT_END;[0m
      | [0;1;32m                                                                ^               
[0m      | [0;32m                                                                {               ;} 
[0m[1mwinio.c:647:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  647 |                                                                 return SHIFT_HOME;[0m
      | [0;1;32m                                                                ^                
[0m      | [0;32m                                                                {                ;} 
[0m[1mwinio.c:651:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  651 |                                                 switch (seq[3]) {[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                {
[0m  652 |                                                         case 'A': /* Esc [ 1 ; 5 A == Ctrl-Up on xterm. */[0m
  653 |                                                                 return CONTROL_UP;[0m
  654 |                                                         case 'B': /* Esc [ 1 ; 5 B == Ctrl-Down on xterm. */[0m
  655 |                                                                 return CONTROL_DOWN;[0m
  656 |                                                         case 'C': /* Esc [ 1 ; 5 C == Ctrl-Right on xterm. */[0m
  657 |                                                                 return CONTROL_RIGHT;[0m
  658 |                                                         case 'D': /* Esc [ 1 ; 5 D == Ctrl-Left on xterm. */[0m
  659 |                                                                 return CONTROL_LEFT;[0m
  660 |                                                         case 'F': /* Esc [ 1 ; 5 F == Ctrl-End on xterm. */[0m
  661 |                                                                 return CONTROL_END;[0m
  662 |                                                         case 'H': /* Esc [ 1 ; 5 H == Ctrl-Home on xterm. */[0m
  663 |                                                                 return CONTROL_HOME;[0m
  664 |                                                 }[0m
  665 |                                                 break;[0m
      | [0;1;32m                                                     
[0m      | [0;32m                                                     ;} 
[0m[1mwinio.c:653:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  653 |                                                                 return CONTROL_UP;[0m
      | [0;1;32m                                                                ^                
[0m      | [0;32m                                                                {                ;} 
[0m[1mwinio.c:655:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  655 |                                                                 return CONTROL_DOWN;[0m
      | [0;1;32m                                                                ^                  
[0m      | [0;32m                                                                {                  ;} 
[0m[1mwinio.c:657:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  657 |                                                                 return CONTROL_RIGHT;[0m
      | [0;1;32m                                                                ^                   
[0m      | [0;32m                                                                {                   ;} 
[0m[1mwinio.c:659:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  659 |                                                                 return CONTROL_LEFT;[0m
      | [0;1;32m                                                                ^                  
[0m      | [0;32m                                                                {                  ;} 
[0m[1mwinio.c:661:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  661 |                                                                 return CONTROL_END;[0m
      | [0;1;32m                                                                ^                 
[0m      | [0;32m                                                                {                 ;} 
[0m[1mwinio.c:663:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  663 |                                                                 return CONTROL_HOME;[0m
      | [0;1;32m                                                                ^                  
[0m      | [0;32m                                                                {                  ;} 
[0m[1mwinio.c:667:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  667 |                                                 switch (seq[3]) {[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                {
[0m  668 |                                                         case 'A': /* Esc [ 1 ; 6 A == Shift-Ctrl-Up on xterm. */[0m
  669 |                                                                 return shiftcontrolup;[0m
  670 |                                                         case 'B': /* Esc [ 1 ; 6 B == Shift-Ctrl-Down on xterm. */[0m
  671 |                                                                 return shiftcontroldown;[0m
  672 |                                                         case 'C': /* Esc [ 1 ; 6 C == Shift-Ctrl-Right on xterm. */[0m
  673 |                                                                 return shiftcontrolright;[0m
  674 |                                                         case 'D': /* Esc [ 1 ; 6 D == Shift-Ctrl-Left on xterm. */[0m
  675 |                                                                 return shiftcontrolleft;[0m
  676 |                                                         case 'F': /* Esc [ 1 ; 6 F == Shift-Ctrl-End on xterm. */[0m
  677 |                                                                 return shiftcontrolend;[0m
  678 |                                                         case 'H': /* Esc [ 1 ; 6 H == Shift-Ctrl-Home on xterm. */[0m
  679 |                                                                 return shiftcontrolhome;[0m
  680 |                                                 }[0m
  681 |                                                 break;[0m
      | [0;1;32m                                                     
[0m      | [0;32m                                                     ;} 
[0m[1mwinio.c:669:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  669 |                                                                 return shiftcontrolup;[0m
      | [0;1;32m                                                                ^                    
[0m      | [0;32m                                                                {                    ;} 
[0m[1mwinio.c:671:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  671 |                                                                 return shiftcontroldown;[0m
      | [0;1;32m                                                                ^                      
[0m      | [0;32m                                                                {                      ;} 
[0m[1mwinio.c:673:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  673 |                                                                 return shiftcontrolright;[0m
      | [0;1;32m                                                                ^                       
[0m      | [0;32m                                                                {                       ;} 
[0m[1mwinio.c:675:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  675 |                                                                 return shiftcontrolleft;[0m
      | [0;1;32m                                                                ^                      
[0m      | [0;32m                                                                {                      ;} 
[0m[1mwinio.c:677:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  677 |                                                                 return shiftcontrolend;[0m
      | [0;1;32m                                                                ^                     
[0m      | [0;32m                                                                {                     ;} 
[0m[1mwinio.c:679:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  679 |                                                                 return shiftcontrolhome;[0m
      | [0;1;32m                                                                ^                      
[0m      | [0;32m                                                                {                      ;} 
[0m[1mwinio.c:684:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |                         } else if (length > 4 && seq[2] == ';' && seq[4] == '~')[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m  685 |                                 /* Esc [ 1 n ; 2 ~ == F17...F20 on some terminals. */[0m
  686 |                                 *consumed = 5;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:689:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  689 |                         if (length > 2 && seq[2] == '~') {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1mwinio.c:694:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  694 |                                                 return KEY_F(9);[0m
      | [0;1;32m                                                ^              
[0m      | [0;32m                                                {              ;} 
[0m[1mwinio.c:696:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  696 |                                                 return KEY_F(10);[0m
      | [0;1;32m                                                ^               
[0m      | [0;32m                                                {               ;} 
[0m[1mwinio.c:698:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  698 |                                                 return KEY_F(11);[0m
      | [0;1;32m                                                ^               
[0m      | [0;32m                                                {               ;} 
[0m[1mwinio.c:700:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  700 |                                                 return KEY_F(12);[0m
      | [0;1;32m                                                ^               
[0m      | [0;32m                                                {               ;} 
[0m[1mwinio.c:702:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |                         } else if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  703 |                                 /* Esc [ 2 ~ == Insert on VT220/VT320/[0m
  704 |                                  * Linux console/xterm/Terminal. */[0m
  705 |                                 return KEY_IC;[0m
  706 |                         else if (length > 3 && seq[1] == ';' && seq[3] == '~') {[0m
      | [0;32m                        } 
[0m[1mwinio.c:710:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  710 |                                 if (seq[2] == '3')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  711 |                                         return ALT_INSERT;[0m
      | [0;1;32m                                                          
[0m[1mwinio.c:714:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  714 |                         else if (length > 4 && seq[2] == ';' && seq[4] == '~')[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  715 |                                 /* Esc [ 2 n ; 2 ~ == F21...F24 on some terminals. */[0m
  716 |                                 *consumed = 5;[0m
  717 | #ifndef NANO_TINY[0m
  718 |                         else if (length > 3 && seq[1] == '0' && seq[3] == '~') {[0m
      | [0;32m                        } 
[0m[1mwinio.c:734:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  734 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m[1mwinio.c:734:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  734 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  735 |                                 return KEY_DC;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:739:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  739 |                                 if (seq[2] == '2')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  740 |                                         /* Esc [ 3 ; 2 ~ == Shift-Delete on xterm/Terminal. */[0m
  741 |                                         return SHIFT_DELETE;[0m
      | [0;1;32m                                                            
[0m[1mwinio.c:742:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  742 |                                 if (seq[2] == '3')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  743 |                                         /* Esc [ 3 ; 3 ~ == Alt-Delete on xterm/rxvt/Eterm/Terminal. */[0m
  744 |                                         return ALT_DELETE;[0m
      | [0;1;32m                                                          
[0m[1mwinio.c:745:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  745 |                                 if (seq[2] == '5')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  746 |                                         /* Esc [ 3 ; 5 ~ == Ctrl-Delete on xterm. */[0m
  747 |                                         return CONTROL_DELETE;[0m
      | [0;1;32m                                                              
[0m[1mwinio.c:748:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |                                 if (seq[2] == '6')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  749 |                                         /* Esc [ 3 ; 6 ~ == Ctrl-Shift-Delete on xterm. */[0m
  750 |                                         return controlshiftdelete;[0m
      | [0;1;32m                                                                  
[0m[1mwinio.c:754:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  754 |                         if (length > 1 && seq[1] == '$')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  755 |                                 /* Esc [ 3 $ == Shift-Delete on urxvt. */[0m
  756 |                                 return SHIFT_DELETE;[0m
      | [0;1;32m                                                    
[0m[1mwinio.c:757:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  757 |                         if (length > 1 && seq[1] == '^')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  758 |                                 /* Esc [ 3 ^ == Ctrl-Delete on urxvt. */[0m
  759 |                                 return CONTROL_DELETE;[0m
      | [0;1;32m                                                      
[0m[1mwinio.c:760:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  760 |                         if (length > 1 && seq[1] == '@')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  761 |                                 /* Esc [ 3 @ == Ctrl-Shift-Delete on urxvt. */[0m
  762 |                                 return controlshiftdelete;[0m
      | [0;1;32m                                                          
[0m[1mwinio.c:763:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  763 |                         if (length > 2 && seq[2] == '~')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  764 |                                 /* Esc [ 3 n ~ == F17...F20 on some terminals. */[0m
  765 |                                 *consumed = 3;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:770:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  770 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  771 |                                 return KEY_END;[0m
  772 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mwinio.c:770:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  770 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  771 |                                 return KEY_END;[0m
      | [0;1;32m                                               
[0m[1mwinio.c:775:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  775 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  776 |                                 return KEY_PPAGE;[0m
  777 |                         else if (length > 3 && seq[1] == ';' && seq[3] == '~') {[0m
  778 |                                 *consumed = 4;[0m
  779 | #ifndef NANO_TINY[0m
  780 |                                 if (seq[2] == '2')[0m
  781 |                                         return shiftaltup;[0m
  782 |                                 if (seq[2] == '3')[0m
  783 |                                         return ALT_PAGEUP;[0m
  784 | #endif[0m
  785 |                         }[0m
  786 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mwinio.c:775:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  775 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  776 |                                 return KEY_PPAGE;[0m
  777 |                         else if (length > 3 && seq[1] == ';' && seq[3] == '~') {[0m
      | [0;32m                        } 
[0m[1mwinio.c:780:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |                                 if (seq[2] == '2')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  781 |                                         return shiftaltup;[0m
      | [0;1;32m                                                          
[0m[1mwinio.c:782:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  782 |                                 if (seq[2] == '3')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  783 |                                         return ALT_PAGEUP;[0m
      | [0;1;32m                                                          
[0m[1mwinio.c:789:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  789 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  790 |                                 return KEY_NPAGE;[0m
  791 |                         else if (length > 3 && seq[1] == ';' && seq[3] == '~') {[0m
  792 |                                 *consumed = 4;[0m
  793 | #ifndef NANO_TINY[0m
  794 |                                 if (seq[2] == '2')[0m
  795 |                                         return shiftaltdown;[0m
  796 |                                 if (seq[2] == '3')[0m
  797 |                                         return ALT_PAGEDOWN;[0m
  798 | #endif[0m
  799 |                         }[0m
  800 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mwinio.c:789:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  789 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  790 |                                 return KEY_NPAGE;[0m
  791 |                         else if (length > 3 && seq[1] == ';' && seq[3] == '~') {[0m
      | [0;32m                        } 
[0m[1mwinio.c:794:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  794 |                                 if (seq[2] == '2')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  795 |                                         return shiftaltdown;[0m
      | [0;1;32m                                                            
[0m[1mwinio.c:796:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  796 |                                 if (seq[2] == '3')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  797 |                                         return ALT_PAGEDOWN;[0m
      | [0;1;32m                                                            
[0m[1mwinio.c:805:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  805 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  806 |                                 return KEY_HOME;[0m
  807 |                         else if (length > 1 && seq[1] == '$')[0m
  808 |                                 return SHIFT_HOME;[0m
  809 |                         else if (length > 1 && seq[1] == '^')[0m
  810 |                                 return CONTROL_HOME;[0m
  811 | #ifndef NANO_TINY[0m
  812 |                         else if (length > 1 && seq[1] == '@')[0m
  813 |                                 return shiftcontrolhome;[0m
  814 | #endif[0m
  815 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mwinio.c:805:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  805 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  806 |                                 return KEY_HOME;[0m
  807 |                         else if (length > 1 && seq[1] == '$')[0m
      | [0;32m                        } 
[0m[1mwinio.c:807:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  807 |                         else if (length > 1 && seq[1] == '$')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  808 |                                 return SHIFT_HOME;[0m
  809 |                         else if (length > 1 && seq[1] == '^')[0m
      | [0;32m                        } 
[0m[1mwinio.c:809:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |                         else if (length > 1 && seq[1] == '^')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  810 |                                 return CONTROL_HOME;[0m
  811 | #ifndef NANO_TINY[0m
  812 |                         else if (length > 1 && seq[1] == '@')[0m
      | [0;32m                        } 
[0m[1mwinio.c:812:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  812 |                         else if (length > 1 && seq[1] == '@')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  813 |                                 return shiftcontrolhome;[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:820:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  820 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  821 |                                 return KEY_END;[0m
  822 |                         else if (length > 1 && seq[1] == '$')[0m
  823 |                                 return SHIFT_END;[0m
  824 |                         else if (length > 1 && seq[1] == '^')[0m
  825 |                                 return CONTROL_END;[0m
  826 | #ifndef NANO_TINY[0m
  827 |                         else if (length > 1 && seq[1] == '@')[0m
  828 |                                 return shiftcontrolend;[0m
  829 | #endif[0m
  830 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mwinio.c:820:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  820 |                         if (length > 1 && seq[1] == '~')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  821 |                                 return KEY_END;[0m
  822 |                         else if (length > 1 && seq[1] == '$')[0m
      | [0;32m                        } 
[0m[1mwinio.c:822:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  822 |                         else if (length > 1 && seq[1] == '$')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  823 |                                 return SHIFT_END;[0m
  824 |                         else if (length > 1 && seq[1] == '^')[0m
      | [0;32m                        } 
[0m[1mwinio.c:824:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |                         else if (length > 1 && seq[1] == '^')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  825 |                                 return CONTROL_END;[0m
  826 | #ifndef NANO_TINY[0m
  827 |                         else if (length > 1 && seq[1] == '@')[0m
      | [0;32m                        } 
[0m[1mwinio.c:827:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  827 |                         else if (length > 1 && seq[1] == '@')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  828 |                                 return shiftcontrolend;[0m
      | [0;1;32m                                                       
[0m[1mwinio.c:832:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  832 |                         return KEY_DC;[0m
      | [0;1;32m                        ^            
[0m      | [0;32m                        {            ;} 
[0m[1mwinio.c:834:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  834 |                         return KEY_IC;[0m
      | [0;1;32m                        ^            
[0m      | [0;32m                        {            ;} 
[0m[1mwinio.c:843:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  843 |                         return KEY_END;[0m
      | [0;1;32m                        ^             
[0m      | [0;32m                        {             ;} 
[0m[1mwinio.c:845:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  845 |                         return KEY_NPAGE;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:848:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  848 |                         return KEY_HOME;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                        {              ;} 
[0m[1mwinio.c:850:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  850 |                         return KEY_PPAGE;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:852:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  852 |                         return KEY_IC;[0m
      | [0;1;32m                        ^            
[0m      | [0;32m                        {            ;} 
[0m[1mwinio.c:865:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  865 |                         return KEY_NPAGE;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:867:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  867 |                         return KEY_PPAGE;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:870:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  870 |                         return KEY_F(11);[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:872:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  872 |                         return KEY_F(12);[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:875:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  875 |                         return KEY_END;[0m
      | [0;1;32m                        ^             
[0m      | [0;32m                        {             ;} 
[0m[1mwinio.c:878:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  878 |                         return SHIFT_TAB;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:885:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  885 |                         return arrow_from_ABCD(seq[0] - 0x20);[0m
      | [0;1;32m                        ^                                    
[0m      | [0;32m                        {                                    ;} 
[0m[1mwinio.c:888:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  888 |                         if (length > 1) {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m  889 |                                 *consumed = 2;[0m
  890 |                                 if ('@' < seq[1] && seq[1] < 'F')[0m
  891 |                                         /* Esc [ [ A == F1 on Linux console. */[0m
  892 |                                         /* Esc [ [ B == F2 on Linux console. */[0m
  893 |                                         /* Esc [ [ C == F3 on Linux console. */[0m
  894 |                                         /* Esc [ [ D == F4 on Linux console. */[0m
  895 |                                         /* Esc [ [ E == F5 on Linux console. */[0m
  896 |                                         return KEY_F(seq[1] - '@');[0m
  897 |                         }[0m
  898 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mwinio.c:890:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  890 |                                 if ('@' < seq[1] && seq[1] < 'F')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  891 |                                         /* Esc [ [ A == F1 on Linux console. */[0m
  892 |                                         /* Esc [ [ B == F2 on Linux console. */[0m
  893 |                                         /* Esc [ [ C == F3 on Linux console. */[0m
  894 |                                         /* Esc [ [ D == F4 on Linux console. */[0m
  895 |                                         /* Esc [ [ E == F5 on Linux console. */[0m
  896 |                                         return KEY_F(seq[1] - '@');[0m
      | [0;1;32m                                                                   
[0m[1mwinio.c:911:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |         if (starter == 'O')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  912 |                 keycode = convert_SS3_sequence(nextcodes, waiting_codes, &consumed);[0m
  913 |         else if (starter == '[')[0m
      | [0;32m        } 
[0m[1mwinio.c:913:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  913 |         else if (starter == '[')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  914 |                 keycode = convert_CSI_sequence(nextcodes, waiting_codes, &consumed);[0m
      | [0;1;32m                                                                                    
[0m[1mwinio.c:946:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  947 |                         return keycode;[0m
      | [0;1;32m                                       
[0m[1mwinio.c:951:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  951 |         if (byte < 250 || keycode <= '5')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  952 |                 return (byte + keycode - '0');[0m
  953 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:953:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  953 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  954 |                 return keycode;[0m
      | [0;1;32m                               
[0m[1mwinio.c:968:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  968 |         if ('@' <= kbinput && kbinput <= '_')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  969 |                 return kbinput - '@';[0m
      | [0;1;32m                                     
[0m[1mwinio.c:970:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  970 |         if ('`' <= kbinput && kbinput <= '~')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  971 |                 return kbinput - '`';[0m
      | [0;1;32m                                     
[0m[1mwinio.c:972:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |         if ('3' <= kbinput && kbinput <= '7')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  973 |                 return kbinput - 24;[0m
      | [0;1;32m                                    
[0m[1mwinio.c:974:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  974 |         if (kbinput == '?' || kbinput == '8')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  975 |                 return DEL_CODE;[0m
      | [0;1;32m                                
[0m[1mwinio.c:976:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  976 |         if (kbinput == ' ' || kbinput == '2')[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  977 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mwinio.c:978:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  978 |         if (kbinput == '/')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  979 |                 return 31;[0m
      | [0;1;32m                          
[0m[1mwinio.c:1011:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1011 |                 } else if (++escapes > 2)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1012 |                         escapes = (last_escape_was_alone ? 0 : 1);[0m
      | [0;1;32m                                                                  
[0m[1mwinio.c:1014:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1014 |         } else if (keycode == ERR)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1015 |                 return ERR;[0m
      | [0;1;32m                           
[0m[1mwinio.c:1019:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1019 |                 if (keycode < 0xFF && keycode != '\t' && keycode != DEL_CODE)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1020 |                         return keycode;[0m
      | [0;1;32m                                       
[0m[1mwinio.c:1025:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1025 |                         if (keycode == '\t')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1026 |                                 return SHIFT_TAB;[0m
 1027 | #ifndef NANO_TINY[0m
 1028 |                         else if (keycode == KEY_BACKSPACE || keycode == '\b' ||[0m
      | [0;32m                        } 
[0m[1mwinio.c:1029:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1029 |                                                                                                 keycode == DEL_CODE)[0m
      | [0;1;32m                                                                                                                    ^
[0m      | [0;32m                                                                                                                     {
[0m 1030 |                                 return CONTROL_SHIFT_DELETE;[0m
 1031 | #endif[0m
 1032 | #ifdef ENABLE_UTF8[0m
 1033 |                         else if (0xC0 <= keycode && keycode <= 0xFF && using_utf8()) {[0m
      | [0;32m                        } 
[0m[1mwinio.c:1034:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1034 |                                 while (waiting_codes && 0x80 <= nextcodes[0] && nextcodes[0] <= 0xBF)[0m
      | [0;1;32m                                                                                                     ^
[0m      | [0;32m                                                                                                      {
[0m 1035 |                                         get_input(NULL);[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:1039:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1039 |                         else if (keycode < 0x20 && !last_escape_was_alone)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1040 |                                 meta_key = TRUE;[0m
      | [0;1;32m                                                
[0m[1mwinio.c:1043:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1043 |                         if (!shifted_metas)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1044 |                                 keycode = tolower(keycode);[0m
      | [0;1;32m                                                           
[0m[1mwinio.c:1046:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1046 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1047 |                         keycode = parse_escape_sequence(keycode);[0m
      | [0;1;32m                                                                 
[0m[1mwinio.c:1056:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1056 |                                 case 'A': return KEY_HOME;[0m
      | [0;1;32m                                          ^              
[0m      | [0;32m                                          {              ;} 
[0m[1mwinio.c:1057:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1057 |                                 case 'B': return KEY_END;[0m
      | [0;1;32m                                          ^             
[0m      | [0;32m                                          {             ;} 
[0m[1mwinio.c:1058:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1058 |                                 case 'C': return CONTROL_RIGHT;[0m
      | [0;1;32m                                          ^                   
[0m      | [0;32m                                          {                   ;} 
[0m[1mwinio.c:1059:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1059 |                                 case 'D': return CONTROL_LEFT;[0m
      | [0;1;32m                                          ^                  
[0m      | [0;32m                                          {                  ;} 
[0m[1mwinio.c:1061:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1061 |                                 case 'a': shift_held = TRUE; return KEY_PPAGE;[0m
      | [0;1;32m                                          ^                                  
[0m      | [0;32m                                          {                                  ;} 
[0m[1mwinio.c:1062:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1062 |                                 case 'b': shift_held = TRUE; return KEY_NPAGE;[0m
      | [0;1;32m                                          ^                                  
[0m      | [0;32m                                          {                                  ;} 
[0m[1mwinio.c:1063:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1063 |                                 case 'c': shift_held = TRUE; return KEY_HOME;[0m
      | [0;1;32m                                          ^                                 
[0m      | [0;32m                                          {                                 ;} 
[0m[1mwinio.c:1064:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1064 |                                 case 'd': shift_held = TRUE; return KEY_END;[0m
      | [0;1;32m                                          ^                                
[0m      | [0;32m                                          {                                ;} 
[0m[1mwinio.c:1094:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1094 |                         else if (byte == '\t' || byte == DEL_CODE)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1095 |                                 keycode = byte;[0m
 1096 |                         else[0m
      | [0;32m                        } 
[0m[1mwinio.c:1096:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1096 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1097 |                                 return byte;[0m
      | [0;1;32m                                            
[0m[1mwinio.c:1102:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |                                 if (!shifted_metas)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1103 |                                         keycode = tolower(keycode);[0m
      | [0;1;32m                                                                   
[0m[1mwinio.c:1105:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1105 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1106 |                                 keycode = convert_to_control(keycode);[0m
      | [0;1;32m                                                                      
[0m[1mwinio.c:1110:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1110 |         if (keycode == controlleft)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1111 |                 return CONTROL_LEFT;[0m
 1112 |         else if (keycode == controlright)[0m
      | [0;32m        } 
[0m[1mwinio.c:1112:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1112 |         else if (keycode == controlright)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1113 |                 return CONTROL_RIGHT;[0m
 1114 |         else if (keycode == controlup)[0m
      | [0;32m        } 
[0m[1mwinio.c:1114:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1114 |         else if (keycode == controlup)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1115 |                 return CONTROL_UP;[0m
 1116 |         else if (keycode == controldown)[0m
      | [0;32m        } 
[0m[1mwinio.c:1116:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1116 |         else if (keycode == controldown)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1117 |                 return CONTROL_DOWN;[0m
 1118 |         else if (keycode == controlhome)[0m
      | [0;32m        } 
[0m[1mwinio.c:1118:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1118 |         else if (keycode == controlhome)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1119 |                 return CONTROL_HOME;[0m
 1120 |         else if (keycode == controlend)[0m
      | [0;32m        } 
[0m[1mwinio.c:1120:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1120 |         else if (keycode == controlend)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1121 |                 return CONTROL_END;[0m
 1122 | #ifndef NANO_TINY[0m
 1123 |         else if (keycode == controldelete)[0m
      | [0;32m        } 
[0m[1mwinio.c:1123:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1123 |         else if (keycode == controldelete)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1124 |                 return CONTROL_DELETE;[0m
 1125 |         else if (keycode == controlshiftdelete)[0m
      | [0;32m        } 
[0m[1mwinio.c:1125:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |         else if (keycode == controlshiftdelete)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1126 |                 return CONTROL_SHIFT_DELETE;[0m
 1127 |         else if (keycode == shiftup) {[0m
      | [0;32m        } 
[0m[1mwinio.c:1151:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1151 |         } else if (keycode == altleft)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1152 |                 return ALT_LEFT;[0m
 1153 |         else if (keycode == altright)[0m
      | [0;32m        } 
[0m[1mwinio.c:1153:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1153 |         else if (keycode == altright)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1154 |                 return ALT_RIGHT;[0m
 1155 |         else if (keycode == altup)[0m
      | [0;32m        } 
[0m[1mwinio.c:1155:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1155 |         else if (keycode == altup)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1156 |                 return ALT_UP;[0m
 1157 |         else if (keycode == altdown)[0m
      | [0;32m        } 
[0m[1mwinio.c:1157:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1157 |         else if (keycode == altdown)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1158 |                 return ALT_DOWN;[0m
 1159 |         else if (keycode == altpageup)[0m
      | [0;32m        } 
[0m[1mwinio.c:1159:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1159 |         else if (keycode == altpageup)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1160 |                 return ALT_PAGEUP;[0m
 1161 |         else if (keycode == altpagedown)[0m
      | [0;32m        } 
[0m[1mwinio.c:1161:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1161 |         else if (keycode == altpagedown)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1162 |                 return ALT_PAGEDOWN;[0m
 1163 |         else if (keycode == altinsert)[0m
      | [0;32m        } 
[0m[1mwinio.c:1163:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1163 |         else if (keycode == altinsert)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1164 |                 return ALT_INSERT;[0m
 1165 |         else if (keycode == altdelete)[0m
      | [0;32m        } 
[0m[1mwinio.c:1165:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1165 |         else if (keycode == altdelete)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1166 |                 return ALT_DELETE;[0m
 1167 |         else if (keycode == shiftaltleft) {[0m
      | [0;32m        } 
[0m[1mwinio.c:1179:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1179 |         } else if ((KEY_F0 + 24) < keycode && keycode < (KEY_F0 + 64))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1180 |                 return FOREIGN_SEQUENCE;[0m
      | [0;1;32m                                        
[0m[1mwinio.c:1193:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1193 |                         if (keycode == '\t')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1194 |                                 return SHIFT_TAB;[0m
      | [0;1;32m                                                 
[0m[1mwinio.c:1195:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1195 |                         if (keycode == KEY_DC && modifiers == 0x01)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1196 |                                 return SHIFT_DELETE;[0m
      | [0;1;32m                                                    
[0m[1mwinio.c:1197:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1197 |                         if (keycode == KEY_DC && modifiers == 0x05)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1198 |                                 return CONTROL_SHIFT_DELETE;[0m
      | [0;1;32m                                                            
[0m[1mwinio.c:1199:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1199 |                         if (!meta_key)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1200 |                                 shift_held = TRUE;[0m
      | [0;1;32m                                                  
[0m[1mwinio.c:1205:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1205 |                                 case KEY_UP:    return ALT_UP;[0m
      | [0;1;32m                                                ^            
[0m      | [0;32m                                                {            ;} 
[0m[1mwinio.c:1206:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1206 |                                 case KEY_DOWN:  return ALT_DOWN;[0m
      | [0;1;32m                                                ^              
[0m      | [0;32m                                                {              ;} 
[0m[1mwinio.c:1207:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1207 |                                 case KEY_PPAGE: return ALT_PAGEUP;[0m
      | [0;1;32m                                                ^                
[0m      | [0;32m                                                {                ;} 
[0m[1mwinio.c:1208:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1208 |                                 case KEY_NPAGE: return ALT_PAGEDOWN;[0m
      | [0;1;32m                                                ^                  
[0m      | [0;32m                                                {                  ;} 
[0m[1mwinio.c:1209:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1209 |                                 case KEY_DC:    return ALT_DELETE;[0m
      | [0;1;32m                                                ^                
[0m      | [0;32m                                                {                ;} 
[0m[1mwinio.c:1210:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1210 |                                 case KEY_IC:    return ALT_INSERT;[0m
      | [0;1;32m                                                ^                
[0m      | [0;32m                                                {                ;} 
[0m[1mwinio.c:1217:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1217 |                                 case KEY_UP:    return CONTROL_UP;[0m
      | [0;1;32m                                                ^                
[0m      | [0;32m                                                {                ;} 
[0m[1mwinio.c:1218:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1218 |                                 case KEY_DOWN:  return CONTROL_DOWN;[0m
      | [0;1;32m                                                ^                  
[0m      | [0;32m                                                {                  ;} 
[0m[1mwinio.c:1219:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1219 |                                 case KEY_LEFT:  return CONTROL_LEFT;[0m
      | [0;1;32m                                                ^                  
[0m      | [0;32m                                                {                  ;} 
[0m[1mwinio.c:1220:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1220 |                                 case KEY_RIGHT: return CONTROL_RIGHT;[0m
      | [0;1;32m                                                ^                   
[0m      | [0;32m                                                {                   ;} 
[0m[1mwinio.c:1221:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1221 |                                 case KEY_HOME:  return CONTROL_HOME;[0m
      | [0;1;32m                                                ^                  
[0m      | [0;32m                                                {                  ;} 
[0m[1mwinio.c:1222:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1222 |                                 case KEY_END:   return CONTROL_END;[0m
      | [0;1;32m                                                ^                 
[0m      | [0;32m                                                {                 ;} 
[0m[1mwinio.c:1223:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1223 |                                 case KEY_DC:    return CONTROL_DELETE;[0m
      | [0;1;32m                                                ^                    
[0m      | [0;32m                                                {                    ;} 
[0m[1mwinio.c:1230:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1230 |                                 case KEY_UP:    return KEY_PPAGE;[0m
      | [0;1;32m                                                ^               
[0m      | [0;32m                                                {               ;} 
[0m[1mwinio.c:1231:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1231 |                                 case KEY_DOWN:  return KEY_NPAGE;[0m
      | [0;1;32m                                                ^               
[0m      | [0;32m                                                {               ;} 
[0m[1mwinio.c:1232:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1232 |                                 case KEY_LEFT:  return KEY_HOME;[0m
      | [0;1;32m                                                ^              
[0m      | [0;32m                                                {              ;} 
[0m[1mwinio.c:1233:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1233 |                                 case KEY_RIGHT: return KEY_END;[0m
      | [0;1;32m                                                ^             
[0m      | [0;32m                                                {             ;} 
[0m[1mwinio.c:1243:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1243 |                                 !bracketed_paste && openfile->mark != openfile->current)[0m
      | [0;1;32m                                                                                        ^
[0m      | [0;32m                                                                                         {
[0m 1244 |                 return INDENT_KEY;[0m
      | [0;1;32m                                  
[0m[1mwinio.c:1249:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1249 |                         shift_held = TRUE;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1250 |                         return KEY_LEFT;[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mwinio.c:1252:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1252 |                         shift_held = TRUE;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1253 |                         return KEY_RIGHT;[0m
      | [0;1;32m                                        
[0m      | [0;32m                                        ;} 
[0m[1mwinio.c:1259:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1259 |                         shift_held = TRUE;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1260 |                         return KEY_UP;[0m
      | [0;1;32m                                     
[0m      | [0;32m                                     ;} 
[0m[1mwinio.c:1267:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1267 |                         shift_held = TRUE;[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 1268 |                         return KEY_DOWN;[0m
      | [0;1;32m                                       
[0m      | [0;32m                                       ;} 
[0m[1mwinio.c:1276:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1276 |                         return KEY_HOME;[0m
      | [0;1;32m                        ^              
[0m      | [0;32m                        {              ;} 
[0m[1mwinio.c:1283:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1283 |                         return KEY_END;[0m
      | [0;1;32m                        ^             
[0m      | [0;32m                        {             ;} 
[0m[1mwinio.c:1286:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1286 |                         return CONTROL_END;[0m
      | [0;1;32m                        ^                 
[0m      | [0;32m                        {                 ;} 
[0m[1mwinio.c:1296:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1296 |                         return KEY_PPAGE;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:1305:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1305 |                         return KEY_NPAGE;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:1311:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1311 |                         return (ISSET(REBIND_DELETE) ? KEY_BACKSPACE : KEY_DC);[0m
      | [0;1;32m                        ^                                                     
[0m      | [0;32m                        {                                                     ;} 
[0m[1mwinio.c:1313:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1313 |                         return SHIFT_DELETE;[0m
      | [0;1;32m                        ^                  
[0m      | [0;32m                        {                  ;} 
[0m[1mwinio.c:1315:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1315 |                         return KEY_CANCEL;[0m
      | [0;1;32m                        ^                
[0m      | [0;32m                        {                ;} 
[0m[1mwinio.c:1320:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1320 |                         return SHIFT_TAB;[0m
      | [0;1;32m                        ^               
[0m      | [0;32m                        {               ;} 
[0m[1mwinio.c:1353:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1353 |         while (kbinput == ERR)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1354 |                 kbinput = parse_kbinput(frame);[0m
      | [0;1;32m                                               
[0m[1mwinio.c:1357:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1357 |         if (frame == midwin)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1358 |                 check_statusblank();[0m
      | [0;1;32m                                    
[0m[1mwinio.c:1376:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1376 |         if ('0' <= symbol && symbol <= '9')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1377 |                 unicode = (unicode << 4) + symbol - '0';[0m
 1378 |         else if ('a' <= (symbol | 0x20) && (symbol | 0x20) <= 'f')[0m
      | [0;32m        } 
[0m[1mwinio.c:1378:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1378 |         else if ('a' <= (symbol | 0x20) && (symbol | 0x20) <= 'f')[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1379 |                 unicode = (unicode << 4) + (symbol | 0x20) - 'a' + 10;[0m
 1380 |         else if (symbol == '\r' || symbol == ' ')[0m
      | [0;32m        } 
[0m[1mwinio.c:1380:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1380 |         else if (symbol == '\r' || symbol == ' ')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1381 |                 outcome = unicode;[0m
 1382 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:1382:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1382 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1383 |                 outcome = INVALID_DIGIT;[0m
      | [0;1;32m                                        
[0m[1mwinio.c:1387:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1387 |         if (++digits == 6 && outcome == PROCEED)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1388 |                 outcome = (unicode < 0x110000) ? unicode : INVALID_DIGIT;[0m
      | [0;1;32m                                                                         
[0m[1mwinio.c:1394:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1394 |                 sprintf(partial + 6 - digits, "%0*lX", digits, unicode);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:1394:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1394 |                 sprintf(partial + 6 - digits, "%0*lX", digits, unicode);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:1436:22: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
 1436 |         if (using_utf8() && isxdigit(keycode)) {[0m
      | [0;1;32m                            ^
[0m[1m/usr/include/ctype.h:199:22: [0m[0;1;36mnote: [0mexpanded from macro 'isxdigit'[0m
  199 | # define isxdigit(c)    __isctype((c), _ISxdigit)[0m
      | [0;1;32m                        ^
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^
[0m[1mwinio.c:1504:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1504 |         if (ISSET(PRESERVE))[0m
      | [0;1;32m            ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:1504:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1504 |         if (ISSET(PRESERVE))[0m
      | [0;1;32m        ^
[0m[1mwinio.c:1506:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1506 |         if (!ISSET(RAW_SEQUENCES))[0m
      | [0;1;32m             ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:1506:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1506 |         if (!ISSET(RAW_SEQUENCES))[0m
      | [0;1;32m        ^
[0m[1mwinio.c:1518:10: [0m[0;1;36mnote: [0mCalling 'parse_verbatim_kbinput'[0m
 1518 |         input = parse_verbatim_kbinput(frame, count);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:1421:12: [0m[0;1;36mnote: [0mCalling 'get_input'[0m
 1421 |         keycode = get_input(frame);[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~
[0m[1mwinio.c:408:6: [0m[0;1;36mnote: [0mAssuming 'waiting_codes' is 0[0m
  408 |         if (waiting_codes)[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mwinio.c:408:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  408 |         if (waiting_codes)[0m
      | [0;1;32m        ^
[0m[1mwinio.c:410:11: [0m[0;1;36mnote: [0mAssuming 'frame' is non-null[0m
  410 |         else if (frame)[0m
      | [0;1;32m                 ^~~~~
[0m[1mwinio.c:410:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  410 |         else if (frame)[0m
      | [0;1;32m             ^
[0m[1mwinio.c:411:3: [0m[0;1;36mnote: [0mCalling 'read_keys_from'[0m
  411 |                 read_keys_from(frame);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:204:6: [0m[0;1;36mnote: [0m'reveal_cursor' is true[0m
  204 |         if (reveal_cursor && (!spotlighted || ISSET(SHOW_CURSOR) || currmenu == MSPELL) &&[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mwinio.c:204:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwinio.c:204:24: [0m[0;1;36mnote: [0mAssuming 'spotlighted' is true[0m
  204 |         if (reveal_cursor && (!spotlighted || ISSET(SHOW_CURSOR) || currmenu == MSPELL) &&[0m
      | [0;1;32m                              ^~~~~~~~~~~~
[0m[1mwinio.c:204:24: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mwinio.c:204:40: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  204 |         if (reveal_cursor && (!spotlighted || ISSET(SHOW_CURSOR) || currmenu == MSPELL) &&[0m
      | [0;1;32m                                              ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:204:24: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  204 |         if (reveal_cursor && (!spotlighted || ISSET(SHOW_CURSOR) || currmenu == MSPELL) &&[0m
      | [0;1;32m                              ^
[0m[1mwinio.c:204:62: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  204 |         if (reveal_cursor && (!spotlighted || ISSET(SHOW_CURSOR) || currmenu == MSPELL) &&[0m
      | [0;1;32m                                                                    ^~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:204:82: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  204 |         if (reveal_cursor && (!spotlighted || ISSET(SHOW_CURSOR) || currmenu == MSPELL) &&[0m
      | [0;1;32m                                                                                        ^
[0m[1mwinio.c:209:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  209 |         if (currmenu == MMAIN && (((ISSET(MINIBAR) || ISSET(ZERO) || LINES == 1) &&[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mwinio.c:209:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  209 |         if (currmenu == MMAIN && (((ISSET(MINIBAR) || ISSET(ZERO) || LINES == 1) &&[0m
      | [0;1;32m                              ^
[0m[1mwinio.c:220:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  220 |         while (input == ERR) {[0m
      | [0;1;32m        ^
[0m[1mwinio.c:221:11: [0m[0;1;36mnote: [0mTaint originated here[0m
  221 |                 input = wgetch(frame);[0m
      | [0;1;32m                        ^~~~~~~~~~~~~
[0m[1mwinio.c:221:11: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  221 |                 input = wgetch(frame);[0m
      | [0;1;32m                        ^~~~~~~~~~~~~
[0m[1mwinio.c:224:7: [0m[0;1;36mnote: [0mAssuming 'the_window_resized' is 0[0m
  224 |                 if (the_window_resized) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:224:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  224 |                 if (the_window_resized) {[0m
      | [0;1;32m                ^
[0m[1mwinio.c:229:7: [0m[0;1;36mnote: [0m'timed' is false[0m
  229 |                 if (timed) {[0m
      | [0;1;32m                    ^~~~~
[0m[1mwinio.c:229:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  229 |                 if (timed) {[0m
      | [0;1;32m                ^
[0m[1mwinio.c:257:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  257 |                 if (input == ERR && ++errcount == 12345678)[0m
      | [0;1;32m                    ^~~~~~~~~~~~
[0m[1mwinio.c:257:20: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  257 |                 if (input == ERR && ++errcount == 12345678)[0m
      | [0;1;32m                                 ^
[0m[1mwinio.c:220:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 261[0m
  220 |         while (input == ERR) {[0m
      | [0;1;32m        ^
[0m[1mwinio.c:264:6: [0m[0;1;36mnote: [0mAssuming 'key_buffer' is non-null[0m
  264 |         if (!key_buffer)[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mwinio.c:264:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  264 |         if (!key_buffer)[0m
      | [0;1;32m        ^
[0m[1mwinio.c:274:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  274 |         if (currmenu == MMAIN) {[0m
      | [0;1;32m        ^
[0m[1mwinio.c:280:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  280 |         if (input == KEY_WINCH)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:280:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  280 |         if (input == KEY_WINCH)[0m
      | [0;1;32m        ^
[0m[1mwinio.c:289:6: [0m[0;1;36mnote: [0mAssuming 'input' is not equal to ESC_CODE[0m
  289 |         if (input == ESC_CODE && (linger_after_escape || ISSET(RAW_SEQUENCES)))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mwinio.c:289:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  289 |         if (input == ESC_CODE && (linger_after_escape || ISSET(RAW_SEQUENCES)))[0m
      | [0;1;32m                              ^
[0m[1mwinio.c:292:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  292 |         while (TRUE) {[0m
      | [0;1;32m        ^
[0m[1mwinio.c:294:7: [0m[0;1;36mnote: [0mAssuming 'recording' is false[0m
  294 |                 if (recording)[0m
      | [0;1;32m                    ^~~~~~~~~
[0m[1mwinio.c:294:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |                 if (recording)[0m
      | [0;1;32m                ^
[0m[1mwinio.c:300:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  300 |                 if (input == ERR)[0m
      | [0;1;32m                    ^~~~~~~~~~~~
[0m[1mwinio.c:300:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  300 |                 if (input == ERR)[0m
      | [0;1;32m                ^
[0m[1mwinio.c:301:4: [0m[0;1;36mnote: [0m Execution continues on line 311[0m
  301 |                         break;[0m
      | [0;1;32m                        ^
[0m[1mwinio.c:411:3: [0m[0;1;36mnote: [0mReturning from 'read_keys_from'[0m
  411 |                 read_keys_from(frame);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:413:6: [0m[0;1;36mnote: [0m'waiting_codes' is > 0[0m
  413 |         if (waiting_codes > 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mwinio.c:413:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  413 |         if (waiting_codes > 0) {[0m
      | [0;1;32m        ^
[0m[1mwinio.c:416:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  416 |                 if (*nextcodes == MORE_PLANTS) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:416:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  416 |                 if (*nextcodes == MORE_PLANTS) {[0m
      | [0;1;32m                ^
[0m[1mwinio.c:1421:12: [0m[0;1;36mnote: [0mReturning from 'get_input'[0m
 1421 |         keycode = get_input(frame);[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~
[0m[1mwinio.c:1425:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1425 |         if (keycode == KEY_WINCH) {[0m
      | [0;1;32m        ^
[0m[1mwinio.c:1436:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1436 |         if (using_utf8() && isxdigit(keycode)) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mwinio.c:1436:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mwinio.c:1436:22: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
 1436 |         if (using_utf8() && isxdigit(keycode)) {[0m
      | [0;1;32m                            ^
[0m[1m/usr/include/ctype.h:199:22: [0m[0;1;36mnote: [0mexpanded from macro 'isxdigit'[0m
  199 | # define isxdigit(c)    __isctype((c), _ISxdigit)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mwinio.c:1459:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1459 |                                 while (waiting_codes && 0x1F < nextcodes[0] && nextcodes[0] < 0x40)[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m 1460 |                                         get_input(NULL);[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:1461:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1461 |                                 if (waiting_codes && 0x3F < nextcodes[0] && nextcodes[0] < 0x7F)[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m 1462 |                                         get_input(NULL);[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:1463:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1463 |                         } else if (0xC0 <= keycode && keycode <= 0xFF)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1464 |                                 while (waiting_codes && 0x7F < nextcodes[0] && nextcodes[0] < 0xC0)[0m
 1465 |                                         get_input(NULL);[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:1464:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1464 |                                 while (waiting_codes && 0x7F < nextcodes[0] && nextcodes[0] < 0xC0)[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m 1465 |                                         get_input(NULL);[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:1471:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1471 |                 if (*count > MAXCHARLEN)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1472 |                         *count = 0;[0m
      | [0;1;32m                                   
[0m[1mwinio.c:1475:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1475 |                 for (size_t i = 0; i < *count; i++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1476 |                         yield[i] = (int)multibyte[i];[0m
      | [0;1;32m                                                     
[0m[1mwinio.c:1504:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1504 |         if (ISSET(PRESERVE))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1505 |                 disable_flow_control();[0m
      | [0;1;32m                                       
[0m[1mwinio.c:1506:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1506 |         if (!ISSET(RAW_SEQUENCES))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1507 |                 keypad(frame, FALSE);[0m
      | [0;1;32m                                     
[0m[1mwinio.c:1526:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1526 |                 } else if ((*input == '\n' && as_an_at) || (*input == '\0' && !as_an_at))[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m 1527 |                         *count = 0;[0m
      | [0;1;32m                                   
[0m[1mwinio.c:1540:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1540 |         if (ISSET(PRESERVE))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1541 |                 enable_flow_control();[0m
      | [0;1;32m                                      
[0m[1mwinio.c:1551:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1551 |                 for (size_t i = 0; i < *count; i++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1552 |                         bytes[i] = (char)input[i];[0m
      | [0;1;32m                                                  
[0m[1mwinio.c:1579:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1579 |         if (getmouse(&event) == ERR)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1580 |                 return -1;[0m
      | [0;1;32m                          
[0m[1mwinio.c:1619:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1619 |                         if (number < 5)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1620 |                                 width = COLS / 2;[0m
 1621 |                         else[0m
      | [0;32m                        } 
[0m[1mwinio.c:1621:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1621 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1622 |                                 width = COLS / ((number + 1) / 2);[0m
      | [0;1;32m                                                                  
[0m[1mwinio.c:1628:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1628 |                         if ((index > number) && (*mouse_x % width < COLS % width))[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m 1629 |                                 index -= 2;[0m
      | [0;1;32m                                           
[0m[1mwinio.c:1632:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1632 |                         if (index > number)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1633 |                                 return 2;[0m
      | [0;1;32m                                         
[0m[1mwinio.c:1639:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1639 |                                 if ((f->menus & currmenu) == 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1640 |                                         continue;[0m
      | [0;1;32m                                                 
[0m[1mwinio.c:1641:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1641 |                                 if (first_sc_for(currmenu, f->func) == NULL)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1642 |                                         continue;[0m
      | [0;1;32m                                                 
[0m[1mwinio.c:1647:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1647 |                                         if (0x20 <= shortcut->keycode && shortcut->keycode <= 0x7E)[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m 1648 |                                                 put_back(ESC_CODE);[0m
      | [0;1;32m                                                                   
[0m[1mwinio.c:1654:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1654 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1655 |                         /* Clicks outside of the bottom window are handled elsewhere. */[0m
 1656 |                         return 0;[0m
      | [0;1;32m                                 
[0m[1mwinio.c:1662:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1662 |                 if (in_footer)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1663 |                         /* Shift the coordinates to be relative to the bottom window. */[0m
 1664 |                         wmouse_trafo(footwin, mouse_y, mouse_x, FALSE);[0m
      | [0;1;32m                                                                       
[0m[1mwinio.c:1670:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1670 |                         for (int count = 3; count > 0; count--)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1671 |                                 put_back(keycode);[0m
      | [0;1;32m                                                  
[0m[1mwinio.c:1674:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1674 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1675 |                         /* Ignore "presses" of the fourth and fifth mouse buttons[0m
 1676 |                          * that aren't on the edit window or the status bar. */[0m
 1677 |                         return 2;[0m
      | [0;1;32m                                 
[0m[1mwinio.c:1701:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1701 |         for (int row = 0; row < editwinrows; row++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1702 |                 blank_row(midwin, row);[0m
      | [0;1;32m                                       
[0m[1mwinio.c:1716:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1716 |         if ((ISSET(ZERO) || ISSET(MINIBAR) || LINES == 1) && currmenu == MMAIN)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 1717 |                 return;[0m
      | [0;1;32m                       
[0m[1mwinio.c:1735:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1735 |         if (statusblank == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1736 |                 return;[0m
      | [0;1;32m                       
[0m[1mwinio.c:1738:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1738 |         if (--statusblank == 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1739 |                 wipe_statusbar();[0m
      | [0;1;32m                                 
[0m[1mwinio.c:1837:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1837 |                                 for (int i = whitelen[0]; i < whitelen[0] + whitelen[1];)[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m 1838 |                                         converted[index++] = whitespace[i++];[0m
      | [0;1;32m                                                                             
[0m[1mwinio.c:1839:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1839 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1840 | #endif[0m
 1841 |                                 converted[index++] = ' ';[0m
      | [0;1;32m                                                         
[0m[1mwinio.c:1853:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1853 |                                 for (int i = 0; i < whitelen[0];)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1854 |                                         converted[index++] = whitespace[i++];[0m
      | [0;1;32m                                                                             
[0m[1mwinio.c:1855:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1855 |                         } else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1856 | #endif[0m
 1857 |                                 converted[index++] = ' ';[0m
      | [0;1;32m                                                         
[0m[1mwinio.c:1913:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1913 |                 for (; charlength > 0; charlength--)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1914 |                         converted[index++] = *(text++);[0m
      | [0;1;32m                                                       
[0m[1mwinio.c:1930:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1930 |                 if (is_doublewidth(converted + index))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1931 |                         converted[index++] = '[';[0m
      | [0;1;32m                                                 
[0m[1mwinio.c:1936:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1936 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1937 |                 has_more = FALSE;[0m
      | [0;1;32m                                 
[0m[1mwinio.c:2004:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2004 |         if (topwin == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2005 |                 return;[0m
      | [0;1;32m                       
[0m[1mwinio.c:2025:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2025 |         if (!inhelp && path != NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2026 |                 prefix = _("DIR:");[0m
 2027 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:2034:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2034 |                         sprintf(ranking, "[%i/%i]", buffer_number(openfile),[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2034:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2034 |                         sprintf(ranking, "[%i/%i]", buffer_number(openfile),[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2037:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2037 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2038 | #endif[0m
 2039 |                         upperleft = BRANDING;[0m
      | [0;1;32m                                             
[0m[1mwinio.c:2041:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2041 |                 if (openfile->filename[0] == '\0')[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2042 |                         path = _("New Buffer");[0m
 2043 |                 else[0m
      | [0;32m                } 
[0m[1mwinio.c:2043:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2043 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2044 |                         path = openfile->filename;[0m
      | [0;1;32m                                                  
[0m[1mwinio.c:2046:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2046 |                 if (ISSET(VIEW_MODE))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 2047 |                         state = _("View");[0m
 2048 | #ifndef NANO_TINY[0m
 2049 |                 else if (ISSET(STATEFLAGS))[0m
      | [0;32m                } 
[0m[1mwinio.c:2049:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2049 |                 else if (ISSET(STATEFLAGS))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2050 |                         state = "+.xxxxx";[0m
 2051 | #endif[0m
 2052 |                 else if (openfile->modified)[0m
      | [0;32m                } 
[0m[1mwinio.c:2052:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2052 |                 else if (openfile->modified)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2053 |                         state = _("Modified");[0m
 2054 |                 else if (ISSET(RESTRICTED))[0m
      | [0;32m                } 
[0m[1mwinio.c:2054:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2054 |                 else if (ISSET(RESTRICTED))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2055 |                         state = _("Restricted");[0m
 2056 |                 else[0m
      | [0;32m                } 
[0m[1mwinio.c:2056:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2056 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2057 |                         pluglen = breadth(_("Modified")) + 1;[0m
      | [0;1;32m                                                             
[0m[1mwinio.c:2063:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2063 |         if (prefixlen > 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2064 |                 prefixlen++;[0m
      | [0;1;32m                            
[0m[1mwinio.c:2067:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2067 |         if (statelen > 2)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2068 |                 pathlen++;[0m
      | [0;1;32m                          
[0m[1mwinio.c:2071:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2071 |         if (verlen + prefixlen + pathlen + pluglen + statelen <= COLS)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 2072 |                 mvwaddstr(topwin, 0, 2, upperleft);[0m
 2073 |         else {[0m
      | [0;32m        } 
[0m[1mwinio.c:2076:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2076 |                 if (verlen + prefixlen + pathlen + pluglen + statelen > COLS)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 2077 |                         pluglen = 0;[0m
      | [0;1;32m                                    
[0m[1mwinio.c:2088:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2088 |         if (verlen > 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2089 |                 offset = verlen + (COLS - (verlen + pluglen + statelen) -[0m
 2090 |                                                                                 (prefixlen + pathlen)) / 2;[0m
      | [0;1;32m                                                                                                           
[0m[1mwinio.c:2095:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2095 |                 if (prefixlen > 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2096 |                         waddstr(topwin, " ");[0m
      | [0;1;32m                                             
[0m[1mwinio.c:2097:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2097 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2098 |                 wmove(topwin, 0, offset);[0m
      | [0;1;32m                                         
[0m[1mwinio.c:2117:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2117 |                 if (openfile->modified && COLS > 1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2118 |                         waddstr(topwin, " *");[0m
      | [0;1;32m                                              
[0m[1mwinio.c:2127:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2127 |                 if (statelen > 0 && statelen <= COLS)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2128 |                         mvwaddstr(topwin, 0, COLS - statelen, state);[0m
 2129 |                 else if (statelen > 0)[0m
      | [0;32m                } 
[0m[1mwinio.c:2129:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2129 |                 else if (statelen > 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2130 |                         mvwaddnstr(topwin, 0, 0, state, actual_x(state, COLS));[0m
      | [0;1;32m                                                                               
[0m[1mwinio.c:2160:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2160 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2161 |                 thename = copy_of(_("(nameless)"));[0m
      | [0;1;32m                                                   
[0m[1mwinio.c:2163:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2163 |         sprintf(location, "%zi,%zi", openfile->current->lineno, xplustabs() + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mwinio.c:2163:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2163 |         sprintf(location, "%zi,%zi", openfile->current->lineno, xplustabs() + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mwinio.c:2168:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2168 |         if (namewidth + 19 > COLS)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 2169 |                 padding = 0;[0m
      | [0;1;32m                            
[0m[1mwinio.c:2180:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2180 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2181 |                         mvwaddstr(footwin, 0, padding, thename);[0m
      | [0;1;32m                                                                
[0m[1mwinio.c:2192:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2192 |                 sprintf(number_of_lines, P_(" (%zu line)", " (%zu lines)", count), count);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:2192:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2192 |                 sprintf(number_of_lines, P_(" (%zu line)", " (%zu lines)", count), count);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:2194:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2194 |                 if (namewidth + tallywidth + 11 < COLS)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2195 |                         waddstr(footwin, number_of_lines);[0m
 2196 |                 else[0m
      | [0;32m                } 
[0m[1mwinio.c:2196:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2196 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2197 |                         tallywidth = 0;[0m
      | [0;1;32m                                       
[0m[1mwinio.c:2203:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2203 |                 sprintf(ranking, " [%i/%i]", buffer_number(openfile), buffer_number(startfile->prev));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:2203:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2203 |                 sprintf(ranking, " [%i/%i]", buffer_number(openfile), buffer_number(startfile->prev));[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:2204:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2204 |                 if (namewidth + placewidth + breadth(ranking) + 32 < COLS)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 2205 |                         waddstr(footwin, ranking);[0m
      | [0;1;32m                                                  
[0m[1mwinio.c:2210:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2210 |         if (ISSET(CONSTANT_SHOW) && namewidth + tallywidth + placewidth + 32 < COLS)[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m 2211 |                 mvwaddstr(footwin, 0, COLS - 27 - placewidth, location);[0m
      | [0;1;32m                                                                        
[0m[1mwinio.c:2218:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2218 |                 if (*this_position == '\0')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2219 |                         sprintf(hexadecimal, openfile->current->next ?[0m
 2220 | #ifdef ENABLE_UTF8[0m
 2221 |                                                                                         using_utf8() ? "U+000A" :[0m
 2222 | #endif[0m
 2223 |                                                                                         "  0x0A" : "  ----");[0m
 2224 |                 else if (*this_position == '\n')[0m
      | [0;32m                } 
[0m[1mwinio.c:2219:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2219 |                         sprintf(hexadecimal, openfile->current->next ?[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2219:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2219 |                         sprintf(hexadecimal, openfile->current->next ?[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2224:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2224 |                 else if (*this_position == '\n')[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 2225 |                         sprintf(hexadecimal, "  0x00");[0m
 2226 | #ifdef ENABLE_UTF8[0m
 2227 |                 else if ((unsigned char)*this_position < 0x80 && using_utf8())[0m
      | [0;32m                } 
[0m[1mwinio.c:2225:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2225 |                         sprintf(hexadecimal, "  0x00");[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2225:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2225 |                         sprintf(hexadecimal, "  0x00");[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2227:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2227 |                 else if ((unsigned char)*this_position < 0x80 && using_utf8())[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2228 |                         sprintf(hexadecimal, "U+%04X", (unsigned char)*this_position);[0m
 2229 |                 else if (using_utf8() && mbtowide(&widecode, this_position) > 0)[0m
      | [0;32m                } 
[0m[1mwinio.c:2228:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2228 |                         sprintf(hexadecimal, "U+%04X", (unsigned char)*this_position);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2228:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2228 |                         sprintf(hexadecimal, "U+%04X", (unsigned char)*this_position);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2229:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2229 |                 else if (using_utf8() && mbtowide(&widecode, this_position) > 0)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 2230 |                         sprintf(hexadecimal, "U+%04X", (int)widecode);[0m
 2231 | #endif[0m
 2232 |                 else[0m
      | [0;32m                } 
[0m[1mwinio.c:2230:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2230 |                         sprintf(hexadecimal, "U+%04X", (int)widecode);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2230:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2230 |                         sprintf(hexadecimal, "U+%04X", (int)widecode);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2232:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2232 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2233 |                         sprintf(hexadecimal, "  0x%02X", (unsigned char)*this_position);[0m
      | [0;1;32m                                                                                        
[0m[1mwinio.c:2233:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2233 |                         sprintf(hexadecimal, "  0x%02X", (unsigned char)*this_position);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2233:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2233 |                         sprintf(hexadecimal, "  0x%02X", (unsigned char)*this_position);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2242:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2242 |                         sprintf(hexadecimal, "|%04X", (int)widecode);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2242:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2242 |                         sprintf(hexadecimal, "|%04X", (int)widecode);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mwinio.c:2248:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2248 |                                 sprintf(hexadecimal, "|%04X", (int)widecode);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mwinio.c:2248:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2248 |                                 sprintf(hexadecimal, "|%04X", (int)widecode);[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mwinio.c:2251:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2251 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2252 |                         successor = NULL;[0m
      | [0;1;32m                                         
[0m[1mwinio.c:2264:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2264 |                 sprintf(location, "%3zi%%", 100 * openfile->current->lineno / openfile->filebot->lineno);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:2264:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2264 |                 sprintf(location, "%3zi%%", 100 * openfile->current->lineno / openfile->filebot->lineno);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:2291:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2291 |         if (importance < lastmessage && lastmessage > NOTICE)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 2292 |                 return;[0m
      | [0;1;32m                       
[0m[1mwinio.c:2297:2: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2297 |         vsnprintf(compound, MAXCHARLEN * COLS + 1, msg, ap);[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mwinio.c:2297:2: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
 2297 |         vsnprintf(compound, MAXCHARLEN * COLS + 1, msg, ap);[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mwinio.c:2302:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2302 |                 fprintf(stderr, "\n%s\n", compound);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:2302:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 2302 |                 fprintf(stderr, "\n%s\n", compound);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mwinio.c:2309:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2309 |                                                 !openfile->errormessage && openfile->next != openfile)[0m
      | [0;1;32m                                                                                                      ^
[0m      | [0;32m                                                                                                       {
[0m 2310 |                 openfile->errormessage = copy_of(compound);[0m
      | [0;1;32m                                                           
[0m[1mwinio.c:2315:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2315 |         if (LINES == 1 && importance < INFO)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 2316 |                 wnoutrefresh(midwin);[0m
      | [0;1;32m                                     
[0m[1mwinio.c:2335:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2335 |                 if (importance == ALERT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2336 |                         beep();[0m
      | [0;1;32m                               
[0m[1mwinio.c:2338:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2338 |         } else if (importance == NOTICE)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2339 |                 colorpair = interface_color_pair[SELECTED_TEXT];[0m
 2340 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:2340:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2340 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2341 |                 colorpair = interface_color_pair[STATUS_BAR];[0m
      | [0;1;32m                                                             
[0m[1mwinio.c:2351:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2351 |         if (showed_whitespace)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2352 |                 SET(WHITESPACE_DISPLAY);[0m
      | [0;1;32m                                        
[0m[1mwinio.c:2359:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2359 |         if (bracketed)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2360 |                 waddstr(footwin, "[ ");[0m
      | [0;1;32m                                       
[0m[1mwinio.c:2362:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2362 |         if (bracketed)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2363 |                 waddstr(footwin, " ]");[0m
      | [0;1;32m                                       
[0m[1mwinio.c:2409:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2409 |         if (width < 2)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2410 |                 return;[0m
      | [0;1;32m                       
[0m[1mwinio.c:2429:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2429 |         if (ISSET(NO_HELP) || LINES < 6)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2430 |                 return;[0m
      | [0;1;32m                       
[0m[1mwinio.c:2439:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2439 |         if (itemwidth == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2440 |                 return;[0m
      | [0;1;32m                       
[0m[1mwinio.c:2449:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2449 |                 if ((f->menus & menu) == 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 2450 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mwinio.c:2454:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2454 |                 if (s == NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2455 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mwinio.c:2460:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2460 |                 if ((number % 2) == 1 && (index + 2 == number))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 2461 |                         thiswidth += itemwidth;[0m
      | [0;1;32m                                               
[0m[1mwinio.c:2464:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2464 |                 if (index + 2 >= number)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2465 |                         thiswidth += COLS % itemwidth;[0m
      | [0;1;32m                                                      
[0m[1mwinio.c:2505:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2505 |         if (row < editwinrows)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2506 |                 wmove(midwin, row, margin + column);[0m
 2507 | #ifndef NANO_TINY[0m
 2508 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:2508:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2508 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2509 |                 statusline(ALERT, "Misplaced cursor -- please report a bug");[0m
      | [0;1;32m                                                                             
[0m[1mwinio.c:2530:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2530 |                 if (ISSET(SOFTWRAP) && from_col != 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2531 |                         mvwprintw(midwin, row, 0, "%*s", margin - 1, " ");[0m
 2532 |                 else[0m
      | [0;32m                } 
[0m[1mwinio.c:2532:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2532 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2533 | #endif[0m
 2534 |                         mvwprintw(midwin, row, 0, "%*zd", margin - 1, line->lineno);[0m
      | [0;1;32m                                                                                    
[0m[1mwinio.c:2537:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2537 |                 if (line->has_anchor && (from_col == 0 || !ISSET(SOFTWRAP)))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 2538 | #ifdef ENABLE_UTF8[0m
 2539 |                         if (using_utf8())[0m
 2540 |                                 wprintw(midwin, "\xE2\xAC\xA5");  /* black medium diamond */[0m
 2541 |                         else[0m
 2542 | #endif[0m
 2543 |                                 wprintw(midwin, "+");[0m
 2544 |                 else[0m
      | [0;32m                } 
[0m[1mwinio.c:2539:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2539 |                         if (using_utf8())[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2540 |                                 wprintw(midwin, "\xE2\xAC\xA5");  /* black medium diamond */[0m
 2541 |                         else[0m
      | [0;32m                        } 
[0m[1mwinio.c:2541:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2541 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2542 | #endif[0m
 2543 |                                 wprintw(midwin, "+");[0m
      | [0;1;32m                                                     
[0m[1mwinio.c:2544:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2544 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2545 | #endif[0m
 2546 |                         wprintw(midwin, " ");[0m
      | [0;1;32m                                             
[0m[1mwinio.c:2555:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2555 |         if (is_shorter || ISSET(SOFTWRAP))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2556 |                 wclrtoeol(midwin);[0m
      | [0;1;32m                                  
[0m[1mwinio.c:2559:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2559 |         if (thebar)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 2560 |                 mvwaddch(midwin, row, COLS - 1, bardata[row]);[0m
      | [0;1;32m                                                              
[0m[1mwinio.c:2569:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2569 |                 if (openfile->syntax->nmultis > 0 && line->multidata == NULL)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 2570 |                         line->multidata = nmalloc(openfile->syntax->nmultis * sizeof(short));[0m
      | [0;1;32m                                                                                             
[0m[1mwinio.c:2594:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2594 |                                                                 &match, (index == 0) ? 0 : REG_NOTBOL) != 0)[0m
      | [0;1;32m                                                                                                            ^
[0m      | [0;32m                                                                                                             {
[0m 2595 |                                                 break;[0m
      | [0;1;32m                                                      
[0m[1mwinio.c:2603:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2603 |                                         if (match.rm_so >= till_x)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 2604 |                                                 break;[0m
      | [0;1;32m                                                      
[0m[1mwinio.c:2608:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2608 |                                                 if (line->data[index] == '\0')[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2609 |                                                         break;[0m
      | [0;1;32m                                                              
[0m[1mwinio.c:2615:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2615 |                                         if (match.rm_eo <= from_x)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 2616 |                                                 continue;[0m
      | [0;1;32m                                                         
[0m[1mwinio.c:2618:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2618 |                                         if (match.rm_so > from_x)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2619 |                                                 start_col = wideness(line->data, match.rm_so) - from_col;[0m
      | [0;1;32m                                                                                                         
[0m[1mwinio.c:2639:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2639 |                         if (start_line && !start_line->multidata)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2640 |                                 statusline(ALERT, "Missing multidata -- please report a bug");[0m
 2641 |                         else[0m
      | [0;32m                        } 
[0m[1mwinio.c:2678:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2678 |                                 if (startmatch.rm_so > from_x)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 2679 |                                         start_col = wideness(line->data, startmatch.rm_so) - from_col;[0m
      | [0;1;32m                                                                                                      
[0m[1mwinio.c:2704:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2704 |                                                 if (line->data[index] == '\0')[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2705 |                                                         break;[0m
      | [0;1;32m                                                              
[0m[1mwinio.c:2747:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2747 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2748 |                         striped_char[0] = ' ';[0m
      | [0;1;32m                                              
[0m[1mwinio.c:2773:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2773 |                 if (top->lineno < line->lineno || top_x < from_x)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2774 |                         top_x = from_x;[0m
      | [0;1;32m                                       
[0m[1mwinio.c:2775:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2775 |                 if (bot->lineno > line->lineno || bot_x > till_x)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 2776 |                         bot_x = till_x;[0m
      | [0;1;32m                                       
[0m[1mwinio.c:2783:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2783 |                         if (start_col < 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2784 |                                 start_col = 0;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:2816:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2816 |         if (ISSET(SOFTWRAP))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2817 |                 return update_softwrapped_line(line);[0m
      | [0;1;32m                                                     
[0m[1mwinio.c:2841:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2841 |         if (spotlighted && line == openfile->current)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2842 |                 spotlight(light_from_col, light_to_col);[0m
      | [0;1;32m                                                        
[0m[1mwinio.c:2870:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2870 |         if (line == openfile->edittop)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2871 |                 from_col = openfile->firstcolumn;[0m
 2872 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:2872:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2872 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2873 |                 row -= chunk_for(openfile->firstcolumn, openfile->edittop);[0m
      | [0;1;32m                                                                           
[0m[1mwinio.c:2904:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2904 |         if (spotlighted && line == openfile->current)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 2905 |                 spotlight_softwrapped(light_from_col, light_to_col);[0m
      | [0;1;32m                                                                    
[0m[1mwinio.c:2917:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2917 |         if (openfile->mark)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2918 |                 return TRUE;[0m
 2919 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:2919:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2919 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2920 | #endif[0m
 2921 |                 return (get_page_start(old_column) != get_page_start(new_column));[0m
      | [0;1;32m                                                                                  
[0m[1mwinio.c:2940:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2940 |                         if (chunk >= i)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2941 |                                 return go_forward_chunks(chunk - i, line, leftedge);[0m
      | [0;1;32m                                                                                    
[0m[1mwinio.c:2943:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2943 |                         if (*line == openfile->filetop)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2944 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mwinio.c:2951:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2951 |                 if (*leftedge == HIGHEST_POSITIVE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2952 |                         *leftedge = leftedge_for(*leftedge, *line);[0m
      | [0;1;32m                                                                   
[0m[1mwinio.c:2953:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2953 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2954 | #endif[0m
 2955 |                 for (i = nrows; i > 0 && (*line)->prev != NULL; i--)[0m
 2956 |                         *line = (*line)->prev;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:2955:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2955 |                 for (i = nrows; i > 0 && (*line)->prev != NULL; i--)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2956 |                         *line = (*line)->prev;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:2981:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2981 |                         if (!end_of_line)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2982 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mwinio.c:2984:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2984 |                         if (*line == openfile->filebot)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2985 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mwinio.c:2993:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2993 |                 if (i < nrows)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2994 |                         *leftedge = current_leftedge;[0m
      | [0;1;32m                                                     
[0m[1mwinio.c:2995:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2995 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2996 | #endif[0m
 2997 |                 for (i = nrows; i > 0 && (*line)->next != NULL; i--)[0m
 2998 |                         *line = (*line)->next;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:2997:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2997 |                 for (i = nrows; i > 0 && (*line)->next != NULL; i--)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2998 |                         *line = (*line)->next;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:3016:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3016 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3017 | #endif[0m
 3018 |                 return (openfile->current->lineno - was_lineno < editwinrows);[0m
      | [0;1;32m                                                                              
[0m[1mwinio.c:3044:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3044 |         if (editwinrows > totallines)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3045 |                 highest = editwinrows;[0m
      | [0;1;32m                                      
[0m[1mwinio.c:3064:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3064 |         if (direction == BACKWARD)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3065 |                 go_back_chunks(1, &openfile->edittop, &openfile->firstcolumn);[0m
 3066 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:3066:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3066 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 3067 |                 go_forward_chunks(1, &openfile->edittop, &openfile->firstcolumn);[0m
      | [0;1;32m                                                                                 
[0m[1mwinio.c:3076:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3076 |         if (line_needs_update(openfile->placewewant, 0) && nrows < editwinrows)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 3077 |                 nrows++;[0m
      | [0;1;32m                        
[0m[1mwinio.c:3084:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3084 |         if (direction == FORWARD)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3085 |                 go_forward_chunks(editwinrows - nrows, &line, &leftedge);[0m
      | [0;1;32m                                                                         
[0m[1mwinio.c:3088:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3088 |         if (thebar)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3089 |                 draw_scrollbar();[0m
      | [0;1;32m                                 
[0m[1mwinio.c:3096:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3096 |                 if (line == openfile->edittop)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3097 |                         nrows -= chunk_for(openfile->firstcolumn, line);[0m
      | [0;1;32m                                                                        
[0m[1mwinio.c:3140:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3140 |         while (*text != '\0' && column < leftedge)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 3141 |                 text += advance_over(text, &column);[0m
      | [0;1;32m                                                    
[0m[1mwinio.c:3167:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3167 |                 if (last_blank_col <= goal_column)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 3168 |                         return last_blank_col;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:3171:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3171 |                 if (*farthest_blank == '\t')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3172 |                         breaking_col = goal_column;[0m
      | [0;1;32m                                                   
[0m[1mwinio.c:3195:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3195 |                         if (leftedge != NULL)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3196 |                                 *leftedge = start_col;[0m
      | [0;1;32m                                                      
[0m[1mwinio.c:3234:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3234 |         if (ISSET(SOFTWRAP))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3235 |                 openfile->firstcolumn = leftedge_for(openfile->firstcolumn,[0m
 3236 |                                                                                                                 openfile->edittop);[0m
 3237 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:3237:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3237 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 3238 |                 openfile->firstcolumn = 0;[0m
      | [0;1;32m                                          
[0m[1mwinio.c:3261:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3261 |                 if (!last_chunk)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3262 |                         end_col--;[0m
      | [0;1;32m                                  
[0m[1mwinio.c:3264:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3264 |                 if (column > end_col)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3265 |                         column = end_col;[0m
      | [0;1;32m                                         
[0m[1mwinio.c:3276:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3276 |         if (ISSET(SOFTWRAP))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3277 |                 return (openfile->current->lineno < openfile->edittop->lineno ||[0m
 3278 |                                 (openfile->current->lineno == openfile->edittop->lineno &&[0m
 3279 |                                 xplustabs() < openfile->firstcolumn));[0m
 3280 |         else[0m
      | [0;32m        } 
[0m[1mwinio.c:3280:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3280 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 3281 | #endif[0m
 3282 |                 return (openfile->current->lineno < openfile->edittop->lineno);[0m
      | [0;1;32m                                                                               
[0m[1mwinio.c:3301:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3301 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3302 | #endif[0m
 3303 |                 return (openfile->current->lineno >=[0m
 3304 |                                                 openfile->edittop->lineno + editwinrows - SHIM);[0m
      | [0;1;32m                                                                                                
[0m[1mwinio.c:3343:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3343 |                 if (old_current != openfile->current && get_page_start(was_pww) > 0)[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m 3344 |                         update_line(old_current, 0);[0m
      | [0;1;32m                                                    
[0m[1mwinio.c:3350:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3350 |                                                 get_page_start(openfile->placewewant) > 0))[0m
      | [0;1;32m                                                                                           ^
[0m      | [0;32m                                                                                            {
[0m 3351 |                 update_line(openfile->current, openfile->current_x);[0m
      | [0;1;32m                                                                    
[0m[1mwinio.c:3363:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3363 |         if (openfile->syntax && !have_palette && !ISSET(NO_SYNTAX) && has_colors())[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m 3364 |                 prepare_palette();[0m
      | [0;1;32m                                  
[0m[1mwinio.c:3374:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3374 |         if (current_is_offscreen())[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3375 |                 adjust_viewport((focusing || ISSET(JUMPY_SCROLLING)) ? CENTERING : FLOWING);[0m
      | [0;1;32m                                                                                            
[0m[1mwinio.c:3378:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3378 |         if (thebar)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3379 |                 draw_scrollbar();[0m
      | [0;1;32m                                 
[0m[1mwinio.c:3391:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3391 |                 if (line == openfile->current)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3392 |                         row += update_line(line, openfile->current_x);[0m
 3393 |                 else[0m
      | [0;32m                } 
[0m[1mwinio.c:3393:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3393 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3394 |                         row += update_line(line, 0);[0m
      | [0;1;32m                                                    
[0m[1mwinio.c:3401:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3401 |                 if (thebar)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3402 |                         mvwaddch(midwin, row, COLS - 1, bardata[row]);[0m
      | [0;1;32m                                                                      
[0m[1mwinio.c:3426:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3426 |         if (manner == STATIONARY)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3427 |                 goal = openfile->current_y;[0m
 3428 |         else if (manner == CENTERING)[0m
      | [0;32m        } 
[0m[1mwinio.c:3428:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3428 |         else if (manner == CENTERING)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3429 |                 goal = editwinrows / 2;[0m
 3430 |         else if (!current_is_above_screen())[0m
      | [0;32m        } 
[0m[1mwinio.c:3430:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3430 |         else if (!current_is_above_screen())[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3431 |                 goal = editwinrows - 1 - SHIM;[0m
      | [0;1;32m                                              
[0m[1mwinio.c:3435:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3435 |         if (ISSET(SOFTWRAP))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3436 |                 openfile->firstcolumn = leftedge_for(xplustabs(), openfile->current);[0m
      | [0;1;32m                                                                                     
[0m[1mwinio.c:3453:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3453 |         if (currmenu & ~(MBROWSER|MWHEREISFILE|MGOTODIR))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 3454 |                 titlebar(title);[0m
      | [0;1;32m                                
[0m[1mwinio.c:3461:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3461 |         if (currmenu & ~(MBROWSER|MWHEREISFILE|MGOTODIR))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 3462 |                 edit_refresh();[0m
      | [0;1;32m                               
[0m[1mwinio.c:3506:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3506 |         if (overshoots)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3507 |                 to_col = right_edge;[0m
      | [0;1;32m                                    
[0m[1mwinio.c:3513:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3513 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3514 |                 word = display_string(openfile->current->data, from_col,[0m
 3515 |                                                                 to_col - from_col, FALSE, overshoots);[0m
      | [0;1;32m                                                                                                      
[0m[1mwinio.c:3519:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3519 |         if (overshoots)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3520 |                 mvwaddch(midwin, openfile->current_y, COLS - 1 - thebar, '>');[0m
      | [0;1;32m                                                                              
[0m[1mwinio.c:3554:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3554 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3555 |                         word = display_string(openfile->current->data, from_col,[0m
 3556 |                                                                                 break_col - from_col, FALSE, FALSE);[0m
      | [0;1;32m                                                                                                                    
[0m[1mwinio.c:3564:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3564 |                 if (end_of_line)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3565 |                         break;[0m
      | [0;1;32m                              
[0m[1mwinio.c:3671:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3671 |                         if (!text)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3672 |                                 text = _(xlcredits[xlpos++]);[0m
      | [0;1;32m                                                             
[0m[1mwinio.c:3678:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3678 |                 if (wgetch(midwin) != ERR)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3679 |                         break;[0m
      | [0;1;32m                              
[0m[1mwinio.c:3685:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3685 |                 if (wgetch(midwin) != ERR)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3686 |                         break;[0m
      | [0;1;32m                              
[0m[1mwinio.c:3693:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3693 |         if (with_interface)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3694 |                 UNSET(ZERO);[0m
      | [0;1;32m                            
[0m[1mwinio.c:3695:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3695 |         if (with_help)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3696 |                 UNSET(NO_HELP);[0m
      | [0;1;32m                               
[0m426 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[70/70][273.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/nano-7.2/tidy-fixes/tmp34s83mak.yaml -p=/itch/common/crepos/cu-to-rtu/c/nano-7.2 /itch/common/crepos/cu-to-rtu/c/nano-7.2/src/text.c
[1mtext.c:68:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |         if (openfile->syntax && openfile->syntax->tab)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m   69 |                 inject(openfile->syntax->tab, strlen(openfile->syntax->tab));[0m
   70 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:77:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   77 |                 memset(spaces, ' ', length);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:77:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   77 |                 memset(spaces, ' ', length);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:83:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   84 | #endif[0m
   85 |                 inject((char *)"\t", 1);[0m
      | [0;1;32m                                        
[0m[1mtext.c:96:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |         if (indent_len == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m   97 |                 return;[0m
      | [0;1;32m                       
[0m[1mtext.c:101:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  101 |         memmove(line->data + indent_len, line->data, length + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtext.c:101:2: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  101 |         memmove(line->data + indent_len, line->data, length + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtext.c:102:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  102 |         memcpy(line->data, indentation, indent_len);[0m
      | [0;1;32m        ^~~~~~
[0m[1mtext.c:102:2: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  102 |         memcpy(line->data, indentation, indent_len);[0m
      | [0;1;32m        ^~~~~~
[0m[1mtext.c:107:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |         if (line == openfile->mark && openfile->mark_x > 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  108 |                 openfile->mark_x += indent_len;[0m
      | [0;1;32m                                               
[0m[1mtext.c:127:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  127 |         while (top != bot->next && top->data[0] == '\0')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  128 |                 top = top->next;[0m
      | [0;1;32m                                
[0m[1mtext.c:131:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  131 |         if (top == bot->next)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  132 |                 return;[0m
      | [0;1;32m                       
[0m[1mtext.c:137:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  137 |         if (openfile->syntax && openfile->syntax->tab)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  138 |                 indentation = mallocstrcpy(indentation, openfile->syntax->tab);[0m
  139 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:143:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  143 |                 memset(indentation, ' ', tabsize);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:143:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  143 |                 memset(indentation, ' ', tabsize);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:179:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |                 while (text[white_count] == openfile->syntax->tab[white_count])[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  180 |                         if (++white_count == thelength)[0m
  181 |                                 return thelength;[0m
      | [0;1;32m                                                 
[0m[1mtext.c:180:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |                         if (++white_count == thelength)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  181 |                                 return thelength;[0m
      | [0;1;32m                                                 
[0m[1mtext.c:188:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |                 if (*text == '\t')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  189 |                         return white_count + 1;[0m
      | [0;1;32m                                               
[0m[1mtext.c:191:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |                 if (*text != ' ')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  192 |                         return white_count;[0m
      | [0;1;32m                                           
[0m[1mtext.c:194:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |                 if (++white_count == tabsize)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  195 |                         return tabsize;[0m
      | [0;1;32m                                       
[0m[1mtext.c:205:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  205 |                 if (openfile->mark_x < leftshift)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  206 |                         openfile->mark_x = 0;[0m
  207 |                 else[0m
      | [0;32m                } 
[0m[1mtext.c:207:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  207 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  208 |                         openfile->mark_x -= leftshift;[0m
      | [0;1;32m                                                      
[0m[1mtext.c:212:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |                 if (openfile->current_x < leftshift)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  213 |                         openfile->current_x = 0;[0m
  214 |                 else[0m
      | [0;32m                } 
[0m[1mtext.c:214:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  215 |                         openfile->current_x -= leftshift;[0m
      | [0;1;32m                                                         
[0m[1mtext.c:226:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |         if (indent_len == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  227 |                 return;[0m
      | [0;1;32m                       
[0m[1mtext.c:230:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  230 |         memmove(line->data, line->data + indent_len, length - indent_len + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtext.c:230:2: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  230 |         memmove(line->data, line->data + indent_len, length - indent_len + 1);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mtext.c:248:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |         while (top != bot->next && length_of_white(top->data) == 0)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  249 |                 top = top->next;[0m
      | [0;1;32m                                
[0m[1mtext.c:252:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |         if (top == bot->next)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  253 |                 return;[0m
      | [0;1;32m                       
[0m[1mtext.c:282:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |         if (!undoing)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  283 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:289:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                 if (undoing ^ add_indent)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  290 |                         indent_a_line(line, blanks);[0m
  291 |                 else[0m
      | [0;32m                } 
[0m[1mtext.c:291:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  292 |                         unindent_a_line(line, strlen(blanks));[0m
      | [0;1;32m                                                              
[0m[1mtext.c:298:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |         if (undoing)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  299 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:320:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |         if (!ISSET(NO_NEWLINES) && line == openfile->filebot)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  321 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mtext.c:327:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  327 |                 memmove(line->data + pre_len, line->data, line_len + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:327:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  327 |                 memmove(line->data + pre_len, line->data, line_len + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:328:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  328 |                 memmove(line->data, comment_seq, pre_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:328:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  328 |                 memmove(line->data, comment_seq, pre_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:329:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |                 if (post_len > 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  330 |                         memmove(line->data + pre_len + line_len, post_seq, post_len + 1);[0m
      | [0;1;32m                                                                                         
[0m[1mtext.c:330:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  330 |                         memmove(line->data + pre_len + line_len, post_seq, post_len + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:330:4: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  330 |                         memmove(line->data + pre_len + line_len, post_seq, post_len + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:335:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |                 if (line == openfile->mark && openfile->mark_x > 0)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  336 |                         openfile->mark_x += pre_len;[0m
      | [0;1;32m                                                    
[0m[1mtext.c:349:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |                 if (action == PREFLIGHT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  350 |                         return TRUE;[0m
      | [0;1;32m                                    
[0m[1mtext.c:353:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  353 |                 memmove(line->data, line->data + pre_len, line_len - pre_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:353:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  353 |                 memmove(line->data, line->data + pre_len, line_len - pre_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:377:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |         if (openfile->syntax)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  378 |                 comment_seq = openfile->syntax->comment;[0m
      | [0;1;32m                                                        
[0m[1mtext.c:418:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |         for (line = top; line != bot->next; line = line->next)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  419 |                 if (comment_line(action, line, comment_seq))[0m
  420 |                         update_multiline_undo(line->lineno, "");[0m
      | [0;1;32m                                                                
[0m[1mtext.c:419:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |                 if (comment_line(action, line, comment_seq))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  420 |                         update_multiline_undo(line->lineno, "");[0m
      | [0;1;32m                                                                
[0m[1mtext.c:434:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  434 |         if (!undoing)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  435 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:450:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |         if (undoing)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  451 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:467:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  467 |         if (!(u->xflags & HAD_ANCHOR_AT_START))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  468 |                 openfile->current->has_anchor = FALSE;[0m
      | [0;1;32m                                                      
[0m[1mtext.c:470:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |         if (u->cutbuffer)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  471 |                 copy_from_buffer(u->cutbuffer);[0m
      | [0;1;32m                                               
[0m[1mtext.c:476:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |                                                 openfile->filebot->prev->data[0] == '\0')[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m  477 |                 remove_magicline();[0m
      | [0;1;32m                                   
[0m[1mtext.c:479:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  479 |         if (u->xflags & CURSOR_WAS_AT_HEAD)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  480 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:516:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |         if (u->type <= REPLACE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  517 |                 line = line_from_number(u->tail_lineno);[0m
      | [0;1;32m                                                        
[0m[1mtext.c:523:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  523 |                 undidmsg = _("addition");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  524 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES))[0m
  525 |                         remove_magicline();[0m
  526 |                 memmove(line->data + u->head_x, line->data + u->head_x + strlen(u->strdata),[0m
  527 |                                                 strlen(line->data + u->head_x) - strlen(u->strdata) + 1);[0m
  528 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
  529 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:524:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  525 |                         remove_magicline();[0m
      | [0;1;32m                                           
[0m[1mtext.c:526:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  526 |                 memmove(line->data + u->head_x, line->data + u->head_x + strlen(u->strdata),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:526:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  526 |                 memmove(line->data + u->head_x, line->data + u->head_x + strlen(u->strdata),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:531:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  531 |                 undidmsg = _("line break");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  532 |                 /* An <Enter> at the end of leading whitespace while autoindenting has[0m
  533 |                  * deleted the whitespace, and stored an x position of zero.  In that[0m
  534 |                  * case, adjust the positions to return to and to scoop data from. */[0m
  535 |                 original_x = (u->head_x == 0) ? u->tail_x : u->head_x;[0m
  536 |                 regain_from_x = (u->head_x == 0) ? 0 : u->tail_x;[0m
  537 |                 line->data = nrealloc(line->data, strlen(line->data) +[0m
  538 |                                                                 strlen(&u->strdata[regain_from_x]) + 1);[0m
  539 |                 strcat(line->data, &u->strdata[regain_from_x]);[0m
  540 |                 line->has_anchor |= line->next->has_anchor;[0m
  541 |                 unlink_node(line->next);[0m
  542 |                 renumber_from(line);[0m
  543 |                 openfile->current = line;[0m
  544 |                 goto_line_posx(u->head_lineno, original_x);[0m
  545 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:539:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  539 |                 strcat(line->data, &u->strdata[regain_from_x]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:539:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  539 |                 strcat(line->data, &u->strdata[regain_from_x]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:549:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  549 |                 data = nmalloc(strlen(line->data) + strlen(u->strdata) + 1);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  550 |                 strncpy(data, line->data, u->head_x);[0m
  551 |                 strcpy(&data[u->head_x], u->strdata);[0m
  552 |                 strcpy(&data[u->head_x + strlen(u->strdata)], &line->data[u->head_x]);[0m
  553 |                 free(line->data);[0m
  554 |                 line->data = data;[0m
  555 |                 goto_line_posx(u->tail_lineno, u->tail_x);[0m
  556 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:550:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  550 |                 strncpy(data, line->data, u->head_x);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:550:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  550 |                 strncpy(data, line->data, u->head_x);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:551:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  551 |                 strcpy(&data[u->head_x], u->strdata);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:551:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  551 |                 strcpy(&data[u->head_x], u->strdata);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:552:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  552 |                 strcpy(&data[u->head_x + strlen(u->strdata)], &line->data[u->head_x]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:552:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  552 |                 strcpy(&data[u->head_x + strlen(u->strdata)], &line->data[u->head_x]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:558:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  558 |                 undidmsg = _("line join");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  559 |                 /* When the join was done by a Backspace at the tail of the file,[0m
  560 |                  * and the nonewlines flag isn't set, do not re-add a newline that[0m
  561 |                  * wasn't actually deleted; just position the cursor. */[0m
  562 |                 if ((u->xflags & WAS_BACKSPACE_AT_EOF) && !ISSET(NO_NEWLINES)) {[0m
  563 |                         openfile->current = openfile->filebot;[0m
  564 |                         openfile->current_x = 0;[0m
  565 |                         break;[0m
  566 |                 }[0m
  567 |                 line->data[u->tail_x] = '\0';[0m
  568 |                 intruder = make_new_node(line);[0m
  569 |                 intruder->data = copy_of(u->strdata);[0m
  570 |                 splice_node(line, intruder);[0m
  571 |                 renumber_from(intruder);[0m
  572 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
  573 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:575:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  575 |                 undidmsg = _("replacement");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  576 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES))[0m
  577 |                         remove_magicline();[0m
  578 |                 data = u->strdata;[0m
  579 |                 u->strdata = line->data;[0m
  580 |                 line->data = data;[0m
  581 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
  582 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:576:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  576 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  577 |                         remove_magicline();[0m
      | [0;1;32m                                           
[0m[1mtext.c:585:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  585 |                 undidmsg = _("addition");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  586 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:588:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  588 |                 openfile->current_undo = openfile->current_undo->next;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  589 |                 while (openfile->current_undo->type != SPLIT_BEGIN)[0m
  590 |                         do_undo();[0m
  591 |                 u = openfile->current_undo;[0m
  592 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:589:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |                 while (openfile->current_undo->type != SPLIT_BEGIN)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  590 |                         do_undo();[0m
      | [0;1;32m                                  
[0m[1mtext.c:595:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  595 |                 undidmsg = _("erasure");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  596 |                 undo_cut(u);[0m
  597 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:602:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  602 |                 undo_cut(u);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  603 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:605:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  605 |                 undidmsg = _("paste");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  606 |                 undo_paste(u);[0m
  607 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES) &&[0m
  608 |                                                         openfile->filebot != openfile->current)[0m
  609 |                         remove_magicline();[0m
  610 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:608:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  608 |                                                         openfile->filebot != openfile->current)[0m
      | [0;1;32m                                                                                               ^
[0m      | [0;32m                                                                                                {
[0m  609 |                         remove_magicline();[0m
      | [0;1;32m                                           
[0m[1mtext.c:612:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  612 |                 undidmsg = _("insertion");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  613 |                 oldcutbuffer = cutbuffer;[0m
  614 |                 cutbuffer = NULL;[0m
  615 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
  616 |                 openfile->mark = line_from_number(u->tail_lineno);[0m
  617 |                 openfile->mark_x = u->tail_x;[0m
  618 |                 cut_marked_region();[0m
  619 |                 u->cutbuffer = cutbuffer;[0m
  620 |                 cutbuffer = oldcutbuffer;[0m
  621 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES) &&[0m
  622 |                                                         openfile->filebot != openfile->current)[0m
  623 |                         remove_magicline();[0m
  624 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:622:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  622 |                                                         openfile->filebot != openfile->current)[0m
      | [0;1;32m                                                                                               ^
[0m      | [0;32m                                                                                                {
[0m  623 |                         remove_magicline();[0m
      | [0;1;32m                                           
[0m[1mtext.c:626:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  626 |                 undidmsg = u->strdata;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  627 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
  628 |                 openfile->current_y = u->tail_lineno;[0m
  629 |                 adjust_viewport(STATIONARY);[0m
  630 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:633:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  633 |                 openfile->current_undo->head_lineno = openfile->current_y;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  634 |                 openfile->current_undo = openfile->current_undo->next;[0m
  635 |                 do_undo();[0m
  636 |                 do_undo();[0m
  637 |                 do_undo();[0m
  638 |                 return;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mtext.c:640:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  640 |                 handle_indent_action(u, TRUE, TRUE);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  641 |                 undidmsg = _("indent");[0m
  642 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:644:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  644 |                 handle_indent_action(u, TRUE, FALSE);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  645 |                 undidmsg = _("unindent");[0m
  646 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:649:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  649 |                 handle_comment_action(u, TRUE, TRUE);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  650 |                 undidmsg = _("comment");[0m
  651 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:653:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  653 |                 handle_comment_action(u, TRUE, FALSE);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  654 |                 undidmsg = _("uncomment");[0m
  655 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:658:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mtext.c:661:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  661 |         if (undidmsg && !ISSET(ZERO) && !pletion_line)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  662 |                 statusline(HUSH, _("Undid %s"), undidmsg);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:672:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  672 |         if (u->type <= REPLACE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  673 |                 check_the_multis(openfile->current);[0m
  674 |         else if (u->type == INSERT)[0m
      | [0;32m        } 
[0m[1mtext.c:674:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |         else if (u->type == INSERT)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  675 |                 perturbed = TRUE;[0m
      | [0;1;32m                                 
[0m[1mtext.c:682:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  683 |                 set_modified();[0m
      | [0;1;32m                               
[0m[1mtext.c:702:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |         while (u->next != openfile->current_undo)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  703 |                 u = u->next;[0m
      | [0;1;32m                            
[0m[1mtext.c:705:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  705 |         if (u->type <= REPLACE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  706 |                 line = line_from_number(u->tail_lineno);[0m
      | [0;1;32m                                                        
[0m[1mtext.c:710:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  710 |                 redidmsg = _("addition");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  711 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES))[0m
  712 |                         new_magicline();[0m
  713 |                 data = nmalloc(strlen(line->data) + strlen(u->strdata) + 1);[0m
  714 |                 strncpy(data, line->data, u->head_x);[0m
  715 |                 strcpy(&data[u->head_x], u->strdata);[0m
  716 |                 strcpy(&data[u->head_x + strlen(u->strdata)], &line->data[u->head_x]);[0m
  717 |                 free(line->data);[0m
  718 |                 line->data = data;[0m
  719 |                 goto_line_posx(u->tail_lineno, u->tail_x);[0m
  720 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:711:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  712 |                         new_magicline();[0m
      | [0;1;32m                                        
[0m[1mtext.c:714:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  714 |                 strncpy(data, line->data, u->head_x);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:714:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  714 |                 strncpy(data, line->data, u->head_x);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:715:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  715 |                 strcpy(&data[u->head_x], u->strdata);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:715:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  715 |                 strcpy(&data[u->head_x], u->strdata);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:716:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  716 |                 strcpy(&data[u->head_x + strlen(u->strdata)], &line->data[u->head_x]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:716:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  716 |                 strcpy(&data[u->head_x + strlen(u->strdata)], &line->data[u->head_x]);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:722:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  722 |                 redidmsg = _("line break");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  723 |                 line->data[u->head_x] = '\0';[0m
  724 |                 intruder = make_new_node(line);[0m
  725 |                 intruder->data = copy_of(u->strdata);[0m
  726 |                 splice_node(line, intruder);[0m
  727 |                 renumber_from(intruder);[0m
  728 |                 goto_line_posx(u->head_lineno + 1, u->tail_x);[0m
  729 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:733:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  733 |                 memmove(line->data + u->head_x, line->data + u->head_x + strlen(u->strdata),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:733:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  733 |                 memmove(line->data + u->head_x, line->data + u->head_x + strlen(u->strdata),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:733:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  733 |                 memmove(line->data + u->head_x, line->data + u->head_x + strlen(u->strdata),[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  734 |                                                 strlen(line->data + u->head_x) - strlen(u->strdata) + 1);[0m
  735 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
  736 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:738:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  738 |                 redidmsg = _("line join");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  739 |                 /* When the join was done by a Backspace at the tail of the file,[0m
  740 |                  * and the nonewlines flag isn't set, do not join anything, as[0m
  741 |                  * nothing was actually deleted; just position the cursor. */[0m
  742 |                 if ((u->xflags & WAS_BACKSPACE_AT_EOF) && !ISSET(NO_NEWLINES)) {[0m
  743 |                         goto_line_posx(u->tail_lineno, u->tail_x);[0m
  744 |                         break;[0m
  745 |                 }[0m
  746 |                 line->data = nrealloc(line->data, strlen(line->data) + strlen(u->strdata) + 1);[0m
  747 |                 strcat(line->data, u->strdata);[0m
  748 |                 unlink_node(line->next);[0m
  749 |                 renumber_from(line);[0m
  750 |                 openfile->current = line;[0m
  751 |                 goto_line_posx(u->tail_lineno, u->tail_x);[0m
  752 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:747:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  747 |                 strcat(line->data, u->strdata);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:747:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  747 |                 strcat(line->data, u->strdata);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:754:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  754 |                 redidmsg = _("replacement");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  755 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES))[0m
  756 |                         new_magicline();[0m
  757 |                 data = u->strdata;[0m
  758 |                 u->strdata = line->data;[0m
  759 |                 line->data = data;[0m
  760 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
  761 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:755:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |                 if ((u->xflags & INCLUDED_LAST_LINE) && !ISSET(NO_NEWLINES))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  756 |                         new_magicline();[0m
      | [0;1;32m                                        
[0m[1mtext.c:764:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  764 |                 openfile->current_undo = u;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  765 |                 while (openfile->current_undo->type != SPLIT_END)[0m
  766 |                         do_redo();[0m
  767 |                 u = openfile->current_undo;[0m
  768 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
  769 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:765:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  765 |                 while (openfile->current_undo->type != SPLIT_END)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  766 |                         do_redo();[0m
      | [0;1;32m                                  
[0m[1mtext.c:771:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  771 |                 redidmsg = _("addition");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  772 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:775:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  775 |                 redidmsg = _("erasure");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  776 |                 redo_cut(u);[0m
  777 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:781:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  781 |                 redo_cut(u);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  782 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:784:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  784 |                 redidmsg = _("paste");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  785 |                 redo_paste(u);[0m
  786 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:788:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  788 |                 redidmsg = _("insertion");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  789 |                 goto_line_posx(u->head_lineno, u->head_x);[0m
  790 |                 if (u->cutbuffer)[0m
  791 |                         copy_from_buffer(u->cutbuffer);[0m
  792 |                 else[0m
  793 |                         suppress_modification = TRUE;[0m
  794 |                 free_lines(u->cutbuffer);[0m
  795 |                 u->cutbuffer = NULL;[0m
  796 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:790:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  790 |                 if (u->cutbuffer)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  791 |                         copy_from_buffer(u->cutbuffer);[0m
  792 |                 else[0m
      | [0;32m                } 
[0m[1mtext.c:792:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  792 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  793 |                         suppress_modification = TRUE;[0m
      | [0;1;32m                                                     
[0m[1mtext.c:798:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  798 |                 openfile->current_undo = u;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  799 |                 do_redo();[0m
  800 |                 do_redo();[0m
  801 |                 do_redo();[0m
  802 |                 return;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mtext.c:804:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  804 |                 redidmsg = u->strdata;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  805 |                 goto_line_posx(u->tail_lineno, u->tail_x);[0m
  806 |                 openfile->current_y = u->head_lineno;[0m
  807 |                 adjust_viewport(STATIONARY);[0m
  808 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:810:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  810 |                 handle_indent_action(u, FALSE, TRUE);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  811 |                 redidmsg = _("indent");[0m
  812 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:814:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  814 |                 handle_indent_action(u, FALSE, FALSE);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  815 |                 redidmsg = _("unindent");[0m
  816 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:819:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  819 |                 handle_comment_action(u, FALSE, TRUE);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  820 |                 redidmsg = _("comment");[0m
  821 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:823:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  823 |                 handle_comment_action(u, FALSE, FALSE);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  824 |                 redidmsg = _("uncomment");[0m
  825 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:828:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  828 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mtext.c:831:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |         if (redidmsg && !ISSET(ZERO))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  832 |                 statusline(HUSH, _("Redid %s"), redidmsg);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:842:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  842 |         if (u->type <= REPLACE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  843 |                 check_the_multis(openfile->current);[0m
  844 |         else if (u->type == INSERT)[0m
      | [0;32m        } 
[0m[1mtext.c:844:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  844 |         else if (u->type == INSERT)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  845 |                 recook = TRUE;[0m
      | [0;1;32m                              
[0m[1mtext.c:852:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |         } else if (!suppress_modification)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  853 |                 set_modified();[0m
      | [0;1;32m                               
[0m[1mtext.c:871:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  871 |                                         inpar(sampleline->next) && !begpar(sampleline->next, 0))[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m  872 |                         sampleline = sampleline->next;[0m
      | [0;1;32m                                                      
[0m[1mtext.c:877:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |                 if (extra > openfile->current_x)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  878 |                         extra = openfile->current_x;[0m
  879 |                 else if (extra == openfile->current_x)[0m
      | [0;32m                } 
[0m[1mtext.c:879:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  879 |                 else if (extra == openfile->current_x)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  880 |                         allblanks = (indent_length(openfile->current->data) == extra);[0m
      | [0;1;32m                                                                                      
[0m[1mtext.c:885:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  885 |         strcpy(&newnode->data[extra], openfile->current->data +[0m
      | [0;1;32m        ^~~~~~
[0m[1mtext.c:885:2: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  885 |         strcpy(&newnode->data[extra], openfile->current->data +[0m
      | [0;1;32m        ^~~~~~
[0m[1mtext.c:890:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  890 |                 strncpy(newnode->data, sampleline->data, extra);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:890:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  890 |                 strncpy(newnode->data, sampleline->data, extra);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:892:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  892 |                 if (allblanks)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  893 |                         openfile->current_x = 0;[0m
      | [0;1;32m                                                
[0m[1mtext.c:924:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  924 |         if (ISSET(AUTOINDENT) && !allblanks)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  925 |                 openfile->totsize += extra;[0m
      | [0;1;32m                                           
[0m[1mtext.c:1006:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1006 |                 if (thisline == openfile->filebot)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1007 |                         u->xflags |= INCLUDED_LAST_LINE;[0m
 1008 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:1006:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1006 |                 if (thisline == openfile->filebot)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1007 |                         u->xflags |= INCLUDED_LAST_LINE;[0m
      | [0;1;32m                                                        
[0m[1mtext.c:1010:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1010 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mtext.c:1014:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1014 |                 if (thisline->next == openfile->filebot && thisline->data[0] != '\0')[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1015 |                         u->xflags |= WAS_BACKSPACE_AT_EOF;[0m
      | [0;1;32m                                                         
[0m      | [0;32m                                                         ;} 
[0m[1mtext.c:1014:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1014 |                 if (thisline->next == openfile->filebot && thisline->data[0] != '\0')[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m 1015 |                         u->xflags |= WAS_BACKSPACE_AT_EOF;[0m
      | [0;1;32m                                                          
[0m[1mtext.c:1020:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1020 |                 if (thisline->data[openfile->current_x] != '\0') {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mtext.c:1024:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1024 |                         if (u->type == BACK)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1025 |                                 u->tail_x += charlen;[0m
      | [0;1;32m                                                     
[0m[1mtext.c:1039:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1039 |                 u->strdata = copy_of(thisline->data);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1040 |                 if (thisline == openfile->filebot && answer[0] != '\0')[0m
 1041 |                         u->xflags |= INCLUDED_LAST_LINE;[0m
 1042 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:1040:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1040 |                 if (thisline == openfile->filebot && answer[0] != '\0')[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 1041 |                         u->xflags |= INCLUDED_LAST_LINE;[0m
      | [0;1;32m                                                        
[0m[1mtext.c:1049:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1049 |                 u->xflags |= (INCLUDED_LAST_LINE | CURSOR_WAS_AT_HEAD);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1050 |                 if (openfile->current->has_anchor)[0m
 1051 |                         u->xflags |= HAD_ANCHOR_AT_START;[0m
 1052 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:1050:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1050 |                 if (openfile->current->has_anchor)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1051 |                         u->xflags |= HAD_ANCHOR_AT_START;[0m
      | [0;1;32m                                                         
[0m[1mtext.c:1065:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1065 |                         if (u->tail_lineno == openfile->filebot->lineno)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1066 |                                 u->xflags |= INCLUDED_LAST_LINE;[0m
      | [0;1;32m                                                                
[0m[1mtext.c:1071:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1071 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1072 |                         u->xflags |= CURSOR_WAS_AT_HEAD;[0m
      | [0;1;32m                                                        
[0m[1mtext.c:1073:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1073 |                 if ((openfile->mark && mark_is_before_cursor() && openfile->mark->has_anchor) ||[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1074 |                                 ((!openfile->mark || !mark_is_before_cursor()) && openfile->current->has_anchor))[0m
 1075 |                         u->xflags |= HAD_ANCHOR_AT_START;[0m
 1076 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:1074:86: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1074 |                                 ((!openfile->mark || !mark_is_before_cursor()) && openfile->current->has_anchor))[0m
      | [0;1;32m                                                                                                                 ^
[0m      | [0;32m                                                                                                                  {
[0m 1075 |                         u->xflags |= HAD_ANCHOR_AT_START;[0m
      | [0;1;32m                                                         
[0m[1mtext.c:1078:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1078 |                 u->cutbuffer = copy_buffer(cutbuffer);[0m
      | [0;1;32m                ^                                    
[0m      | [0;32m                {                                    ;} 
[0m[1mtext.c:1081:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1081 |                 if (thisline == openfile->filebot)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1082 |                         u->xflags |= INCLUDED_LAST_LINE;[0m
 1083 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:1081:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1081 |                 if (thisline == openfile->filebot)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1082 |                         u->xflags |= INCLUDED_LAST_LINE;[0m
      | [0;1;32m                                                        
[0m[1mtext.c:1085:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1085 |                 u->tail_lineno = openfile->current_y;[0m
      | [0;1;32m                ^                                   
[0m      | [0;32m                {                                   ;} 
[0m[1mtext.c:1088:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1088 |                 u->strdata = copy_of(_(message));[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1089 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:1098:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1098 |                 die("Bad undo type -- please report a bug\n");[0m
      | [0;1;32m                ^                                            
[0m      | [0;32m                {                                            ;} 
[0m[1mtext.c:1147:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1147 |         if (u->type != action)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1148 |                 die("Mismatching undo type -- please report a bug\n");[0m
      | [0;1;32m                                                                      
[0m[1mtext.c:1154:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1154 |                 newlen = openfile->current_x - u->head_x;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1155 |                 u->strdata = nrealloc(u->strdata, newlen + 1);[0m
 1156 |                 strncpy(u->strdata, openfile->current->data + u->head_x, newlen);[0m
 1157 |                 u->strdata[newlen] = '\0';[0m
 1158 |                 u->tail_x = openfile->current_x;[0m
 1159 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:1156:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1156 |                 strncpy(u->strdata, openfile->current->data + u->head_x, newlen);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1156:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1156 |                 strncpy(u->strdata, openfile->current->data + u->head_x, newlen);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1161:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1161 |                 u->strdata = copy_of(openfile->current->data);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1162 |                 u->tail_x = openfile->current_x;[0m
 1163 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:1167:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1167 |                 charlen = char_length(textposition);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mtext.c:1172:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1172 |                         strncpy(u->strdata + datalen, textposition, charlen);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1172:4: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1172 |                         strncpy(u->strdata + datalen, textposition, charlen);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1178:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1178 |                         memmove(u->strdata + charlen, u->strdata, datalen + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1178:4: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1178 |                         memmove(u->strdata + charlen, u->strdata, datalen + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1179:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1179 |                         strncpy(u->strdata, textposition, charlen);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1179:4: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1179 |                         strncpy(u->strdata, textposition, charlen);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1181:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1181 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1182 |                         /* They deleted *elsewhere* on the line: start a new undo item. */[0m
 1183 |                         add_undo(u->type, NULL);[0m
      | [0;1;32m                                                
[0m[1mtext.c:1186:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1186 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mtext.c:1195:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1195 |                 if (u->type == ZAP)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1196 |                         u->cutbuffer = cutbuffer;[0m
 1197 |                 else if (cutbuffer != NULL) {[0m
      | [0;32m                } 
[0m[1mtext.c:1200:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1200 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1201 |                         break;[0m
      | [0;1;32m                              
[0m[1mtext.c:1202:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1202 |                 if (!(u->xflags & MARK_WAS_SET)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mtext.c:1214:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1214 |                                 if (count == 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1215 |                                         u->tail_x += u->head_x;[0m
      | [0;1;32m                                                               
[0m[1mtext.c:1216:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1216 |                         } else if (openfile->current == openfile->filebot && ISSET(NO_NEWLINES))[0m
      | [0;1;32m                                                                                                ^
[0m      | [0;32m                                                                                                 {
[0m 1217 |                                 u->tail_x = strlen(bottomline->data);[0m
      | [0;1;32m                                                                     
[0m[1mtext.c:1221:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1221 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mtext.c:1226:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1226 |                 u->tail_x = openfile->current_x;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1227 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mtext.c:1229:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1229 |                 die("Bad undo type -- please report a bug\n");[0m
      | [0;1;32m                ^                                            
[0m      | [0;32m                {                                            ;} 
[0m[1mtext.c:1266:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1266 |         if (wrap_loc < 0 || lead_len + wrap_loc == line_len)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1267 |                 return;[0m
      | [0;1;32m                       
[0m[1mtext.c:1274:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1274 |         if (line->data[wrap_loc] == '\0')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1275 |                 return;[0m
      | [0;1;32m                       
[0m[1mtext.c:1283:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1283 |         if (quot_len > 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1284 |                 UNSET(AUTOINDENT);[0m
      | [0;1;32m                                  
[0m[1mtext.c:1321:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1321 |                 if (strncmp(line->data, line->data + openfile->current_x, lead_len) == 0)[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m 1322 |                         for (size_t i = lead_len; i > 0; i--)[0m
 1323 |                                 do_delete();[0m
      | [0;1;32m                                            
[0m[1mtext.c:1322:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1322 |                         for (size_t i = lead_len; i > 0; i--)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1323 |                                 do_delete();[0m
      | [0;1;32m                                            
[0m[1mtext.c:1326:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1326 |                 while (is_blank_char(&line->data[openfile->current_x]))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 1327 |                         do_delete();[0m
      | [0;1;32m                                    
[0m[1mtext.c:1356:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1356 |                 memmove(line->data + lead_len, line->data, line_len + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1356:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1356 |                 memmove(line->data + lead_len, line->data, line_len + 1);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1357:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1357 |                 strncpy(line->data, line->prev->data, lead_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1357:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1357 |                 strncpy(line->data, line->prev->data, lead_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1365:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1365 |                 if (autowhite)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1366 |                         SET(AUTOINDENT);[0m
      | [0;1;32m                                        
[0m[1mtext.c:1375:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1375 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1376 |                 openfile->current_x += (cursor_x - wrap_loc);[0m
      | [0;1;32m                                                             
[0m[1mtext.c:1403:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1403 |         while (*pointer != '\0' && is_blank_char(pointer))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1404 |                 pointer += advance_over(pointer, &column);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:1409:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1409 |                 if (is_blank_char(pointer) && (!inhelp || column > 17 || goal < 40))[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m 1410 |                         lastblank = pointer;[0m
 1411 | #ifdef ENABLE_HELP[0m
 1412 |                 else if (snap_at_nl && *pointer == '\n') {[0m
      | [0;32m                } 
[0m[1mtext.c:1421:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1421 |         if ((ssize_t)column <= goal)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1422 |                 return (pointer - textstart);[0m
      | [0;1;32m                                             
[0m[1mtext.c:1426:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1426 |         if (snap_at_nl && lastblank == NULL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1427 |                 return step_left(textstart, pointer - textstart);[0m
      | [0;1;32m                                                                 
[0m[1mtext.c:1432:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1432 |                 if (*pointer == '\0')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1433 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mtext.c:1435:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1435 |                 if (is_blank_char(pointer))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1436 |                         lastblank = pointer;[0m
 1437 |                 else[0m
      | [0;32m                } 
[0m[1mtext.c:1437:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1437 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1438 |                         pointer += char_length(pointer);[0m
      | [0;1;32m                                                        
[0m[1mtext.c:1460:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1460 |         while (*line != '\0' && is_blank_char(line))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1461 |                 line += char_length(line);[0m
      | [0;1;32m                                          
[0m[1mtext.c:1475:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1475 |         if (rc == REG_NOMATCH || matches.rm_so == (regoff_t)-1)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1476 |                 return 0;[0m
      | [0;1;32m                         
[0m[1mtext.c:1490:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1490 |         if (line->prev == NULL)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1491 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mtext.c:1494:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1494 |         if (depth > RECURSION_LIMIT)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1495 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mtext.c:1501:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1501 |         if (line->data[quot_len + indent_len] == '\0')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1502 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mtext.c:1505:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1505 |         if (ISSET(BOOKSTYLE) && !ISSET(AUTOINDENT) && is_blank_char(line->data))[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 1506 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mtext.c:1510:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1510 |                                         strncmp(line->data, line->prev->data, quot_len) != 0)[0m
      | [0;1;32m                                                                                             ^
[0m      | [0;32m                                                                                              {
[0m 1511 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mtext.c:1516:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1516 |         if (line->prev->data[quot_len + prev_dent_len] == '\0')[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1517 |                 return TRUE;[0m
      | [0;1;32m                            
[0m[1mtext.c:1521:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1521 |                                                 wideness(line->data, quot_len + indent_len))[0m
      | [0;1;32m                                                                                            ^
[0m      | [0;32m                                                                                             {
[0m 1522 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mtext.c:1546:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1546 |         while (!inpar(line) && line->next != NULL)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1547 |                 line = line->next;[0m
      | [0;1;32m                                  
[0m[1mtext.c:1555:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1555 |         if (!inpar(line))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1556 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mtext.c:1587:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1587 |                 strcat(line->data, next_line->data + next_lead_len);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:1587:3: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
 1587 |                 strcat(line->data, next_line->data + next_lead_len);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:1604:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1604 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1605 |                 while (--charlen >= 0)[0m
 1606 |                         *((*to)++) = *((*from)++);[0m
      | [0;1;32m                                                  
[0m[1mtext.c:1605:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1605 |                 while (--charlen >= 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1606 |                         *((*to)++) = *((*from)++);[0m
      | [0;1;32m                                                  
[0m[1mtext.c:1627:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1627 |                         while (*from != '\0' && is_blank_char(from))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1628 |                                 from += char_length(from);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:1632:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1632 |                         if (*from != '\0' && mbstrchr(brackets, from) != NULL)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1633 |                                 copy_character(&from, &to);[0m
      | [0;1;32m                                                           
[0m[1mtext.c:1644:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1644 |                         while (*from != '\0' && is_blank_char(from))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1645 |                                 from += char_length(from);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:1646:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1646 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1647 |                         copy_character(&from, &to);[0m
      | [0;1;32m                                                   
[0m[1mtext.c:1651:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1651 |         while (to > start && *(to - 1) == ' ')[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1652 |                 to--;[0m
      | [0;1;32m                     
[0m[1mtext.c:1672:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1672 |                 if (break_pos < 0 || lead_len + break_pos == line_len)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1673 |                         break;[0m
      | [0;1;32m                              
[0m[1mtext.c:1683:3: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 1683 |                 strncpy((*line)->next->data, lead_string, lead_len);[0m
      | [0;1;32m                ^
[0m[1mtext.c:2022:2: [0m[0;1;36mnote: [0mCalling 'justify_text'[0m
 2022 |         justify_text(WHOLE_BUFFER);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:1765:2: [0m[0;1;36mnote: [0m'secondary_lead' initialized to a null pointer value[0m
 1765 |         char *secondary_lead = NULL;[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:1776:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is null[0m
 1776 |         if (openfile->mark) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mtext.c:1776:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1776 |         if (openfile->mark) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:1859:7: [0m[0;1;36mnote: [0m'whole_buffer' is true[0m
 1859 |                 if (whole_buffer)[0m
      | [0;1;32m                    ^~~~~~~~~~~~
[0m[1mtext.c:1859:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1859 |                 if (whole_buffer)[0m
      | [0;1;32m                ^
[0m[1mtext.c:1867:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1867 |                 if (!find_paragraph(&openfile->current, &linecount)) {[0m
      | [0;1;32m                ^
[0m[1mtext.c:1881:7: [0m[0;1;36mnote: [0m'whole_buffer' is true[0m
 1881 |                 if (whole_buffer)[0m
      | [0;1;32m                    ^~~~~~~~~~~~
[0m[1mtext.c:1881:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1881 |                 if (whole_buffer)[0m
      | [0;1;32m                ^
[0m[1mtext.c:1890:7: [0m[0;1;36mnote: [0mAssuming field 'next' is equal to NULL[0m
 1890 |                 if (endline->next != NULL) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:1890:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1890 |                 if (endline->next != NULL) {[0m
      | [0;1;32m                ^
[0m[1mtext.c:1906:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
 1906 |         if (openfile->mark) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mtext.c:1906:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1906 |         if (openfile->mark) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:1913:7: [0m[0;1;36mnote: [0mAssuming 'fore_len' is <= 0[0m
 1913 |                 if (fore_len > 0)[0m
      | [0;1;32m                    ^~~~~~~~~~~~
[0m[1mtext.c:1913:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1913 |                 if (fore_len > 0)[0m
      | [0;1;32m                ^
[0m[1mtext.c:1917:7: [0m[0;1;36mnote: [0m'primary_len' is <= 0[0m
 1917 |                 if (primary_len > 0) {[0m
      | [0;1;32m                    ^~~~~~~~~~~
[0m[1mtext.c:1917:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1917 |                 if (primary_len > 0) {[0m
      | [0;1;32m                ^
[0m[1mtext.c:1926:27: [0m[0;1;36mnote: [0mPassing null pointer value via 2nd parameter 'lead_string'[0m
 1926 |                 rewrap_paragraph(&line, secondary_lead, secondary_len);[0m
      | [0;1;32m                                        ^~~~~~~~~~~~~~
[0m[1mtext.c:1926:3: [0m[0;1;36mnote: [0mCalling 'rewrap_paragraph'[0m
 1926 |                 rewrap_paragraph(&line, secondary_lead, secondary_len);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:1664:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1664 |         while (breadth((*line)->data) > wrap_at) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:1664:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1664 |         while (breadth((*line)->data) > wrap_at) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:1672:7: [0m[0;1;36mnote: [0mAssuming 'break_pos' is >= 0[0m
 1672 |                 if (break_pos < 0 || lead_len + break_pos == line_len)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~
[0m[1mtext.c:1672:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mtext.c:1672:24: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1672 |                 if (break_pos < 0 || lead_len + break_pos == line_len)[0m
      | [0;1;32m                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:1672:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1672 |                 if (break_pos < 0 || lead_len + break_pos == line_len)[0m
      | [0;1;32m                ^
[0m[1mtext.c:1683:3: [0m[0;1;36mnote: [0mNull pointer passed to 2nd parameter expecting 'nonnull'[0m
 1683 |                 strncpy((*line)->next->data, lead_string, lead_len);[0m
      | [0;1;32m                ^                            ~~~~~~~~~~~
[0m[1mtext.c:1683:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1683 |                 strncpy((*line)->next->data, lead_string, lead_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1683:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1683 |                 strncpy((*line)->next->data, lead_string, lead_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1684:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1684 |                 strcpy((*line)->next->data + lead_len, (*line)->data + break_pos);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:1684:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1684 |                 strcpy((*line)->next->data + lead_len, (*line)->data + break_pos);[0m
      | [0;1;32m                ^~~~~~
[0m[1mtext.c:1688:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1688 |                         while (break_pos > 0 && (*line)->data[break_pos - 1] == ' ')[0m
      | [0;1;32m                                                                                    ^
[0m      | [0;32m                                                                                     {
[0m 1689 |                                 break_pos--;[0m
      | [0;1;32m                                            
[0m[1mtext.c:1698:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1698 |         if ((*line)->next != NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1699 |                 *line = (*line)->next;[0m
      | [0;1;32m                                      
[0m[1mtext.c:1793:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1793 |                 if (start_x <= fore_len)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1794 |                         start_x = 0;[0m
      | [0;1;32m                                    
[0m[1mtext.c:1798:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1798 |                 while (start_x > 0 && is_blank_char(&startline->data[start_x - 1]))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m 1799 |                         start_x = step_left(startline->data, start_x);[0m
      | [0;1;32m                                                                      
[0m[1mtext.c:1805:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1805 |                 if (0 < end_x && end_x < fore_len)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1806 |                         end_x = fore_len;[0m
      | [0;1;32m                                         
[0m[1mtext.c:1809:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1809 |                 while (end_x > 0 && is_blank_char(&endline->data[end_x]))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 1810 |                         end_x = step_right(endline->data, end_x);[0m
      | [0;1;32m                                                                 
[0m[1mtext.c:1815:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1815 |                 while (sampleline->prev && inpar(sampleline) && !begpar(sampleline, 0))[0m
      | [0;1;32m                                                                                       ^
[0m      | [0;32m                                                                                        {
[0m 1816 |                         sampleline = sampleline->prev;[0m
      | [0;1;32m                                                      
[0m[1mtext.c:1819:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1819 |                 while (sampleline->next && !inpar(sampleline))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1820 |                         sampleline = sampleline->next;[0m
      | [0;1;32m                                                      
[0m[1mtext.c:1827:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1827 |                 if (sampleline->next && startline != endline)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1828 |                         sampleline = sampleline->next;[0m
      | [0;1;32m                                                      
[0m[1mtext.c:1839:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1839 |                 strncpy(secondary_lead, startline->data, quot_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1839:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1839 |                 strncpy(secondary_lead, startline->data, quot_len);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1840:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1840 |                 strncpy(secondary_lead + quot_len, sampleline->data + other_quot_len,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1840:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1840 |                 strncpy(secondary_lead + quot_len, sampleline->data + other_quot_len,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mtext.c:1859:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1859 |                 if (whole_buffer)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1860 |                         openfile->current = openfile->filetop;[0m
 1861 |                 else if (inpar(openfile->current) && !begpar(openfile->current, 0))[0m
      | [0;32m                } 
[0m[1mtext.c:1861:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1861 |                 else if (inpar(openfile->current) && !begpar(openfile->current, 0))[0m
      | [0;1;32m                                                                                   ^
[0m      | [0;32m                                                                                    {
[0m 1862 |                         do_para_begin(&openfile->current);[0m
      | [0;1;32m                                                          
[0m[1mtext.c:1881:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1881 |                 if (whole_buffer)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1882 |                         endline = openfile->filebot;[0m
 1883 |                 else {[0m
      | [0;32m                } 
[0m[1mtext.c:1885:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1885 |                         for (size_t count = linecount; count > 1; count--)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1886 |                                 endline = endline->next;[0m
      | [0;1;32m                                                        
[0m[1mtext.c:1893:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1893 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1894 |                         end_x = strlen(endline->data);[0m
      | [0;1;32m                                                      
[0m[1mtext.c:1913:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1913 |                 if (fore_len > 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1914 |                         memmove(line->data, line->data + fore_len, text_len + 1);[0m
      | [0;1;32m                                                                                 
[0m[1mtext.c:1914:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1914 |                         memmove(line->data, line->data + fore_len, text_len + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1914:4: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1914 |                         memmove(line->data, line->data + fore_len, text_len + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1919:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1919 |                         memmove(line->data + primary_len, line->data, text_len + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1919:4: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1919 |                         memmove(line->data + primary_len, line->data, text_len + 1);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1920:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1920 |                         strncpy(line->data, primary_lead, primary_len);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1920:4: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
 1920 |                         strncpy(line->data, primary_lead, primary_len);[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mtext.c:1960:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1960 |                                 if (jusline->next == NULL)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1961 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mtext.c:1968:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1968 |         if (whole_buffer && !openfile->mark && !cutbuffer->has_anchor)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1969 |                 openfile->current->has_anchor = FALSE;[0m
      | [0;1;32m                                                      
[0m[1mtext.c:1987:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1987 |         } else if (whole_buffer && !openfile->mark)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1988 |                 goto_line_posx(was_the_linenumber, 0);[0m
      | [0;1;32m                                                      
[0m[1mtext.c:1993:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1993 |         if (openfile->mark)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1994 |                 statusline(REMARK, _("Justified selection"));[0m
 1995 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:1997:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1997 |         if (whole_buffer)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1998 |                 statusline(REMARK, _("Justified file"));[0m
 1999 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:1999:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1999 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2000 |                 statusbar(_("Justified paragraph"));[0m
      | [0;1;32m                                                    
[0m[1mtext.c:2041:26: [0m[0;1;35mwarning: [0m[1mArray access results in a null pointer dereference [clang-analyzer-core.NullDereference][0m
 2041 |         (*arguments)[count - 2] = filename;[0m
      | [0;1;32m                                ^
[0m[1mtext.c:2927:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2927 |         if (in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2927:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2927 |         if (in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mtext.c:2930:6: [0m[0;1;36mnote: [0mAssuming field 'syntax' is non-null[0m
 2930 |         if (!openfile->syntax || !openfile->syntax->formatter) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mtext.c:2930:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mtext.c:2930:27: [0m[0;1;36mnote: [0mAssuming field 'formatter' is non-null[0m
 2930 |         if (!openfile->syntax || !openfile->syntax->formatter) {[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2930:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2930 |         if (!openfile->syntax || !openfile->syntax->formatter) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2941:6: [0m[0;1;36mnote: [0mAssuming 'temp_name' is not equal to NULL[0m
 2941 |         if (temp_name != NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mtext.c:2941:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 2941 |         if (temp_name != NULL)[0m
      | [0;1;32m        ^
[0m[1mtext.c:2944:6: [0m[0;1;36mnote: [0mAssuming 'okay' is true[0m
 2944 |         if (!okay)[0m
      | [0;1;32m            ^~~~~
[0m[1mtext.c:2944:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2944 |         if (!okay)[0m
      | [0;1;32m        ^
[0m[1mtext.c:2947:3: [0m[0;1;36mnote: [0mCalling 'treat'[0m
 2947 |                 treat(temp_name, openfile->syntax->formatter, FALSE);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2105:2: [0m[0;1;36mnote: [0m'arguments' initialized to a null pointer value[0m
 2105 |         static char **arguments = NULL;[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2112:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2112 |         if (stat(tempfile_name, &fileinfo) == 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2128:6: [0m[0;1;36mnote: [0m'spelling' is false[0m
 2128 |         if (spelling)[0m
      | [0;1;32m            ^~~~~~~~
[0m[1mtext.c:2128:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2128 |         if (spelling)[0m
      | [0;1;32m        ^
[0m[1mtext.c:2133:2: [0m[0;1;36mnote: [0mCalling 'construct_argument_list'[0m
 2133 |         construct_argument_list(&arguments, theprogram, tempfile_name);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2035:9: [0m[0;1;36mnote: [0mAssuming 'element' is equal to NULL[0m
 2035 |         while (element != NULL) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~
[0m[1mtext.c:2035:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2041[0m
 2035 |         while (element != NULL) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2041:26: [0m[0;1;36mnote: [0mArray access results in a null pointer dereference[0m
 2041 |         (*arguments)[count - 2] = filename;[0m
      | [0;1;32m        ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
[0m[1mtext.c:2057:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2057 |         if (descriptor < 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2058 |                 return FALSE;[0m
      | [0;1;32m                             
[0m[1mtext.c:2115:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2115 |                         if (spelling && openfile->mark)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2116 |                                 statusline(AHEM, _("Selection is empty"));[0m
 2117 |                         else[0m
      | [0;32m                        } 
[0m[1mtext.c:2117:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2117 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2118 | #endif[0m
 2119 |                                 statusline(AHEM, _("Buffer is empty"));[0m
      | [0;1;32m                                                                       
[0m[1mtext.c:2128:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2128 |         if (spelling)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2129 |                 endwin();[0m
 2130 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:2130:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2130 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2131 |                 statusbar(_("Invoking formatter..."));[0m
      | [0;1;32m                                                      
[0m[1mtext.c:2156:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2156 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2157 |                 full_refresh();[0m
      | [0;1;32m                               
[0m[1mtext.c:2167:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2167 |         } else if (WEXITSTATUS(program_status) != 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 2168 |                 statusline(ALERT, _("Program '%s' complained"), arguments[0]);[0m
      | [0;1;32m                                                                              
[0m[1mtext.c:2190:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2190 |                 if (upright)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2191 |                         was_x = openfile->current_x;[0m
 2192 |                 else[0m
      | [0;32m                } 
[0m[1mtext.c:2192:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2192 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2193 |                         openfile->mark_x = openfile->current_x;[0m
      | [0;1;32m                                                               
[0m[1mtext.c:2197:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2197 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 2198 | #endif[0m
 2199 |                 replaced = replace_buffer(tempfile_name, CUT_TO_EOF,[0m
 2200 |                                         /* TRANSLATORS: The next two go with Undid/Redid messages. */[0m
 2201 |                                         (spelling ? N_("spelling correction") : N_("formatting")));[0m
      | [0;1;32m                                                                                                   
[0m[1mtext.c:2205:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2205 |         if (was_at_eol || openfile->current_x > strlen(openfile->current->data))[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m 2206 |                 openfile->current_x = strlen(openfile->current->data);[0m
      | [0;1;32m                                                                      
[0m[1mtext.c:2218:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2218 |         if (spelling)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 2219 |                 statusline(REMARK, _("Finished checking spelling"));[0m
 2220 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:2220:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2220 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2221 |                 statusline(REMARK, _("Buffer has been processed"));[0m
      | [0;1;32m                                                                   
[0m[1mtext.c:2308:19: [0m[0;1;35mwarning: [0m[1mAssigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign][0m
 2308 |                         openfile->mark = top;[0m
      | [0;1;32m                                       ^
[0m[1mtext.c:2529:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2529 |         if (in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2529:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2529 |         if (in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mtext.c:2534:6: [0m[0;1;36mnote: [0mAssuming 'temp_name' is not equal to NULL[0m
 2534 |         if (temp_name == NULL) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mtext.c:2534:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2534 |         if (temp_name == NULL) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2540:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is null[0m
 2540 |         if (openfile->mark)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mtext.c:2540:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2540 |         if (openfile->mark)[0m
      | [0;1;32m        ^
[0m[1mtext.c:2546:6: [0m[0;1;36mnote: [0mAssuming 'okay' is true[0m
 2546 |         if (!okay) {[0m
      | [0;1;32m            ^~~~~
[0m[1mtext.c:2546:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2546 |         if (!okay) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2555:6: [0m[0;1;36mnote: [0mAssuming 'alt_speller' is null[0m
 2555 |         if (alt_speller && *alt_speller)[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mtext.c:2555:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2555 |         if (alt_speller && *alt_speller)[0m
      | [0;1;32m                        ^
[0m[1mtext.c:2558:3: [0m[0;1;36mnote: [0mCalling 'do_int_speller'[0m
 2558 |                 do_int_speller(temp_name);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2345:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 2345 |         if (pipe(spell_fd) == -1 || pipe(sort_fd) == -1 || pipe(uniq_fd) == -1) {[0m
      | [0;1;32m            ^
[0m[1mtext.c:2345:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mtext.c:2345:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2345 |         if (pipe(spell_fd) == -1 || pipe(sort_fd) == -1 || pipe(uniq_fd) == -1) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2353:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2353 |         if ((pid_spell = fork()) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2353:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2353 |         if ((pid_spell = fork()) == 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2382:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2382 |         if ((pid_sort = fork()) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2382:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2382 |         if ((pid_sort = fork()) == 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2405:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2405 |         if ((pid_uniq = fork()) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2405:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2405 |         if ((pid_uniq = fork()) == 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2425:6: [0m[0;1;36mnote: [0mAssuming 'pid_spell' is >= 0[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mtext.c:2425:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mtext.c:2425:23: [0m[0;1;36mnote: [0mAssuming 'pid_sort' is >= 0[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m                             ^~~~~~~~~~~~
[0m[1mtext.c:2425:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m            ^
[0m[1mtext.c:2425:39: [0m[0;1;36mnote: [0mAssuming 'pid_uniq' is >= 0[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m                                             ^~~~~~~~~~~~
[0m[1mtext.c:2425:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2434:6: [0m[0;1;36mnote: [0mAssuming 'pipesize' is >= 1[0m
 2434 |         if (pipesize < 1) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mtext.c:2434:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2434 |         if (pipesize < 1) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2451:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2451 |         while ((bytesread = read(uniq_fd[0], pointer, pipesize)) > 0) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2451:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2451 |         while ((bytesread = read(uniq_fd[0], pointer, pipesize)) > 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2451:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2451 |         while ((bytesread = read(uniq_fd[0], pointer, pipesize)) > 0) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2451:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2458[0m
 2451 |         while ((bytesread = read(uniq_fd[0], pointer, pipesize)) > 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2479:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2479 |         while (*pointer != '\0') {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2480:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2480 |                 if ((*pointer == '\r') || (*pointer == '\n')) {[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~
[0m[1mtext.c:2480:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 2480 |                 if ((*pointer == '\r') || (*pointer == '\n')) {[0m
      | [0;1;32m                    ^
[0m[1mtext.c:2480:30: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2480 |                 if ((*pointer == '\r') || (*pointer == '\n')) {[0m
      | [0;1;32m                                           ^~~~~~~~~~~~~~~~
[0m[1mtext.c:2480:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2480 |                 if ((*pointer == '\r') || (*pointer == '\n')) {[0m
      | [0;1;32m                ^
[0m[1mtext.c:2479:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2494[0m
 2479 |         while (*pointer != '\0') {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2494:6: [0m[0;1;36mnote: [0m'oneword' is not equal to 'pointer'[0m
 2494 |         if (oneword != pointer)[0m
      | [0;1;32m            ^~~~~~~
[0m[1mtext.c:2494:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 2494 |         if (oneword != pointer)[0m
      | [0;1;32m        ^
[0m[1mtext.c:2495:3: [0m[0;1;36mnote: [0mCalling 'fix_spello'[0m
 2495 |                 fix_spello(oneword);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2237:24: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
 2237 |         bool right_side_up = (openfile->mark && mark_is_before_cursor());[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1mtext.c:2237:24: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtext.c:2238:14: [0m[0;1;36mnote: [0m'top' declared without an initial value[0m
 2238 |         linestruct *top, *bot;[0m
      | [0;1;32m                    ^~~
[0m[1mtext.c:2242:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is null[0m
 2242 |         if (openfile->mark) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mtext.c:2242:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2242 |         if (openfile->mark) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2264:6: [0m[0;1;36mnote: [0mAssuming 'result' is not equal to 0[0m
 2264 |         if (result == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mtext.c:2264:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2264 |         if (result == 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2269:13: [0m[0;1;36mnote: [0mAssuming 'result' is not equal to 1[0m
 2269 |         } else if (result == 1) {[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mtext.c:2269:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 2269 |         } else if (result == 1) {[0m
      | [0;1;32m               ^
[0m[1mtext.c:2303:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
 2303 |         if (openfile->mark) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mtext.c:2303:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 2303 |         if (openfile->mark) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2305:7: [0m[0;1;36mnote: [0mAssuming 'right_side_up' is true[0m
 2305 |                 if (right_side_up) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~
[0m[1mtext.c:2305:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2305 |                 if (right_side_up) {[0m
      | [0;1;32m                ^
[0m[1mtext.c:2308:19: [0m[0;1;36mnote: [0mAssigned value is garbage or undefined[0m
 2308 |                         openfile->mark = top;[0m
      | [0;1;32m                                       ^ ~~~
[0m[1mtext.c:2311:22: [0m[0;1;35mwarning: [0m[1mAssigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign][0m
 2311 |                         openfile->current = top;[0m
      | [0;1;32m                                          ^
[0m[1mtext.c:2529:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2529 |         if (in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2529:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2529 |         if (in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mtext.c:2534:6: [0m[0;1;36mnote: [0mAssuming 'temp_name' is not equal to NULL[0m
 2534 |         if (temp_name == NULL) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mtext.c:2534:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2534 |         if (temp_name == NULL) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2540:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is null[0m
 2540 |         if (openfile->mark)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mtext.c:2540:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2540 |         if (openfile->mark)[0m
      | [0;1;32m        ^
[0m[1mtext.c:2546:6: [0m[0;1;36mnote: [0mAssuming 'okay' is true[0m
 2546 |         if (!okay) {[0m
      | [0;1;32m            ^~~~~
[0m[1mtext.c:2546:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2546 |         if (!okay) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2555:6: [0m[0;1;36mnote: [0mAssuming 'alt_speller' is null[0m
 2555 |         if (alt_speller && *alt_speller)[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mtext.c:2555:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2555 |         if (alt_speller && *alt_speller)[0m
      | [0;1;32m                        ^
[0m[1mtext.c:2558:3: [0m[0;1;36mnote: [0mCalling 'do_int_speller'[0m
 2558 |                 do_int_speller(temp_name);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2345:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 2345 |         if (pipe(spell_fd) == -1 || pipe(sort_fd) == -1 || pipe(uniq_fd) == -1) {[0m
      | [0;1;32m            ^
[0m[1mtext.c:2345:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mtext.c:2345:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2345 |         if (pipe(spell_fd) == -1 || pipe(sort_fd) == -1 || pipe(uniq_fd) == -1) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2353:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2353 |         if ((pid_spell = fork()) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2353:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2353 |         if ((pid_spell = fork()) == 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2382:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2382 |         if ((pid_sort = fork()) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2382:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2382 |         if ((pid_sort = fork()) == 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2405:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2405 |         if ((pid_uniq = fork()) == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2405:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2405 |         if ((pid_uniq = fork()) == 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2425:6: [0m[0;1;36mnote: [0mAssuming 'pid_spell' is >= 0[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mtext.c:2425:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mtext.c:2425:23: [0m[0;1;36mnote: [0mAssuming 'pid_sort' is >= 0[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m                             ^~~~~~~~~~~~
[0m[1mtext.c:2425:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m            ^
[0m[1mtext.c:2425:39: [0m[0;1;36mnote: [0mAssuming 'pid_uniq' is >= 0[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m                                             ^~~~~~~~~~~~
[0m[1mtext.c:2425:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2425 |         if (pid_spell < 0 || pid_sort < 0 || pid_uniq < 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2434:6: [0m[0;1;36mnote: [0mAssuming 'pipesize' is >= 1[0m
 2434 |         if (pipesize < 1) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mtext.c:2434:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2434 |         if (pipesize < 1) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2451:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2451 |         while ((bytesread = read(uniq_fd[0], pointer, pipesize)) > 0) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2451:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2451 |         while ((bytesread = read(uniq_fd[0], pointer, pipesize)) > 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2451:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2451 |         while ((bytesread = read(uniq_fd[0], pointer, pipesize)) > 0) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2451:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2458[0m
 2451 |         while ((bytesread = read(uniq_fd[0], pointer, pipesize)) > 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2479:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2479 |         while (*pointer != '\0') {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2480:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2480 |                 if ((*pointer == '\r') || (*pointer == '\n')) {[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~
[0m[1mtext.c:2480:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
 2480 |                 if ((*pointer == '\r') || (*pointer == '\n')) {[0m
      | [0;1;32m                    ^
[0m[1mtext.c:2480:30: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2480 |                 if ((*pointer == '\r') || (*pointer == '\n')) {[0m
      | [0;1;32m                                           ^~~~~~~~~~~~~~~~
[0m[1mtext.c:2480:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2480 |                 if ((*pointer == '\r') || (*pointer == '\n')) {[0m
      | [0;1;32m                ^
[0m[1mtext.c:2479:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2494[0m
 2479 |         while (*pointer != '\0') {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2494:6: [0m[0;1;36mnote: [0m'oneword' is not equal to 'pointer'[0m
 2494 |         if (oneword != pointer)[0m
      | [0;1;32m            ^~~~~~~
[0m[1mtext.c:2494:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 2494 |         if (oneword != pointer)[0m
      | [0;1;32m        ^
[0m[1mtext.c:2495:3: [0m[0;1;36mnote: [0mCalling 'fix_spello'[0m
 2495 |                 fix_spello(oneword);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2237:24: [0m[0;1;36mnote: [0mAssuming field 'mark' is null[0m
 2237 |         bool right_side_up = (openfile->mark && mark_is_before_cursor());[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~
[0m[1mtext.c:2237:39: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2237 |         bool right_side_up = (openfile->mark && mark_is_before_cursor());[0m
      | [0;1;32m                                             ^
[0m[1mtext.c:2238:14: [0m[0;1;36mnote: [0m'top' declared without an initial value[0m
 2238 |         linestruct *top, *bot;[0m
      | [0;1;32m                    ^~~
[0m[1mtext.c:2242:16: [0m[0;1;36mnote: [0mField 'mark' is null[0m
 2242 |         if (openfile->mark) {[0m
      | [0;1;32m                      ^
[0m[1mtext.c:2242:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2242 |         if (openfile->mark) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2264:6: [0m[0;1;36mnote: [0mAssuming 'result' is not equal to 0[0m
 2264 |         if (result == 0) {[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mtext.c:2264:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2264 |         if (result == 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2269:13: [0m[0;1;36mnote: [0mAssuming 'result' is not equal to 1[0m
 2269 |         } else if (result == 1) {[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mtext.c:2269:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 2269 |         } else if (result == 1) {[0m
      | [0;1;32m               ^
[0m[1mtext.c:2303:6: [0m[0;1;36mnote: [0mAssuming field 'mark' is non-null[0m
 2303 |         if (openfile->mark) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mtext.c:2303:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 2303 |         if (openfile->mark) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2305:7: [0m[0;1;36mnote: [0m'right_side_up' is false[0m
 2305 |                 if (right_side_up) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~
[0m[1mtext.c:2305:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2305 |                 if (right_side_up) {[0m
      | [0;1;32m                ^
[0m[1mtext.c:2311:22: [0m[0;1;36mnote: [0mAssigned value is garbage or undefined[0m
 2311 |                         openfile->current = top;[0m
      | [0;1;32m                                          ^ ~~~
[0m[1mtext.c:2355:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2355 |                 if ((tempfile_fd = open(tempfile_name, O_RDONLY)) == -1)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 2356 |                         exit(6);[0m
      | [0;1;32m                                
[0m[1mtext.c:2359:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2359 |                 if (dup2(tempfile_fd, STDIN_FILENO) < 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2360 |                         exit(7);[0m
      | [0;1;32m                                
[0m[1mtext.c:2363:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2363 |                 if (dup2(spell_fd[1], STDOUT_FILENO) < 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 2364 |                         exit(8);[0m
      | [0;1;32m                                
[0m[1mtext.c:2384:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2384 |                 if (dup2(spell_fd[0], STDIN_FILENO) < 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2385 |                         exit(7);[0m
      | [0;1;32m                                
[0m[1mtext.c:2388:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2388 |                 if (dup2(sort_fd[1], STDOUT_FILENO) < 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2389 |                         exit(8);[0m
      | [0;1;32m                                
[0m[1mtext.c:2406:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2406 |                 if (dup2(sort_fd[0], STDIN_FILENO) < 0)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 2407 |                         exit(7);[0m
      | [0;1;32m                                
[0m[1mtext.c:2409:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2409 |                 if (dup2(uniq_fd[1], STDOUT_FILENO) < 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2410 |                         exit(8);[0m
      | [0;1;32m                                
[0m[1mtext.c:2468:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2468 |         memcpy(stash, flags, sizeof(flags));[0m
      | [0;1;32m        ^~~~~~
[0m[1mtext.c:2468:2: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2468 |         memcpy(stash, flags, sizeof(flags));[0m
      | [0;1;32m        ^~~~~~
[0m[1mtext.c:2494:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2494 |         if (oneword != pointer)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2495 |                 fix_spello(oneword);[0m
      | [0;1;32m                                    
[0m[1mtext.c:2501:2: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2501 |         memcpy(flags, stash, sizeof(flags));[0m
      | [0;1;32m        ^~~~~~
[0m[1mtext.c:2501:2: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2501 |         memcpy(flags, stash, sizeof(flags));[0m
      | [0;1;32m        ^~~~~~
[0m[1mtext.c:2508:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2508 |         if (WIFEXITED(uniq_status) == 0 || WEXITSTATUS(uniq_status))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2509 |                 statusline(ALERT, _("Error invoking \"uniq\""));[0m
 2510 |         else if (WIFEXITED(sort_status) == 0 || WEXITSTATUS(sort_status))[0m
      | [0;32m        } 
[0m[1mtext.c:2510:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2510 |         else if (WIFEXITED(sort_status) == 0 || WEXITSTATUS(sort_status))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 2511 |                 statusline(ALERT, _("Error invoking \"sort\""));[0m
 2512 |         else if (WIFEXITED(spell_status) == 0 || WEXITSTATUS(spell_status))[0m
      | [0;32m        } 
[0m[1mtext.c:2512:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2512 |         else if (WIFEXITED(spell_status) == 0 || WEXITSTATUS(spell_status))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 2513 |                 statusline(ALERT, _("Error invoking \"spell\""));[0m
 2514 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:2514:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2514 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2515 |                 statusline(REMARK, _("Finished checking spelling"));[0m
      | [0;1;32m                                                                    
[0m[1mtext.c:2529:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2529 |         if (in_restricted_mode())[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2530 |                 return;[0m
      | [0;1;32m                       
[0m[1mtext.c:2540:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2540 |         if (openfile->mark)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 2541 |                 okay = write_region_to_file(temp_name, stream, TEMPORARY, OVERWRITE);[0m
 2542 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:2542:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2542 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2543 | #endif[0m
 2544 |                 okay = write_file(temp_name, stream, TEMPORARY, OVERWRITE, NONOTES);[0m
      | [0;1;32m                                                                                    
[0m[1mtext.c:2555:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2555 |         if (alt_speller && *alt_speller)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2556 |                 treat(temp_name, alt_speller, TRUE);[0m
 2557 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:2557:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2557 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2558 |                 do_int_speller(temp_name);[0m
      | [0;1;32m                                          
[0m[1mtext.c:2586:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2586 |         if (in_restricted_mode())[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2587 |                 return;[0m
      | [0;1;32m                       
[0m[1mtext.c:2605:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2605 |                 } else if (choice == YES && (write_it_out(FALSE, FALSE) != 1))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 2606 |                         return;[0m
      | [0;1;32m                               
[0m[1mtext.c:2624:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2624 |                 if (dup2(lint_fd[1], STDOUT_FILENO) < 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2625 |                         exit(7);[0m
      | [0;1;32m                                
[0m[1mtext.c:2626:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2626 |                 if (dup2(lint_fd[1], STDERR_FILENO) < 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 2627 |                         exit(8);[0m
      | [0;1;32m                                
[0m[1mtext.c:2710:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2710 |                                                                 if ((colstring = strtok(NULL, ",")))[0m
      | [0;1;32m                                                                                                    ^
[0m      | [0;32m                                                                                                     {
[0m 2711 |                                                                         colnumber = strtol(colstring, NULL, 10);[0m
      | [0;1;32m                                                                                                                
[0m[1mtext.c:2719:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2719 |                                                         if (curlint->prev != NULL)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m 2720 |                                                                 curlint->prev->next = curlint;[0m
      | [0;1;32m                                                                                              
[0m[1mtext.c:2726:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2726 |                                                         if (lints == NULL)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 2727 |                                                                 lints = curlint;[0m
      | [0;1;32m                                                                                
[0m[1mtext.c:2779:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2779 |                                                 openfile->statinfo->st_ino != lintfileinfo.st_ino))[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m 2780 |                                 openfile = openfile->next;[0m
      | [0;1;32m                                                          
[0m[1mtext.c:2787:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2787 |                                 sprintf(msg, _("This message is for unopened file %s,"[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mtext.c:2787:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2787 |                                 sprintf(msg, _("This message is for unopened file %s,"[0m
      | [0;1;32m                                ^~~~~~~
[0m[1mtext.c:2805:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2805 |                                                         if (curlint == lints)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 2806 |                                                                 lints = curlint->next;[0m
 2807 |                                                         else[0m
      | [0;32m                                                        } 
[0m[1mtext.c:2807:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2807 |                                                         else[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 2808 |                                                                 curlint->prev->next = curlint->next;[0m
      | [0;1;32m                                                                                                    
[0m[1mtext.c:2809:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2809 |                                                         if (curlint->next != NULL)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m 2810 |                                                                 curlint->next->prev = curlint->prev;[0m
      | [0;1;32m                                                                                                    
[0m[1mtext.c:2817:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2817 |                                                         if (restlint == NULL)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 2818 |                                                                 restlint = curlint;[0m
      | [0;1;32m                                                                                   
[0m[1mtext.c:2860:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2860 |                 if (kbinput == KEY_WINCH)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2861 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mtext.c:2873:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2873 |                         if (curlint->prev != NULL)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2874 |                                 curlint = curlint->prev;[0m
 2875 |                         else if (last_wait != time(NULL)) {[0m
      | [0;32m                        } 
[0m[1mtext.c:2883:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2883 |                         if (curlint->next != NULL)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 2884 |                                 curlint = curlint->next;[0m
 2885 |                         else if (last_wait != time(NULL)) {[0m
      | [0;32m                        } 
[0m[1mtext.c:2892:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2892 |                 } else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2893 |                         beep();[0m
      | [0;1;32m                               
[0m[1mtext.c:2927:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2927 |         if (in_restricted_mode())[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2928 |                 return;[0m
      | [0;1;32m                       
[0m[1mtext.c:2941:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2941 |         if (temp_name != NULL)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2942 |                 okay = write_file(temp_name, stream, TEMPORARY, OVERWRITE, NONOTES);[0m
      | [0;1;32m                                                                                    
[0m[1mtext.c:2944:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2944 |         if (!okay)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2945 |                 statusline(ALERT, _("Error writing temp file: %s"), strerror(errno));[0m
 2946 |         else[0m
      | [0;32m        } 
[0m[1mtext.c:2946:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2946 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2947 |                 treat(temp_name, openfile->syntax->formatter, FALSE);[0m
      | [0;1;32m                                                                     
[0m[1mtext.c:2949:2: [0m[0;1;35mwarning: [0m[1mNull pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker][0m
 2949 |         unlink(temp_name);[0m
      | [0;1;32m        ^      ~~~~~~~~~
[0m[1mtext.c:2927:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2927 |         if (in_restricted_mode())[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2927:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2927 |         if (in_restricted_mode())[0m
      | [0;1;32m        ^
[0m[1mtext.c:2930:6: [0m[0;1;36mnote: [0mAssuming field 'syntax' is non-null[0m
 2930 |         if (!openfile->syntax || !openfile->syntax->formatter) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mtext.c:2930:6: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mtext.c:2930:27: [0m[0;1;36mnote: [0mAssuming field 'formatter' is non-null[0m
 2930 |         if (!openfile->syntax || !openfile->syntax->formatter) {[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2930:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2930 |         if (!openfile->syntax || !openfile->syntax->formatter) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:2939:2: [0m[0;1;36mnote: [0mValue assigned to 'temp_name'[0m
 2939 |         temp_name = safe_tempfile(&stream);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:2941:6: [0m[0;1;36mnote: [0mAssuming 'temp_name' is equal to NULL[0m
 2941 |         if (temp_name != NULL)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mtext.c:2941:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2941 |         if (temp_name != NULL)[0m
      | [0;1;32m        ^
[0m[1mtext.c:2944:7: [0m[0;1;36mnote: [0m'okay' is false[0m
 2944 |         if (!okay)[0m
      | [0;1;32m             ^~~~
[0m[1mtext.c:2944:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 2944 |         if (!okay)[0m
      | [0;1;32m        ^
[0m[1mtext.c:2949:2: [0m[0;1;36mnote: [0mNull pointer passed to 1st parameter expecting 'nonnull'[0m
 2949 |         unlink(temp_name);[0m
      | [0;1;32m        ^      ~~~~~~~~~
[0m[1mtext.c:2971:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2971 |                 if (topline != botline)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2972 |                         chars = number_of_characters_in(topline->next, botline) + 1;[0m
      | [0;1;32m                                                                                    
[0m[1mtext.c:2996:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2996 |                 if (do_next_word(FALSE))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2997 |                         words++;[0m
      | [0;1;32m                                
[0m[1mtext.c:3036:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3036 |                 if (ISSET(CONSTANT_SHOW) || ISSET(MINIBAR))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 3037 |                         lastmessage = VACUUM;[0m
      | [0;1;32m                                             
[0m[1mtext.c:3039:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3039 |                 if (count < 999)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3040 |                         inject(bytes, count);[0m
      | [0;1;32m                                             
[0m[1mtext.c:3044:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3044 |                 if (ISSET(ZERO) && currmenu == MMAIN)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3045 |                         wredrawln(midwin, editwinrows - 1, 1);[0m
 3046 |                 else[0m
      | [0;32m                } 
[0m[1mtext.c:3046:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3046 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 3047 | #endif[0m
 3048 |                         wipe_statusbar();[0m
      | [0;1;32m                                         
[0m[1mtext.c:3049:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3049 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3050 |                 /* TRANSLATORS: An invalid verbatim Unicode code was typed. */[0m
 3051 |                 statusline(AHEM, _("Invalid code"));[0m
      | [0;1;32m                                                    
[0m[1mtext.c:3064:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3064 |         while (is_word_char(&text[length], FALSE))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 3065 |                 length = step_right(text, length);[0m
      | [0;1;32m                                                  
[0m[1mtext.c:3069:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3069 |         while (index < length)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3070 |                 word[index++] = *(text++);[0m
      | [0;1;32m                                          
[0m[1mtext.c:3122:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3122 |                 if (!is_word_char(&openfile->current->data[oneleft], FALSE))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 3123 |                         break;[0m
      | [0;1;32m                              
[0m[1mtext.c:3138:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3138 |         while (start_of_shard < openfile->current_x)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3139 |                 shard[shard_length++] = openfile->current->data[start_of_shard++];[0m
      | [0;1;32m                                                                                  
[0m[1mtext.c:3150:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3150 |                         if (pletion_line->data[i] != shard[0])[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 3151 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mtext.c:3154:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3154 |                         for (j = 1; j < shard_length; j++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 3155 |                                 if (pletion_line->data[i + j] != shard[j])[0m
 3156 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mtext.c:3155:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3155 |                                 if (pletion_line->data[i + j] != shard[j])[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 3156 |                                         break;[0m
      | [0;1;32m                                              
[0m[1mtext.c:3159:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3159 |                         if (j < shard_length)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3160 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mtext.c:3163:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3163 |                         if (!is_word_char(&pletion_line->data[i + j], FALSE))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 3164 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mtext.c:3168:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3168 |                                                                 step_left(pletion_line->data, i)], FALSE))[0m
      | [0;1;32m                                                                                                          ^
[0m      | [0;32m                                                                                                           {
[0m 3169 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mtext.c:3173:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3173 |                                                                 i == openfile->current_x - shard_length)[0m
      | [0;1;32m                                                                                                        ^
[0m      | [0;32m                                                                                                         {
[0m 3174 |                                 continue;[0m
      | [0;1;32m                                         
[0m[1mtext.c:3180:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3180 |                         while (some_word && strcmp(some_word->word, completion) != 0)[0m
      | [0;1;32m                                                                                     ^
[0m      | [0;32m                                                                                      {
[0m 3181 |                                 some_word = some_word->next;[0m
      | [0;1;32m                                                            
[0m[1mtext.c:3221:31: [0m[0;1;35mwarning: [0m[1mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'scouring') [clang-analyzer-core.NullDereference][0m
 3221 |                 if (pletion_line == NULL && scouring->next != openfile) {[0m
      | [0;1;32m                                            ^~~~~~~~
[0m[1mtext.c:3082:2: [0m[0;1;36mnote: [0m'scouring' initialized to a null pointer value[0m
 3082 |         static openfilestruct *scouring = NULL;[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3089:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 3089 |         bool was_set_wrapping = ISSET(BREAK_LONG_LINES);[0m
      | [0;1;32m                                ^
[0m[1m./definitions.h:105:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSET'[0m
  105 | #define ISSET(flag)  ((FLAGS(flag) & FLAGMASK(flag)) != 0)[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3093:6: [0m[0;1;36mnote: [0mAssuming 'pletion_line' is not equal to NULL[0m
 3093 |         if (pletion_line == NULL) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3093:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 3093 |         if (pletion_line == NULL) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:3119:9: [0m[0;1;36mnote: [0mAssuming 'start_of_shard' is > 0[0m
 3119 |         while (start_of_shard > 0) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3119:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 3119 |         while (start_of_shard > 0) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:3122:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 3122 |                 if (!is_word_char(&openfile->current->data[oneleft], FALSE))[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3122:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 3122 |                 if (!is_word_char(&openfile->current->data[oneleft], FALSE))[0m
      | [0;1;32m                ^
[0m[1mtext.c:3123:4: [0m[0;1;36mnote: [0m Execution continues on line 3128[0m
 3123 |                         break;[0m
      | [0;1;32m                        ^
[0m[1mtext.c:3128:6: [0m[0;1;36mnote: [0mAssuming 'start_of_shard' is not equal to field 'current_x'[0m
 3128 |         if (start_of_shard == openfile->current_x) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3128:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 3128 |         if (start_of_shard == openfile->current_x) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:3138:9: [0m[0;1;36mnote: [0mAssuming 'start_of_shard' is >= field 'current_x'[0m
 3138 |         while (start_of_shard < openfile->current_x)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3138:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 3140[0m
 3138 |         while (start_of_shard < openfile->current_x)[0m
      | [0;1;32m        ^
[0m[1mtext.c:3143:9: [0m[0;1;36mnote: [0mAssuming 'pletion_line' is not equal to NULL[0m
 3143 |         while (pletion_line != NULL) {[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3143:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 3143 |         while (pletion_line != NULL) {[0m
      | [0;1;32m        ^
[0m[1mtext.c:3148:23: [0m[0;1;36mnote: [0mAssuming 'i' is >= 'threshold'[0m
 3148 |                 for (i = pletion_x; (ssize_t)i < threshold; i++) {[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3148:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 3216[0m
 3148 |                 for (i = pletion_x; (ssize_t)i < threshold; i++) {[0m
      | [0;1;32m                ^
[0m[1mtext.c:3221:7: [0m[0;1;36mnote: [0mAssuming 'pletion_line' is equal to NULL[0m
 3221 |                 if (pletion_line == NULL && scouring->next != openfile) {[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~
[0m[1mtext.c:3221:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtext.c:3221:31: [0m[0;1;36mnote: [0mAccess to field 'next' results in a dereference of a null pointer (loaded from variable 'scouring')[0m
 3221 |                 if (pletion_line == NULL && scouring->next != openfile) {[0m
      | [0;1;32m                                            ^~~~~~~~
[0m[1mtext.c:3232:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3232 |         } else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3233 |                 /* TRANSLATORS: Shown when there are zero possible completions. */[0m
 3234 |                 statusline(AHEM, _("No matches"));[0m
      | [0;1;32m                                                  
[0m304 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
