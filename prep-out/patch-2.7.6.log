Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/patch-2.7.6
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 76 files out of 76 in compilation database ...
[ 1/76][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpa1snm_zg.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/localtime-buffer.c
[ 2/76][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpp301vcve.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/chmodat.c
[ 3/76][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp4myrgt1t.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/dup-safer-flag.c
[ 4/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp3c4n60tk.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/fchownat.c
8 warnings generated.
Suppressed 8 warnings (8 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 5/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp49qzizeh.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/progname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 6/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpfs5iv1kb.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/xstrndup.c
[1mxstrndup.c:33:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (! s)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   34 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 7/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpxgvq5og9.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/c-ctype.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 8/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpn87ekxiz.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/gettime.c
[1mgettime.c:36:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   if (clock_gettime (CLOCK_REALTIME, ts) == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m   37 |     return;[0m
      | [0;1;32m           
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 9/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpvla32x6i.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/malloca.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[10/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmprptvgu3n.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/mbrtowc.c
[1mmbrtowc.c:360:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  360 |   if (! pwc)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  361 |     pwc = &wc;[0m
      | [0;1;32m              
[0m1 warning generated.

[11/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp8hn2kca0.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/dirname.c
[1mdirname.c:35:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!result)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m7 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[12/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpb7rgpzje.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/basename.c
[1mbasename.c:35:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (! *base)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   36 |     return xstrndup (name, base_len (name));[0m
      | [0;1;32m                                            
[0m[1mbasename.c:40:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |   if (ISSLASH (base[length]))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   41 |     length++;[0m
      | [0;1;32m             
[0m[1mbasename.c:51:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   51 |       memcpy (p + 2, base, length);[0m
      | [0;1;32m      ^~~~~~
[0m[1mbasename.c:51:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   51 |       memcpy (p + 2, base, length);[0m
      | [0;1;32m      ^~~~~~
[0m7 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[13/76][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp_htupw9z.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/cloexec.c
[1mcloexec.c:50:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |           || fcntl (desc, F_SETFD, newflags) != -1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   51 |         return 0;[0m
      | [0;1;32m                 
[0m1 warning generated.

[14/76][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp5l_jkb58.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/bitrotate.c
[15/76][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpqqz806xl.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/xsize.c
[16/76][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp57fzm46i.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/fd-hook.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[17/76][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpkbpya6o0.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/openat-proc.c
[1mopenat-proc.c:78:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |         if (proc_self_fd < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   79 |           proc_status = -1;[0m
   80 |         else[0m
      | [0;32m        } 
[0m[1mopenat-proc.c:88:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   88 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:88:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   88 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:94:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |     if (proc_status < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   95 |       return NULL;[0m
   96 |     else[0m
      | [0;32m    } 
[0m[1mopenat-proc.c:102:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |             if (! result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  103 |               return NULL;[0m
      | [0;1;32m                          
[0m[1mopenat-proc.c:106:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  106 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:106:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  106 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:132:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  132 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mopenat-proc.c:132:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  132 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m8 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[18/76][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpdtixjbf3.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/save-cwd.c
[1msave-cwd.c:67:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   68 |     cwd->desc = fd_safer_flag (cwd->desc, O_CLOEXEC);[0m
      | [0;1;32m                                                     
[0m[1msave-cwd.c:71:19: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'getcwd' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   71 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:67:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   67 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:69:7: [0m[0;1;36mnote: [0mAssuming field 'desc' is < 0[0m
   69 |   if (cwd->desc < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1msave-cwd.c:69:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   69 |   if (cwd->desc < 0)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:71:19: [0m[0;1;36mnote: [0mThe 1st argument to 'getcwd' is NULL but should not be NULL[0m
   71 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:85:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (0 <= cwd->desc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   86 |     return fchdir (cwd->desc);[0m
   87 |   else[0m
      | [0;32m  } 
[0m[1msave-cwd.c:87:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   88 |     return chdir_long (cwd->name);[0m
      | [0;1;32m                                  
[0m[1msave-cwd.c:94:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |   if (cwd->desc >= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   95 |     close (cwd->desc);[0m
      | [0;1;32m                      
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[19/76][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpftw_i4s2.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/gl_linked_list.c
66 warnings generated.
Suppressed 66 warnings (66 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[20/76][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpff6oiu34.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/argmatch.c
[1margmatch.c:99:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |           if (strlen (arglist[i]) == arglen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  100 |             /* Exact match found.  */[0m
  101 |             return i;[0m
  102 |           else if (matchind == -1)[0m
      | [0;32m          } 
[0m[1margmatch.c:102:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |           else if (matchind == -1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  103 |             /* First nonexact match found.  */[0m
  104 |             matchind = i;[0m
  105 |           else[0m
      | [0;32m          } 
[0m[1margmatch.c:119:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |   if (ambiguous)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  120 |     return -2;[0m
  121 |   else[0m
      | [0;32m  } 
[0m[1margmatch.c:121:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  122 |     return matchind;[0m
      | [0;1;32m                    
[0m[1margmatch.c:155:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  156 |     if ((i == 0)[0m
  157 |         || memcmp (last_val, vallist + valsize * i, valsize))[0m
  158 |       {[0m
  159 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
  160 |         last_val = vallist + valsize * i;[0m
  161 |       }[0m
  162 |     else[0m
  163 |       {[0m
  164 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
  165 |       }[0m
      | [0;1;32m       
[0m[1margmatch.c:159:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  159 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:159:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  159 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:164:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  164 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:164:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  164 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:182:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |   if (res >= 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  183 |     /* Success. */[0m
  184 |     return res;[0m
      | [0;1;32m               
[0m[1margmatch.c:203:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  204 |     if (!memcmp (value, vallist + valsize * i, valsize))[0m
  205 |       return arglist[i];[0m
      | [0;1;32m                        
[0m[1margmatch.c:204:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |     if (!memcmp (value, vallist + valsize * i, valsize))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  205 |       return arglist[i];[0m
      | [0;1;32m                        
[0m22 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[21/76][1.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpzyiii2zd.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/filenamecat-lgpl.c
[1mfilenamecat-lgpl.c:57:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |       if (! ISSLASH (dir[dirlen - 1]) && ! ISSLASH (*base))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   58 |         sep = '/';[0m
      | [0;1;32m                  
[0m[1mfilenamecat-lgpl.c:73:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |   if (p_concat == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   74 |     return NULL;[0m
      | [0;1;32m                
[0m[1mfilenamecat-lgpl.c:80:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |   if (base_in_result)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   81 |     *base_in_result = p;[0m
      | [0;1;32m                        
[0m5 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[22/76][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpjh1a7kdk.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/fd-safer-flag.c
[23/76][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpsff9nl0k.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/full-write.c
[1mfull-write.c:66:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (n_rw == (size_t) -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   67 |         break;[0m
      | [0;1;32m              
[0m1 warning generated.

[24/76][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpdx1p4qm2.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/gl_list.c
[25/76][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp4r6t5x3e.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/xmemdup0.c
[1mxmemdup0.c:41:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   41 |   memcpy (result, p, s);[0m
      | [0;1;32m  ^~~~~~
[0m[1mxmemdup0.c:41:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   41 |   memcpy (result, p, s);[0m
      | [0;1;32m  ^~~~~~
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[26/76][2.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpwyfwm0hg.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/dirname-lgpl.c
[1mdirname-lgpl.c:49:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |        prefix_length < length; length--)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   50 |     if (! ISSLASH (file[length - 1]))[0m
   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:50:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |     if (! ISSLASH (file[length - 1]))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:79:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |   if (!dir)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   80 |     return NULL;[0m
      | [0;1;32m                
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:82:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |   if (append_dot)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   83 |     dir[length++] = '.';[0m
      | [0;1;32m                        
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[27/76][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp52etcn2l.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/wctype-h.c
[28/76][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpe262syjo.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/pipe-safer.c
[29/76][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpjdw_imok.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/chownat.c
[30/76][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp0do8pka9.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/xalloc-die.c
16 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[31/76][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpqhsy8ori.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/stripslash.c
[1mstripslash.c:39:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (! *base)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   40 |     base = file;[0m
      | [0;1;32m                
[0m1 warning generated.

[32/76][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpyxr40s9r.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/exitfail.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[33/76][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpnhu7e8c0.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/safe-write.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[34/76][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp6z4g04xx.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/fd-safer.c
[35/76][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpfxlgy7dv.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/openat-die.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[36/76][2.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpi5bfq4nk.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/src/version.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[37/76][0.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpaaqaqhv6.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/timespec.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[38/76][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpgdvmu46h.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/fcntl.c
[1mfcntl.c:354:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |                 if (result < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  355 |                   break;[0m
      | [0;1;32m                        
[0m[1mfcntl.c:359:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  359 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  360 |           result = rpl_fcntl (fd, F_DUPFD, target);[0m
      | [0;1;32m                                                   
[0m2 warnings generated.

[39/76][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp4grn7t9s.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/backup-find.c
[1mbackup-find.c:35:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!result)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mbackup-find.c:71:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |   if (version == 0 || *version == 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m   72 |     return numbered_existing_backups;[0m
   73 |   else[0m
      | [0;32m  } 
[0m[1mbackup-find.c:73:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   73 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   74 |     return XARGMATCH (context, version, backup_args, backup_types);[0m
      | [0;1;32m                                                                   
[0m[1mbackup-find.c:87:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   if (version && *version)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   88 |     return get_version (context, version);[0m
   89 |   else[0m
      | [0;32m  } 
[0m[1mbackup-find.c:89:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   90 |     return get_version ("$VERSION_CONTROL", getenv ("VERSION_CONTROL"));[0m
      | [0;1;32m                                                                        
[0m11 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[40/76][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpxy7gsi2z.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/statat.c
[41/76][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpdtjfer61.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/basename-lgpl.c
[1mbasename-lgpl.c:36:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   36 |   while (ISSLASH (*base))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   37 |     base++;[0m
      | [0;1;32m           
[0m[1mbasename-lgpl.c:41:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (ISSLASH (*p))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   42 |         saw_slash = true;[0m
   43 |       else if (saw_slash)[0m
      | [0;32m      } 
[0m[1mbasename-lgpl.c:63:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |   for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   64 |     continue;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:67:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |       && ISSLASH (name[0]) && ISSLASH (name[1]) && ! name[2])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   68 |     return 2;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:71:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |       && len == prefix_len && ISSLASH (name[prefix_len]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   72 |     return prefix_len + 1;[0m
      | [0;1;32m                          
[0m5 warnings generated.

[42/76][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpa62i1jiy.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/asnprintf.c
[43/76][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpmc4vsxax.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/getprogname.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[44/76][3.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpuxxz95s6.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/renameat2.c
[1mrenameat2.c:93:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |   if (! (ret_val < 0 && (err == EINVAL || err == ENOSYS || err == ENOTSUP)))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m   94 |     return ret_val;[0m
      | [0;1;32m                   
[0m[1mrenameat2.c:112:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |       if (flags & ~RENAME_NOREPLACE)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  113 |         return errno_fail (ENOTSUP);[0m
  114 |       else[0m
      | [0;32m      } 
[0m[1mrenameat2.c:118:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |           if (lstatat (fd2, dst, &dst_st) == 0 || errno == EOVERFLOW)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  119 |             return errno_fail (EEXIST);[0m
      | [0;1;32m                                       
[0m[1mrenameat2.c:120:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  120 |           if (errno != ENOENT)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  121 |             return -1;[0m
      | [0;1;32m                      
[0m[1mrenameat2.c:129:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |   if (!src_len || !dst_len)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  130 |     return renameat (fd1, src, fd2, dst);[0m
      | [0;1;32m                                         
[0m[1mrenameat2.c:134:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |   if (!src_slash && !dst_slash)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  135 |     return renameat (fd1, src, fd2, dst);[0m
      | [0;1;32m                                         
[0m[1mrenameat2.c:141:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  141 |   if (lstatat (fd1, src, &src_st))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  142 |     return -1;[0m
      | [0;1;32m              
[0m[1mrenameat2.c:145:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       if (!S_ISDIR (src_st.st_mode))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  146 |         return errno_fail (ENOENT);[0m
      | [0;1;32m                                   
[0m[1mrenameat2.c:150:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |       if (errno != ENOENT || !S_ISDIR (src_st.st_mode))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  151 |         return -1;[0m
      | [0;1;32m                  
[0m[1mrenameat2.c:153:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |   else if (!S_ISDIR (dst_st.st_mode))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  154 |     return errno_fail (ENOTDIR);[0m
  155 |   else if (!S_ISDIR (src_st.st_mode))[0m
      | [0;32m  } 
[0m[1mrenameat2.c:155:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |   else if (!S_ISDIR (src_st.st_mode))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  156 |     return errno_fail (EISDIR);[0m
      | [0;1;32m                               
[0m[1mrenameat2.c:212:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |   if (src_temp != src)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  213 |     free (src_temp);[0m
      | [0;1;32m                    
[0m[1mrenameat2.c:214:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  214 |   if (dst_temp != dst)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  215 |     free (dst_temp);[0m
      | [0;1;32m                    
[0m15 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[45/76][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmprdr8q87p.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/gl_xlist.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[46/76][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmplyk07sfw.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/dup-safer.c
[47/76][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp2mw_wkov.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/xasprintf.c
[48/76][0.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpqo1v2o87.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/unistd.c
[49/76][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpqwdpgiqj.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/xvasprintf.c
[1mxvasprintf.c:67:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |       memcpy (p, next, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mxvasprintf.c:67:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   67 |       memcpy (p, next, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mxvasprintf.c:89:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |         if (*f == '\0')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   90 |           /* Recognized the special case of string concatenation.  */[0m
   91 |           return xstrcat (argcount, args);[0m
      | [0;1;32m                                          
[0m[1mxvasprintf.c:92:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |         if (*f != '%')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   93 |           break;[0m
      | [0;1;32m                
[0m[1mxvasprintf.c:95:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |         if (*f != 's')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   96 |           break;[0m
      | [0;1;32m                
[0m[1mxvasprintf.c:104:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  104 |       if (errno == ENOMEM)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  105 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[50/76][4.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp__x4s6jj.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/printf-args.c
[1mprintf-args.c:41:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |   for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m[1mprintf-args.c:45:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   45 |         ap->a.a_schar = va_arg (args, /*signed char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   46 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:48:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   48 |         ap->a.a_uchar = va_arg (args, /*unsigned char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   49 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:51:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   51 |         ap->a.a_short = va_arg (args, /*short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   52 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:54:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |         ap->a.a_ushort = va_arg (args, /*unsigned short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   55 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:57:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   57 |         ap->a.a_int = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   58 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:60:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |         ap->a.a_uint = va_arg (args, unsigned int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   61 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:63:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |         ap->a.a_longint = va_arg (args, long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   64 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:66:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   66 |         ap->a.a_ulongint = va_arg (args, unsigned long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   67 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:70:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   70 |         ap->a.a_longlongint = va_arg (args, long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   71 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:73:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   73 |         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   74 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:77:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   77 |         ap->a.a_double = va_arg (args, double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   78 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:80:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   80 |         ap->a.a_longdouble = va_arg (args, long double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   81 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:83:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   83 |         ap->a.a_char = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   84 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:90:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   90 |         ap->a.a_wide_char =[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   91 |           (sizeof (wint_t) < sizeof (int)[0m
   92 |            ? (wint_t) va_arg (args, int)[0m
   93 |            : va_arg (args, wint_t));[0m
   94 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:97:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   97 |         ap->a.a_string = va_arg (args, const char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   98 |         /* A null pointer is an invalid argument for "%s", but in practice[0m
   99 |            it occurs quite frequently in printf statements that produce[0m
  100 |            debug output.  Use a fallback in this case.  */[0m
  101 |         if (ap->a.a_string == NULL)[0m
  102 |           ap->a.a_string = "(NULL)";[0m
  103 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:101:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |         if (ap->a.a_string == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  102 |           ap->a.a_string = "(NULL)";[0m
      | [0;1;32m                                    
[0m[1mprintf-args.c:106:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  106 |         ap->a.a_wide_string = va_arg (args, const wchar_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  107 |         /* A null pointer is an invalid argument for "%ls", but in practice[0m
  108 |            it occurs quite frequently in printf statements that produce[0m
  109 |            debug output.  Use a fallback in this case.  */[0m
  110 |         if (ap->a.a_wide_string == NULL)[0m
  111 |           {[0m
  112 |             static const wchar_t wide_null_string[] =[0m
  113 |               {[0m
  114 |                 (wchar_t)'(',[0m
  115 |                 (wchar_t)'N', (wchar_t)'U', (wchar_t)'L', (wchar_t)'L',[0m
  116 |                 (wchar_t)')',[0m
  117 |                 (wchar_t)0[0m
  118 |               };[0m
  119 |             ap->a.a_wide_string = wide_null_string;[0m
  120 |           }[0m
  121 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:124:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  124 |         ap->a.a_pointer = va_arg (args, void *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  125 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:127:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |         ap->a.a_count_schar_pointer = va_arg (args, signed char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  128 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:130:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  130 |         ap->a.a_count_short_pointer = va_arg (args, short *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  131 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:133:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  133 |         ap->a.a_count_int_pointer = va_arg (args, int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  134 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:136:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  136 |         ap->a.a_count_longint_pointer = va_arg (args, long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  137 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:140:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  140 |         ap->a.a_count_longlongint_pointer = va_arg (args, long long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  141 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:184:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  184 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m25 warnings generated.

[51/76][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp551dtltn.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/stat-time.c
[52/76][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpf0ojdw5f.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/hard-locale.c
[1mhard-locale.c:47:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   47 |           if (strcmp (p, "C") == 0 || strcmp (p, "POSIX") == 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m   48 |             hard = false;[0m
      | [0;1;32m                         
[0m[1mhard-locale.c:61:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   61 |                       && strcmp (p, locale) == 0))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m   62 |                 hard = false;[0m
      | [0;1;32m                             
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[53/76][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpcl3caf3v.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/opendir-safer.c
[1mopendir-safer.c:62:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |               if (! newdp)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   63 |                 close (f);[0m
      | [0;1;32m                          
[0m1 warning generated.

[54/76][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmppi4zevaz.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/verror.c
[1mverror.c:64:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       if (file)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   65 |         error_at_line (status, errnum, file, line_number, "%s", message);[0m
   66 |       else[0m
      | [0;32m      } 
[0m[1mverror.c:66:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   67 |         error (status, errnum, "%s", message);[0m
      | [0;1;32m                                              
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[55/76][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpow0p9pzj.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/xmalloc.c
[1mxmalloc.c:42:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   42 |   if (!p && n != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   43 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:62:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |   if (!p && n)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   63 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:86:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   86 |   return memset (xmalloc (s), 0, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:86:10: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   86 |   return memset (xmalloc (s), 0, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:101:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |       || (! (p = calloc (n, s)) && (HAVE_GNU_CALLOC || n != 0)))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  102 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:113:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  113 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:113:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  113 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m11 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[56/76][3.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp73nkvoeu.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/chdir-long.c
[1mchdir-long.c:77:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   77 |   if (new_fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   78 |     return -1;[0m
      | [0;1;32m              
[0m[1mchdir-long.c:113:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |   if (e == 0 || errno != ENAMETOOLONG)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  114 |     return e;[0m
      | [0;1;32m             
[0m[1mchdir-long.c:151:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  152 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:157:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |         if (cdb_advance_fd (&cdb, "/") != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  158 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:182:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  183 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:190:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |         if (cdb_advance_fd (&cdb, dir) != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  191 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:194:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |     if (cdb_fchdir (&cdb) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  195 |       goto Fail;[0m
      | [0;1;32m                
[0m9 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[57/76][5.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpumif23_x.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/tempname.c
[1mtempname.c:252:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |       else if (errno != EEXIST)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  253 |         return -1;[0m
      | [0;1;32m                  
[0m[1mtempname.c:281:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |   if (__lxstat64 (_STAT_VER, tmpl, &st) == 0 || errno == EOVERFLOW)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  282 |     __set_errno (EEXIST);[0m
      | [0;1;32m                         
[0m[1mtempname.c:307:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  307 |       tryfunc = try_file;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  308 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtempname.c:311:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  311 |       tryfunc = try_dir;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  312 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtempname.c:315:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  315 |       tryfunc = try_nocreate;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  316 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m8 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[58/76][15.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpv015h40v.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/c-strcasecmp.c
[1mc-strcasecmp.c:33:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strcasecmp.c:41:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (c1 == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strcasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strcasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return (c1 > c2 ? 1 : c1 < c2 ? -1 : 0);[0m
      | [0;1;32m                                            
[0m18 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[59/76][21.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmplq1ingda.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/parse-datetime.c
[1mparse-datetime.c:385:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |          | INT_ADD_WRAPV (pc->rel.year, rel.year, &pc->rel.year)))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  386 |     return false;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:453:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |   if (0 <= pc->day_number && pc->day_number <= 6 && 0 <= len && len < n)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  454 |     snprintf (buffer + len, n - len, &" %s"[len == 0],[0m
  455 |               days_values[pc->day_number]);[0m
  456 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:501:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |   if (!pc->parse_datetime_debug)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  502 |     return;[0m
      | [0;1;32m           
[0m[1mparse-datetime.c:518:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |       if (space)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  519 |         fputc (' ', stderr);[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:536:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |       if (pc->meridian == MERpm)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  537 |         fputs ("pm", stderr);[0m
      | [0;1;32m                             
[0m[1mparse-datetime.c:545:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |       if (space)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  546 |         fputc (' ', stderr);[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:577:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  577 |       if (space)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  578 |         fputc (' ', stderr);[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:590:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |   if (val == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  591 |     return space;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:601:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |   if (!pc->parse_datetime_debug)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  602 |     return;[0m
      | [0;1;32m           
[0m[1mparse-datetime.c:1636:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1636 |   if (!yymsg)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1637 |     yymsg = "Deleting";[0m
      | [0;1;32m                       
[0m[1mparse-datetime.c:1765:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1765 |       if (YYMAXDEPTH <= yystacksize)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1766 |         goto yyexhaustedlab;[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:1768:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1768 |       if (YYMAXDEPTH < yystacksize)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1769 |         yystacksize = YYMAXDEPTH;[0m
      | [0;1;32m                                 
[0m[1mparse-datetime.c:1775:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1775 |         if (! yyptr)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1776 |           goto yyexhaustedlab;[0m
      | [0;1;32m                              
[0m[1mparse-datetime.c:1780:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1780 |         if (yyss1 != yyssa)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1781 |           YYSTACK_FREE (yyss1);[0m
      | [0;1;32m                               
[0m[1mparse-datetime.c:1792:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1792 |       if (yyss + yystacksize - 1 <= yyssp)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1793 |         YYABORT;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:1798:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1798 |   if (yystate == YYFINAL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1799 |     YYACCEPT;[0m
      | [0;1;32m             
[0m[1mparse-datetime.c:1813:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1813 |   if (yypact_value_is_default (yyn))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1814 |     goto yydefault;[0m
      | [0;1;32m                   
[0m[1mparse-datetime.c:1839:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1839 |   if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1840 |     goto yydefault;[0m
      | [0;1;32m                   
[0m[1mparse-datetime.c:1844:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1844 |       if (yytable_value_is_error (yyn))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1845 |         goto yyerrlab;[0m
      | [0;1;32m                      
[0m[1mparse-datetime.c:1852:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1852 |   if (yyerrstatus)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1853 |     yyerrstatus--;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:1874:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1874 |   if (yyn == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1875 |     goto yyerrlab;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:1902:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1902 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1903 |         pc->seconds = (yyvsp[0].timespec);[0m
 1904 |         pc->timespec_seen = true;[0m
 1905 |         debug_print_current_time (_("number of seconds"), pc);[0m
 1906 |       }[0m
 1907 | #line 1908 "parse-datetime.c" /* yacc.c:1646  */[0m
 1908 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1912:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1912 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1913 |         pc->times_seen++; pc->dates_seen++;[0m
 1914 |         debug_print_current_time (_("datetime"), pc);[0m
 1915 |       }[0m
 1916 | #line 1917 "parse-datetime.c" /* yacc.c:1646  */[0m
 1917 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1921:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1921 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1922 |         pc->times_seen++;[0m
 1923 |         debug_print_current_time (_("time"), pc);[0m
 1924 |       }[0m
 1925 | #line 1926 "parse-datetime.c" /* yacc.c:1646  */[0m
 1926 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1930:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1930 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1931 |         pc->local_zones_seen++;[0m
 1932 |         debug_print_current_time (_("local_zone"), pc);[0m
 1933 |       }[0m
 1934 | #line 1935 "parse-datetime.c" /* yacc.c:1646  */[0m
 1935 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1939:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1939 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1940 |         pc->zones_seen++;[0m
 1941 |         debug_print_current_time (_("zone"), pc);[0m
 1942 |       }[0m
 1943 | #line 1944 "parse-datetime.c" /* yacc.c:1646  */[0m
 1944 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1948:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1948 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1949 |         pc->dates_seen++;[0m
 1950 |         debug_print_current_time (_("date"), pc);[0m
 1951 |       }[0m
 1952 | #line 1953 "parse-datetime.c" /* yacc.c:1646  */[0m
 1953 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1957:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1957 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1958 |         pc->days_seen++;[0m
 1959 |         debug_print_current_time (_("day"), pc);[0m
 1960 |       }[0m
 1961 | #line 1962 "parse-datetime.c" /* yacc.c:1646  */[0m
 1962 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1966:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1966 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1967 |         debug_print_relative_time (_("relative"), pc);[0m
 1968 |       }[0m
 1969 | #line 1970 "parse-datetime.c" /* yacc.c:1646  */[0m
 1970 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1974:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1974 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1975 |         debug_print_current_time (_("number"), pc);[0m
 1976 |       }[0m
 1977 | #line 1978 "parse-datetime.c" /* yacc.c:1646  */[0m
 1978 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1982:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1982 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1983 |         debug_print_relative_time (_("hybrid"), pc);[0m
 1984 |       }[0m
 1985 | #line 1986 "parse-datetime.c" /* yacc.c:1646  */[0m
 1986 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1990:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1990 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1991 |         set_hhmmss (pc, (yyvsp[-1].textintval).value, 0, 0, 0);[0m
 1992 |         pc->meridian = (yyvsp[0].intval);[0m
 1993 |       }[0m
 1994 | #line 1995 "parse-datetime.c" /* yacc.c:1646  */[0m
 1995 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1999:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1999 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2000 |         set_hhmmss (pc, (yyvsp[-3].textintval).value, (yyvsp[-1].textintval).value, 0, 0);[0m
 2001 |         pc->meridian = (yyvsp[0].intval);[0m
 2002 |       }[0m
 2003 | #line 2004 "parse-datetime.c" /* yacc.c:1646  */[0m
 2004 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2008:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2008 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2009 |         set_hhmmss (pc, (yyvsp[-5].textintval).value, (yyvsp[-3].textintval).value, (yyvsp[-1].timespec).tv_sec, (yyvsp[-1].timespec).tv_nsec);[0m
 2010 |         pc->meridian = (yyvsp[0].intval);[0m
 2011 |       }[0m
 2012 | #line 2013 "parse-datetime.c" /* yacc.c:1646  */[0m
 2013 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2017:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2017 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2018 |         set_hhmmss (pc, (yyvsp[-1].textintval).value, 0, 0, 0);[0m
 2019 |         pc->meridian = MER24;[0m
 2020 |       }[0m
 2021 | #line 2022 "parse-datetime.c" /* yacc.c:1646  */[0m
 2022 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2026:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2026 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2027 |         set_hhmmss (pc, (yyvsp[-3].textintval).value, (yyvsp[-1].textintval).value, 0, 0);[0m
 2028 |         pc->meridian = MER24;[0m
 2029 |       }[0m
 2030 | #line 2031 "parse-datetime.c" /* yacc.c:1646  */[0m
 2031 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2035:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2035 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2036 |         set_hhmmss (pc, (yyvsp[-5].textintval).value, (yyvsp[-3].textintval).value, (yyvsp[-1].timespec).tv_sec, (yyvsp[-1].timespec).tv_nsec);[0m
 2037 |         pc->meridian = MER24;[0m
 2038 |       }[0m
 2039 | #line 2040 "parse-datetime.c" /* yacc.c:1646  */[0m
 2040 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2044:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2044 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2045 |         pc->zones_seen++;[0m
 2046 |         if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
 2047 |       }[0m
 2048 | #line 2049 "parse-datetime.c" /* yacc.c:1646  */[0m
 2049 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2046:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2046 |         if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
      | [0;1;32m                                                                             ^        
[0m      | [0;32m                                                                              {
[0m[1mparse-datetime.c:2053:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2053 |     { pc->local_isdst = (yyvsp[0].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2054 | #line 2055 "parse-datetime.c" /* yacc.c:1646  */[0m
 2055 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2059:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2059 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2060 |         pc->local_isdst = 1;[0m
 2061 |         pc->dsts_seen++;[0m
 2062 |       }[0m
 2063 | #line 2064 "parse-datetime.c" /* yacc.c:1646  */[0m
 2064 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2068:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2068 |     { pc->time_zone = (yyvsp[0].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2069 | #line 2070 "parse-datetime.c" /* yacc.c:1646  */[0m
 2070 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2074:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2074 |     { pc->time_zone = HOUR (7); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2075 | #line 2076 "parse-datetime.c" /* yacc.c:1646  */[0m
 2076 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2080:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2080 |     { pc->time_zone = (yyvsp[-1].intval);[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2081 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
 2082 |         debug_print_relative_time (_("relative"), pc);[0m
 2083 |       }[0m
 2084 | #line 2085 "parse-datetime.c" /* yacc.c:1646  */[0m
 2085 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2081:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2081 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
      | [0;1;32m                                                          ^        
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:2089:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2089 |     { pc->time_zone = HOUR (7);[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2090 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
 2091 |         debug_print_relative_time (_("relative"), pc);[0m
 2092 |       }[0m
 2093 | #line 2094 "parse-datetime.c" /* yacc.c:1646  */[0m
 2094 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2090:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2090 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
      | [0;1;32m                                                          ^        
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:2098:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2098 |     { if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2099 |         if (INT_ADD_WRAPV (pc->time_zone, (yyvsp[-2].intval), &pc->time_zone)) YYABORT; }[0m
 2100 | #line 2101 "parse-datetime.c" /* yacc.c:1646  */[0m
 2101 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2098:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2098 |     { if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
      | [0;1;32m                                                                           ^        
[0m      | [0;32m                                                                            {
[0m[1mparse-datetime.c:2099:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2099 |         if (INT_ADD_WRAPV (pc->time_zone, (yyvsp[-2].intval), &pc->time_zone)) YYABORT; }[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m[1mparse-datetime.c:2105:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2105 |     { pc->time_zone = (yyvsp[0].intval) + 60 * 60; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2106 | #line 2107 "parse-datetime.c" /* yacc.c:1646  */[0m
 2107 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2111:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2111 |     { pc->time_zone = (yyvsp[-1].intval) + 60 * 60; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2112 | #line 2113 "parse-datetime.c" /* yacc.c:1646  */[0m
 2113 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2117:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2117 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2118 |         pc->day_ordinal = 0;[0m
 2119 |         pc->day_number = (yyvsp[0].intval);[0m
 2120 |       }[0m
 2121 | #line 2122 "parse-datetime.c" /* yacc.c:1646  */[0m
 2122 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2126:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2126 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2127 |         pc->day_ordinal = 0;[0m
 2128 |         pc->day_number = (yyvsp[-1].intval);[0m
 2129 |       }[0m
 2130 | #line 2131 "parse-datetime.c" /* yacc.c:1646  */[0m
 2131 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2135:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2135 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2136 |         pc->day_ordinal = (yyvsp[-1].intval);[0m
 2137 |         pc->day_number = (yyvsp[0].intval);[0m
 2138 |         pc->debug_ordinal_day_seen = true;[0m
 2139 |       }[0m
 2140 | #line 2141 "parse-datetime.c" /* yacc.c:1646  */[0m
 2141 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2145:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2145 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2146 |         pc->day_ordinal = (yyvsp[-1].textintval).value;[0m
 2147 |         pc->day_number = (yyvsp[0].intval);[0m
 2148 |         pc->debug_ordinal_day_seen = true;[0m
 2149 |       }[0m
 2150 | #line 2151 "parse-datetime.c" /* yacc.c:1646  */[0m
 2151 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2155:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2155 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2156 |         pc->month = (yyvsp[-2].textintval).value;[0m
 2157 |         pc->day = (yyvsp[0].textintval).value;[0m
 2158 |       }[0m
 2159 | #line 2160 "parse-datetime.c" /* yacc.c:1646  */[0m
 2160 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2164:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2164 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mparse-datetime.c:2186:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2186 |             if (pc->parse_datetime_debug)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 2187 |               dbg_printf (_("warning: value %"PRIdMAX" has less than 4 digits. "[0m
 2188 |                             "Assuming MM/DD/YY[YY]\n"),[0m
 2189 |                           (yyvsp[-4].textintval).value);[0m
      | [0;1;32m                                                        
[0m[1mparse-datetime.c:2201:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2201 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2202 |         /* E.g., 17-JUN-1992.  */[0m
 2203 |         pc->day = (yyvsp[-2].textintval).value;[0m
 2204 |         pc->month = (yyvsp[-1].intval);[0m
 2205 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
 2206 |         pc->year.digits = (yyvsp[0].textintval).digits;[0m
 2207 |       }[0m
 2208 | #line 2209 "parse-datetime.c" /* yacc.c:1646  */[0m
 2209 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2205:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2205 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
      | [0;1;32m                                                                                 ^        
[0m      | [0;32m                                                                                  {
[0m[1mparse-datetime.c:2213:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2213 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2214 |         /* E.g., JUN-17-1992.  */[0m
 2215 |         pc->month = (yyvsp[-2].intval);[0m
 2216 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->day)) YYABORT;[0m
 2217 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
 2218 |         pc->year.digits = (yyvsp[0].textintval).digits;[0m
 2219 |       }[0m
 2220 | #line 2221 "parse-datetime.c" /* yacc.c:1646  */[0m
 2221 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2216:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2216 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->day)) YYABORT;[0m
      | [0;1;32m                                                                           ^        
[0m      | [0;32m                                                                            {
[0m[1mparse-datetime.c:2217:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2217 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
      | [0;1;32m                                                                                 ^        
[0m      | [0;32m                                                                                  {
[0m[1mparse-datetime.c:2225:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2225 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2226 |         pc->month = (yyvsp[-1].intval);[0m
 2227 |         pc->day = (yyvsp[0].textintval).value;[0m
 2228 |       }[0m
 2229 | #line 2230 "parse-datetime.c" /* yacc.c:1646  */[0m
 2230 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2234:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2234 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2235 |         pc->month = (yyvsp[-3].intval);[0m
 2236 |         pc->day = (yyvsp[-2].textintval).value;[0m
 2237 |         pc->year = (yyvsp[0].textintval);[0m
 2238 |       }[0m
 2239 | #line 2240 "parse-datetime.c" /* yacc.c:1646  */[0m
 2240 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2244:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2244 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2245 |         pc->day = (yyvsp[-1].textintval).value;[0m
 2246 |         pc->month = (yyvsp[0].intval);[0m
 2247 |       }[0m
 2248 | #line 2249 "parse-datetime.c" /* yacc.c:1646  */[0m
 2249 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2253:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2253 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2254 |         pc->day = (yyvsp[-2].textintval).value;[0m
 2255 |         pc->month = (yyvsp[-1].intval);[0m
 2256 |         pc->year = (yyvsp[0].textintval);[0m
 2257 |       }[0m
 2258 | #line 2259 "parse-datetime.c" /* yacc.c:1646  */[0m
 2259 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2263:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2263 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2264 |         /* ISO 8601 format.  YYYY-MM-DD.  */[0m
 2265 |         pc->year = (yyvsp[-2].textintval);[0m
 2266 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->month)) YYABORT;[0m
 2267 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->day)) YYABORT;[0m
 2268 |       }[0m
 2269 | #line 2270 "parse-datetime.c" /* yacc.c:1646  */[0m
 2270 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2266:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2266 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->month)) YYABORT;[0m
      | [0;1;32m                                                                             ^        
[0m      | [0;32m                                                                              {
[0m[1mparse-datetime.c:2267:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2267 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->day)) YYABORT;[0m
      | [0;1;32m                                                                          ^        
[0m      | [0;32m                                                                           {
[0m[1mparse-datetime.c:2274:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2274 |     { if (! apply_relative_time (pc, (yyvsp[-1].rel), (yyvsp[0].intval))) YYABORT; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2275 | #line 2276 "parse-datetime.c" /* yacc.c:1646  */[0m
 2276 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2274:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2274 |     { if (! apply_relative_time (pc, (yyvsp[-1].rel), (yyvsp[0].intval))) YYABORT; }[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m[1mparse-datetime.c:2280:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2280 |     { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2281 | #line 2282 "parse-datetime.c" /* yacc.c:1646  */[0m
 2282 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2280:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2280 |     { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m[1mparse-datetime.c:2286:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2286 |     { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2287 | #line 2288 "parse-datetime.c" /* yacc.c:1646  */[0m
 2288 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2286:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2286 |     { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m[1mparse-datetime.c:2292:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2292 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2293 | #line 2294 "parse-datetime.c" /* yacc.c:1646  */[0m
 2294 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2298:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2298 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2299 | #line 2300 "parse-datetime.c" /* yacc.c:1646  */[0m
 2300 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2304:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2304 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2305 | #line 2306 "parse-datetime.c" /* yacc.c:1646  */[0m
 2306 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2310:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2310 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2311 | #line 2312 "parse-datetime.c" /* yacc.c:1646  */[0m
 2312 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2316:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2316 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2317 | #line 2318 "parse-datetime.c" /* yacc.c:1646  */[0m
 2318 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2322:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2322 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2323 | #line 2324 "parse-datetime.c" /* yacc.c:1646  */[0m
 2324 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2328:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2328 |     { (yyval.rel) = RELATIVE_TIME_0;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2329 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].intval), (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
 2330 | #line 2331 "parse-datetime.c" /* yacc.c:1646  */[0m
 2331 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2329:90: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2329 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].intval), (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m[1mparse-datetime.c:2335:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2335 |     { (yyval.rel) = RELATIVE_TIME_0;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2336 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
 2337 | #line 2338 "parse-datetime.c" /* yacc.c:1646  */[0m
 2338 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2336:100: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2336 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m[1mparse-datetime.c:2342:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2342 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).day = (yyvsp[0].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2343 | #line 2344 "parse-datetime.c" /* yacc.c:1646  */[0m
 2344 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2348:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2348 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2349 | #line 2350 "parse-datetime.c" /* yacc.c:1646  */[0m
 2350 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2354:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2354 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2355 | #line 2356 "parse-datetime.c" /* yacc.c:1646  */[0m
 2356 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2360:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2360 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2361 | #line 2362 "parse-datetime.c" /* yacc.c:1646  */[0m
 2362 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2366:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2366 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2367 | #line 2368 "parse-datetime.c" /* yacc.c:1646  */[0m
 2368 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2372:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2372 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2373 | #line 2374 "parse-datetime.c" /* yacc.c:1646  */[0m
 2374 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2378:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2378 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2379 | #line 2380 "parse-datetime.c" /* yacc.c:1646  */[0m
 2380 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2384:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2384 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2385 | #line 2386 "parse-datetime.c" /* yacc.c:1646  */[0m
 2386 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2390:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2390 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2391 | #line 2392 "parse-datetime.c" /* yacc.c:1646  */[0m
 2392 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2396:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2396 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].timespec).tv_sec; (yyval.rel).ns = (yyvsp[-1].timespec).tv_nsec; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2397 | #line 2398 "parse-datetime.c" /* yacc.c:1646  */[0m
 2398 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2402:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2402 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].timespec).tv_sec; (yyval.rel).ns = (yyvsp[-1].timespec).tv_nsec; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2403 | #line 2404 "parse-datetime.c" /* yacc.c:1646  */[0m
 2404 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2408:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2408 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2409 | #line 2410 "parse-datetime.c" /* yacc.c:1646  */[0m
 2410 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2414:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2414 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2415 | #line 2416 "parse-datetime.c" /* yacc.c:1646  */[0m
 2416 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2420:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2420 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2421 | #line 2422 "parse-datetime.c" /* yacc.c:1646  */[0m
 2422 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2426:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2426 |     { (yyval.rel) = RELATIVE_TIME_0;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2427 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
 2428 | #line 2429 "parse-datetime.c" /* yacc.c:1646  */[0m
 2429 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2427:100: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2427 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m[1mparse-datetime.c:2433:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2433 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2434 | #line 2435 "parse-datetime.c" /* yacc.c:1646  */[0m
 2435 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2439:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2439 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2440 | #line 2441 "parse-datetime.c" /* yacc.c:1646  */[0m
 2441 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2445:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2445 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2446 | #line 2447 "parse-datetime.c" /* yacc.c:1646  */[0m
 2447 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2451:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2451 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).day = (yyvsp[0].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2452 | #line 2453 "parse-datetime.c" /* yacc.c:1646  */[0m
 2453 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2457:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2457 |     { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2458 |         (yyval.timespec).tv_sec = (yyvsp[0].textintval).value; (yyval.timespec).tv_nsec = 0; }[0m
 2459 | #line 2460 "parse-datetime.c" /* yacc.c:1646  */[0m
 2460 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2457:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2457 |     { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m                                                      ^        
[0m      | [0;32m                                                       {
[0m[1mparse-datetime.c:2464:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2464 |     { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2465 |         (yyval.timespec).tv_sec = (yyvsp[0].textintval).value; (yyval.timespec).tv_nsec = 0; }[0m
 2466 | #line 2467 "parse-datetime.c" /* yacc.c:1646  */[0m
 2467 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2464:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2464 |     { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m                                                      ^        
[0m      | [0;32m                                                       {
[0m[1mparse-datetime.c:2471:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2471 |     { digits_to_date_time (pc, (yyvsp[0].textintval)); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2472 | #line 2473 "parse-datetime.c" /* yacc.c:1646  */[0m
 2473 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2477:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2477 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2478 |         /* Hybrid all-digit and relative offset, so that we accept e.g.,[0m
 2479 |            "YYYYMMDD +N days" as well as "YYYYMMDD N days".  */[0m
 2480 |         digits_to_date_time (pc, (yyvsp[-1].textintval));[0m
 2481 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
 2482 |       }[0m
 2483 | #line 2484 "parse-datetime.c" /* yacc.c:1646  */[0m
 2484 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2481:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2481 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
      | [0;1;32m                                                          ^        
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:2488:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2488 |     { (yyval.intval) = -1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2489 | #line 2490 "parse-datetime.c" /* yacc.c:1646  */[0m
 2490 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2494:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2494 |     { (yyval.intval) = (yyvsp[0].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2495 | #line 2496 "parse-datetime.c" /* yacc.c:1646  */[0m
 2496 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2500:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2500 |       default: break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mparse-datetime.c:2528:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2528 |   if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 2529 |     yystate = yytable[yystate];[0m
 2530 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:2530:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2530 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2531 |     yystate = yydefgoto[yyn - YYNTOKENS];[0m
      | [0;1;32m                                         
[0m[1mparse-datetime.c:2594:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2594 |           if (yychar == YYEOF)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2595 |             YYABORT;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:2618:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2618 |   if (/*CONSTCOND*/ 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2619 |      goto yyerrorlab;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:2645:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2645 |               if (0 < yyn)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2646 |                 break;[0m
      | [0;1;32m                      
[0m[1mparse-datetime.c:2651:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2651 |       if (yyssp == yyss)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2652 |         YYABORT;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2718:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2718 |   if (yyss != yyssa)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2719 |     YYSTACK_FREE (yyss);[0m
      | [0;1;32m                        
[0m[1mparse-datetime.c:2934:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2934 |   if (s.digits <= 2 && mm < 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2935 |     s.value *= 100;[0m
      | [0;1;32m                   
[0m[1mparse-datetime.c:2937:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2937 |   if (mm < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2938 |     n_minutes = (s.value / 100) * 60 + s.value % 100;[0m
 2939 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:2947:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2947 |   if (overflow || ! (-24 * 60 <= n_minutes && n_minutes <= 24 * 60))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2948 |     return false;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:2962:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2962 |       return 0 < hours && hours < 12 ? hours : hours == 12 ? 0 : -1;[0m
      | [0;1;32m      ^                                                            
[0m      | [0;32m      {                                                            ;} 
[0m[1mparse-datetime.c:2964:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2964 |       return 0 < hours && hours < 12 ? hours + 12 : hours == 12 ? 12 : -1;[0m
      | [0;1;32m      ^                                                                  
[0m      | [0;32m      {                                                                  ;} 
[0m[1mparse-datetime.c:2997:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2997 |       if (debug)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2998 |         dbg_printf (_("warning: adjusting year value %"PRIdMAX[0m
 2999 |                       " to %"PRIdMAX"\n"),[0m
 3000 |                     textyear.value, year);[0m
      | [0;1;32m                                          
[0m[1mparse-datetime.c:3007:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3007 |       if (debug)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3008 |         dbg_printf (_("error: out-of-range year %"PRIdMAX"\n"), year);[0m
      | [0;1;32m                                                                      
[0m[1mparse-datetime.c:3020:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3020 |   for (tp = universal_time_zone_table; tp->name; tp++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3021 |     if (strcmp (name, tp->name) == 0)[0m
 3022 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3021:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3021 |     if (strcmp (name, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3022 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3026:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3026 |   for (tp = pc->local_time_zone_table; tp->name; tp++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3027 |     if (strcmp (name, tp->name) == 0)[0m
 3028 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3027:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3027 |     if (strcmp (name, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3028 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3030:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3030 |   for (tp = time_zone_table; tp->name; tp++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3031 |     if (strcmp (name, tp->name) == 0)[0m
 3032 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3031:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3031 |     if (strcmp (name, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3032 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3075:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3075 |   for (p = word; *p; p++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 3076 |     *p = c_toupper (to_uchar (*p));[0m
      | [0;1;32m                                   
[0m[1mparse-datetime.c:3078:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3078 |   for (tp = meridian_table; tp->name; tp++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3079 |     if (strcmp (word, tp->name) == 0)[0m
 3080 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3079:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3079 |     if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3080 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3086:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3086 |   for (tp = month_and_day_table; tp->name; tp++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3087 |     if ((abbrev ? strncmp (word, tp->name, 3) : strcmp (word, tp->name)) == 0)[0m
 3088 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3087:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3087 |     if ((abbrev ? strncmp (word, tp->name, 3) : strcmp (word, tp->name)) == 0)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3088 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3090:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3090 |   if ((tp = lookup_zone (pc, word)))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3091 |     return tp;[0m
      | [0;1;32m              
[0m[1mparse-datetime.c:3093:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3093 |   if (strcmp (word, dst_table[0].name) == 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3094 |     return dst_table;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3096:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3096 |   for (tp = time_units_table; tp->name; tp++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3097 |     if (strcmp (word, tp->name) == 0)[0m
 3098 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3097:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3097 |     if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3098 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3104:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3104 |       for (tp = time_units_table; tp->name; tp++)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 3105 |         if (strcmp (word, tp->name) == 0)[0m
 3106 |           return tp;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3105:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3105 |         if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3106 |           return tp;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3110:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3110 |   for (tp = relative_time_table; tp->name; tp++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3111 |     if (strcmp (word, tp->name) == 0)[0m
 3112 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3111:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3111 |     if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3112 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3115:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3115 |   if (wordlen == 1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3116 |     for (tp = military_table; tp->name; tp++)[0m
 3117 |       if (word[0] == tp->name[0])[0m
 3118 |         return tp;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:3116:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3116 |     for (tp = military_table; tp->name; tp++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3117 |       if (word[0] == tp->name[0])[0m
 3118 |         return tp;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:3117:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3117 |       if (word[0] == tp->name[0])[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3118 |         return tp;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:3121:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3121 |   for (period_found = false, p = q = word; (*p = *q); q++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 3122 |     if (*q == '.')[0m
 3123 |       period_found = true;[0m
 3124 |     else[0m
 3125 |       p++;[0m
      | [0;1;32m          
[0m[1mparse-datetime.c:3122:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3122 |     if (*q == '.')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3123 |       period_found = true;[0m
 3124 |     else[0m
      | [0;32m    } 
[0m[1mparse-datetime.c:3124:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3124 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 3125 |       p++;[0m
      | [0;1;32m          
[0m[1mparse-datetime.c:3126:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3126 |   if (period_found && (tp = lookup_zone (pc, word)))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3127 |     return tp;[0m
      | [0;1;32m              
[0m[1mparse-datetime.c:3139:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3139 |       while (c = *pc->input, c_isspace (c))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3140 |         pc->input++;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3150:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3150 |               while (c = *++pc->input, c_isspace (c))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 3151 |                 continue;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3152:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3152 |               if (! c_isdigit (c))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3153 |                 /* skip the '-' sign */[0m
 3154 |                 continue;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3156:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3156 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3157 |             sign = 0;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3162:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3162 |               if (INT_MULTIPLY_WRAPV (value, 10, &value))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 3163 |                 return '?';[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:3164:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3164 |               if (INT_ADD_WRAPV (value, sign < 0 ? '0' - c : c - '0', &value))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3165 |                 return '?';[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:3176:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3176 |               if (time_overflow (value))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3177 |                 return '?';[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:3186:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3186 |                   if (c_isdigit (*p))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3187 |                     ns += *p++ - '0';[0m
      | [0;1;32m                                     
[0m[1mparse-datetime.c:3191:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3191 |               if (sign < 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3192 |                 for (; c_isdigit (*p); p++)[0m
 3193 |                   if (*p != '0')[0m
 3194 |                     {[0m
 3195 |                       ns++;[0m
 3196 |                       break;[0m
 3197 |                     }[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3192:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3192 |                 for (; c_isdigit (*p); p++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3193 |                   if (*p != '0')[0m
 3194 |                     {[0m
 3195 |                       ns++;[0m
 3196 |                       break;[0m
 3197 |                     }[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3198:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3198 |               while (c_isdigit (*p))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3199 |                 p++;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3206:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3206 |                   if (s == TYPE_MINIMUM (time_t))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 3207 |                     return '?';[0m
      | [0;1;32m                               
[0m[1mparse-datetime.c:3235:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3235 |               if (p < buff + sizeof buff - 1)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3236 |                 *p++ = c;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3245:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3245 |               if (pc->parse_datetime_debug)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3246 |                 dbg_printf (_("error: unknown word '%s'\n"), buff);[0m
      | [0;1;32m                                                                   
[0m[1mparse-datetime.c:3253:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3253 |       if (c != '(')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3254 |         return to_uchar (*pc->input++);[0m
      | [0;1;32m                                       
[0m[1mparse-datetime.c:3260:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3260 |           if (c == '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3261 |             return c;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3262:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3262 |           if (c == '(')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3263 |             count++;[0m
 3264 |           else if (c == ')')[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:3264:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3264 |           else if (c == ')')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3265 |             count--;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3294:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3294 |       if (!tm1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 3295 |         return false;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3344:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3344 |       if (pc->local_zones_seen && !pc->zones_seen && 0 < pc->local_isdst)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 3345 |         tz += 60 * 60;[0m
      | [0;1;32m                      
[0m[1mparse-datetime.c:3399:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3399 |   if (!pc->parse_datetime_debug)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3400 |     return;[0m
      | [0;1;32m           
[0m[1mparse-datetime.c:3420:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3420 |       if (sizeof tmp - 1 < i)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3421 |         i = sizeof tmp - 1;[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:3422:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3422 |       while (0 < i && tmp[i - 1] == ' ')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3423 |         --i;[0m
      | [0;1;32m            
[0m[1mparse-datetime.c:3429:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3429 |   if (dst_shift)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3430 |     dbg_printf (_("       non-existing due to daylight-saving time;\n"));[0m
      | [0;1;32m                                                                         
[0m[1mparse-datetime.c:3431:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3431 |   if (!eq_mday && !eq_month)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3432 |     dbg_printf (_("       invalid day/month combination;\n"));[0m
      | [0;1;32m                                                              
[0m[1mparse-datetime.c:3445:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3445 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3446 |     return false;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:3486:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3486 |   while (c = *p, c_isspace (c))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3487 |     p++;[0m
      | [0;1;32m        
[0m[1mparse-datetime.c:3497:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3497 |       for (s = tzbase; *s; s++, tzsize++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m[1mparse-datetime.c:3501:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3501 |             if (! (*s == '\\' || *s == '"'))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3502 |               break;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3512:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3512 |                 if (!tz1alloc)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3513 |                   goto fail;[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:3517:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3517 |             for (s = tzbase; *s != '"'; s++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3518 |               *z++ = *(s += *s == '\\');[0m
      | [0;1;32m                                        
[0m[1mparse-datetime.c:3521:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3521 |             if (!tz1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3522 |               goto fail;[0m
      | [0;1;32m                        
[0m[1mparse-datetime.c:3527:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3527 |             while (c = *p, c_isspace (c))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3528 |               p++;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:3535:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3535 |   if (! localtime_rz (tz, &now->tv_sec, &tmp))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3536 |     goto fail;[0m
      | [0;1;32m              
[0m[1mparse-datetime.c:3541:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3541 |   if (*p == '\0')[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 3542 |     p = "0";[0m
      | [0;1;32m            
[0m[1mparse-datetime.c:3549:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3549 |       if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3550 |         dbg_printf (_("error: initial year out of range\n"));[0m
      | [0;1;32m                                                             
[0m[1mparse-datetime.c:3595:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3595 |             || time_overflow (iprobe))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3596 |           break;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3645:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3645 |       if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3646 |         dbg_printf ((input_sentinel <= pc.input[0m
 3647 |                      ? _("error: parsing failed\n")[0m
 3648 |                      : _("error: parsing failed, stopped at '%s'\n")),[0m
 3649 |                     pc.input);[0m
      | [0;1;32m                              
[0m[1mparse-datetime.c:3660:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3660 |       if (pc.timespec_seen)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3661 |         fprintf (stderr, _("'@timespec' - always UTC"));[0m
 3662 |       else if (pc.zones_seen)[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:3662:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3662 |       else if (pc.zones_seen)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3663 |         fprintf (stderr, _("parsed date/time string"));[0m
 3664 |       else if (tzstring)[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:3666:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3666 |           if (tz != tzdefault)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3667 |             fprintf (stderr, _("TZ=\"%s\" in date string"), tzstring);[0m
 3668 |           else if (STREQ (tzstring, "UTC0"))[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:3673:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3673 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3674 |             fprintf (stderr, _("TZ=\"%s\" environment value"), tzstring);[0m
      | [0;1;32m                                                                         
[0m[1mparse-datetime.c:3676:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3676 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3677 |         fprintf (stderr, _("system default"));[0m
      | [0;1;32m                                              
[0m[1mparse-datetime.c:3682:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3682 |       if (pc.local_zones_seen && !pc.zones_seen && 0 < pc.local_isdst)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 3683 |         fprintf (stderr, ", dst");[0m
      | [0;1;32m                                  
[0m[1mparse-datetime.c:3685:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3685 |       if (pc.zones_seen)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3686 |         fprintf (stderr, " (%s)", time_zone_str (pc.time_zone, time_zone_buf));[0m
      | [0;1;32m                                                                               
[0m[1mparse-datetime.c:3691:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3691 |   if (pc.timespec_seen)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3692 |     *result = pc.seconds;[0m
 3693 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:3700:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3700 |               if (pc.times_seen > 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3701 |                 dbg_printf ("error: seen multiple time parts\n");[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3702:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3702 |               if (pc.dates_seen > 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3703 |                 dbg_printf ("error: seen multiple date parts\n");[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3704:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3704 |               if (pc.days_seen > 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3705 |                 dbg_printf ("error: seen multiple days parts\n");[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3706:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3706 |               if (pc.dsts_seen > 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3707 |                 dbg_printf ("error: seen multiple daylight-saving parts\n");[0m
      | [0;1;32m                                                                            
[0m[1mparse-datetime.c:3708:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3708 |               if ((pc.local_zones_seen + pc.zones_seen) > 1)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 3709 |                 dbg_printf ("error: seen multiple time-zone parts\n");[0m
      | [0;1;32m                                                                      
[0m[1mparse-datetime.c:3718:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3718 |           if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3719 |             dbg_printf (_("error: year, month, or day overflow\n"));[0m
      | [0;1;32m                                                                    
[0m[1mparse-datetime.c:3729:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3729 |               if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3730 |                 dbg_printf (_("error: invalid hour %"PRIdMAX"%s\n"),[0m
 3731 |                             pc.hour, mrd);[0m
      | [0;1;32m                                          
[0m[1mparse-datetime.c:3736:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3736 |           if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3737 |             dbg_printf ((pc.times_seen[0m
 3738 |                          ? _("using specified time as starting value: '%s'\n")[0m
 3739 |                          : _("using current time as starting value: '%s'\n")),[0m
 3740 |                         debug_strftime (&tm, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                     
[0m[1mparse-datetime.c:3746:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3746 |           if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3747 |             dbg_printf ("warning: using midnight as starting time: 00:00:00\n");[0m
      | [0;1;32m                                                                                
[0m[1mparse-datetime.c:3751:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3751 |       if (pc.dates_seen | pc.days_seen | pc.times_seen)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3752 |         tm.tm_isdst = -1;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3756:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3756 |       if (pc.local_zones_seen)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3757 |         tm.tm_isdst = pc.local_isdst;[0m
      | [0;1;32m                                     
[0m[1mparse-datetime.c:3791:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3791 |                   if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3792 |                     dbg_printf (_("error: tzalloc (\"%s\") failed\n"), tz2buf);[0m
      | [0;1;32m                                                                               
[0m[1mparse-datetime.c:3825:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3825 |               || INT_ADD_WRAPV (dayincr, tm.tm_mday, &tm.tm_mday))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 3826 |             Start = -1;[0m
 3827 |           else[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:3835:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3835 |               if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3836 |                 dbg_printf (_("error: day '%s' "[0m
 3837 |                               "(day ordinal=%"PRIdMAX" number=%d) "[0m
 3838 |                               "resulted in an invalid date: '%s'\n"),[0m
 3839 |                             str_days (&pc, dbg_ord, sizeof dbg_ord),[0m
 3840 |                             pc.day_ordinal, pc.day_number,[0m
 3841 |                             debug_strfdatetime (&tm, &pc, dbg_tm,[0m
 3842 |                                                 sizeof dbg_tm));[0m
      | [0;1;32m                                                                
[0m[1mparse-datetime.c:3846:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3846 |           if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3847 |             dbg_printf (_("new start date: '%s' is '%s'\n"),[0m
 3848 |                         str_days (&pc, dbg_ord, sizeof dbg_ord),[0m
 3849 |                         debug_strfdatetime (&tm, &pc, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                              
[0m[1mparse-datetime.c:3855:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3855 |           if (!pc.dates_seen && !pc.days_seen)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3856 |             dbg_printf (_("using current date as starting value: '%s'\n"),[0m
 3857 |                         debug_strfdate (&tm, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                     
[0m[1mparse-datetime.c:3859:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3859 |           if (pc.days_seen && pc.dates_seen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3860 |             dbg_printf (_("warning: day (%s) ignored when explicit dates "[0m
 3861 |                           "are given\n"),[0m
 3862 |                         str_days (&pc, dbg_ord, sizeof dbg_ord));[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3873:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3873 |               if ((pc.rel.year != 0 || pc.rel.month != 0) && tm.tm_mday != 15)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3874 |                 dbg_printf (_("warning: when adding relative months/years, "[0m
 3875 |                               "it is recommended to specify the 15th of the "[0m
 3876 |                               "months\n"));[0m
      | [0;1;32m                                           
[0m[1mparse-datetime.c:3878:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3878 |               if (pc.rel.day != 0 && tm.tm_hour != 12)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3879 |                 dbg_printf (_("warning: when adding relative days, "[0m
 3880 |                               "it is recommended to specify noon\n"));[0m
      | [0;1;32m                                                                      
[0m[1mparse-datetime.c:3888:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3888 |               if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3889 |                 dbg_printf (_("error: %s:%d\n"), __FILE__, __LINE__);[0m
      | [0;1;32m                                                                     
[0m[1mparse-datetime.c:3902:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3902 |               if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3903 |                 dbg_printf (_("error: adding relative date resulted "[0m
 3904 |                               "in an invalid date: '%s'\n"),[0m
 3905 |                             debug_strfdatetime (&tm, &pc, dbg_tm,[0m
 3906 |                                                 sizeof dbg_tm));[0m
      | [0;1;32m                                                                
[0m[1mparse-datetime.c:3934:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3934 |               if (tm0.tm_isdst != -1 && tm.tm_isdst != tm0.tm_isdst)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 3935 |                 dbg_printf (_("warning: daylight saving time changed after "[0m
 3936 |                               "date adjustment\n"));[0m
      | [0;1;32m                                                    
[0m[1mparse-datetime.c:3986:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3986 |               if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 3987 |                 dbg_printf (_("error: timezone %d caused time_t overflow\n"),[0m
 3988 |                             pc.time_zone);[0m
      | [0;1;32m                                          
[0m[1mparse-datetime.c:4024:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4024 |             if (pc.parse_datetime_debug)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4025 |               dbg_printf (_("error: adding relative time caused an "[0m
 4026 |                             "overflow\n"));[0m
      | [0;1;32m                                           
[0m[1mparse-datetime.c:4056:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4056 |                 && tm.tm_isdst != lmt.tm_isdst)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 4057 |               dbg_printf (_("warning: daylight saving time changed after "[0m
 4058 |                             "time adjustment\n"));[0m
      | [0;1;32m                                                  
[0m[1mparse-datetime.c:4066:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4066 |       if (! tzstring)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 4067 |         dbg_printf (_("timezone: system default\n"));[0m
 4068 |       else if (STREQ (tzstring, "UTC0"))[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:4068:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4068 |       else if (STREQ (tzstring, "UTC0"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4069 |         dbg_printf (_("timezone: Universal Time\n"));[0m
 4070 |       else[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:4070:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4070 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4071 |         dbg_printf (_("timezone: TZ=\"%s\" environment value\n"), tzstring);[0m
      | [0;1;32m                                                                            
[0m[1mparse-datetime.c:4080:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4080 |       if (got_utc)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4081 |         dbg_printf (_("final: %s (UTC)\n"),[0m
 4082 |                     debug_strfdatetime (&gmt, NULL,[0m
 4083 |                                         dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                
[0m[1mparse-datetime.c:4095:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4095 |           if (got_utcoff)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 4096 |             dbg_printf (_("final: %s (UTC%s)\n"),[0m
 4097 |                         debug_strfdatetime (&lmt, NULL, dbg_tm, sizeof dbg_tm),[0m
 4098 |                         time_zone_str (utcoff, time_zone_buf));[0m
 4099 |           else[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:4099:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4099 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4100 |             dbg_printf (_("final: %s (unknown time zone offset)\n"),[0m
 4101 |                         debug_strfdatetime (&lmt, NULL, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                                
[0m[1mparse-datetime.c:4108:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4108 |   if (tz != tzdefault)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 4109 |     tzfree (tz);[0m
      | [0;1;32m                
[0m259 warnings generated.
Suppressed 24 warnings (24 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[60/76][21.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp0tavh7el.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/c-strncasecmp.c
[1mc-strncasecmp.c:33:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2 || n == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strncasecmp.c:41:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (--n == 0 || c1 == '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strncasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strncasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return (c1 > c2 ? 1 : c1 < c2 ? -1 : 0);[0m
      | [0;1;32m                                            
[0m18 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[61/76][20.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp8mp_l7a7.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/utimens.c
[1mutimens.c:113:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |       if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  114 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:121:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |       if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  122 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:138:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |       && timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  139 |     return true;[0m
      | [0;1;32m                
[0m[1mutimens.c:147:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |   if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  148 |     timespec[0] = get_stat_atime (statbuf);[0m
  149 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:149:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  150 |     gettime (&timespec[0]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:152:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |   if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  153 |     timespec[1] = get_stat_mtime (statbuf);[0m
  154 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:154:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  155 |     gettime (&timespec[1]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:184:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  185 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:237:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |           if (fd < 0 ? stat (file, &st) : fstat (fd, &st))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  238 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:239:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  240 |             ts[0] = get_stat_atime (&st);[0m
  241 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:241:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  242 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:259:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  259 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  260 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:275:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  276 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:381:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |           && (fd < 0 ? stat (file, &st) : fstat (fd, &st)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  382 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:383:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  383 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  384 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:399:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  400 |       t = NULL;[0m
      | [0;1;32m               
[0m[1mutimens.c:459:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |                     if (tt)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  460 |                       futimes (fd, tt);[0m
      | [0;1;32m                                       
[0m[1mutimens.c:529:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  530 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:556:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  556 |           if (lstat (file, &st))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  557 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:558:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  558 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  559 |             ts[0] = get_stat_atime (&st);[0m
  560 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:560:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  560 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  561 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:575:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |       if (0 < result)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  576 |         errno = ENOSYS;[0m
      | [0;1;32m                       
[0m[1mutimens.c:594:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |       if (adjustment_needed != 3 && lstat (file, &st))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  595 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:596:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  597 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:625:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  625 |   if (!(adjustment_needed || REPLACE_FUNC_STAT_FILE) && lstat (file, &st))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  626 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:627:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  627 |   if (!S_ISLNK (st.st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  628 |     return fdutimens (-1, file, ts);[0m
      | [0;1;32m                                    
[0m28 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[62/76][69.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp2gz7wwk4.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/time_rz.c
[1mtime_rz.c:88:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   88 |   memcpy (abbrs, abbr, abbr_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtime_rz.c:88:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   88 |   memcpy (abbrs, abbr, abbr_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtime_rz.c:108:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |       if (name)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  109 |         extend_abbrs (tz->abbrs, name, name_size);[0m
      | [0;1;32m                                                  
[0m[1mtime_rz.c:142:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  142 |   if (!zone || ((char *) tm <= zone && zone < (char *) (tm + 1)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  143 |     return true;[0m
      | [0;1;32m                
[0m[1mtime_rz.c:160:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |               if (zone_used + zone_size < ABBR_SIZE_MIN)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  161 |                 extend_abbrs (zone_copy, zone, zone_size);[0m
  162 |               else[0m
      | [0;32m              } 
[0m[1mtime_rz.c:165:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |                   if (!tz)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  166 |                     return false;[0m
      | [0;1;32m                                 
[0m[1mtime_rz.c:198:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |   if (tz != local_tz)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  199 |     while (tz)[0m
  200 |       {[0m
  201 |         timezone_t next = tz->next;[0m
  202 |         free (tz);[0m
  203 |         tz = next;[0m
  204 |       }[0m
      | [0;1;32m       
[0m[1mtime_rz.c:231:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |   if (setenv_TZ (tz->tz_is_set ? tz->abbrs : NULL) != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  232 |     return false;[0m
      | [0;1;32m                 
[0m[1mtime_rz.c:247:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |       : !tz->tz_is_set)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  248 |     return local_tz;[0m
  249 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:252:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |       if (!old_tz)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  253 |         return old_tz;[0m
      | [0;1;32m                      
[0m[1mtime_rz.c:258:11: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  258 |           errno = saved_errno;[0m
      | [0;1;32m          ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^
[0m[1mtime_rz.c:308:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  308 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:308:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  308 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:312:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  312 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:245:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  245 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:245:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:247:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  247 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:245:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  245 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:251:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  251 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:97:22: [0m[0;1;36mnote: [0m'name' is null[0m
   97 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:97:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:98:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   98 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:98:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:99:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   99 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:100:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  100 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:100:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  100 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:108:11: [0m[0;1;36mnote: [0m'name' is null[0m
  108 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:108:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  108 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:251:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  251 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:252:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  252 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:252:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:254:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  254 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:257:11: [0m[0;1;36mnote: [0mCalling 'tzfree'[0m
  257 |           tzfree (old_tz);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mtime_rz.c:198:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  198 |   if (tz != local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:198:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  198 |   if (tz != local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:205:1: [0m[0;1;36mnote: [0mReturning without deallocating memory or storing the pointer for later deallocation[0m
  205 | }[0m
      | [0;1;32m^
[0m[1mtime_rz.c:257:11: [0m[0;1;36mnote: [0mReturning from 'tzfree'[0m
  257 |           tzfree (old_tz);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mtime_rz.c:258:11: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  258 |           errno = saved_errno;[0m
      | [0;1;32m          ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^
[0m[1mtime_rz.c:271:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |   if (tz == local_tz)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  272 |     return true;[0m
  273 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:277:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |       if (!ok)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  278 |         saved_errno = errno;[0m
      | [0;1;32m                            
[0m[1mtime_rz.c:289:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  290 |     return gmtime_r (t, tm);[0m
  291 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:297:37: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  297 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:289:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  289 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:289:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  289 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:293:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  293 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:245:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  245 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:245:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:247:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  247 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:245:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  245 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:251:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  251 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:97:22: [0m[0;1;36mnote: [0m'name' is null[0m
   97 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:97:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:98:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   98 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:98:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:99:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   99 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:100:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  100 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:100:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  100 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:108:11: [0m[0;1;36mnote: [0m'name' is null[0m
  108 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:108:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  108 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:251:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  251 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:252:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  252 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:252:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:254:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:293:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  293 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:294:11: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  294 |       if (old_tz)[0m
      | [0;1;32m          ^~~~~~
[0m[1mtime_rz.c:294:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  294 |       if (old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:296:29: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  296 |           bool abbr_saved = localtime_r (t, tm) && save_abbr (tz, tm);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:296:49: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  296 |           bool abbr_saved = localtime_r (t, tm) && save_abbr (tz, tm);[0m
      | [0;1;32m                                                ^
[0m[1mtime_rz.c:297:15: [0m[0;1;36mnote: [0mCalling 'revert_tz'[0m
  297 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:271:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  271 |   if (tz == local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:271:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  271 |   if (tz == local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:297:15: [0m[0;1;36mnote: [0mReturning from 'revert_tz'[0m
  297 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:297:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtime_rz.c:297:37: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  297 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:297:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  298 |             return tm;[0m
      | [0;1;32m                      
[0m[1mtime_rz.c:308:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  308 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  309 |     return timegm (tm);[0m
  310 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:321:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  321 |               && !save_abbr (tz, tm))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  322 |             t = badtime;[0m
      | [0;1;32m                        
[0m[1mtime_rz.c:324:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |           if (revert_tz (old_tz))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  325 |             return t;[0m
      | [0;1;32m                     
[0m[1mtime_rz.c:325:20: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  325 |             return t;[0m
      | [0;1;32m                   ^
[0m[1mtime_rz.c:308:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  308 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:308:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  308 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:312:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  312 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:245:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  245 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:245:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:247:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  247 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:245:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  245 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:251:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  251 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:97:22: [0m[0;1;36mnote: [0m'name' is null[0m
   97 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:97:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:98:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   98 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:98:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:99:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   99 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:100:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  100 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:100:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  100 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:108:11: [0m[0;1;36mnote: [0m'name' is null[0m
  108 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:108:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  108 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:251:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  251 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:252:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  252 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:252:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:254:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:312:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  312 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:313:11: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  313 |       if (old_tz)[0m
      | [0;1;32m          ^~~~~~
[0m[1mtime_rz.c:313:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  313 |       if (old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:319:16: [0m[0;1;36mnote: [0mAssuming 't' is equal to 'badtime'[0m
  319 |           if ((t != badtime[0m
      | [0;1;32m               ^~~~~~~~~~~~
[0m[1mtime_rz.c:319:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mtime_rz.c:320:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  320 |                || (localtime_r (&t, &tm_1) && equal_tm (tm, &tm_1)))[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:320:44: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  320 |                || (localtime_r (&t, &tm_1) && equal_tm (tm, &tm_1)))[0m
      | [0;1;32m                                           ^
[0m[1mtime_rz.c:324:15: [0m[0;1;36mnote: [0mCalling 'revert_tz'[0m
  324 |           if (revert_tz (old_tz))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:271:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  271 |   if (tz == local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:271:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  271 |   if (tz == local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:324:15: [0m[0;1;36mnote: [0mReturning from 'revert_tz'[0m
  324 |           if (revert_tz (old_tz))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:324:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  324 |           if (revert_tz (old_tz))[0m
      | [0;1;32m          ^
[0m[1mtime_rz.c:325:20: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  325 |             return t;[0m
      | [0;1;32m                   ^
[0m21 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[63/76][78.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpihhtq6_n.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/printf-parse.c
[1mprintf-parse.c:158:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |               for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  159 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:164:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  165 |                     n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                         
[0m[1mprintf-parse.c:166:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |                   if (n == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  167 |                     /* Positional argument 0.  */[0m
  168 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:169:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |                   if (size_overflow_p (n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  170 |                     /* n too large, would lead to out of memory later.  */[0m
  171 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:217:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  217 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  218 |                 break;[0m
      | [0;1;32m                      
[0m[1mprintf-parse.c:227:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  227 |               if (max_width_length < 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  228 |                 max_width_length = 1;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:235:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  236 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:241:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  242 |                         n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                             
[0m[1mprintf-parse.c:243:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |                       if (n == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  244 |                         /* Positional argument 0.  */[0m
  245 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:246:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |                       if (size_overflow_p (n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  247 |                         /* n too large, would lead to out of memory later.  */[0m
  248 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:256:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  256 |                   if (dp->width_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  257 |                     /* arg_posn wrapped around.  */[0m
  258 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:260:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  260 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:122:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  122 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:260:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  260 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:122:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  122 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:267:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |               for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  268 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:271:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |               if (max_width_length < width_length)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  272 |                 max_width_length = width_length;[0m
      | [0;1;32m                                                
[0m[1mprintf-parse.c:284:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  284 |                   if (max_precision_length < 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  285 |                     max_precision_length = 2;[0m
      | [0;1;32m                                             
[0m[1mprintf-parse.c:292:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  293 |                         ;[0m
      | [0;1;32m                         
[0m[1mprintf-parse.c:298:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |                           for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  299 |                             n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                                 
[0m[1mprintf-parse.c:300:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |                           if (n == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  301 |                             /* Positional argument 0.  */[0m
  302 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:303:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  303 |                           if (size_overflow_p (n))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  304 |                             /* n too large, would lead to out of memory[0m
  305 |                                later.  */[0m
  306 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:314:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |                       if (dp->precision_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  315 |                         /* arg_posn wrapped around.  */[0m
  316 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:318:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  318 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:122:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  122 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:318:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  318 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:122:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  122 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:325:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |                   for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  326 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:329:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |                   if (max_precision_length < precision_length)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  330 |                     max_precision_length = precision_length;[0m
      | [0;1;32m                                                            
[0m[1mprintf-parse.c:441:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  442 |                     break;[0m
      | [0;1;32m                          
[0m[1mprintf-parse.c:452:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  453 |                     type = TYPE_LONGLONGINT;[0m
  454 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:458:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  459 |                     type = TYPE_LONGINT;[0m
  460 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:460:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  461 |                     type = TYPE_SCHAR;[0m
  462 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:462:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  462 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  463 |                     type = TYPE_SHORT;[0m
  464 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:464:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  465 |                     type = TYPE_INT;[0m
      | [0;1;32m                                    
[0m[1mprintf-parse.c:466:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  466 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:470:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  471 |                     type = TYPE_ULONGLONGINT;[0m
  472 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:476:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  477 |                     type = TYPE_ULONGINT;[0m
  478 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:478:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  478 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  479 |                     type = TYPE_UCHAR;[0m
  480 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:480:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  481 |                     type = TYPE_USHORT;[0m
  482 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:482:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  482 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  483 |                     type = TYPE_UINT;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:484:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  484 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:487:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  488 |                     type = TYPE_LONGDOUBLE;[0m
  489 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:489:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  489 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  490 |                     type = TYPE_DOUBLE;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:491:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |                   break;[0m
      | [0;1;32m                  ^    
[0m      | [0;32m                  {    ;} 
[0m[1mprintf-parse.c:493:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  493 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  494 | #if HAVE_WINT_T[0m
  495 |                     type = TYPE_WIDE_CHAR;[0m
  496 | #else[0m
  497 |                     goto error;[0m
  498 | #endif[0m
  499 |                   else[0m
  500 |                     type = TYPE_CHAR;[0m
  501 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:493:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  494 | #if HAVE_WINT_T[0m
  495 |                     type = TYPE_WIDE_CHAR;[0m
  496 | #else[0m
  497 |                     goto error;[0m
  498 | #endif[0m
  499 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:499:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  499 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  500 |                     type = TYPE_CHAR;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:504:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  504 |                   type = TYPE_WIDE_CHAR;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  505 |                   c = 'c';[0m
  506 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:509:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  509 |                   if (flags >= 8)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  510 | #if HAVE_WCHAR_T[0m
  511 |                     type = TYPE_WIDE_STRING;[0m
  512 | #else[0m
  513 |                     goto error;[0m
  514 | #endif[0m
  515 |                   else[0m
  516 |                     type = TYPE_STRING;[0m
  517 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:509:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  510 | #if HAVE_WCHAR_T[0m
  511 |                     type = TYPE_WIDE_STRING;[0m
  512 | #else[0m
  513 |                     goto error;[0m
  514 | #endif[0m
  515 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:515:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  516 |                     type = TYPE_STRING;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:520:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  520 |                   type = TYPE_WIDE_STRING;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  521 |                   c = 's';[0m
  522 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:525:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  525 |                   type = TYPE_POINTER;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  526 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:530:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  530 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  531 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  532 |                   else[0m
  533 | #endif[0m
  534 |                   /* If 'long long' exists and is the same as 'long', we parse[0m
  535 |                      "lln" into TYPE_COUNT_LONGINT_POINTER.  */[0m
  536 |                   if (flags >= 8)[0m
  537 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  538 |                   else if (flags & 2)[0m
  539 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  540 |                   else if (flags & 1)[0m
  541 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  542 |                   else[0m
  543 |                     type = TYPE_COUNT_INT_POINTER;[0m
  544 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:530:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |                   if (flags >= 16 || (flags & 4))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  531 |                     type = TYPE_COUNT_LONGLONGINT_POINTER;[0m
  532 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:536:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |                   if (flags >= 8)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  537 |                     type = TYPE_COUNT_LONGINT_POINTER;[0m
  538 |                   else if (flags & 2)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:538:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |                   else if (flags & 2)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  539 |                     type = TYPE_COUNT_SCHAR_POINTER;[0m
  540 |                   else if (flags & 1)[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:540:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |                   else if (flags & 1)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  541 |                     type = TYPE_COUNT_SHORT_POINTER;[0m
  542 |                   else[0m
      | [0;32m                  } 
[0m[1mprintf-parse.c:542:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  543 |                     type = TYPE_COUNT_INT_POINTER;[0m
      | [0;1;32m                                                  
[0m[1mprintf-parse.c:557:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  557 |                   type = TYPE_NONE;[0m
      | [0;1;32m                  ^
[0m      | [0;32m                  {
[0m  558 |                   break;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mprintf-parse.c:561:19: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  561 |                   goto error;[0m
      | [0;1;32m                  ^         
[0m      | [0;32m                  {         ;} 
[0m[1mprintf-parse.c:571:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |                     if (dp->arg_index == ARG_NONE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  572 |                       /* arg_posn wrapped around.  */[0m
  573 |                       goto error;[0m
      | [0;1;32m                                 
[0m[1mprintf-parse.c:575:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  575 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:122:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  122 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:575:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  575 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:122:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  122 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:589:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |               if (size_overflow_p (memory_size))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  590 |                 /* Overflow, would lead to out of memory.  */[0m
  591 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:595:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |               if (memory == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  596 |                 /* Out of memory.  */[0m
  597 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:598:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  598 |               if (d->dir == d->direct_alloc_dir)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  599 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                                                                       
[0m[1mprintf-parse.c:599:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  599 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:599:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  599 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:618:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  619 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:620:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  620 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  621 |     free (d->dir);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:626:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  627 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:628:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  628 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  629 |     free (d->dir);[0m
      | [0;1;32m                  
[0m68 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[64/76][83.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp0kdwtrq4.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/quotearg.c
[1mquotearg.c:171:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  172 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:182:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  183 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:185:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |   if (!left_quote || !right_quote)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  186 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:196:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  196 |   if (style == custom_quoting_style)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  197 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:212:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |   if (translation != msgid)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  213 |     return translation;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:234:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |   if (STRCASEEQ (locale_code, "UTF-8", 'U','T','F','-','8',0,0,0,0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  235 |     return msgid[0] == '`' ? "\xe2\x80\x98": "\xe2\x80\x99";[0m
      | [0;1;32m                                                            
[0m[1mquotearg.c:236:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |   if (STRCASEEQ (locale_code, "GB18030", 'G','B','1','8','0','3','0',0,0))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  237 |     return msgid[0] == '`' ? "\xa1\ae": "\xa1\xaf";[0m
      | [0;1;32m                                                   
[0m[1mquotearg.c:319:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  319 |       quoting_style = c_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  320 |       elide_outer_quotes = true;[0m
  321 |       FALLTHROUGH;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mquotearg.c:323:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  323 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  324 |         STORE ('"');[0m
  325 |       backslash_escapes = true;[0m
  326 |       quote_string = "\"";[0m
  327 |       quote_string_len = 1;[0m
  328 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:323:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  324 |         STORE ('"');[0m
      | [0;1;32m                    
[0m[1mquotearg.c:331:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  331 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  332 |       elide_outer_quotes = false;[0m
  333 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:365:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  365 |         if (!elide_outer_quotes)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  366 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
  367 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:366:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  367 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:372:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  372 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mquotearg.c:375:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  375 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  376 |       FALLTHROUGH;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mquotearg.c:378:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  378 |       elide_outer_quotes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  379 |       FALLTHROUGH;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mquotearg.c:381:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  381 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  382 |         backslash_escapes = true;[0m
  383 |       FALLTHROUGH;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mquotearg.c:381:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  382 |         backslash_escapes = true;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:385:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  385 |       quoting_style = shell_always_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  386 |       if (!elide_outer_quotes)[0m
  387 |         STORE ('\'');[0m
  388 |       quote_string = "'";[0m
  389 |       quote_string_len = 1;[0m
  390 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:386:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  387 |         STORE ('\'');[0m
      | [0;1;32m                     
[0m[1mquotearg.c:393:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  393 |       elide_outer_quotes = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  394 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:397:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  397 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mquotearg.c:419:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  419 |           if (elide_outer_quotes)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  420 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:428:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  428 |           if (backslash_escapes)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:449:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |           else if (flags & QA_ELIDE_NULL_BYTES)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  450 |             continue;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:454:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  454 |           switch (quoting_style)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:457:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  457 |               if (elide_outer_quotes)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  458 |                 goto force_outer_quoting_style;[0m
  459 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mquotearg.c:457:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  457 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  458 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:462:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  462 |               if ((flags & QA_SPLIT_TRIGRAPHS)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mquotearg.c:463:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |                   && i + 2 < argsize && arg[i + 1] == '?')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m[1mquotearg.c:471:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |                     if (elide_outer_quotes)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  472 |                       goto force_outer_quoting_style;[0m
      | [0;1;32m                                                     
[0m[1mquotearg.c:473:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  473 |                     c = arg[i + 2];[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  474 |                     i += 2;[0m
  475 |                     STORE ('?');[0m
  476 |                     STORE ('"');[0m
  477 |                     STORE ('"');[0m
  478 |                     STORE ('?');[0m
  479 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mquotearg.c:482:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  482 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mquotearg.c:487:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mquotearg.c:491:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |         case '\a': esc = 'a'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:492:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  492 |         case '\b': esc = 'b'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:493:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  493 |         case '\f': esc = 'f'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:494:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  494 |         case '\n': esc = 'n'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:495:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  495 |         case '\r': esc = 'r'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:496:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  496 |         case '\t': esc = 't'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:497:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  497 |         case '\v': esc = 'v'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:498:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  498 |         case '\\': esc = c;[0m
      | [0;1;32m                   ^
[0m      | [0;32m                   {
[0m[1mquotearg.c:502:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  502 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  503 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:509:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |           if (backslash_escapes && elide_outer_quotes && quote_string_len)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  510 |             goto store_c;[0m
      | [0;1;32m                         
[0m[1mquotearg.c:514:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  514 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  515 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:526:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |           if (! (argsize == SIZE_MAX ? arg[1] == '\0' : argsize == 1))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  527 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:528:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  528 |           FALLTHROUGH;[0m
      | [0;1;32m          ^          
[0m      | [0;32m          {          ;} 
[0m[1mquotearg.c:59:23: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
   59 | #  define FALLTHROUGH ((void) 0)[0m
      | [0;1;32m                      ^
[0m[1mquotearg.c:530:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |           if (i != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  531 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:532:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  532 |           FALLTHROUGH;[0m
      | [0;1;32m          ^          
[0m      | [0;32m          {          ;} 
[0m[1mquotearg.c:59:23: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
   59 | #  define FALLTHROUGH ((void) 0)[0m
      | [0;1;32m                      ^
[0m[1mquotearg.c:534:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  534 |           c_and_shell_quote_compat = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  535 |           FALLTHROUGH;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mquotearg.c:549:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  550 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:551:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  551 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:554:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  554 |           encountered_single_quote = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:558:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  558 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  559 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:600:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  600 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:622:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  622 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:622:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  622 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:626:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |                 if (argsize == SIZE_MAX)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  627 |                   argsize = strlen (arg);[0m
      | [0;1;32m                                         
[0m[1mquotearg.c:634:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |                     if (bytes == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  635 |                       break;[0m
  636 |                     else if (bytes == (size_t) -1)[0m
      | [0;32m                    } 
[0m[1mquotearg.c:644:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |                         while (i + m < argsize && arg[i + m])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  645 |                           m++;[0m
      | [0;1;32m                              
[0m[1mquotearg.c:658:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  658 |                             for (j = 1; j < bytes; j++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  659 |                               switch (arg[i + m + j])[0m
  660 |                                 {[0m
  661 |                                 case '[': case '\\': case '^':[0m
  662 |                                 case '`': case '|':[0m
  663 |                                   goto force_outer_quoting_style;[0m
  664 | [0m
  665 |                                 default:[0m
  666 |                                   break;[0m
  667 |                                 }[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:666:35: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  666 |                                   break;[0m
      | [0;1;32m                                  ^    
[0m      | [0;32m                                  {    ;} 
[0m[1mquotearg.c:670:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  670 |                         if (! iswprint (w))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  671 |                           printable = false;[0m
      | [0;1;32m                                            
[0m[1mquotearg.c:700:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  700 |                     if (ilim <= i + 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  701 |                       break;[0m
      | [0;1;32m                            
[0m[1mquotearg.c:716:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  716 |           && !is_right_quote)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  717 |         goto store_c;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:726:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  726 |       if (! c_and_shell_quote_compat)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  727 |         all_c_and_shell_quote_compat = false;[0m
      | [0;1;32m                                             
[0m[1mquotearg.c:731:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  731 |       && elide_outer_quotes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  732 |     goto force_outer_quoting_style;[0m
      | [0;1;32m                                   
[0m[1mquotearg.c:741:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  741 |       if (all_c_and_shell_quote_compat)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  742 |         return quotearg_buffer_restyled (buffer, orig_buffersize, arg, argsize,[0m
  743 |                                          c_quoting_style,[0m
  744 |                                          flags, quote_these_too,[0m
  745 |                                          left_quote, right_quote);[0m
  746 |       else if (! buffersize && orig_buffersize)[0m
      | [0;32m      } 
[0m[1mquotearg.c:755:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |   if (quote_string && !elide_outer_quotes)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  756 |     for (; *quote_string; quote_string++)[0m
  757 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:756:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |     for (; *quote_string; quote_string++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  757 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:759:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |   if (len < buffersize)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  760 |     buffer[len] = '\0';[0m
      | [0;1;32m                       
[0m[1mquotearg.c:766:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  766 |   if (quoting_style == shell_always_quoting_style && backslash_escapes)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  767 |     quoting_style = shell_escape_always_quoting_style;[0m
      | [0;1;32m                                                      
[0m[1mquotearg.c:828:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  828 |   if (size)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  829 |     *size = bufsize - 1;[0m
      | [0;1;32m                        
[0m[1mquotearg.c:852:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   for (i = 1; i < nslots; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  853 |     free (sv[i].val);[0m
      | [0;1;32m                     
[0m[1mquotearg.c:884:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  884 |   if (n < 0)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  885 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:892:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  892 |       if (nmax < n)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  893 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mquotearg.c:896:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  896 |       if (preallocated)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  897 |         *sv = slotvec0;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:898:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  898 |       memset (sv + nslots, 0, (n + 1 - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:898:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  898 |       memset (sv + nslots, 0, (n + 1 - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:916:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  916 |         if (val != slot0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  917 |           free (val);[0m
      | [0;1;32m                     
[0m135 warnings generated.
Suppressed 57 warnings (57 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[65/76][82.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp9uail3oo.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/nstrftime.c
[1mnstrftime.c:322:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |   while (len-- > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  323 |     dest[len] = TOLOWER ((UCHAR_T) src[len], loc);[0m
      | [0;1;32m                                                  
[0m[1mnstrftime.c:333:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |   while (len-- > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  334 |     dest[len] = TOUPPER ((UCHAR_T) src[len], loc);[0m
      | [0;1;32m                                                  
[0m[1mnstrftime.c:552:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |   if (! zone)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  553 |     zone = "";[0m
      | [0;1;32m              
[0m[1mnstrftime.c:555:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |   if (hour12 > 12)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  556 |     hour12 -= 12;[0m
  557 |   else[0m
      | [0;32m  } 
[0m[1mnstrftime.c:558:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  558 |     if (hour12 == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  559 |       hour12 = 12;[0m
      | [0;1;32m                  
[0m[1mnstrftime.c:668:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  668 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:668:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  668 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:684:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  684 |               continue;[0m
      | [0;1;32m              ^       
[0m      | [0;32m              {       ;} 
[0m[1mnstrftime.c:688:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  688 |               to_uppcase = true;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  689 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:691:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  691 |               change_case = true;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  692 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:695:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  695 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mnstrftime.c:707:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  707 |                   || (width == INT_MAX / 10 && *f - L_('0') > INT_MAX % 10))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  708 |                 /* Avoid overflow.  */[0m
  709 |                 width = INT_MAX;[0m
  710 |               else[0m
      | [0;32m              } 
[0m[1mnstrftime.c:726:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  726 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mnstrftime.c:729:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  729 |           modifier = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  730 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:777:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  777 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  778 |             goto bad_format;[0m
  779 |           add1 (*f);[0m
  780 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:777:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  777 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  778 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:779:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  779 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:779:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  779 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:783:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  783 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  784 |             goto bad_format;[0m
  785 |           if (change_case)[0m
  786 |             {[0m
  787 |               to_uppcase = true;[0m
  788 |               to_lowcase = false;[0m
  789 |             }[0m
  790 | #ifdef _NL_CURRENT[0m
  791 |           cpy (aw_len, a_wkday);[0m
  792 |           break;[0m
  793 | #else[0m
  794 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:783:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  783 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  784 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:798:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  798 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  799 |             goto bad_format;[0m
  800 |           if (change_case)[0m
  801 |             {[0m
  802 |               to_uppcase = true;[0m
  803 |               to_lowcase = false;[0m
  804 |             }[0m
  805 | #ifdef _NL_CURRENT[0m
  806 |           cpy (STRLEN (f_wkday), f_wkday);[0m
  807 |           break;[0m
  808 | #else[0m
  809 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:798:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  799 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:819:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  819 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  820 |             goto bad_format;[0m
  821 | #ifdef _NL_CURRENT[0m
  822 |           if (modifier == L_('O'))[0m
  823 |             cpy (aam_len, a_altmonth);[0m
  824 |           else[0m
  825 |             cpy (am_len, a_month);[0m
  826 |           break;[0m
  827 | #else[0m
  828 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:819:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  820 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:832:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  832 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  833 |             goto bad_format;[0m
  834 |           if (change_case)[0m
  835 |             {[0m
  836 |               to_uppcase = true;[0m
  837 |               to_lowcase = false;[0m
  838 |             }[0m
  839 | #ifdef _NL_CURRENT[0m
  840 |           if (modifier == L_('O'))[0m
  841 |             cpy (STRLEN (f_altmonth), f_altmonth);[0m
  842 |           else[0m
  843 |             cpy (STRLEN (f_month), f_month);[0m
  844 |           break;[0m
  845 | #else[0m
  846 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:832:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  832 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  833 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:850:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  850 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:850:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  850 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  851 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:869:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  869 |             add (len, __strftime_internal (p,[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:869:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  869 |             add (len, __strftime_internal (p,[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:898:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  898 |             if (modifier != 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  899 |               *u++ = modifier;[0m
      | [0;1;32m                              
[0m[1mnstrftime.c:903:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  903 |             if (len != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  904 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m                                      
[0m[1mnstrftime.c:904:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  904 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:229:12: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:96:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   96 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:188:11: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  188 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:904:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  904 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:229:12: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:96:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   96 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:188:11: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  188 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:904:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  904 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:223:5: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  223 |     add ((n),                                                                 \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  224 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  225 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  226 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  227 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  228 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:904:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  904 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:223:5: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  223 |     add ((n),                                                                 \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  224 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  225 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  226 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  227 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  228 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:910:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  910 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:937:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  937 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  938 |             goto bad_format;[0m
  939 | #ifdef _NL_CURRENT[0m
  940 |           if (! (modifier == L_('E')[0m
  941 |                  && (*(subfmt =[0m
  942 |                        (const CHAR_T *)_NL_CURRENT (LC_TIME, NLW(ERA_D_FMT)))[0m
  943 |                      != L_('\0'))))[0m
  944 |             subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(D_FMT));[0m
  945 |           goto subformat;[0m
  946 | #else[0m
  947 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:937:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  937 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  938 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:950:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  950 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  951 |             goto bad_format;[0m
  952 |           subfmt = L_("%m/%d/%y");[0m
  953 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:950:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  950 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  951 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:956:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  956 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  957 |             goto bad_format;[0m
  958 | [0m
  959 |           DO_NUMBER (2, tp->tm_mday);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:956:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  956 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  957 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:962:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  962 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:962:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  962 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  963 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:976:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  976 |           if (pad != L_('0') && pad != L_('-'))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  977 |             pad = L_('_');[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:1018:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1018 |           if (negative_number)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1019 |             u_number_value = - u_number_value;[0m
      | [0;1;32m                                              
[0m[1mnstrftime.c:1023:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1023 |               if (tz_colon_mask & 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1024 |                 *--bufp = ':';[0m
      | [0;1;32m                              
[0m[1mnstrftime.c:1032:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1032 |           if (digits < width)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1033 |             digits = width;[0m
      | [0;1;32m                           
[0m[1mnstrftime.c:1041:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1041 |               if (sign_char)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1042 |                 add1 (sign_char);[0m
      | [0;1;32m                                 
[0m[1mnstrftime.c:1042:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1042 |                 add1 (sign_char);[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1042:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1042 |                 add1 (sign_char);[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1053:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1053 |                       if ((size_t) padding >= maxsize - i)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1054 |                         return 0;[0m
      | [0;1;32m                                 
[0m[1mnstrftime.c:1056:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |                       if (p)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1057 |                         memset_space (p, padding);[0m
      | [0;1;32m                                                  
[0m[1mnstrftime.c:1057:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1057 |                         memset_space (p, padding);[0m
      | [0;1;32m                        ^
[0m[1mnstrftime.c:160:32: [0m[0;1;36mnote: [0mexpanded from macro 'memset_space'[0m
  160 | # define memset_space(P, Len) (memset (P, ' ', Len), (P) += (Len))[0m
      | [0;1;32m                               ^~~~~~
[0m[1mnstrftime.c:1057:25: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1057 |                         memset_space (p, padding);[0m
      | [0;1;32m                        ^
[0m[1mnstrftime.c:160:32: [0m[0;1;36mnote: [0mexpanded from macro 'memset_space'[0m
  160 | # define memset_space(P, Len) (memset (P, ' ', Len), (P) += (Len))[0m
      | [0;1;32m                               ^~~~~~
[0m[1mnstrftime.c:1060:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1060 |                       if (sign_char)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1061 |                         add1 (sign_char);[0m
      | [0;1;32m                                         
[0m[1mnstrftime.c:1061:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1061 |                         add1 (sign_char);[0m
      | [0;1;32m                        ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1061:25: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1061 |                         add1 (sign_char);[0m
      | [0;1;32m                        ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1065:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1065 |                       if ((size_t) digits >= maxsize - i)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1066 |                         return 0;[0m
      | [0;1;32m                                 
[0m[1mnstrftime.c:1068:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1068 |                       if (sign_char)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1069 |                         add1 (sign_char);[0m
      | [0;1;32m                                         
[0m[1mnstrftime.c:1069:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1069 |                         add1 (sign_char);[0m
      | [0;1;32m                        ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1069:25: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1069 |                         add1 (sign_char);[0m
      | [0;1;32m                        ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1071:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1071 |                       if (p)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1072 |                         memset_zero (p, padding);[0m
      | [0;1;32m                                                 
[0m[1mnstrftime.c:1072:25: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1072 |                         memset_zero (p, padding);[0m
      | [0;1;32m                        ^
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1072:25: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1072 |                         memset_zero (p, padding);[0m
      | [0;1;32m                        ^
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1079:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |                   if (sign_char)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1080 |                     add1 (sign_char);[0m
      | [0;1;32m                                     
[0m[1mnstrftime.c:1080:21: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1080 |                     add1 (sign_char);[0m
      | [0;1;32m                    ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1080:21: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1080 |                     add1 (sign_char);[0m
      | [0;1;32m                    ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1084:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1084 |           cpy (buf + sizeof (buf) / sizeof (buf[0]) - bufp, bufp);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:229:12: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:96:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   96 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:188:11: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  188 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1084:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1084 |           cpy (buf + sizeof (buf) / sizeof (buf[0]) - bufp, bufp);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:229:12: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:96:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   96 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:188:11: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  188 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1084:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1084 |           cpy (buf + sizeof (buf) / sizeof (buf[0]) - bufp, bufp);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:223:5: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  223 |     add ((n),                                                                 \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  224 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  225 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  226 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  227 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  228 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1084:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1084 |           cpy (buf + sizeof (buf) / sizeof (buf[0]) - bufp, bufp);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:223:5: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  223 |     add ((n),                                                                 \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  224 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  225 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  226 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  227 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  228 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1088:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1088 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1089 |             goto bad_format;[0m
 1090 |           subfmt = L_("%Y-%m-%d");[0m
 1091 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1088:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1088 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1089 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1094:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1094 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1095 |             goto bad_format;[0m
 1096 | [0m
 1097 |           DO_NUMBER (2, tp->tm_hour);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:1094:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1094 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1095 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1100:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1100 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1101 |             goto bad_format;[0m
 1102 | [0m
 1103 |           DO_NUMBER (2, hour12);[0m
      | [0;1;32m                               
[0m      | [0;32m                               ;} 
[0m[1mnstrftime.c:1100:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1100 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1101 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1106:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1106 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1107 |             goto bad_format;[0m
 1108 | [0m
 1109 |           DO_NUMBER_SPACEPAD (2, tp->tm_hour);[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1mnstrftime.c:1106:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1106 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1107 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1112:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1112 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1113 |             goto bad_format;[0m
 1114 | [0m
 1115 |           DO_NUMBER_SPACEPAD (2, hour12);[0m
      | [0;1;32m                                        
[0m      | [0;32m                                        ;} 
[0m[1mnstrftime.c:1112:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1112 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1113 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1118:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1118 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1119 |             goto bad_format;[0m
 1120 | [0m
 1121 |           DO_SIGNED_NUMBER (3, tp->tm_yday < -1, tp->tm_yday + 1U);[0m
      | [0;1;32m                                                                  
[0m      | [0;32m                                                                  ;} 
[0m[1mnstrftime.c:1118:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1118 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1119 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1124:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1124 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1125 |             goto bad_format;[0m
 1126 | [0m
 1127 |           DO_NUMBER (2, tp->tm_min);[0m
      | [0;1;32m                                   
[0m      | [0;32m                                   ;} 
[0m[1mnstrftime.c:1124:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1124 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1125 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1130:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1130 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1131 |             goto bad_format;[0m
 1132 | [0m
 1133 |           DO_SIGNED_NUMBER (2, tp->tm_mon < -1, tp->tm_mon + 1U);[0m
      | [0;1;32m                                                                
[0m      | [0;32m                                                                ;} 
[0m[1mnstrftime.c:1130:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1130 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1131 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1137:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1137 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1138 |             goto bad_format;[0m
 1139 | [0m
 1140 |           number_value = ns;[0m
 1141 |           if (width == -1)[0m
 1142 |             width = 9;[0m
 1143 |           else[0m
 1144 |             {[0m
 1145 |               /* Take an explicit width less than 9 as a precision.  */[0m
 1146 |               int j;[0m
 1147 |               for (j = width; j < 9; j++)[0m
 1148 |                 number_value /= 10;[0m
 1149 |             }[0m
 1150 | [0m
 1151 |           DO_NUMBER (width, number_value);[0m
      | [0;1;32m                                         
[0m      | [0;32m                                         ;} 
[0m[1mnstrftime.c:1137:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1137 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1138 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1141:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1141 |           if (width == -1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1142 |             width = 9;[0m
 1143 |           else[0m
      | [0;32m          } 
[0m[1mnstrftime.c:1147:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1147 |               for (j = width; j < 9; j++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1148 |                 number_value /= 10;[0m
      | [0;1;32m                                   
[0m[1mnstrftime.c:1155:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1155 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1155:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1155 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1155:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1155 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1156 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^
[0m[1mnstrftime.c:171:3: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  171 |   do                                                                          \[0m
      | [0;1;32m  ^
[0m[1mnstrftime.c:1159:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1159 |           to_lowcase = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1160 | #ifndef _NL_CURRENT[0m
 1161 |           format_char = L_('p');[0m
 1162 | #endif[0m
 1163 |           FALLTHROUGH;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mnstrftime.c:1165:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1165 |           if (change_case)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1166 |             {[0m
 1167 |               to_uppcase = false;[0m
 1168 |               to_lowcase = true;[0m
 1169 |             }[0m
 1170 | #ifdef _NL_CURRENT[0m
 1171 |           cpy (ap_len, ampm);[0m
 1172 |           break;[0m
 1173 | #else[0m
 1174 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:1178:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1178 |           DO_SIGNED_NUMBER (1, false, ((tp->tm_mon * 11) >> 5) + 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1179 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:746:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_SIGNED_NUMBER'[0m
  746 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1182:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1182 |           subfmt = L_("%H:%M");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1183 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1193:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1193 |           goto underlying_strftime;[0m
      | [0;1;32m          ^                       
[0m      | [0;32m          {                       ;} 
[0m[1mnstrftime.c:1197:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1197 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1198 |             goto bad_format;[0m
 1199 | [0m
 1200 |           DO_NUMBER (2, tp->tm_sec);[0m
      | [0;1;32m                                   
[0m      | [0;32m                                   ;} 
[0m[1mnstrftime.c:1197:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1197 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1198 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1230:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1230 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1231 |             goto bad_format;[0m
 1232 | #ifdef _NL_CURRENT[0m
 1233 |           if (! (modifier == L_('E')[0m
 1234 |                  && (*(subfmt =[0m
 1235 |                        (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(ERA_T_FMT)))[0m
 1236 |                      != L_('\0'))))[0m
 1237 |             subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(T_FMT));[0m
 1238 |           goto subformat;[0m
 1239 | #else[0m
 1240 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:1230:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1230 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1231 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1243:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1243 |           subfmt = L_("%H:%M:%S");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1244 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1247:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1247 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1247:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1247 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1247:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1247 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1248 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:197:18: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  197 | # define add1(C) add (1, *p = C)[0m
      | [0;1;32m                 ^
[0m[1mnstrftime.c:171:3: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  171 |   do                                                                          \[0m
      | [0;1;32m  ^
[0m[1mnstrftime.c:1251:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1251 |           DO_NUMBER (1, (tp->tm_wday - 1 + 7) % 7 + 1);[0m
      | [0;1;32m          ^                                           
[0m      | [0;32m          {                                           ;} 
[0m[1mnstrftime.c:738:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_NUMBER'[0m
  738 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1254:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1254 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1255 |             goto bad_format;[0m
 1256 | [0m
 1257 |           DO_NUMBER (2, (tp->tm_yday - tp->tm_wday + 7) / 7);[0m
      | [0;1;32m                                                            
[0m      | [0;32m                                                            ;} 
[0m[1mnstrftime.c:1254:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1254 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1255 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1262:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1262 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1263 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1308:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1308 |                 DO_SIGNED_NUMBER (4, tp->tm_year < -TM_YEAR_BASE - year_adjust,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1309 |                                   (tp->tm_year + (unsigned int) TM_YEAR_BASE[0m
 1310 |                                    + year_adjust));[0m
      | [0;1;32m                                                  
[0m      | [0;32m                                                  ;} 
[0m[1mnstrftime.c:746:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_SIGNED_NUMBER'[0m
  746 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1313:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1313 |                 DO_NUMBER (2, days / 7 + 1);[0m
      | [0;1;32m                ^                          
[0m      | [0;32m                {                          ;} 
[0m[1mnstrftime.c:738:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_NUMBER'[0m
  738 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1318:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1318 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1319 |             goto bad_format;[0m
 1320 | [0m
 1321 |           DO_NUMBER (2, (tp->tm_yday - (tp->tm_wday - 1 + 7) % 7 + 7) / 7);[0m
      | [0;1;32m                                                                          
[0m      | [0;32m                                                                          ;} 
[0m[1mnstrftime.c:1318:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1318 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1319 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1324:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1324 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1325 |             goto bad_format;[0m
 1326 | [0m
 1327 |           DO_NUMBER (1, tp->tm_wday);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:1324:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1324 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1325 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1330:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1330 |           if (modifier == 'E')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1347:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1347 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1348 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1354:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1354 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1371:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1371 |             if (yy < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1372 |               yy = tp->tm_year < - TM_YEAR_BASE ? -yy : yy + 100;[0m
      | [0;1;32m                                                                 
[0m[1mnstrftime.c:1377:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1377 |           if (change_case)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1393:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1393 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:229:12: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:96:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   96 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:188:11: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  188 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1393:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1393 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:229:12: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:96:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   96 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:188:11: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  188 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1393:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1393 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:223:5: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  223 |     add ((n),                                                                 \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  224 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  225 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  226 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  227 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  228 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1393:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1393 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:223:5: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  223 |     add ((n),                                                                 \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  224 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  225 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  226 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  227 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  228 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1400:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1400 |           for (colons = 1; f[colons] == L_(':'); colons++)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1401 |             continue;[0m
 1402 |           if (f[colons] != L_('z'))[0m
 1403 |             goto bad_format;[0m
 1404 |           f += colons;[0m
 1405 |           goto do_z_conversion;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnstrftime.c:1400:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1400 |           for (colons = 1; f[colons] == L_(':'); colons++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1401 |             continue;[0m
      | [0;1;32m                     
[0m[1mnstrftime.c:1402:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1402 |           if (f[colons] != L_('z'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1403 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1408:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1408 |           colons = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1411:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1411 |           if (tp->tm_isdst < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1412 |             break;[0m
      | [0;1;32m                  
[0m[1mnstrftime.c:1475:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1475 |                 DO_TZ_OFFSET (5, 0, hour_diff * 100 + min_diff);[0m
      | [0;1;32m                ^                                              
[0m      | [0;32m                {                                              ;} 
[0m[1mnstrftime.c:759:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_TZ_OFFSET'[0m
  759 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1477:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1477 |               case 1: tz_hh_mm: /* +hh:mm */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m 1478 |                 DO_TZ_OFFSET (6, 04, hour_diff * 100 + min_diff);[0m
      | [0;1;32m                                                                
[0m      | [0;32m                                                                ;} 
[0m[1mnstrftime.c:1480:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1480 |               case 2: tz_hh_mm_ss: /* +hh:mm:ss */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m 1481 |                 DO_TZ_OFFSET (9, 024,[0m
 1482 |                               hour_diff * 10000 + min_diff * 100 + sec_diff);[0m
      | [0;1;32m                                                                            
[0m      | [0;32m                                                                            ;} 
[0m[1mnstrftime.c:1485:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1485 |                 if (sec_diff != 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1486 |                   goto tz_hh_mm_ss;[0m
 1487 |                 if (min_diff != 0)[0m
 1488 |                   goto tz_hh_mm;[0m
 1489 |                 DO_TZ_OFFSET (3, 0, hour_diff);[0m
      | [0;1;32m                                              
[0m      | [0;32m                                              ;} 
[0m[1mnstrftime.c:1485:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1485 |                 if (sec_diff != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1486 |                   goto tz_hh_mm_ss;[0m
      | [0;1;32m                                   
[0m[1mnstrftime.c:1487:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1487 |                 if (min_diff != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1488 |                   goto tz_hh_mm;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:1492:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1492 |                 goto bad_format;[0m
      | [0;1;32m                ^              
[0m      | [0;32m                {              ;} 
[0m[1mnstrftime.c:1497:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1497 |             --f;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1498 |             FALLTHROUGH;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mnstrftime.c:1503:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1503 |         bad_format:[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1504 |           {[0m
 1505 |             int flen;[0m
 1506 |             for (flen = 1; f[1 - flen] != L_('%'); flen++)[0m
 1507 |               continue;[0m
 1508 |             cpy (flen, &f[1 - flen]);[0m
 1509 |           }[0m
 1510 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:1506:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1506 |             for (flen = 1; f[1 - flen] != L_('%'); flen++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1507 |               continue;[0m
      | [0;1;32m                       
[0m[1mnstrftime.c:1508:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1508 |             cpy (flen, &f[1 - flen]);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:229:12: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:96:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   96 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:188:11: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  188 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1508:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1508 |             cpy (flen, &f[1 - flen]);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:229:12: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:96:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   96 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:188:11: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  188 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1508:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1508 |             cpy (flen, &f[1 - flen]);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:223:5: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  223 |     add ((n),                                                                 \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  224 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  225 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  226 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  227 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  228 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1508:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1508 |             cpy (flen, &f[1 - flen]);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:223:5: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  223 |     add ((n),                                                                 \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  224 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  225 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  226 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  227 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  228 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  229 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  184 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:161:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  161 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1515:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1515 |   if (p && maxsize != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1516 |     *p = L_('\0');[0m
      | [0;1;32m                  
[0m144 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[66/76][93.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp2holl6qt.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/mktime.c
[1mmktime.c:236:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |       if (! INT_ADD_WRAPV (t, d, &result))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  237 |         return result;[0m
      | [0;1;32m                      
[0m[1mmktime.c:270:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |   if (*t < mktime_min)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  271 |     *t = mktime_min;[0m
  272 |   else if (mktime_max < *t)[0m
      | [0;32m  } 
[0m[1mmktime.c:272:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |   else if (mktime_max < *t)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  273 |     *t = mktime_max;[0m
      | [0;1;32m                    
[0m[1mmktime.c:287:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |           if (mid != ok && mid != bad)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  288 |             break;[0m
      | [0;1;32m                  
[0m[1mmktime.c:290:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |           if (r)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  291 |             ok = mid;[0m
  292 |           else[0m
      | [0;32m          } 
[0m[1mmktime.c:292:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  293 |             bad = mid;[0m
      | [0;1;32m                      
[0m[1mmktime.c:366:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |       if (sec < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  367 |         sec = 0;[0m
      | [0;1;32m                
[0m[1mmktime.c:368:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |       if (59 < sec)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  369 |         sec = 59;[0m
      | [0;1;32m                 
[0m[1mmktime.c:385:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |        t1 = t2, t2 = t, t = gt, dst2 = tm.tm_isdst != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m[1mmktime.c:390:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  390 |                 : (isdst != 0) != (tm.tm_isdst != 0))))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  391 |       /* We can't possibly find a match, as we are oscillating[0m
  392 |          between two values.  The requested time probably falls[0m
  393 |          within a spring-forward gap of size GT - T.  Follow the common[0m
  394 |          practice in this case, which is to return a time that is GT - T[0m
  395 |          away from the requested time, preferring a time whose[0m
  396 |          tm_isdst differs from the requested value.  (If no tm_isdst[0m
  397 |          was requested and only one of the two values has a nonzero[0m
  398 |          tm_isdst, prefer that value.)  In practice, this is more[0m
  399 |          useful than returning -1.  */[0m
  400 |       goto offset_found;[0m
  401 |     else if (--remaining_probes == 0)[0m
      | [0;32m    } 
[0m[1mmktime.c:401:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |     else if (--remaining_probes == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  402 |       return -1;[0m
      | [0;1;32m                
[0m[1mmktime.c:437:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  437 |       for (delta = stride; delta < delta_bound; delta += stride)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m[1mmktime.c:473:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  473 |           || ! convert_time (convert, t, &tm))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  474 |         return -1;[0m
      | [0;1;32m                  
[0m13 warnings generated.

[67/76][106.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpjo_i_dnb.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/src/inp.c
[1minp.c:66:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |         if (tifd >= 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   67 |           close (tifd);[0m
      | [0;1;32m                       
[0m[1minp.c:105:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |       if (verbosity == VERBOSE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  106 |         say ("Good.  This file appears to be the %s version.\n", rev);[0m
      | [0;1;32m                                                                      
[0m[1minp.c:110:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  110 |       if (verbosity != SILENT)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  111 |         say ("Warning: this file doesn't appear to be the %s version -- patching anyway.\n",[0m
  112 |              rev);[0m
      | [0;1;32m                  
[0m[1minp.c:114:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |   else if (batch)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  115 |     fatal ("This file doesn't appear to be the %s version -- aborting.",[0m
  116 |            rev);[0m
  117 |   else[0m
      | [0;32m  } 
[0m[1minp.c:121:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  121 |       if (*buf != 'y')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  122 |         fatal ("aborted");[0m
      | [0;1;32m                          
[0m[1minp.c:147:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |     if (inerrno == -1)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  148 |       inerrno = stat_file (filename, &instat);[0m
      | [0;1;32m                                              
[0m[1minp.c:168:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |                     && (instat.st_mode & (S_IWUSR|S_IWGRP|S_IWOTH)) != 0)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  169 |                     /* Somebody can write to it.  */[0m
  170 |                   fatal ("File %s seems to be locked by somebody else under %s",[0m
  171 |                          quotearg (filename), cs);[0m
      | [0;1;32m                                                  
[0m[1minp.c:177:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |                     if (verbosity == VERBOSE)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  178 |                       say ("Comparing file %s to default %s version...\n",[0m
  179 |                            quotearg (filename), cs);[0m
      | [0;1;32m                                                    
[0m[1minp.c:188:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |                 if (dry_run)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  189 |                   cs = 0;[0m
      | [0;1;32m                         
[0m[1minp.c:193:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |                                    &instat))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  194 |               inerrno = 0;[0m
      | [0;1;32m                          
[0m[1minp.c:232:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |          && (buffer = malloc (size ? size : (size_t) 1))))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  233 |     return false;[0m
      | [0;1;32m                 
[0m[1minp.c:243:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |           if (ifd < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  244 |             pfatal ("can't open file %s", quotearg (filename));[0m
      | [0;1;32m                                                               
[0m[1minp.c:266:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |           if (close (ifd) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  267 |             read_fatal ();[0m
      | [0;1;32m                          
[0m[1minp.c:273:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |           if (n < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  274 |             pfatal ("can't read %s %s", "symbolic link", quotearg (filename));[0m
      | [0;1;32m                                                                              
[0m[1minp.c:287:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |   for (s = buffer;  (s = (char *) memchr (s, '\n', lim - s));  s++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  288 |     if (++iline < 0)[0m
  289 |       too_many_lines (filename);[0m
      | [0;1;32m                                
[0m[1minp.c:288:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |     if (++iline < 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  289 |       too_many_lines (filename);[0m
      | [0;1;32m                                
[0m[1minp.c:300:7: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  300 |       ptr[++iline] = s;[0m
      | [0;1;32m      ^
[0m[1minp.c:84:20: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
   84 |     using_plan_a = ! (debug & 16) && plan_a (filename);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~
[0m[1minp.c:84:20: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minp.c:84:38: [0m[0;1;36mnote: [0mCalling 'plan_a'[0m
   84 |     using_plan_a = ! (debug & 16) && plan_a (filename);[0m
      | [0;1;32m                                     ^~~~~~~~~~~~~~~~~
[0m[1minp.c:231:10: [0m[0;1;36mnote: [0m'size' is equal to field 'st_size'[0m
  231 |   if (! (size == instat.st_size[0m
      | [0;1;32m         ^~~~
[0m[1minp.c:231:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minp.c:232:24: [0m[0;1;36mnote: [0mAssuming 'size' is 0[0m
  232 |          && (buffer = malloc (size ? size : (size_t) 1))))[0m
      | [0;1;32m                              ^~~~
[0m[1minp.c:232:24: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1minp.c:231:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  231 |   if (! (size == instat.st_size[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m  232 |          && (buffer = malloc (size ? size : (size_t) 1))))[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:231:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  231 |   if (! (size == instat.st_size[0m
      | [0;1;32m  ^
[0m[1minp.c:237:7: [0m[0;1;36mnote: [0m'size' is 0[0m
  237 |   if (size)[0m
      | [0;1;32m      ^~~~
[0m[1minp.c:237:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  237 |   if (size)[0m
      | [0;1;32m  ^
[0m[1minp.c:287:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 290[0m
  287 |   for (s = buffer;  (s = (char *) memchr (s, '\n', lim - s));  s++)[0m
      | [0;1;32m  ^
[0m[1minp.c:290:10: [0m[0;1;36mnote: [0m'iline' is equal to 'iline'[0m
  290 |   if (! (iline == (size_t) iline[0m
      | [0;1;32m         ^~~~~
[0m[1minp.c:290:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minp.c:290:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minp.c:290:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  290 |   if (! (iline == (size_t) iline[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  291 |          && (size_t) iline * sizeof *ptr / sizeof *ptr == (size_t) iline[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  292 |          && (ptr = (char const **) malloc ((size_t) iline * sizeof *ptr))))[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:290:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  290 |   if (! (iline == (size_t) iline[0m
      | [0;1;32m  ^
[0m[1minp.c:298:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  298 |   for (s = buffer;  ;  s++)[0m
      | [0;1;32m  ^
[0m[1minp.c:301:14: [0m[0;1;36mnote: [0mAssuming 's' is non-null[0m
  301 |       if (! (s = (char *) memchr (s, '\n', lim - s)))[0m
      | [0;1;32m             ^
[0m[1minp.c:301:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  301 |       if (! (s = (char *) memchr (s, '\n', lim - s)))[0m
      | [0;1;32m      ^
[0m[1minp.c:298:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  298 |   for (s = buffer;  ;  s++)[0m
      | [0;1;32m  ^
[0m[1minp.c:301:14: [0m[0;1;36mnote: [0mAssuming 's' is non-null[0m
  301 |       if (! (s = (char *) memchr (s, '\n', lim - s)))[0m
      | [0;1;32m             ^
[0m[1minp.c:301:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  301 |       if (! (s = (char *) memchr (s, '\n', lim - s)))[0m
      | [0;1;32m      ^
[0m[1minp.c:298:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  298 |   for (s = buffer;  ;  s++)[0m
      | [0;1;32m  ^
[0m[1minp.c:300:7: [0m[0;1;36mnote: [0mAccess of the heap area at index 3, while it holds only 3 'const char *' elements[0m
  300 |       ptr[++iline] = s;[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1minp.c:301:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |       if (! (s = (char *) memchr (s, '\n', lim - s)))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  302 |         break;[0m
      | [0;1;32m              
[0m[1minp.c:304:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |   if (size && lim[-1] != '\n')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  305 |     ptr[++iline] = lim;[0m
      | [0;1;32m                       
[0m[1minp.c:305:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  305 |     ptr[++iline] = lim;[0m
      | [0;1;32m    ^
[0m[1minp.c:84:20: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
   84 |     using_plan_a = ! (debug & 16) && plan_a (filename);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~
[0m[1minp.c:84:20: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minp.c:84:38: [0m[0;1;36mnote: [0mCalling 'plan_a'[0m
   84 |     using_plan_a = ! (debug & 16) && plan_a (filename);[0m
      | [0;1;32m                                     ^~~~~~~~~~~~~~~~~
[0m[1minp.c:231:10: [0m[0;1;36mnote: [0m'size' is equal to field 'st_size'[0m
  231 |   if (! (size == instat.st_size[0m
      | [0;1;32m         ^~~~
[0m[1minp.c:231:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minp.c:232:24: [0m[0;1;36mnote: [0mAssuming 'size' is not equal to 0[0m
  232 |          && (buffer = malloc (size ? size : (size_t) 1))))[0m
      | [0;1;32m                              ^~~~
[0m[1minp.c:232:24: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1minp.c:231:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  231 |   if (! (size == instat.st_size[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m  232 |          && (buffer = malloc (size ? size : (size_t) 1))))[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:231:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  231 |   if (! (size == instat.st_size[0m
      | [0;1;32m  ^
[0m[1minp.c:237:7: [0m[0;1;36mnote: [0m'size' is not equal to 0[0m
  237 |   if (size)[0m
      | [0;1;32m      ^~~~
[0m[1minp.c:237:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  237 |   if (size)[0m
      | [0;1;32m  ^
[0m[1minp.c:239:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  239 |       if (S_ISREG (instat.st_mode))[0m
      | [0;1;32m          ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:128:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISREG'[0m
  128 | #define S_ISREG(mode)    __S_ISTYPE((mode), __S_IFREG)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:239:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  239 |       if (S_ISREG (instat.st_mode))[0m
      | [0;1;32m      ^
[0m[1minp.c:269:16: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  269 |       else if (S_ISLNK (instat.st_mode))[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:133:25: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISLNK'[0m
  133 | # define S_ISLNK(mode)   __S_ISTYPE((mode), __S_IFLNK)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:269:12: [0m[0;1;36mnote: [0mTaking true branch[0m
  269 |       else if (S_ISLNK (instat.st_mode))[0m
      | [0;1;32m           ^
[0m[1minp.c:273:8: [0m[0;1;36mnote: [0mAssuming 'n' is >= 0[0m
  273 |           if (n < 0)[0m
      | [0;1;32m              ^~~~~
[0m[1minp.c:273:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  273 |           if (n < 0)[0m
      | [0;1;32m          ^
[0m[1minp.c:287:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 290[0m
  287 |   for (s = buffer;  (s = (char *) memchr (s, '\n', lim - s));  s++)[0m
      | [0;1;32m  ^
[0m[1minp.c:290:10: [0m[0;1;36mnote: [0m'iline' is equal to 'iline'[0m
  290 |   if (! (iline == (size_t) iline[0m
      | [0;1;32m         ^~~~~
[0m[1minp.c:290:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minp.c:290:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minp.c:290:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  290 |   if (! (iline == (size_t) iline[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  291 |          && (size_t) iline * sizeof *ptr / sizeof *ptr == (size_t) iline[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  292 |          && (ptr = (char const **) malloc ((size_t) iline * sizeof *ptr))))[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:290:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  290 |   if (! (iline == (size_t) iline[0m
      | [0;1;32m  ^
[0m[1minp.c:298:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  298 |   for (s = buffer;  ;  s++)[0m
      | [0;1;32m  ^
[0m[1minp.c:301:14: [0m[0;1;36mnote: [0mAssuming 's' is non-null[0m
  301 |       if (! (s = (char *) memchr (s, '\n', lim - s)))[0m
      | [0;1;32m             ^
[0m[1minp.c:301:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  301 |       if (! (s = (char *) memchr (s, '\n', lim - s)))[0m
      | [0;1;32m      ^
[0m[1minp.c:298:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  298 |   for (s = buffer;  ;  s++)[0m
      | [0;1;32m  ^
[0m[1minp.c:301:14: [0m[0;1;36mnote: [0mAssuming 's' is null[0m
  301 |       if (! (s = (char *) memchr (s, '\n', lim - s)))[0m
      | [0;1;32m             ^
[0m[1minp.c:301:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  301 |       if (! (s = (char *) memchr (s, '\n', lim - s)))[0m
      | [0;1;32m      ^
[0m[1minp.c:302:2: [0m[0;1;36mnote: [0m Execution continues on line 304[0m
  302 |         break;[0m
      | [0;1;32m        ^
[0m[1minp.c:304:7: [0m[0;1;36mnote: [0mAssuming 'size' is not equal to 0[0m
  304 |   if (size && lim[-1] != '\n')[0m
      | [0;1;32m      ^~~~
[0m[1minp.c:304:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1minp.c:304:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  304 |   if (size && lim[-1] != '\n')[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1minp.c:304:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  304 |   if (size && lim[-1] != '\n')[0m
      | [0;1;32m  ^
[0m[1minp.c:305:5: [0m[0;1;36mnote: [0mAccess of the heap area at index 3, while it holds only 3 'const char *' elements[0m
  305 |     ptr[++iline] = lim;[0m
      | [0;1;32m    ^~~~~~~~~~~~
[0m[1minp.c:319:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  319 |           for (s = buffer;  (s = (char *) memchr (s, rev0, limrev - s));  s++)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  320 |             if (memcmp (s, rev, revlen) == 0[0m
  321 |                 && (s == buffer || ISSPACE ((unsigned char) s[-1]))[0m
  322 |                 && (s + 1 == limrev || ISSPACE ((unsigned char) s[revlen])))[0m
  323 |               {[0m
  324 |                 found_revision = true;[0m
  325 |                 break;[0m
  326 |               }[0m
      | [0;1;32m               
[0m[1minp.c:354:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |   if (instat.st_size == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  355 |     filename = NULL_DEVICE;[0m
      | [0;1;32m                           
[0m[1minp.c:357:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  358 |     pfatal ("Can't open file %s", quotearg (filename));[0m
      | [0;1;32m                                                       
[0m[1minp.c:368:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |       if (tifd == -1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  369 |         pfatal ("Can't create temporary file %s", TMPINNAME);[0m
      | [0;1;32m                                                             
[0m[1minp.c:381:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |       if (++len > ((size_t) -1) / 2)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  382 |         lines_too_long (filename);[0m
      | [0;1;32m                                  
[0m[1minp.c:386:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |           if (++line < 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  387 |             too_many_lines (filename);[0m
      | [0;1;32m                                      
[0m[1minp.c:388:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |           if (maxlen < len)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  389 |               maxlen = len;[0m
      | [0;1;32m                           
[0m[1minp.c:397:25: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  397 |               found_revision = ISSPACE ((unsigned char) c);[0m
      | [0;1;32m                               ^
[0m[1m./common.h:53:41: [0m[0;1;36mnote: [0mexpanded from macro 'ISSPACE'[0m
   53 | #define ISSPACE(c) (CTYPE_DOMAIN (c) && isspace (c))[0m
      | [0;1;32m                                        ^
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^
[0m[1minp.c:84:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   84 |     using_plan_a = ! (debug & 16) && plan_a (filename);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~
[0m[1minp.c:84:35: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   84 |     using_plan_a = ! (debug & 16) && plan_a (filename);[0m
      | [0;1;32m                                  ^
[0m[1minp.c:85:10: [0m[0;1;36mnote: [0m'using_plan_a' is false[0m
   85 |     if (!using_plan_a)[0m
      | [0;1;32m         ^~~~~~~~~~~~
[0m[1minp.c:85:5: [0m[0;1;36mnote: [0mTaking true branch[0m
   85 |     if (!using_plan_a)[0m
      | [0;1;32m    ^
[0m[1minp.c:87:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
   87 |         if (! S_ISREG (file_type))[0m
      | [0;1;32m              ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:128:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISREG'[0m
  128 | #define S_ISREG(mode)    __S_ISTYPE((mode), __S_IFREG)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:87:2: [0m[0;1;36mnote: [0mTaking false branch[0m
   87 |         if (! S_ISREG (file_type))[0m
      | [0;1;32m        ^
[0m[1minp.c:92:2: [0m[0;1;36mnote: [0mCalling 'plan_b'[0m
   92 |         plan_b(filename);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~
[0m[1minp.c:354:7: [0m[0;1;36mnote: [0mAssuming field 'st_size' is not equal to 0[0m
  354 |   if (instat.st_size == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1minp.c:354:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  354 |   if (instat.st_size == 0)[0m
      | [0;1;32m  ^
[0m[1minp.c:356:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  356 |   if ((ifd = safe_open (filename, O_RDONLY | binary_transput, 0)) < 0[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:356:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1minp.c:357:32: [0m[0;1;36mnote: [0m'?' condition is false[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:181:26: [0m[0;1;36mnote: [0mexpanded from macro 'binary_transput'[0m
  181 | # define binary_transput 0[0m
      | [0;1;32m                         ^
[0m[1minp.c:357:19: [0m[0;1;36mnote: [0mTaint originated here[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:357:19: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:357:19: [0m[0;1;36mnote: [0mAssuming that 'fdopen' is successful[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:357:13: [0m[0;1;36mnote: [0mAssuming 'ifp' is non-null[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m            ^~~
[0m[1minp.c:356:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  356 |   if ((ifd = safe_open (filename, O_RDONLY | binary_transput, 0)) < 0[0m
      | [0;1;32m  ^
[0m[1minp.c:359:7: [0m[0;1;36mnote: [0mAssuming 'TMPINNAME_needs_removal' is true[0m
  359 |   if (TMPINNAME_needs_removal)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:359:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  359 |   if (TMPINNAME_needs_removal)[0m
      | [0;1;32m  ^
[0m[1minp.c:376:20: [0m[0;1;36mnote: [0mAssuming 'rev' is non-null[0m
  376 |   found_revision = !rev;[0m
      | [0;1;32m                   ^~~~
[0m[1minp.c:377:12: [0m[0;1;36mnote: [0m'rev' is non-null[0m
  377 |   revlen = rev ? strlen (rev) : 0;[0m
      | [0;1;32m           ^~~
[0m[1minp.c:377:12: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1minp.c:379:15: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  379 |   while ((c = getc (ifp)) != EOF)[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1minp.c:379:15: [0m[0;1;36mnote: [0mAssuming that 'getc' is successful[0m
  379 |   while ((c = getc (ifp)) != EOF)[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1minp.c:379:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  379 |   while ((c = getc (ifp)) != EOF)[0m
      | [0;1;32m  ^
[0m[1minp.c:381:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  381 |       if (++len > ((size_t) -1) / 2)[0m
      | [0;1;32m      ^
[0m[1minp.c:384:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  384 |       if (c == '\n')[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1minp.c:384:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  384 |       if (c == '\n')[0m
      | [0;1;32m      ^
[0m[1minp.c:393:12: [0m[0;1;36mnote: [0m'found_revision' is false[0m
  393 |       if (!found_revision)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~
[0m[1minp.c:393:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  393 |       if (!found_revision)[0m
      | [0;1;32m      ^
[0m[1minp.c:395:8: [0m[0;1;36mnote: [0mAssuming 'i' is equal to 'revlen'[0m
  395 |           if (i == revlen)[0m
      | [0;1;32m              ^~~~~~~~~~~
[0m[1minp.c:395:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  395 |           if (i == revlen)[0m
      | [0;1;32m          ^
[0m[1minp.c:397:25: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  397 |               found_revision = ISSPACE ((unsigned char) c);[0m
      | [0;1;32m                               ^
[0m[1m./common.h:53:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISSPACE'[0m
   53 | #define ISSPACE(c) (CTYPE_DOMAIN (c) && isspace (c))[0m
      | [0;1;32m                    ^
[0m[1m./common.h:48:25: [0m[0;1;36mnote: [0mexpanded from macro 'CTYPE_DOMAIN'[0m
   48 | #define CTYPE_DOMAIN(c) 1[0m
      | [0;1;32m                        ^
[0m[1minp.c:397:25: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  397 |               found_revision = ISSPACE ((unsigned char) c);[0m
      | [0;1;32m                               ^
[0m[1m./common.h:53:41: [0m[0;1;36mnote: [0mexpanded from macro 'ISSPACE'[0m
   53 | #define ISSPACE(c) (CTYPE_DOMAIN (c) && isspace (c))[0m
      | [0;1;32m                                        ^~~~~~~~~~~
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:400:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |           else if (i != (size_t) -1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  401 |             i = rev[i]==c ? i + 1 : (size_t) -1;[0m
      | [0;1;32m                                                
[0m[1minp.c:403:30: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  403 |           if (i == (size_t) -1  &&  ISSPACE ((unsigned char) c))[0m
      | [0;1;32m                                    ^
[0m[1m./common.h:53:41: [0m[0;1;36mnote: [0mexpanded from macro 'ISSPACE'[0m
   53 | #define ISSPACE(c) (CTYPE_DOMAIN (c) && isspace (c))[0m
      | [0;1;32m                                        ^
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^
[0m[1minp.c:84:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   84 |     using_plan_a = ! (debug & 16) && plan_a (filename);[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~
[0m[1minp.c:84:35: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   84 |     using_plan_a = ! (debug & 16) && plan_a (filename);[0m
      | [0;1;32m                                  ^
[0m[1minp.c:85:10: [0m[0;1;36mnote: [0m'using_plan_a' is false[0m
   85 |     if (!using_plan_a)[0m
      | [0;1;32m         ^~~~~~~~~~~~
[0m[1minp.c:85:5: [0m[0;1;36mnote: [0mTaking true branch[0m
   85 |     if (!using_plan_a)[0m
      | [0;1;32m    ^
[0m[1minp.c:87:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
   87 |         if (! S_ISREG (file_type))[0m
      | [0;1;32m              ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:128:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISREG'[0m
  128 | #define S_ISREG(mode)    __S_ISTYPE((mode), __S_IFREG)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:87:2: [0m[0;1;36mnote: [0mTaking false branch[0m
   87 |         if (! S_ISREG (file_type))[0m
      | [0;1;32m        ^
[0m[1minp.c:92:2: [0m[0;1;36mnote: [0mCalling 'plan_b'[0m
   92 |         plan_b(filename);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~
[0m[1minp.c:354:7: [0m[0;1;36mnote: [0mAssuming field 'st_size' is not equal to 0[0m
  354 |   if (instat.st_size == 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~
[0m[1minp.c:354:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  354 |   if (instat.st_size == 0)[0m
      | [0;1;32m  ^
[0m[1minp.c:356:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  356 |   if ((ifd = safe_open (filename, O_RDONLY | binary_transput, 0)) < 0[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:356:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1minp.c:357:32: [0m[0;1;36mnote: [0m'?' condition is false[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:181:26: [0m[0;1;36mnote: [0mexpanded from macro 'binary_transput'[0m
  181 | # define binary_transput 0[0m
      | [0;1;32m                         ^
[0m[1minp.c:357:19: [0m[0;1;36mnote: [0mTaint originated here[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:357:19: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:357:19: [0m[0;1;36mnote: [0mAssuming that 'fdopen' is successful[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:357:13: [0m[0;1;36mnote: [0mAssuming 'ifp' is non-null[0m
  357 |       || ! (ifp = fdopen (ifd, binary_transput ? "rb" : "r")))[0m
      | [0;1;32m            ^~~
[0m[1minp.c:356:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  356 |   if ((ifd = safe_open (filename, O_RDONLY | binary_transput, 0)) < 0[0m
      | [0;1;32m  ^
[0m[1minp.c:359:7: [0m[0;1;36mnote: [0mAssuming 'TMPINNAME_needs_removal' is true[0m
  359 |   if (TMPINNAME_needs_removal)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:359:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  359 |   if (TMPINNAME_needs_removal)[0m
      | [0;1;32m  ^
[0m[1minp.c:376:20: [0m[0;1;36mnote: [0mAssuming 'rev' is non-null[0m
  376 |   found_revision = !rev;[0m
      | [0;1;32m                   ^~~~
[0m[1minp.c:377:12: [0m[0;1;36mnote: [0m'rev' is non-null[0m
  377 |   revlen = rev ? strlen (rev) : 0;[0m
      | [0;1;32m           ^~~
[0m[1minp.c:377:12: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1minp.c:379:15: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  379 |   while ((c = getc (ifp)) != EOF)[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1minp.c:379:15: [0m[0;1;36mnote: [0mAssuming that 'getc' is successful[0m
  379 |   while ((c = getc (ifp)) != EOF)[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1minp.c:379:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  379 |   while ((c = getc (ifp)) != EOF)[0m
      | [0;1;32m  ^
[0m[1minp.c:381:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  381 |       if (++len > ((size_t) -1) / 2)[0m
      | [0;1;32m      ^
[0m[1minp.c:384:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  384 |       if (c == '\n')[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1minp.c:384:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  384 |       if (c == '\n')[0m
      | [0;1;32m      ^
[0m[1minp.c:393:12: [0m[0;1;36mnote: [0m'found_revision' is false[0m
  393 |       if (!found_revision)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~
[0m[1minp.c:393:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  393 |       if (!found_revision)[0m
      | [0;1;32m      ^
[0m[1minp.c:395:8: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to 'revlen'[0m
  395 |           if (i == revlen)[0m
      | [0;1;32m              ^~~~~~~~~~~
[0m[1minp.c:395:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  395 |           if (i == revlen)[0m
      | [0;1;32m          ^
[0m[1minp.c:400:9: [0m[0;1;36mnote: [0mTaking true branch[0m
  400 |           else if (i != (size_t) -1)[0m
      | [0;1;32m               ^
[0m[1minp.c:401:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  401 |             i = rev[i]==c ? i + 1 : (size_t) -1;[0m
      | [0;1;32m                ^~~~~~~~~
[0m[1minp.c:401:10: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1minp.c:403:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  403 |           if (i == (size_t) -1  &&  ISSPACE ((unsigned char) c))[0m
      | [0;1;32m              ^
[0m[1minp.c:403:30: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  403 |           if (i == (size_t) -1  &&  ISSPACE ((unsigned char) c))[0m
      | [0;1;32m                                    ^
[0m[1m./common.h:53:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISSPACE'[0m
   53 | #define ISSPACE(c) (CTYPE_DOMAIN (c) && isspace (c))[0m
      | [0;1;32m                    ^
[0m[1m./common.h:48:25: [0m[0;1;36mnote: [0mexpanded from macro 'CTYPE_DOMAIN'[0m
   48 | #define CTYPE_DOMAIN(c) 1[0m
      | [0;1;32m                        ^
[0m[1minp.c:403:30: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  403 |           if (i == (size_t) -1  &&  ISSPACE ((unsigned char) c))[0m
      | [0;1;32m                                    ^
[0m[1m./common.h:53:41: [0m[0;1;36mnote: [0mexpanded from macro 'ISSPACE'[0m
   53 | #define ISSPACE(c) (CTYPE_DOMAIN (c) && isspace (c))[0m
      | [0;1;32m                                        ^~~~~~~~~~~
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1minp.c:403:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |           if (i == (size_t) -1  &&  ISSPACE ((unsigned char) c))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  404 |             i = 0;[0m
      | [0;1;32m                  
[0m[1minp.c:408:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  408 |   if (revision)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  409 |     report_revision (found_revision);[0m
      | [0;1;32m                                     
[0m[1minp.c:411:77: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |   for (tibufsize = TIBUFSIZE_MINIMUM;  tibufsize < maxlen;  tibufsize <<= 1)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  412 |     /* do nothing */ ;[0m
      | [0;1;32m                      
[0m[1minp.c:422:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |       if (! (line % lines_per_buf))     /* new block */[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  423 |         if (write (tifd, tibuf[0], tibufsize) != tibufsize)[0m
  424 |           write_fatal ();[0m
      | [0;1;32m                         
[0m[1minp.c:423:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |         if (write (tifd, tibuf[0], tibufsize) != tibufsize)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  424 |           write_fatal ();[0m
      | [0;1;32m                         
[0m[1minp.c:425:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  425 |       if ((c = getc (ifp)) == EOF)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  426 |         break;[0m
      | [0;1;32m              
[0m[1minp.c:446:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  446 |   if (ferror (ifp)  ||  fclose (ifp) != 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  447 |     read_fatal ();[0m
      | [0;1;32m                  
[0m[1minp.c:449:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |   if (line % lines_per_buf  !=  0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  450 |     if (write (tifd, tibuf[0], tibufsize) != tibufsize)[0m
  451 |       write_fatal ();[0m
      | [0;1;32m                     
[0m[1minp.c:450:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |     if (write (tifd, tibuf[0], tibufsize) != tibufsize)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  451 |       write_fatal ();[0m
      | [0;1;32m                     
[0m[1minp.c:476:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |         if (tiline[0] == baseline)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  477 |             whichbuf = false;[0m
  478 |         else if (tiline[1] == baseline)[0m
      | [0;32m        } 
[0m[1minp.c:478:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  478 |         else if (tiline[1] == baseline)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  479 |             whichbuf = true;[0m
  480 |         else {[0m
      | [0;32m        } 
[0m[1minp.c:484:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |                 || read (tifd, tibuf[whichbuf], tibufsize) < 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  485 |               read_fatal ();[0m
      | [0;1;32m                            
[0m[1minp.c:488:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |         if (line == input_lines)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  489 |             *psize = last_line_size;[0m
  490 |         else {[0m
      | [0;32m        } 
[0m[1minp.c:491:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |             for (q = p;  *q++ != '\n';  )[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  492 |                 /* do nothing */ ;[0m
      | [0;1;32m                                  
[0m53 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[68/76][108.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpyf72_0eu.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/vasnprintf.c
[1mvasnprintf.c:1790:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1790 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1791 |     /* errno is already set.  */[0m
 1792 |     return NULL;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1833:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1833 |         if (size_overflow_p (buf_memsize))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1834 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1836:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1836 |         if (buf == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1837 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:1888:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1894:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1894 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1894:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1894 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1899:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1899 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1900 |                   result[length++] = *cp++;[0m
 1901 |                 while (--n > 0);[0m
      | [0;32m                } 
[0m[1mvasnprintf.c:1904:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1904 |         if (i == d.count)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1905 |           break;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:1912:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1912 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1913 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:1915:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1915 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1915:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1915 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:1916:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1916 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1790:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1790 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:150:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  150 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1790:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1790 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1800:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1800 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1800:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1800 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1824:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1824 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1824:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1824 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1841:9: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1841 |     if (resultbuf != NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1841:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1841 |     if (resultbuf != NULL)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1881:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1881 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1883:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1883 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1883:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1883 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1859:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1859:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1864:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1864 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1864:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1864 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1865:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1865 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1865:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1865 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1867:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1867 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:106:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
  106 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1868:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1868 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:110:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  110 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1868:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1868 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1870:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1870 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1870:33: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1870 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m                                ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1874:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1874 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1874:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1874 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1876:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1876 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1876:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1876 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1876:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1876 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1876:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1876 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1892:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1892 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1904:13: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to field 'count'[0m
 1904 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1904:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 1904 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1908:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1908 |         if (dp->conversion == '%')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1908:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1908 |         if (dp->conversion == '%')[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1912:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1912 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1912:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1912 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1914:32: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 1914 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   66 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:1914:32: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 1914 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1915:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is <= 'allocated'[0m
 1915 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1859:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1915:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1915 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1859:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1916:13: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 1916 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1921:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1921 |             if (!(dp->arg_index != ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1922 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:1929:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1929 |                     *a.arg[dp->arg_index].a.a_count_schar_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1930 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:1932:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1932 |                     *a.arg[dp->arg_index].a.a_count_short_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1933 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:1935:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1935 |                     *a.arg[dp->arg_index].a.a_count_int_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1936 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:1938:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1938 |                     *a.arg[dp->arg_index].a.a_count_longint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1939 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:1942:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1942 |                     *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 1943 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:1946:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1946 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mvasnprintf.c:4774:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4774 |                 if (flags & FLAG_GROUP)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 4775 |                   *fbp++ = '\'';[0m
      | [0;1;32m                                
[0m[1mvasnprintf.c:4777:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4777 |                 if (flags & FLAG_LEFT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 4778 |                   *fbp++ = '-';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4779:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4779 |                 if (flags & FLAG_SHOWSIGN)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 4780 |                   *fbp++ = '+';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4781:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4781 |                 if (flags & FLAG_SPACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 4782 |                   *fbp++ = ' ';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4783:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4783 |                 if (flags & FLAG_ALT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 4784 |                   *fbp++ = '#';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4786:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4786 |                 if (flags & FLAG_LOCALIZED)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 4787 |                   *fbp++ = 'I';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4791:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4791 |                     if (flags & FLAG_ZERO)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 4792 |                       *fbp++ = '0';[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:4800:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4800 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:4800:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 4800 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:4806:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4806 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4807 |                               *fbp++ = *mp++;[0m
 4808 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:4821:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4821 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:4821:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 4821 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:4827:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4827 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 4828 |                               *fbp++ = *mp++;[0m
 4829 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:4848:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4848 |                     FALLTHROUGH;[0m
      | [0;1;32m                    ^          
[0m      | [0;32m                    {          ;} 
[0m[1mvasnprintf.c:123:23: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  123 | #  define FALLTHROUGH ((void) 0)[0m
      | [0;1;32m                      ^
[0m[1mvasnprintf.c:4858:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4858 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:4860:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4860 |                     *fbp++ = 'L';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 4861 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:4863:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 4863 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:4921:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4921 |                     if (!(a.arg[dp->width_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 4922 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4927:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4927 |                     if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 4928 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:4941:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 4941 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:4941:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 4941 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:4960:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4960 |                     if (maxlen > INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 4961 |                       maxlen = INT_MAX / TCHARS_PER_DCHAR;[0m
      | [0;1;32m                                                          
[0m[1mvasnprintf.c:5008:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5008 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5009 |                           int arg = a.arg[dp->arg_index].a.a_schar;[0m
 5010 |                           SNPRINTF_BUF (arg);[0m
 5011 |                         }[0m
 5012 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5010:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5010 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5010:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5010 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5014:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5014 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5015 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uchar;[0m
 5016 |                           SNPRINTF_BUF (arg);[0m
 5017 |                         }[0m
 5018 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5016:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5016 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5016:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5016 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5020:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5020 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5021 |                           int arg = a.arg[dp->arg_index].a.a_short;[0m
 5022 |                           SNPRINTF_BUF (arg);[0m
 5023 |                         }[0m
 5024 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5022:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5022 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5022:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5022 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5026:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5026 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5027 |                           unsigned int arg = a.arg[dp->arg_index].a.a_ushort;[0m
 5028 |                           SNPRINTF_BUF (arg);[0m
 5029 |                         }[0m
 5030 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5028:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5028 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5028:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5028 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5032:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5032 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5033 |                           int arg = a.arg[dp->arg_index].a.a_int;[0m
 5034 |                           SNPRINTF_BUF (arg);[0m
 5035 |                         }[0m
 5036 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5034:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5034 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5034:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5034 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5038:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5038 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5039 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uint;[0m
 5040 |                           SNPRINTF_BUF (arg);[0m
 5041 |                         }[0m
 5042 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5040:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5040 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5040:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5040 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5044:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5044 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5045 |                           long int arg = a.arg[dp->arg_index].a.a_longint;[0m
 5046 |                           SNPRINTF_BUF (arg);[0m
 5047 |                         }[0m
 5048 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5046:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5046 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5046:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5046 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5050:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5050 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5051 |                           unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;[0m
 5052 |                           SNPRINTF_BUF (arg);[0m
 5053 |                         }[0m
 5054 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5052:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5052 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5052:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5052 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5057:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5057 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5058 |                           long long int arg = a.arg[dp->arg_index].a.a_longlongint;[0m
 5059 |                           SNPRINTF_BUF (arg);[0m
 5060 |                         }[0m
 5061 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5059:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5059 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5059:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5059 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5063:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5063 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5064 |                           unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;[0m
 5065 |                           SNPRINTF_BUF (arg);[0m
 5066 |                         }[0m
 5067 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5065:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5065 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5065:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5065 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5070:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5070 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5071 |                           double arg = a.arg[dp->arg_index].a.a_double;[0m
 5072 |                           SNPRINTF_BUF (arg);[0m
 5073 |                         }[0m
 5074 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5072:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5072 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5072:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5072 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5076:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5076 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5077 |                           long double arg = a.arg[dp->arg_index].a.a_longdouble;[0m
 5078 |                           SNPRINTF_BUF (arg);[0m
 5079 |                         }[0m
 5080 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5078:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5078 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5078:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5078 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5082:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5082 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5083 |                           int arg = a.arg[dp->arg_index].a.a_char;[0m
 5084 |                           SNPRINTF_BUF (arg);[0m
 5085 |                         }[0m
 5086 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5084:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5084 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5084:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5084 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5089:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5089 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5090 |                           wint_t arg = a.arg[dp->arg_index].a.a_wide_char;[0m
 5091 |                           SNPRINTF_BUF (arg);[0m
 5092 |                         }[0m
 5093 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5091:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5091 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5091:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5091 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5096:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5096 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5097 |                           const char *arg = a.arg[dp->arg_index].a.a_string;[0m
 5098 |                           SNPRINTF_BUF (arg);[0m
 5099 |                         }[0m
 5100 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5098:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5098 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5098:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5098 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5103:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5103 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5104 |                           const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;[0m
 5105 |                           SNPRINTF_BUF (arg);[0m
 5106 |                         }[0m
 5107 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5105:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5105 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5105:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5105 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5110:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5110 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 5111 |                           void *arg = a.arg[dp->arg_index].a.a_pointer;[0m
 5112 |                           SNPRINTF_BUF (arg);[0m
 5113 |                         }[0m
 5114 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:5112:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5112 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5112:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 5112 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:4967:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 4967 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:199:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  199 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:5116:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5116 |                         abort ();[0m
      | [0;1;32m                        ^       
[0m      | [0;32m                        {       ;} 
[0m[1mvasnprintf.c:5129:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5129 |                             && ((TCHAR_T *) (result + length)) [count] != '\0')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5130 |                           abort ();[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5132:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5132 |                         if (retcount > count)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 5133 |                           count = retcount;[0m
      | [0;1;32m                                           
[0m[1mvasnprintf.c:5191:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5191 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5192 |                               count = retcount;[0m
      | [0;1;32m                                               
[0m[1mvasnprintf.c:5205:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5205 |                             if (dp->conversion == 'c' || dp->conversion == 's')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 5206 |                               saved_errno = EILSEQ;[0m
 5207 |                             else[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5207:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5207 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 5208 |                               saved_errno = EINVAL;[0m
      | [0;1;32m                                                   
[0m[1mvasnprintf.c:5211:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5211 |                         if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 5212 |                           free (result);[0m
      | [0;1;32m                                        
[0m[1mvasnprintf.c:5213:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5213 |                         if (buf_malloced != NULL)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5214 |                           free (buf_malloced);[0m
      | [0;1;32m                                              
[0m[1mvasnprintf.c:5232:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5232 |                         if (maxlen == INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 5233 |                           goto overflow;[0m
 5234 |                         else[0m
      | [0;32m                        } 
[0m[1mvasnprintf.c:5252:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5252 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5252:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5252 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5560:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5560 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5560:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5560 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1877:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1877 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:151:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  151 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:5561:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 5561 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1790:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1790 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:150:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  150 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1790:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1790 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1800:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1800 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:1800:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1800 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:1824:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1824 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1824:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1824 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1841:9: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 1841 |     if (resultbuf != NULL)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1841:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1841 |     if (resultbuf != NULL)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1881:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1881 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1883:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 1883 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1883:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1883 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1859:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1859:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1864:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1864 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1864:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1864 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1865:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1865 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1865:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1865 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1867:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1867 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:106:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
  106 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1868:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1868 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:110:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  110 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1868:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1868 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1870:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1870 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1870:33: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1870 |         if (result == resultbuf || result == NULL)                           \[0m
      | [0;1;32m                                ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1874:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1874 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1874:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1874 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1876:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1876 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1876:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1876 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1876:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1876 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:1888:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 1888 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1876:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1876 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1892:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 1892 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:1904:13: [0m[0;1;36mnote: [0mAssuming 'i' is equal to field 'count'[0m
 1904 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:1904:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 1904 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:1905:11: [0m[0;1;36mnote: [0m Execution continues on line 5560[0m
 1905 |           break;[0m
      | [0;1;32m          ^
[0m[1mvasnprintf.c:5560:24: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 5560 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1859:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   66 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:66:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:5560:24: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 5560 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:1859:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1mvasnprintf.c:5560:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 5560 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1859:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5560:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 5560 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:1859:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 1859 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:5561:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 5561 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:5569:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5569 |         if (memory != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 5570 |           result = memory;[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5573:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5573 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5574 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5585:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5585 |     if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5586 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:5587:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5587 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5588 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:5595:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5595 |     if (!(result == resultbuf || result == NULL))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 5596 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:5597:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5597 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 5598 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m124 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[69/76][114.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpek_biyek.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/src/safe.c
[1msafe.c:102:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |   if (getrlimit (RLIMIT_NOFILE, &nofile) == 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  103 |     max_cached_fds = MAX (nofile.rlim_cur / 4, max_cached_fds);[0m
      | [0;1;32m                                                               
[0m[1msafe.c:111:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |   if (!cached_dirfds)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  112 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1msafe.c:148:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |   if (cached_dirfds == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  149 |     init_dirfd_cache ();[0m
      | [0;1;32m                        
[0m[1msafe.c:156:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |       if (&last->lru_link == &lru_list)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  157 |         break;[0m
      | [0;1;32m              
[0m[1msafe.c:161:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |           if (&last->lru_link == &lru_list)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  162 |             break;[0m
      | [0;1;32m                  
[0m[1msafe.c:168:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  168 |   if (! list_empty (&entry->children_link))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  169 |     assert (hash_insert (cached_dirfds, entry) == entry);[0m
      | [0;1;32m                                                         
[0m[1msafe.c:175:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |   if (!cached_dirfds)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  176 |     return;[0m
      | [0;1;32m           
[0m[1msafe.c:182:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |   if (entry)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  183 |     remove_cached_dirfd (entry);[0m
      | [0;1;32m                                
[0m[1msafe.c:195:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |       if (! parent)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  196 |         break;[0m
      | [0;1;32m              
[0m[1msafe.c:235:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (fd < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  236 |     return NULL;[0m
      | [0;1;32m                
[0m[1msafe.c:251:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  251 |   while (ISSLASH (*path))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  252 |     path++;[0m
      | [0;1;32m           
[0m[1msafe.c:253:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |   if (! *path)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  254 |     return 1;[0m
      | [0;1;32m             
[0m[1msafe.c:257:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  257 |       while (*path && ! ISSLASH (*path))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  258 |         path++;[0m
      | [0;1;32m               
[0m[1msafe.c:259:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  259 |       while (ISSLASH (*path))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  260 |         path++;[0m
      | [0;1;32m               
[0m[1msafe.c:304:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |   if (ret <= 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  305 |     goto fail;[0m
      | [0;1;32m              
[0m[1msafe.c:315:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |           if (cwd_stat_errno)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  316 |             goto fail_exdev;[0m
      | [0;1;32m                            
[0m[1msafe.c:324:12: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted offset [clang-analyzer-security.ArrayBound][0m
  324 |           slash = *end; *end = 0;[0m
      | [0;1;32m                  ^
[0m[1msafe.c:734:7: [0m[0;1;36mnote: [0mAssuming 'unsafe' is false[0m
  734 |   if (unsafe)[0m
      | [0;1;32m      ^~~~~~
[0m[1msafe.c:734:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  734 |   if (unsafe)[0m
      | [0;1;32m  ^
[0m[1msafe.c:737:11: [0m[0;1;36mnote: [0mCalling 'traverse_path'[0m
  737 |   dirfd = traverse_path (&pathname);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msafe.c:544:10: [0m[0;1;36mnote: [0mCalling 'traverse_another_path'[0m
  544 |   return traverse_another_path (pathname, -1);[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msafe.c:437:7: [0m[0;1;36mnote: [0m'steps' is <= 'MAX_PATH_COMPONENTS'[0m
  437 |   if (steps > MAX_PATH_COMPONENTS)[0m
      | [0;1;32m      ^~~~~
[0m[1msafe.c:437:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  437 |   if (steps > MAX_PATH_COMPONENTS)[0m
      | [0;1;32m  ^
[0m[1msafe.c:443:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  443 |   if (! *path || IS_ABSOLUTE_FILE_NAME (path))[0m
      | [0;1;32m      ^
[0m[1msafe.c:443:18: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  443 |   if (! *path || IS_ABSOLUTE_FILE_NAME (path))[0m
      | [0;1;32m                 ^
[0m[1m../lib/dosname.h:49:7: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   49 |      (ISSLASH ((F)[0]) || FILE_SYSTEM_PREFIX_LEN (F) != 0)[0m
      | [0;1;32m      ^
[0m[1m../lib/dosname.h:38:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   38 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                    ^
[0m[1msafe.c:443:18: [0m[0;1;36mnote: [0m0 is equal to 0[0m
  443 |   if (! *path || IS_ABSOLUTE_FILE_NAME (path))[0m
      | [0;1;32m                 ^
[0m[1m../lib/dosname.h:49:27: [0m[0;1;36mnote: [0mexpanded from macro 'IS_ABSOLUTE_FILE_NAME'[0m
   49 |      (ISSLASH ((F)[0]) || FILE_SYSTEM_PREFIX_LEN (F) != 0)[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m../lib/dosname.h:37:43: [0m[0;1;36mnote: [0mexpanded from macro 'FILE_SYSTEM_PREFIX_LEN'[0m
   37 | # define FILE_SYSTEM_PREFIX_LEN(Filename) 0[0m
      | [0;1;32m                                          ^
[0m[1msafe.c:443:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |   if (! *path || IS_ABSOLUTE_FILE_NAME (path))[0m
      | [0;1;32m  ^
[0m[1msafe.c:448:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  448 |   if (ISSLASH (*last))[0m
      | [0;1;32m      ^
[0m[1m../lib/dosname.h:38:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   38 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1msafe.c:448:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  448 |   if (ISSLASH (*last))[0m
      | [0;1;32m  ^
[0m[1msafe.c:454:10: [0m[0;1;36mnote: [0mAssuming 'last' is equal to 'path'[0m
  454 |   while (last != path && ! ISSLASH (*(last - 1)))[0m
      | [0;1;32m         ^~~~~~~~~~~~
[0m[1msafe.c:454:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  454 |   while (last != path && ! ISSLASH (*(last - 1)))[0m
      | [0;1;32m                      ^
[0m[1msafe.c:456:7: [0m[0;1;36mnote: [0mAssuming 'last' is not equal to 'path'[0m
  456 |   if (last == path)[0m
      | [0;1;32m      ^~~~~~~~~~~~
[0m[1msafe.c:456:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |   if (last == path)[0m
      | [0;1;32m  ^
[0m[1msafe.c:459:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  459 |   if (debug & 32)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1msafe.c:459:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  459 |   if (debug & 32)[0m
      | [0;1;32m  ^
[0m[1msafe.c:462:10: [0m[0;1;36mnote: [0m'stack' is null[0m
  462 |   while (stack || path != last)[0m
      | [0;1;32m         ^~~~~
[0m[1msafe.c:462:10: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1msafe.c:462:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  462 |   while (stack || path != last)[0m
      | [0;1;32m  ^
[0m[1msafe.c:468:35: [0m[0;1;36mnote: [0m'stack' is null[0m
  468 |       entry = traverse_next (dir, stack ? &stack->path : &path, keepfd, &symlink);[0m
      | [0;1;32m                                  ^~~~~
[0m[1msafe.c:468:35: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1msafe.c:468:15: [0m[0;1;36mnote: [0mCalling 'traverse_next'[0m
  468 |       entry = traverse_next (dir, stack ? &stack->path : &path, keepfd, &symlink);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msafe.c:366:10: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  366 |   while (*p && ! ISSLASH (*p))[0m
      | [0;1;32m         ^~
[0m[1msafe.c:366:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  366 |   while (*p && ! ISSLASH (*p))[0m
      | [0;1;32m            ^
[0m[1msafe.c:368:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  368 |   if (**path == '.' && *path + 1 == p)[0m
      | [0;1;32m                    ^
[0m[1msafe.c:370:21: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  370 |   if (**path == '.' && *(*path + 1) == '.' && *path + 2 == p)[0m
      | [0;1;32m                    ^
[0m[1msafe.c:388:9: [0m[0;1;36mnote: [0m'entry' is null[0m
  388 |   if (! entry)[0m
      | [0;1;32m        ^~~~~
[0m[1msafe.c:388:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  388 |   if (! entry)[0m
      | [0;1;32m  ^
[0m[1msafe.c:390:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  390 |       if (errno == ELOOP[0m
      | [0;1;32m          ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^
[0m[1msafe.c:391:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  391 |           || errno == EMLINK  /* FreeBSD 10.1: Too many links */[0m
      | [0;1;32m          ^
[0m[1msafe.c:395:20: [0m[0;1;36mnote: [0mCalling 'read_symlink'[0m
  395 |           if ((*symlink = read_symlink (dir->fd, name)))[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msafe.c:295:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  295 |   if (fstatat (dirfd, name, &st, AT_SYMLINK_NOFOLLOW)[0m
      | [0;1;32m      ^
[0m[1msafe.c:296:12: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  296 |       || ! S_ISLNK (st.st_mode))[0m
      | [0;1;32m           ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:133:25: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISLNK'[0m
  133 | # define S_ISLNK(mode)   __S_ISTYPE((mode), __S_IFLNK)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msafe.c:295:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  295 |   if (fstatat (dirfd, name, &st, AT_SYMLINK_NOFOLLOW)[0m
      | [0;1;32m  ^
[0m[1msafe.c:303:9: [0m[0;1;36mnote: [0mTaint originated here[0m
  303 |   ret = readlinkat (dirfd, name, buffer, st.st_size);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msafe.c:303:9: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  303 |   ret = readlinkat (dirfd, name, buffer, st.st_size);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msafe.c:303:9: [0m[0;1;36mnote: [0mAssuming that 'readlinkat' is successful[0m
  303 |   ret = readlinkat (dirfd, name, buffer, st.st_size);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1msafe.c:304:7: [0m[0;1;36mnote: [0m'ret' is > 0[0m
  304 |   if (ret <= 0)[0m
      | [0;1;32m      ^~~
[0m[1msafe.c:304:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  304 |   if (ret <= 0)[0m
      | [0;1;32m  ^
[0m[1msafe.c:308:16: [0m[0;1;36mnote: [0mAssuming byte offset '16' is less than the extent of the region[0m
  308 |   if (ISSLASH (*buffer))[0m
      | [0;1;32m               ^
[0m[1m../lib/dosname.h:38:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   38 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                      ^
[0m[1msafe.c:308:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  308 |   if (ISSLASH (*buffer))[0m
      | [0;1;32m      ^
[0m[1m../lib/dosname.h:38:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   38 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1msafe.c:308:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  308 |   if (ISSLASH (*buffer))[0m
      | [0;1;32m  ^
[0m[1msafe.c:312:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  312 |       if (cwd_stat_errno == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1msafe.c:312:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  312 |       if (cwd_stat_errno == -1)[0m
      | [0;1;32m      ^
[0m[1msafe.c:319:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  319 |       for (;;)[0m
      | [0;1;32m      ^
[0m[1msafe.c:324:12: [0m[0;1;36mnote: [0mAccess of the region with a tainted offset that may be too large[0m
  324 |           slash = *end; *end = 0;[0m
      | [0;1;32m                  ^~~~
[0m[1msafe.c:332:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |               while (ISSLASH (*end))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  333 |                 end++;[0m
      | [0;1;32m                      
[0m[1msafe.c:338:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  338 |           if (end == symlink->path)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  339 |             break;[0m
      | [0;1;32m                  
[0m[1msafe.c:340:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |           while (end != symlink->path + 1 && ! ISSLASH (*end))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  341 |             end--;[0m
      | [0;1;32m                  
[0m[1msafe.c:342:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |           while (end != symlink->path + 1 && ISSLASH (*(end - 1)))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  343 |             end--;[0m
      | [0;1;32m                  
[0m[1msafe.c:366:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |   while (*p && ! ISSLASH (*p))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  367 |     p++;[0m
      | [0;1;32m        
[0m[1msafe.c:368:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |   if (**path == '.' && *path + 1 == p)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  369 |     goto skip;[0m
      | [0;1;32m              
[0m[1msafe.c:384:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  384 |   memcpy(name, *path, p - *path);[0m
      | [0;1;32m  ^~~~~~
[0m[1msafe.c:384:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  384 |   memcpy(name, *path, p - *path);[0m
      | [0;1;32m  ^~~~~~
[0m[1msafe.c:405:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |   while (ISSLASH (*p))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  406 |     p++;[0m
      | [0;1;32m        
[0m[1msafe.c:443:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |   if (! *path || IS_ABSOLUTE_FILE_NAME (path))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  444 |     return AT_FDCWD;[0m
      | [0;1;32m                    
[0m[1msafe.c:450:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |       while (last != path)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  451 |         if (! ISSLASH (*--last))[0m
  452 |           break;[0m
      | [0;1;32m                
[0m[1msafe.c:451:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  451 |         if (! ISSLASH (*--last))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  452 |           break;[0m
      | [0;1;32m                
[0m[1msafe.c:454:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |   while (last != path && ! ISSLASH (*(last - 1)))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  455 |     last--;[0m
      | [0;1;32m           
[0m[1msafe.c:456:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  456 |   if (last == path)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  457 |     return AT_FDCWD;[0m
      | [0;1;32m                    
[0m[1msafe.c:459:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |   if (debug & 32)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  460 |     printf ("Resolving path \"%.*s\"", (int) (last - path), path);[0m
      | [0;1;32m                                                                  
[0m[1msafe.c:484:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |           while (*p && ! ISSLASH (*p))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  485 |             p++;[0m
      | [0;1;32m                
[0m[1msafe.c:487:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  487 |           memcpy (name, prev, p - prev);[0m
      | [0;1;32m          ^~~~~~
[0m[1msafe.c:487:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  487 |           memcpy (name, prev, p - prev);[0m
      | [0;1;32m          ^~~~~~
[0m[1msafe.c:492:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  492 |       if (stack && ! *stack->path)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  493 |         pop_symlink (&stack);[0m
      | [0;1;32m                             
[0m[1msafe.c:504:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  504 |       else if (symlink)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  505 |         pop_symlink (&symlink);[0m
      | [0;1;32m                               
[0m[1msafe.c:515:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  516 |             free_cached_dirfd (traversed_symlink);[0m
      | [0;1;32m                                                  
[0m[1msafe.c:524:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |       if (! misses)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  525 |         printf(" (cached)\n");[0m
  526 |       else[0m
      | [0;32m      } 
[0m[1msafe.c:526:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  527 |         printf (" (%u miss%s)\n", misses, misses == 1 ? "" : "es");[0m
      | [0;1;32m                                                                   
[0m[1msafe.c:533:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |   if (traversed_symlink)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  534 |     free_cached_dirfd (traversed_symlink);[0m
      | [0;1;32m                                          
[0m[1msafe.c:536:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |   while (stack)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  537 |     pop_symlink (&stack);[0m
      | [0;1;32m                         
[0m[1msafe.c:551:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  552 |     return fstatat (AT_FDCWD, pathname, buf, flags);[0m
      | [0;1;32m                                                    
[0m[1msafe.c:555:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  555 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  556 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:577:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  577 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  578 |     return open (pathname, flags, mode);[0m
      | [0;1;32m                                        
[0m[1msafe.c:581:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  582 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:592:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  592 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  593 |     return rename (oldpath, newpath);[0m
      | [0;1;32m                                     
[0m[1msafe.c:596:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |   if (olddirfd < 0 && olddirfd != AT_FDCWD)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  597 |     return olddirfd;[0m
      | [0;1;32m                    
[0m[1msafe.c:600:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |   if (newdirfd < 0 && newdirfd != AT_FDCWD)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  601 |     return newdirfd;[0m
      | [0;1;32m                    
[0m[1msafe.c:617:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  617 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  618 |     return mkdir (pathname, mode);[0m
      | [0;1;32m                                  
[0m[1msafe.c:621:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  621 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  622 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:632:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  633 |     return rmdir (pathname);[0m
      | [0;1;32m                            
[0m[1msafe.c:636:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  637 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:640:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |   if (! ret)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  641 |     invalidate_cached_dirfd (dirfd, pathname);[0m
      | [0;1;32m                                              
[0m[1msafe.c:650:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  651 |     return unlink (pathname);[0m
      | [0;1;32m                             
[0m[1msafe.c:654:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  654 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  655 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:664:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  664 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  665 |     return symlink (target, linkpath);[0m
      | [0;1;32m                                      
[0m[1msafe.c:668:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  668 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  669 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:678:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  678 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  679 |     return chmod (pathname, mode);[0m
      | [0;1;32m                                  
[0m[1msafe.c:682:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  683 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:692:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  692 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  693 |     return lchown (pathname, owner, group);[0m
      | [0;1;32m                                           
[0m[1msafe.c:696:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  696 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  697 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:706:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  706 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  707 |     return utimensat (AT_FDCWD, pathname, times, AT_SYMLINK_NOFOLLOW);[0m
      | [0;1;32m                                                                      
[0m[1msafe.c:710:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  710 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  711 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:720:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  720 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  721 |     return readlink (pathname, buf, bufsiz);[0m
      | [0;1;32m                                            
[0m[1msafe.c:724:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  724 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  725 |     return dirfd;[0m
      | [0;1;32m                 
[0m[1msafe.c:734:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  734 |   if (unsafe)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  735 |     return access (pathname, mode);[0m
      | [0;1;32m                                   
[0m[1msafe.c:738:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  738 |   if (dirfd < 0 && dirfd != AT_FDCWD)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  739 |     return dirfd;[0m
      | [0;1;32m                 
[0m75 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[70/76][125.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpfz93ruds.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/src/patch.c
[1mpatch.c:151:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  152 |       version_control_context = "$PATCH_VERSION_CONTROL";[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;32m    } 
[0m[1mpatch.c:153:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  154 |       version_control_context = "$VERSION_CONTROL";[0m
      | [0;1;32m                                                   
[0m[1mpatch.c:166:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |     if (set_utc)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  167 |       setenv ("TZ", "UTC", 1);[0m
      | [0;1;32m                              
[0m[1mpatch.c:169:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  170 |       backup_type = get_version (version_control_context, version_control);[0m
      | [0;1;32m                                                                           
[0m[1mpatch.c:173:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |     if (outfile)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  174 |       outstate.ofp = open_outfile (outfile);[0m
      | [0;1;32m                                            
[0m[1mpatch.c:182:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |     if (inname)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  183 |       unsafe = true;[0m
      | [0;1;32m                    
[0m[1mpatch.c:208:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  209 |         somefailed = true;[0m
      | [0;1;32m                          
[0m[1mpatch.c:235:8: [0m[0;1;35mwarning: [0m[1mValue stored to 'outfd' is never read [clang-analyzer-deadcode.DeadStores][0m
  235 |               outfd = -1;[0m
      | [0;1;32m              ^       ~~
[0m[1mpatch.c:235:8: [0m[0;1;36mnote: [0mValue stored to 'outfd' is never read[0m
  235 |               outfd = -1;[0m
      | [0;1;32m              ^       ~~
[0m[1mpatch.c:252:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |           if (outfile)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  253 |             outname = outfile;[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;32m          } 
[0m[1mpatch.c:254:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  255 |             outname = pch_name (! reverse);[0m
  256 |           else[0m
      | [0;32m          } 
[0m[1mpatch.c:256:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  256 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  257 |             outname = inname;[0m
      | [0;1;32m                             
[0m[1mpatch.c:271:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  271 |               if (inerrno == -1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  272 |                 inerrno = stat_file (inname, &instat);[0m
      | [0;1;32m                                                      
[0m[1mpatch.c:276:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  277 |             outerrno = stat_file (outname, &outstat);[0m
      | [0;1;32m                                                     
[0m[1mpatch.c:287:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |               if (! outerrno)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  288 |                 set_queued_output (&outstat, true);[0m
      | [0;1;32m                                                   
[0m[1mpatch.c:306:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |           if (read_only_behavior == RO_WARN)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  307 |             say ("trying to patch anyway\n");[0m
  308 |           else[0m
      | [0;32m          } 
[0m[1mpatch.c:329:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  330 |             pfatal ("Can't create temporary file %s", TMPOUTNAME);[0m
      | [0;1;32m                                                                  
[0m[1mpatch.c:332:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  333 |         TMPOUTNAME_needs_removal = true;[0m
      | [0;1;32m                                        
[0m[1mpatch.c:341:10: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'fstat' is -1 but should be >= 0 [clang-analyzer-unix.StdCLibraryFunctions][0m
  341 |             if (fstat (outfd, &tmpoutst) != 0)[0m
      | [0;1;32m                ^      ~~~~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'val' is null[0m
  137 |       int i = val ? argmatch (val, quoting_style_args, 0, 0) : -1;[0m
      | [0;1;32m              ^~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'i' is < 0[0m
  139 |                          i < 0 ? shell_quoting_style : (enum quoting_style) i);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:144:19: [0m[0;1;36mnote: [0mAssuming 'val' is null[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                  ^~~
[0m[1mpatch.c:144:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                 ^
[0m[1mpatch.c:149:28: [0m[0;1;36mnote: [0m'val' is null[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                           ^~~
[0m[1mpatch.c:149:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                               ^
[0m[1mpatch.c:151:10: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~
[0m[1mpatch.c:151:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m    ^
[0m[1mpatch.c:153:15: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mpatch.c:153:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m         ^
[0m[1mpatch.c:166:9: [0m[0;1;36mnote: [0mAssuming 'set_utc' is false[0m
  166 |     if (set_utc)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:166:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |     if (set_utc)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:169:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:169:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:173:9: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  173 |     if (outfile)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:173:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |     if (outfile)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:182:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  182 |     if (inname)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:182:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |     if (inname)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:185:9: [0m[0;1;36mnote: [0m'inname' is null[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:185:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m               ^
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:197:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:197:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:198:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  198 |           || apply_empty_patch;[0m
      | [0;1;32m          ^
[0m[1mpatch.c:208:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:208:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:211:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:211:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m      ^
[0m[1mpatch.c:221:11: [0m[0;1;36mnote: [0mAssuming 'TMPREJNAME_needs_removal' is false[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:221:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:230:11: [0m[0;1;36mnote: [0mAssuming 'TMPOUTNAME_needs_removal' is false[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:240:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:240:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:240:35: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m                                  ^~~~~~~~~~~
[0m[1mpatch.c:240:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:250:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:250:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:252:8: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  252 |           if (outfile)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpatch.c:252:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |           if (outfile)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:254:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1mpatch.c:254:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:260:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mpatch.c:260:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:292:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:294:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:294:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m          ^
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0m'read_only_behavior' is not equal to RO_IGNORE[0m
  301 |       if (read_only_behavior != RO_IGNORE[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:302:7: [0m[0;1;36mnote: [0mAssuming 'inerrno' is not equal to 0[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m             ^~~~~~~~~
[0m[1mpatch.c:302:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:317:7: [0m[0;1;36mnote: [0mValue assigned to 'outfd'[0m
  317 |       outfd = make_tempfile (&TMPOUTNAME, 'o', outname,[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  318 |                              O_WRONLY | binary_transput,[0m
      | [0;1;32m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  319 |                              instat.st_mode & S_IRWXUGO);[0m
      | [0;1;32m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:320:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mpatch.c:320:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:322:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  322 |           if (errno == ELOOP || errno == EXDEV)[0m
      | [0;1;32m              ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:322:23: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  322 |           if (errno == ELOOP || errno == EXDEV)[0m
      | [0;1;32m                             ^
[0m[1mpatch.c:334:11: [0m[0;1;36mnote: [0mAssuming 'diff_type' is equal to ED_DIFF[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:334:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:339:6: [0m[0;1;36mnote: [0mAssuming 'dry_run' is false[0m
  339 |         if (! dry_run && ! outfile && ! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~
[0m[1mpatch.c:339:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:339:19: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  339 |         if (! dry_run && ! outfile && ! skip_rest_of_patch)[0m
      | [0;1;32m                         ^~~~~~~~~
[0m[1mpatch.c:339:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  339 |         if (! dry_run && ! outfile && ! skip_rest_of_patch)[0m
      | [0;1;32m            ^
[0m[1mpatch.c:339:32: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  339 |         if (! dry_run && ! outfile && ! skip_rest_of_patch)[0m
      | [0;1;32m                                      ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:339:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  339 |         if (! dry_run && ! outfile && ! skip_rest_of_patch)[0m
      | [0;1;32m        ^
[0m[1mpatch.c:341:10: [0m[0;1;36mnote: [0mThe 1st argument to 'fstat' is -1 but should be >= 0[0m
  341 |             if (fstat (outfd, &tmpoutst) != 0)[0m
      | [0;1;32m                ^      ~~~~~
[0m[1mpatch.c:341:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |             if (fstat (outfd, &tmpoutst) != 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  342 |               pfatal ("%s", TMPOUTNAME);[0m
      | [0;1;32m                                        
[0m[1mpatch.c:362:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |             if (! outstate.ofp)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  363 |               pfatal ("%s", TMPOUTNAME);[0m
      | [0;1;32m                                        
[0m[1mpatch.c:381:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |                 if (renamed || skip_rename)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  382 |                   say ("(%s%s from %s)\n",[0m
  383 |                        skip_rename ? "already " : "",[0m
  384 |                        pch_copy () ? "copied" :[0m
  385 |                        (pch_rename () ? "renamed" : "read"),[0m
  386 |                        ! skip_rename ? inname : pch_name (! strcmp (inname, pch_name (OLD))));[0m
      | [0;1;32m                                                                                              
[0m[1mpatch.c:387:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  387 |                 if (verbosity == VERBOSE)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  388 |                   say ("Using Plan %s...\n", using_plan_a ? "A" : "B");[0m
      | [0;1;32m                                                                       
[0m[1mpatch.c:421:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  422 |                       mismatch = true;[0m
      | [0;1;32m                                      
[0m[1mpatch.c:438:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  438 |                                   : "Reversed (or previously applied)"))))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  439 |                           reverse = ! reverse;[0m
  440 |                         else[0m
      | [0;32m                        } 
[0m[1mpatch.c:443:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |                             if (! pch_swap ())[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  444 |                               fatal ("lost hunk on alloc error!");[0m
      | [0;1;32m                                                                  
[0m[1mpatch.c:476:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |                 if (! skip_reject_file)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  477 |                   abort_hunk (outname, ! failed, reverse);[0m
      | [0;1;32m                                                          
[0m[1mpatch.c:480:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |                     (! skip_rest_of_patch && verbosity != SILENT))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  481 |                   say ("Hunk #%d %s at %s%s.\n", hunk,[0m
  482 |                        skip_rest_of_patch ? "ignored" : "FAILED",[0m
  483 |                        format_linenum (numbuf, newwhere),[0m
  484 |                        ! skip_rest_of_patch && check_line_endings (newwhere)[0m
  485 |                          ?  " (different line endings)" : "");[0m
      | [0;1;32m                                                              
[0m[1mpatch.c:493:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |                 if (fuzz)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  494 |                   say (" with fuzz %s", format_linenum (numbuf, fuzz));[0m
      | [0;1;32m                                                                       
[0m[1mpatch.c:495:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  495 |                 if (in_offset)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  496 |                   say (" (offset %s line%s)",[0m
  497 |                        format_linenum (numbuf, in_offset),[0m
  498 |                        "s" + (in_offset == 1));[0m
      | [0;1;32m                                               
[0m[1mpatch.c:498:14: [0m[0;1;35mwarning: [0m[1madding 'int' to a string does not append to the string [clang-diagnostic-string-plus-int][0m
  498 |                        "s" + (in_offset == 1));[0m
      | [0;1;32m                       ~~~~^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:498:14: [0m[0;1;36mnote: [0muse array indexing to silence this warning[0m
  498 |                        "s" + (in_offset == 1));[0m
      | [0;1;32m                           ^                 
[0m      | [0;32m                       &   [                 ]
[0m[1mpatch.c:507:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  507 |                 if (outfile)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  508 |                   fatal ("out of memory using Plan A");[0m
      | [0;1;32m                                                       
[0m[1mpatch.c:538:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |               if (! dry_run)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  539 |                 output_file (NULL, NULL, NULL, outname,[0m
  540 |                              (inname == outname) ? &instat : NULL,[0m
  541 |                              file_type | 0, backup);[0m
      | [0;1;32m                                                    
[0m[1mpatch.c:552:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  552 |                   if (verbosity != SILENT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  553 |                     say ("Not deleting file %s as content differs from patch\n",[0m
  554 |                          quotearg (outname));[0m
      | [0;1;32m                                             
[0m[1mpatch.c:567:37: [0m[0;1;35mwarning: [0m[1mThe value '0' provided to the cast expression is not in the valid range of values for 'file_attributes' [clang-analyzer-optin.core.EnumCastOutOfRange][0m
  567 |                       enum file_attributes attr = 0;[0m
      | [0;1;32m                                                  ^
[0m[1m./util.h:74:6: [0m[0;1;36mnote: [0menum declared here[0m
   74 | enum file_attributes {[0m
      | [0;1;32m~~~~~^~~~~~~~~~~~~~~~~
[0m   75 |   FA_TIMES = 1,[0m
      | [0;1;32m  ~~~~~~~~~~~~~
[0m   76 |   FA_IDS = 2,[0m
      | [0;1;32m  ~~~~~~~~~~~
[0m   77 |   FA_MODE = 4,[0m
      | [0;1;32m  ~~~~~~~~~~~~
[0m   78 |   FA_XATTRS = 8[0m
      | [0;1;32m  ~~~~~~~~~~~~~
[0m   79 | };[0m
      | [0;1;32m~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'val' is null[0m
  137 |       int i = val ? argmatch (val, quoting_style_args, 0, 0) : -1;[0m
      | [0;1;32m              ^~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'i' is < 0[0m
  139 |                          i < 0 ? shell_quoting_style : (enum quoting_style) i);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:144:19: [0m[0;1;36mnote: [0mAssuming 'val' is null[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                  ^~~
[0m[1mpatch.c:144:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                 ^
[0m[1mpatch.c:149:28: [0m[0;1;36mnote: [0m'val' is null[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                           ^~~
[0m[1mpatch.c:149:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                               ^
[0m[1mpatch.c:151:10: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~
[0m[1mpatch.c:151:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m    ^
[0m[1mpatch.c:153:15: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mpatch.c:153:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m         ^
[0m[1mpatch.c:166:9: [0m[0;1;36mnote: [0mAssuming 'set_utc' is false[0m
  166 |     if (set_utc)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:166:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |     if (set_utc)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:169:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:169:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mCalling 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1583:3: [0m[0;1;36mnote: [0mThe value 1 is assigned to 'outstate.zero_output', which participates in a condition later[0m
 1583 |   outstate->zero_output = true;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mReturning from 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:173:9: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  173 |     if (outfile)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:173:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |     if (outfile)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:182:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  182 |     if (inname)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:182:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |     if (inname)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:185:9: [0m[0;1;36mnote: [0m'inname' is null[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:185:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m               ^
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:197:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:197:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:198:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  198 |           || apply_empty_patch;[0m
      | [0;1;32m          ^
[0m[1mpatch.c:208:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:208:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:211:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:211:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m      ^
[0m[1mpatch.c:221:11: [0m[0;1;36mnote: [0mAssuming 'TMPREJNAME_needs_removal' is false[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:221:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:230:11: [0m[0;1;36mnote: [0mAssuming 'TMPOUTNAME_needs_removal' is false[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:240:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:240:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:240:35: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m                                  ^~~~~~~~~~~
[0m[1mpatch.c:240:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:250:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:250:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:252:8: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  252 |           if (outfile)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpatch.c:252:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |           if (outfile)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:254:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1mpatch.c:254:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:260:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mpatch.c:260:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:292:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:294:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:294:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m          ^
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0m'read_only_behavior' is not equal to RO_IGNORE[0m
  301 |       if (read_only_behavior != RO_IGNORE[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:302:7: [0m[0;1;36mnote: [0mAssuming 'inerrno' is not equal to 0[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m             ^~~~~~~~~
[0m[1mpatch.c:302:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:320:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mpatch.c:320:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:334:11: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:334:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:351:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is true[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:351:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:358:8: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:358:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:369:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:369:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:396:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:396:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 503[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:503:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is true[0m
  503 |         if (!skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:503:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  503 |         if (!skip_rest_of_patch)[0m
      | [0;1;32m        ^
[0m[1mpatch.c:529:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  529 |       if (! skip_rest_of_patch && ! outfile) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:529:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:529:35: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  529 |       if (! skip_rest_of_patch && ! outfile) {[0m
      | [0;1;32m                                  ^~~~~~~~~
[0m[1mpatch.c:529:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  529 |       if (! skip_rest_of_patch && ! outfile) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:530:18: [0m[0;1;36mnote: [0mAssuming 'make_backups' is false[0m
  530 |           bool backup = make_backups[0m
      | [0;1;32m                        ^~~~~~~~~~~~
[0m[1mpatch.c:530:18: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:531:8: [0m[0;1;36mnote: [0mAssuming 'backup_if_mismatch' is false[0m
  531 |                         || (backup_if_mismatch && (mismatch | failed));[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:531:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  531 |                         || (backup_if_mismatch && (mismatch | failed));[0m
      | [0;1;32m                                               ^
[0m[1mpatch.c:532:17: [0m[0;1;36mnote: [0mField 'zero_output' is true[0m
  532 |           if (outstate.zero_output[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:532:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  532 |           if (outstate.zero_output[0m
      | [0;1;32m              ^
[0m[1mpatch.c:533:12: [0m[0;1;36mnote: [0mAssuming 'remove_empty_files' is false[0m
  533 |               && (remove_empty_files[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:533:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:534:31: [0m[0;1;36mnote: [0mAssuming 'reverse' is true[0m
  534 |                   || (pch_says_nonexistent (! reverse) == 2[0m
      | [0;1;32m                                            ^~~~~~~~~
[0m[1mpatch.c:534:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  534 |                   || (pch_says_nonexistent (! reverse) == 2[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:535:9: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  535 |                       && ! posixly_correct)[0m
      | [0;1;32m                      ^
[0m[1mpatch.c:536:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  536 |                   || S_ISLNK (file_type)))[0m
      | [0;1;32m                     ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:133:25: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISLNK'[0m
  133 | # define S_ISLNK(mode)   __S_ISTYPE((mode), __S_IFLNK)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:532:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  532 |           if (outstate.zero_output[0m
      | [0;1;32m          ^
[0m[1mpatch.c:545:23: [0m[0;1;36mnote: [0mField 'zero_output' is true[0m
  545 |               if (! outstate.zero_output[0m
      | [0;1;32m                             ^
[0m[1mpatch.c:546:5: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  546 |                   && pch_says_nonexistent (! reverse) == 2[0m
      | [0;1;32m                  ^
[0m[1mpatch.c:557:12: [0m[0;1;36mnote: [0mAssuming 'dry_run' is false[0m
  557 |               if (! dry_run)[0m
      | [0;1;32m                  ^~~~~~~~~
[0m[1mpatch.c:557:8: [0m[0;1;36mnote: [0mTaking true branch[0m
  557 |               if (! dry_run)[0m
      | [0;1;32m              ^
[0m[1mpatch.c:561:21: [0m[0;1;36mnote: [0mAssuming 'new_mode' is 0[0m
  561 |                   bool set_mode = new_mode && old_mode != new_mode;[0m
      | [0;1;32m                                  ^~~~~~~~
[0m[1mpatch.c:561:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  561 |                   bool set_mode = new_mode && old_mode != new_mode;[0m
      | [0;1;32m                                           ^
[0m[1mpatch.c:564:9: [0m[0;1;36mnote: [0m'failed' is >= 'hunk'[0m
  564 |                   if (failed < hunk || diff_type == ED_DIFF || set_mode[0m
      | [0;1;32m                      ^~~~~~
[0m[1mpatch.c:564:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:564:26: [0m[0;1;36mnote: [0mAssuming 'diff_type' is equal to ED_DIFF[0m
  564 |                   if (failed < hunk || diff_type == ED_DIFF || set_mode[0m
      | [0;1;32m                                       ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:564:47: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  564 |                   if (failed < hunk || diff_type == ED_DIFF || set_mode[0m
      | [0;1;32m                                                            ^
[0m[1mpatch.c:567:37: [0m[0;1;36mnote: [0mThe value '0' provided to the cast expression is not in the valid range of values for 'file_attributes'[0m
  567 |                       enum file_attributes attr = 0;[0m
      | [0;1;32m                                                  ^
[0m[1mpatch.c:580:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  580 |                                                get_stat_mtime (&instat)))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  581 |                             say ("Not setting time of file %s "[0m
  582 |                                  "(time mismatch)\n",[0m
  583 |                                  quotearg (outname));[0m
  584 |                           else if (! force && (mismatch | failed))[0m
      | [0;32m                          } 
[0m[1mpatch.c:584:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  584 |                           else if (! force && (mismatch | failed))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  585 |                             say ("Not setting time of file %s "[0m
  586 |                                  "(contents mismatch)\n",[0m
  587 |                                  quotearg (outname));[0m
  588 |                           else[0m
      | [0;32m                          } 
[0m[1mpatch.c:588:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  588 |                           else[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  589 |                             attr |= FA_TIMES;[0m
      | [0;1;32m                                             
[0m[1mpatch.c:594:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |                           if (set_mode)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  595 |                             attr |= FA_MODE;[0m
      | [0;1;32m                                            
[0m[1mpatch.c:609:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |                       if (pch_rename ())[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  610 |                         output_file (NULL, NULL, NULL, inname, &instat,[0m
  611 |                                      mode, backup);[0m
      | [0;1;32m                                                   
[0m[1mpatch.c:613:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  614 |                     output_file (outname, NULL, &tmpoutst, NULL, NULL,[0m
  615 |                                  file_type | 0, backup);[0m
      | [0;1;32m                                                        
[0m[1mpatch.c:623:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |             if (fstat (fileno (rejfp), &rejst) != 0 || fclose (rejfp) != 0)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  624 |               write_fatal ();[0m
      | [0;1;32m                             
[0m[1mpatch.c:627:55: [0m[0;1;35mwarning: [0m[1madding 'int' to a string does not append to the string [clang-diagnostic-string-plus-int][0m
  627 |             say ("%d out of %d hunk%s %s", failed, hunk, "s" + (hunk == 1),[0m
      | [0;1;32m                                                         ~~~~^~~~~~~~~~~~~
[0m[1mpatch.c:627:55: [0m[0;1;36mnote: [0muse array indexing to silence this warning[0m
  627 |             say ("%d out of %d hunk%s %s", failed, hunk, "s" + (hunk == 1),[0m
      | [0;1;32m                                                             ^            
[0m      | [0;32m                                                         &   [            ]
[0m[1mpatch.c:638:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  638 |                     if (rej[len - 1] == '~')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  639 |                       rej[len - 1] = '#';[0m
      | [0;1;32m                                         
[0m[1mpatch.c:653:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  654 |                           append_to_file (TMPREJNAME, rejname);[0m
      | [0;1;32m                                                               
[0m[1mpatch.c:662:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  662 |                         if (olderrno && olderrno != ENOENT)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  663 |                           write_fatal ();[0m
      | [0;1;32m                                         
[0m[1mpatch.c:664:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  664 |                         if (! olderrno && lookup_file_id (&oldst) == CREATED)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  665 |                           append_to_file (TMPREJNAME, rej);[0m
  666 |                         else[0m
      | [0;32m                        } 
[0m[1mpatch.c:666:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  666 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  667 |                           move_file (TMPREJNAME, &TMPREJNAME_needs_removal,[0m
  668 |                                      &rejst, rej, S_IFREG | 0666, false);[0m
      | [0;1;32m                                                                         
[0m[1mpatch.c:671:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  672 |                   say ("\n");[0m
      | [0;1;32m                             
[0m[1mpatch.c:673:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  673 |                 if (!rejname)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  674 |                     free (rej);[0m
      | [0;1;32m                               
[0m[1mpatch.c:675:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  675 |             } else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  676 |               say ("\n");[0m
      | [0;1;32m                         
[0m[1mpatch.c:681:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  681 |     if (outstate.ofp && (ferror (outstate.ofp) || fclose (outstate.ofp) != 0))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m  682 |       write_fatal ();[0m
      | [0;1;32m                     
[0m[1mpatch.c:686:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  686 |     if (somefailed)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  687 |       exit (1);[0m
      | [0;1;32m               
[0m[1mpatch.c:854:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  854 |       fprintf (stream, "%s: Try '%s --help' for more information.\n",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:854:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  854 |       fprintf (stream, "%s: Try '%s --help' for more information.\n",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:859:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  859 |       fprintf (stream, "Usage: %s [OPTION]... [ORIGFILE [PATCHFILE]]\n\n",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:859:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  859 |       fprintf (stream, "Usage: %s [OPTION]... [ORIGFILE [PATCHFILE]]\n\n",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:861:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  861 |       for (p = option_help;  *p;  p++)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  862 |         fprintf (stream, "%s\n", *p);[0m
      | [0;1;32m                                     
[0m[1mpatch.c:862:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  862 |         fprintf (stream, "%s\n", *p);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:862:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  862 |         fprintf (stream, "%s\n", *p);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:877:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |     if (optind == Argc)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  878 |         return;[0m
      | [0;1;32m               
[0m[1mpatch.c:883:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  883 |                 make_backups = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mpatch.c:894:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  894 |                     if (verbosity != SILENT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  895 |                       say ("warning: the '-b %s' option is obsolete; use '-b -z %s' instead\n",[0m
  896 |                            optarg, optarg);[0m
      | [0;1;32m                                           
[0m[1mpatch.c:901:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  901 |                 if (!*optarg)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  902 |                   fatal ("backup prefix is empty");[0m
  903 |                 origprae = xstrdup (optarg);[0m
  904 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:901:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  901 |                 if (!*optarg)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  902 |                   fatal ("backup prefix is empty");[0m
      | [0;1;32m                                                   
[0m[1mpatch.c:906:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  906 |                 diff_type = CONTEXT_DIFF;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  907 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:909:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  909 |                 if (chdir(optarg) < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  910 |                   pfatal ("Can't change to directory %s", quotearg (optarg));[0m
  911 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:909:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  909 |                 if (chdir(optarg) < 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  910 |                   pfatal ("Can't change to directory %s", quotearg (optarg));[0m
      | [0;1;32m                                                                             
[0m[1mpatch.c:913:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  913 |                 do_defines = xstrdup (optarg);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  914 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:916:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  916 |                 diff_type = ED_DIFF;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  917 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:919:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  919 |                 remove_empty_files = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  920 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:922:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  922 |                 force = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  923 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:925:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  925 |                 maxfuzz = numeric_string (optarg, false, "fuzz factor");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  926 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:928:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  928 |                 patch_get = numeric_string (optarg, true, "get option value");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  929 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:931:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  931 |                 patchname = xstrdup (optarg);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  932 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:934:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  934 |                 canonicalize_ws = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  935 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:938:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  938 |                 merge = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  939 |                 if (optarg)[0m
  940 |                   {[0m
  941 |                     if (! strcmp (optarg, "merge"))[0m
  942 |                       conflict_style = MERGE_MERGE;[0m
  943 |                     else if (! strcmp (optarg, "diff3"))[0m
  944 |                       conflict_style = MERGE_DIFF3;[0m
  945 |                     else[0m
  946 |                       usage (stderr, 2);[0m
  947 |                   }[0m
  948 |                 else[0m
  949 |                   conflict_style = MERGE_MERGE;[0m
  950 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:941:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  941 |                     if (! strcmp (optarg, "merge"))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  942 |                       conflict_style = MERGE_MERGE;[0m
  943 |                     else if (! strcmp (optarg, "diff3"))[0m
      | [0;32m                    } 
[0m[1mpatch.c:943:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  943 |                     else if (! strcmp (optarg, "diff3"))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  944 |                       conflict_style = MERGE_DIFF3;[0m
  945 |                     else[0m
      | [0;32m                    } 
[0m[1mpatch.c:945:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  945 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  946 |                       usage (stderr, 2);[0m
      | [0;1;32m                                        
[0m[1mpatch.c:948:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  948 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  949 |                   conflict_style = MERGE_MERGE;[0m
      | [0;1;32m                                               
[0m[1mpatch.c:953:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  953 |                 diff_type = NORMAL_DIFF;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  954 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:956:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  956 |                 noreverse = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  957 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:959:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  959 |                 outfile = xstrdup (optarg);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  960 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:962:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  962 |                 strippath = numeric_string (optarg, false, "strip count");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  963 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:965:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  965 |                 rejname = xstrdup (optarg);[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  966 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:968:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  968 |                 reverse = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  969 |                 reverse_flag_specified = true;[0m
  970 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:972:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  972 |                 verbosity = SILENT;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  973 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:975:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  975 |                 batch = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  976 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:978:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  978 |                 set_time = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  979 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:981:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  981 |                 diff_type = UNI_DIFF;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  982 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:984:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  984 |                 version();[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  985 |                 exit (0);[0m
  986 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:988:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  988 |                 version_control = optarg;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  989 |                 version_control_context = "--version-control or -V option";[0m
  990 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:993:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  993 |                 debug = numeric_string (optarg, true, "debugging option");[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  994 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:997:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  997 |                 if (!*optarg)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  998 |                   fatal ("backup basename prefix is empty");[0m
  999 |                 origbase = xstrdup (optarg);[0m
 1000 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:997:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  997 |                 if (!*optarg)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  998 |                   fatal ("backup basename prefix is empty");[0m
      | [0;1;32m                                                            
[0m[1mpatch.c:1002:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1002 |             case_z:[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1003 |                 if (!*optarg)[0m
 1004 |                   fatal ("backup suffix is empty");[0m
 1005 |                 origsuff = xstrdup (optarg);[0m
 1006 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1003:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1003 |                 if (!*optarg)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1004 |                   fatal ("backup suffix is empty");[0m
      | [0;1;32m                                                   
[0m[1mpatch.c:1008:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1008 |                 set_utc = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1009 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1011:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1011 |                 dry_run = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1012 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1014:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1014 |                 verbosity = VERBOSE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1015 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1017:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1017 |                 no_strip_trailing_cr = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1018 | #if HAVE_SETMODE_DOS[0m
 1019 |                 binary_transput = O_BINARY;[0m
 1020 | #endif[0m
 1021 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1023:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1023 |                 usage (stdout, 0);[0m
      | [0;1;32m                ^                
[0m      | [0;32m                {                ;} 
[0m[1mpatch.c:1025:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1025 |                 backup_if_mismatch = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1026 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1028:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1028 |                 backup_if_mismatch = false;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1029 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1031:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1031 |                 posixly_correct = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1032 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1034:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1034 |                 {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1035 |                   int i = argmatch (optarg, quoting_style_args, 0, 0);[0m
 1036 |                   if (i < 0)[0m
 1037 |                     {[0m
 1038 |                       invalid_arg ("quoting style", optarg, i);[0m
 1039 |                       usage (stderr, 2);[0m
 1040 |                     }[0m
 1041 |                   set_quoting_style ((struct quoting_options *) 0,[0m
 1042 |                                      (enum quoting_style) i);[0m
 1043 |                 }[0m
 1044 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1046:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1046 |                 if (strcmp (optarg, "context") == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1047 |                   reject_format = NEW_CONTEXT_DIFF;[0m
 1048 |                 else if (strcmp (optarg, "unified") == 0)[0m
 1049 |                   reject_format = UNI_DIFF;[0m
 1050 |                 else[0m
 1051 |                   usage (stderr, 2);[0m
 1052 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1046:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1046 |                 if (strcmp (optarg, "context") == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1047 |                   reject_format = NEW_CONTEXT_DIFF;[0m
 1048 |                 else if (strcmp (optarg, "unified") == 0)[0m
      | [0;32m                } 
[0m[1mpatch.c:1048:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1048 |                 else if (strcmp (optarg, "unified") == 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1049 |                   reject_format = UNI_DIFF;[0m
 1050 |                 else[0m
      | [0;32m                } 
[0m[1mpatch.c:1050:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1050 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1051 |                   usage (stderr, 2);[0m
      | [0;1;32m                                    
[0m[1mpatch.c:1054:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1054 |                 if (strcmp (optarg, "ignore") == 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1055 |                   read_only_behavior = RO_IGNORE;[0m
 1056 |                 else if (strcmp (optarg, "warn") == 0)[0m
 1057 |                   read_only_behavior = RO_WARN;[0m
 1058 |                 else if (strcmp (optarg, "fail") == 0)[0m
 1059 |                   read_only_behavior = RO_FAIL;[0m
 1060 |                 else[0m
 1061 |                   usage (stderr, 2);[0m
 1062 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1054:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1054 |                 if (strcmp (optarg, "ignore") == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1055 |                   read_only_behavior = RO_IGNORE;[0m
 1056 |                 else if (strcmp (optarg, "warn") == 0)[0m
      | [0;32m                } 
[0m[1mpatch.c:1056:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |                 else if (strcmp (optarg, "warn") == 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1057 |                   read_only_behavior = RO_WARN;[0m
 1058 |                 else if (strcmp (optarg, "fail") == 0)[0m
      | [0;32m                } 
[0m[1mpatch.c:1058:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1058 |                 else if (strcmp (optarg, "fail") == 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1059 |                   read_only_behavior = RO_FAIL;[0m
 1060 |                 else[0m
      | [0;32m                } 
[0m[1mpatch.c:1060:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1060 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1061 |                   usage (stderr, 2);[0m
      | [0;1;32m                                    
[0m[1mpatch.c:1064:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1064 |                 follow_symlinks = true;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1065 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpatch.c:1067:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1067 |                 usage (stderr, 2);[0m
      | [0;1;32m                ^                
[0m      | [0;32m                {                ;} 
[0m[1mpatch.c:1082:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1082 |                 fprintf (stderr, "%s: %s: extra operand\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1082:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1082 |                 fprintf (stderr, "%s: %s: extra operand\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1111:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1111 |       if (9 < (unsigned) digit)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1112 |         fatal ("%s %s is not a number", argtype_msgid, quotearg (string));[0m
      | [0;1;32m                                                                          
[0m[1mpatch.c:1114:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1114 |       if (v10 / 10 != value || (next_value < v10) != (signed_digit < 0))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1115 |         fatal ("%s %s is too large", argtype_msgid, quotearg (string));[0m
      | [0;1;32m                                                                       
[0m[1mpatch.c:1121:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |   if (value < 0 && ! negative_allowed)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1122 |     fatal ("%s %s is negative", argtype_msgid, quotearg (string));[0m
      | [0;1;32m                                                                  
[0m[1mpatch.c:1148:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1148 |     if (!pat_lines)                     /* null range matches always */[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1149 |         return first_guess;[0m
      | [0;1;32m                           
[0m[1mpatch.c:1152:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1152 |     if (first_guess <= max_neg_offset)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1153 |         max_neg_offset = first_guess - 1;[0m
      | [0;1;32m                                         
[0m[1mpatch.c:1159:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1159 |         if (suffix_fuzz < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1160 |           /* Can only match entire file.  */[0m
 1161 |           if (pat_lines != input_lines || prefix_context < last_frozen_line)[0m
 1162 |             return 0;[0m
      | [0;1;32m                     
[0m[1mpatch.c:1161:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1161 |           if (pat_lines != input_lines || prefix_context < last_frozen_line)[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 1162 |             return 0;[0m
      | [0;1;32m                     
[0m[1mpatch.c:1172:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1172 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1173 |           return 0;[0m
      | [0;1;32m                   
[0m[1mpatch.c:1175:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1175 |     else if (prefix_fuzz < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1176 |       prefix_fuzz = 0;[0m
      | [0;1;32m                      
[0m[1mpatch.c:1188:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1188 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1189 |           return 0;[0m
      | [0;1;32m                   
[0m[1mpatch.c:1200:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1200 |             if (debug & 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1201 |               say ("Offset changing from %s to %s\n",[0m
 1202 |                    format_linenum (numbuf0, in_offset),[0m
 1203 |                    format_linenum (numbuf1, in_offset + offset));[0m
      | [0;1;32m                                                                 
[0m[1mpatch.c:1209:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1209 |             if (debug & 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1210 |               say ("Offset changing from %s to %s\n",[0m
 1211 |                    format_linenum (numbuf0, in_offset),[0m
 1212 |                    format_linenum (numbuf1, in_offset - offset));[0m
      | [0;1;32m                                                                 
[0m[1mpatch.c:1225:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1225 |   if (debug & 1)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1226 |     say ("oldchar = '%c', newchar = '%c'\n",[0m
 1227 |         pch_char (old), pch_char (new));[0m
      | [0;1;32m                                        
[0m[1mpatch.c:1245:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1245 |       fprintf (fp, "%s,0", format_linenum (numbuf0, start - 1));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:1245:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1245 |       fprintf (fp, "%s,0", format_linenum (numbuf0, start - 1));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:1245:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1245 |       fprintf (fp, "%s,0", format_linenum (numbuf0, start - 1));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1246 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpatch.c:1249:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1249 |       fprintf (fp, "%s", format_linenum (numbuf0, start));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:1249:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1249 |       fprintf (fp, "%s", format_linenum (numbuf0, start));[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:1249:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1249 |       fprintf (fp, "%s", format_linenum (numbuf0, start));[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1250 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpatch.c:1253:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1253 |       fprintf (fp, "%s,%s",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:1253:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1253 |       fprintf (fp, "%s,%s",[0m
      | [0;1;32m      ^~~~~~~
[0m[1mpatch.c:1253:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1253 |       fprintf (fp, "%s,%s",[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 1254 |               format_linenum (numbuf0, start),[0m
 1255 |               format_linenum (numbuf1, count));[0m
 1256 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpatch.c:1266:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1266 |   fprintf (fp, "%s %s%s\n", tag, name ? name : "/dev/null",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpatch.c:1266:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1266 |   fprintf (fp, "%s %s%s\n", tag, name ? name : "/dev/null",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpatch.c:1282:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1282 |       if (pch_name (INDEX))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1283 |         fprintf(rejfp, "Index: %s\n", pch_name (INDEX));[0m
      | [0;1;32m                                                        
[0m[1mpatch.c:1283:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1283 |         fprintf(rejfp, "Index: %s\n", pch_name (INDEX));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:1283:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1283 |         fprintf(rejfp, "Index: %s\n", pch_name (INDEX));[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:1289:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1289 |   fprintf (rejfp, "@@ -");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpatch.c:1289:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1289 |   fprintf (rejfp, "@@ -");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpatch.c:1291:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1291 |   fprintf (rejfp, " +");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpatch.c:1291:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1291 |   fprintf (rejfp, " +");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpatch.c:1293:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1293 |   fprintf (rejfp, " @@%s\n", c_function ? c_function : "");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpatch.c:1293:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1293 |   fprintf (rejfp, " @@%s\n", c_function ? c_function : "");[0m
      | [0;1;32m  ^~~~~~~
[0m[1mpatch.c:1295:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1295 |   while (pch_char (new) == '=' || pch_char (new) == '\n')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1296 |     new++;[0m
      | [0;1;32m          
[0m[1mpatch.c:1298:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1298 |   if (diff_type != UNI_DIFF)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1299 |     pch_normalize (UNI_DIFF);[0m
      | [0;1;32m                             
[0m[1mpatch.c:1314:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1314 |       if (old > lastline)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1315 |           break;[0m
      | [0;1;32m                
[0m[1mpatch.c:1317:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1317 |       if (pch_char (new) != pch_char (old))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1318 |         mangled_patch (old, new);[0m
      | [0;1;32m                                 
[0m[1mpatch.c:1323:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1323 |   if (pch_char (new) != '^')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1324 |     mangled_patch (old, new);[0m
      | [0;1;32m                             
[0m[1mpatch.c:1345:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1345 |     if (diff_type == UNI_DIFF)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1346 |       pch_normalize (NEW_CONTEXT_DIFF);[0m
      | [0;1;32m                                       
[0m[1mpatch.c:1350:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1350 |         if (pch_name (INDEX))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1351 |           fprintf(rejfp, "Index: %s\n", pch_name (INDEX));[0m
      | [0;1;32m                                                          
[0m[1mpatch.c:1351:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1351 |           fprintf(rejfp, "Index: %s\n", pch_name (INDEX));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpatch.c:1351:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1351 |           fprintf(rejfp, "Index: %s\n", pch_name (INDEX));[0m
      | [0;1;32m          ^~~~~~~
[0m[1mpatch.c:1355:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1355 |     fprintf(rejfp, "***************%s\n", c_function ? c_function : "");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mpatch.c:1355:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1355 |     fprintf(rejfp, "***************%s\n", c_function ? c_function : "");[0m
      | [0;1;32m    ^~~~~~~
[0m[1mpatch.c:1361:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1361 |             if (oldlast < oldfirst)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1362 |                 fprintf(rejfp, "*** 0%s\n", stars);[0m
 1363 |             else if (oldlast == oldfirst)[0m
 1364 |                 fprintf (rejfp, "*** %s%s\n",[0m
 1365 |                          format_linenum (numbuf0, oldfirst), stars);[0m
 1366 |             else[0m
 1367 |                 fprintf (rejfp, "*** %s,%s%s\n",[0m
 1368 |                          format_linenum (numbuf0, oldfirst),[0m
 1369 |                          format_linenum (numbuf1, oldlast), stars);[0m
 1370 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mpatch.c:1361:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1361 |             if (oldlast < oldfirst)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1362 |                 fprintf(rejfp, "*** 0%s\n", stars);[0m
 1363 |             else if (oldlast == oldfirst)[0m
      | [0;32m            } 
[0m[1mpatch.c:1362:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1362 |                 fprintf(rejfp, "*** 0%s\n", stars);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1362:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1362 |                 fprintf(rejfp, "*** 0%s\n", stars);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1363:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1363 |             else if (oldlast == oldfirst)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1364 |                 fprintf (rejfp, "*** %s%s\n",[0m
 1365 |                          format_linenum (numbuf0, oldfirst), stars);[0m
 1366 |             else[0m
      | [0;32m            } 
[0m[1mpatch.c:1364:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1364 |                 fprintf (rejfp, "*** %s%s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1364:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1364 |                 fprintf (rejfp, "*** %s%s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1366:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1366 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1367 |                 fprintf (rejfp, "*** %s,%s%s\n",[0m
 1368 |                          format_linenum (numbuf0, oldfirst),[0m
 1369 |                          format_linenum (numbuf1, oldlast), stars);[0m
      | [0;1;32m                                                                   
[0m[1mpatch.c:1367:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1367 |                 fprintf (rejfp, "*** %s,%s%s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1367:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1367 |                 fprintf (rejfp, "*** %s,%s%s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1372:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1372 |             if (newlast < newfirst)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1373 |                 fprintf(rejfp, "--- 0%s\n", minuses);[0m
 1374 |             else if (newlast == newfirst)[0m
 1375 |                 fprintf (rejfp, "--- %s%s\n",[0m
 1376 |                          format_linenum (numbuf0, newfirst), minuses);[0m
 1377 |             else[0m
 1378 |                 fprintf (rejfp, "--- %s,%s%s\n",[0m
 1379 |                          format_linenum (numbuf0, newfirst),[0m
 1380 |                          format_linenum (numbuf1, newlast), minuses);[0m
 1381 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mpatch.c:1372:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1372 |             if (newlast < newfirst)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1373 |                 fprintf(rejfp, "--- 0%s\n", minuses);[0m
 1374 |             else if (newlast == newfirst)[0m
      | [0;32m            } 
[0m[1mpatch.c:1373:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1373 |                 fprintf(rejfp, "--- 0%s\n", minuses);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1373:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1373 |                 fprintf(rejfp, "--- 0%s\n", minuses);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1374:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1374 |             else if (newlast == newfirst)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1375 |                 fprintf (rejfp, "--- %s%s\n",[0m
 1376 |                          format_linenum (numbuf0, newfirst), minuses);[0m
 1377 |             else[0m
      | [0;32m            } 
[0m[1mpatch.c:1375:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1375 |                 fprintf (rejfp, "--- %s%s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1375:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1375 |                 fprintf (rejfp, "--- %s%s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1377:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1377 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1378 |                 fprintf (rejfp, "--- %s,%s%s\n",[0m
 1379 |                          format_linenum (numbuf0, newfirst),[0m
 1380 |                          format_linenum (numbuf1, newlast), minuses);[0m
      | [0;1;32m                                                                     
[0m[1mpatch.c:1378:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1378 |                 fprintf (rejfp, "--- %s,%s%s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1378:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1378 |                 fprintf (rejfp, "--- %s,%s%s\n",[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1383:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1383 |             fprintf (rejfp, "%c ", pch_char (i));[0m
      | [0;1;32m            ^~~~~~~
[0m[1mpatch.c:1383:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1383 |             fprintf (rejfp, "%c ", pch_char (i));[0m
      | [0;1;32m            ^~~~~~~
[0m[1mpatch.c:1386:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1386 |             pch_write_line (i, rejfp);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1387 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mpatch.c:1389:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1389 |             fatal ("fatal internal error in abort_hunk_context");[0m
      | [0;1;32m            ^                                                   
[0m      | [0;32m            {                                                   ;} 
[0m[1mpatch.c:1391:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1391 |         if (ferror (rejfp))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1392 |           write_fatal ();[0m
      | [0;1;32m                         
[0m[1mpatch.c:1401:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1401 |   if (! TMPREJNAME_needs_removal)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1402 |     init_reject (outname);[0m
      | [0;1;32m                          
[0m[1mpatch.c:1404:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1404 |       || (reject_format == NO_DIFF && diff_type == UNI_DIFF))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1405 |     abort_hunk_unified (header, reverse);[0m
 1406 |   else[0m
      | [0;32m  } 
[0m[1mpatch.c:1406:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1406 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1407 |     abort_hunk_context (header, reverse);[0m
      | [0;1;32m                                         
[0m[1mpatch.c:1424:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1425 |         new++;[0m
      | [0;1;32m              
[0m[1mpatch.c:1430:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1430 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1431 |                 return false;[0m
      | [0;1;32m                             
[0m[1mpatch.c:1434:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1434 |                     fprintf (fp, outstate->after_newline + not_defined,[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mpatch.c:1434:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1434 |                     fprintf (fp, outstate->after_newline + not_defined,[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mpatch.c:1434:7: [0m[0;1;35mwarning: [0m[1mStream pointer might be NULL [clang-analyzer-unix.Stream][0m
 1434 |                     fprintf (fp, outstate->after_newline + not_defined,[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'val' is null[0m
  137 |       int i = val ? argmatch (val, quoting_style_args, 0, 0) : -1;[0m
      | [0;1;32m              ^~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'i' is < 0[0m
  139 |                          i < 0 ? shell_quoting_style : (enum quoting_style) i);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:144:19: [0m[0;1;36mnote: [0mAssuming 'val' is null[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                  ^~~
[0m[1mpatch.c:144:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                 ^
[0m[1mpatch.c:149:28: [0m[0;1;36mnote: [0m'val' is null[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                           ^~~
[0m[1mpatch.c:149:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                               ^
[0m[1mpatch.c:151:10: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~
[0m[1mpatch.c:151:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m    ^
[0m[1mpatch.c:153:15: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mpatch.c:153:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m         ^
[0m[1mpatch.c:166:9: [0m[0;1;36mnote: [0mAssuming 'set_utc' is false[0m
  166 |     if (set_utc)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:166:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |     if (set_utc)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:169:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:169:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mCalling 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1581:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'outstate.ofp'[0m
 1581 |   outstate->ofp = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mReturning from 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:173:9: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  173 |     if (outfile)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:173:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |     if (outfile)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:182:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  182 |     if (inname)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:182:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |     if (inname)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:185:9: [0m[0;1;36mnote: [0m'inname' is null[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:185:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m               ^
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:197:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:197:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:198:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  198 |           || apply_empty_patch;[0m
      | [0;1;32m          ^
[0m[1mpatch.c:208:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:208:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:211:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:211:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m      ^
[0m[1mpatch.c:221:11: [0m[0;1;36mnote: [0mAssuming 'TMPREJNAME_needs_removal' is false[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:221:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:230:11: [0m[0;1;36mnote: [0mAssuming 'TMPOUTNAME_needs_removal' is false[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:240:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:240:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:240:35: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m                                  ^~~~~~~~~~~
[0m[1mpatch.c:240:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:250:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:250:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:252:8: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  252 |           if (outfile)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpatch.c:252:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |           if (outfile)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:254:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1mpatch.c:254:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:260:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mpatch.c:260:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:292:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:294:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:294:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m          ^
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0m'read_only_behavior' is not equal to RO_IGNORE[0m
  301 |       if (read_only_behavior != RO_IGNORE[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:302:7: [0m[0;1;36mnote: [0mAssuming 'inerrno' is not equal to 0[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m             ^~~~~~~~~
[0m[1mpatch.c:302:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:320:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mpatch.c:320:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:334:11: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:334:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:351:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is true[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:351:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:358:8: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:358:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:369:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:369:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:396:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:396:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:403:10: [0m[0;1;36mnote: [0mAssuming 'merge' is false[0m
  403 |             if (merge)[0m
      | [0;1;32m                ^~~~~
[0m[1mpatch.c:403:6: [0m[0;1;36mnote: [0mTaking false branch[0m
  403 |             if (merge)[0m
      | [0;1;32m            ^
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0mAssuming 'prefix_context' is >= 'suffix_context'[0m
  412 |                 lin context = (prefix_context < suffix_context[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:414:16: [0m[0;1;36mnote: [0mAssuming 'maxfuzz' is >= 'context'[0m
  414 |                 mymaxfuzz = (maxfuzz < context ? maxfuzz : context);[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~
[0m[1mpatch.c:414:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:418:10: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:418:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:421:22: [0m[0;1;36mnote: [0m'fuzz' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                   ^~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:421:30: [0m[0;1;36mnote: [0mAssuming 'in_offset' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                           ^~~~~~~~~
[0m[1mpatch.c:421:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0m'hunk' is equal to 1[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                        ^~~~
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:423:26: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                       ^~~~~
[0m[1mpatch.c:423:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                             ^
[0m[1mpatch.c:453:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:453:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:453:36: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                                                 ^~~~~
[0m[1mpatch.c:454:5: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  454 |                          && ++fuzz <= mymaxfuzz);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:419:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  419 |                 do {[0m
      | [0;1;32m                ^
[0m[1mpatch.c:456:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:456:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                ^
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  466 |             newwhere = (where ? where : pch_first()) + out_offset;[0m
      | [0;1;32m                        ^~~~~
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:467:10: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  467 |             if (skip_rest_of_patch[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:467:10: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:468:7: [0m[0;1;36mnote: [0m'merge' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                    ^~~~~
[0m[1mpatch.c:468:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:470:9: [0m[0;1;36mnote: [0m'merge' is false[0m
  470 |                 || (! merge[0m
      | [0;1;32m                      ^~~~~
[0m[1mpatch.c:470:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  470 |                 || (! merge[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:471:12: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 1[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                         ^~~~~~~~~~
[0m[1mpatch.c:471:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                                    ^
[0m[1mpatch.c:473:9: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  473 |                         || ! where[0m
      | [0;1;32m                             ^~~~~
[0m[1mpatch.c:471:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:474:9: [0m[0;1;36mnote: [0mCalling 'apply_hunk'[0m
  474 |                         || ! apply_hunk (&outstate, where))))[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1421:5: [0m[0;1;36mnote: [0m'fp' initialized to a null pointer value[0m
 1421 |     FILE *fp = outstate->ofp;[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:1424:36: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1427[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1427:12: [0m[0;1;36mnote: [0mAssuming 'old' is <= 'lastline'[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mpatch.c:1427:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1428:6: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1428:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1429:24: [0m[0;1;36mnote: [0mField 'after_newline' is true[0m
 1429 |             assert (outstate->after_newline);[0m
      | [0;1;32m                              ^
[0m[1mpatch.c:1429:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1429 |             assert (outstate->after_newline);[0m
      | [0;1;32m            ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mpatch.c:1430:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 1430 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m            ^
[0m[1mpatch.c:1432:10: [0m[0;1;36mnote: [0mAssuming 'R_do_defines' is non-null[0m
 1432 |             if (R_do_defines) {[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1mpatch.c:1432:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1432 |             if (R_do_defines) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:1433:7: [0m[0;1;36mnote: [0m'def_state' is equal to OUTSIDE[0m
 1433 |                 if (def_state == OUTSIDE) {[0m
      | [0;1;32m                    ^~~~~~~~~
[0m[1mpatch.c:1433:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1433 |                 if (def_state == OUTSIDE) {[0m
      | [0;1;32m                ^
[0m[1mpatch.c:1434:7: [0m[0;1;36mnote: [0mStream pointer might be NULL[0m
 1434 |                     fprintf (fp, outstate->after_newline + not_defined,[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1435 |                              R_do_defines);[0m
      | [0;1;32m                             ~~~~~~~~~~~~~
[0m[1mpatch.c:1442:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1442 |                 if (ferror (fp))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1443 |                   write_fatal ();[0m
      | [0;1;32m                                 
[0m[1mpatch.c:1454:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1454 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1455 |                 return false;[0m
      | [0;1;32m                             
[0m[1mpatch.c:1462:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1462 |                     fprintf (fp, outstate->after_newline + if_defined,[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mpatch.c:1462:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1462 |                     fprintf (fp, outstate->after_newline + if_defined,[0m
      | [0;1;32m                    ^~~~~~~
[0m[1mpatch.c:1462:7: [0m[0;1;35mwarning: [0m[1mStream pointer might be NULL [clang-analyzer-unix.Stream][0m
 1462 |                     fprintf (fp, outstate->after_newline + if_defined,[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'val' is null[0m
  137 |       int i = val ? argmatch (val, quoting_style_args, 0, 0) : -1;[0m
      | [0;1;32m              ^~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'i' is < 0[0m
  139 |                          i < 0 ? shell_quoting_style : (enum quoting_style) i);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:144:19: [0m[0;1;36mnote: [0mAssuming 'val' is null[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                  ^~~
[0m[1mpatch.c:144:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                 ^
[0m[1mpatch.c:149:28: [0m[0;1;36mnote: [0m'val' is null[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                           ^~~
[0m[1mpatch.c:149:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                               ^
[0m[1mpatch.c:151:10: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~
[0m[1mpatch.c:151:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m    ^
[0m[1mpatch.c:153:15: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mpatch.c:153:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m         ^
[0m[1mpatch.c:166:9: [0m[0;1;36mnote: [0mAssuming 'set_utc' is false[0m
  166 |     if (set_utc)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:166:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |     if (set_utc)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:169:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:169:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mCalling 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1581:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'outstate.ofp'[0m
 1581 |   outstate->ofp = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mReturning from 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:173:9: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  173 |     if (outfile)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:173:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |     if (outfile)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:182:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  182 |     if (inname)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:182:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |     if (inname)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:185:9: [0m[0;1;36mnote: [0m'inname' is null[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:185:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m               ^
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:197:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:197:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:198:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  198 |           || apply_empty_patch;[0m
      | [0;1;32m          ^
[0m[1mpatch.c:208:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:208:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:211:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:211:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m      ^
[0m[1mpatch.c:221:11: [0m[0;1;36mnote: [0mAssuming 'TMPREJNAME_needs_removal' is false[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:221:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:230:11: [0m[0;1;36mnote: [0mAssuming 'TMPOUTNAME_needs_removal' is false[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:240:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:240:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:240:35: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m                                  ^~~~~~~~~~~
[0m[1mpatch.c:240:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:250:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:250:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:252:8: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  252 |           if (outfile)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpatch.c:252:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |           if (outfile)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:254:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1mpatch.c:254:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:260:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mpatch.c:260:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:292:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:294:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:294:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m          ^
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0m'read_only_behavior' is not equal to RO_IGNORE[0m
  301 |       if (read_only_behavior != RO_IGNORE[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:302:7: [0m[0;1;36mnote: [0mAssuming 'inerrno' is not equal to 0[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m             ^~~~~~~~~
[0m[1mpatch.c:302:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:320:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mpatch.c:320:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:334:11: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:334:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:351:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is true[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:351:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:358:8: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:358:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:369:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:369:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:396:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:396:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:403:10: [0m[0;1;36mnote: [0mAssuming 'merge' is false[0m
  403 |             if (merge)[0m
      | [0;1;32m                ^~~~~
[0m[1mpatch.c:403:6: [0m[0;1;36mnote: [0mTaking false branch[0m
  403 |             if (merge)[0m
      | [0;1;32m            ^
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0mAssuming 'prefix_context' is >= 'suffix_context'[0m
  412 |                 lin context = (prefix_context < suffix_context[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:414:16: [0m[0;1;36mnote: [0mAssuming 'maxfuzz' is >= 'context'[0m
  414 |                 mymaxfuzz = (maxfuzz < context ? maxfuzz : context);[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~
[0m[1mpatch.c:414:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:418:10: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:418:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:421:22: [0m[0;1;36mnote: [0m'fuzz' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                   ^~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:421:30: [0m[0;1;36mnote: [0mAssuming 'in_offset' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                           ^~~~~~~~~
[0m[1mpatch.c:421:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0m'hunk' is equal to 1[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                        ^~~~
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:423:26: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                       ^~~~~
[0m[1mpatch.c:423:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                             ^
[0m[1mpatch.c:453:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:453:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:453:36: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                                                 ^~~~~
[0m[1mpatch.c:454:5: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  454 |                          && ++fuzz <= mymaxfuzz);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:419:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  419 |                 do {[0m
      | [0;1;32m                ^
[0m[1mpatch.c:456:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:456:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                ^
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  466 |             newwhere = (where ? where : pch_first()) + out_offset;[0m
      | [0;1;32m                        ^~~~~
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:467:10: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  467 |             if (skip_rest_of_patch[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:467:10: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:468:7: [0m[0;1;36mnote: [0m'merge' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                    ^~~~~
[0m[1mpatch.c:468:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:470:9: [0m[0;1;36mnote: [0m'merge' is false[0m
  470 |                 || (! merge[0m
      | [0;1;32m                      ^~~~~
[0m[1mpatch.c:470:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  470 |                 || (! merge[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:471:12: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 1[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                         ^~~~~~~~~~
[0m[1mpatch.c:471:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                                    ^
[0m[1mpatch.c:473:9: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  473 |                         || ! where[0m
      | [0;1;32m                             ^~~~~
[0m[1mpatch.c:471:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:474:9: [0m[0;1;36mnote: [0mCalling 'apply_hunk'[0m
  474 |                         || ! apply_hunk (&outstate, where))))[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1421:5: [0m[0;1;36mnote: [0m'fp' initialized to a null pointer value[0m
 1421 |     FILE *fp = outstate->ofp;[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:1424:36: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1427[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1427:12: [0m[0;1;36mnote: [0mAssuming 'old' is <= 'lastline'[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mpatch.c:1427:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1428:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1428:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1450:11: [0m[0;1;36mnote: [0mAssuming 'new' is <= 'pat_end'[0m
 1450 |         else if (new > pat_end) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~
[0m[1mpatch.c:1450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1450 |         else if (new > pat_end) {[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1453:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1453 |         else if (pch_char(new) == '+') {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1453:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1453 |         else if (pch_char(new) == '+') {[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1454:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 1454 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m            ^
[0m[1mpatch.c:1456:10: [0m[0;1;36mnote: [0mAssuming 'R_do_defines' is non-null[0m
 1456 |             if (R_do_defines) {[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1mpatch.c:1456:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1456 |             if (R_do_defines) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:1457:7: [0m[0;1;36mnote: [0m'def_state' is not equal to IN_IFNDEF[0m
 1457 |                 if (def_state == IN_IFNDEF) {[0m
      | [0;1;32m                    ^~~~~~~~~
[0m[1mpatch.c:1457:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1457 |                 if (def_state == IN_IFNDEF) {[0m
      | [0;1;32m                ^
[0m[1mpatch.c:1461:12: [0m[0;1;36mnote: [0m'def_state' is equal to OUTSIDE[0m
 1461 |                 else if (def_state == OUTSIDE) {[0m
      | [0;1;32m                         ^~~~~~~~~
[0m[1mpatch.c:1461:8: [0m[0;1;36mnote: [0mTaking true branch[0m
 1461 |                 else if (def_state == OUTSIDE) {[0m
      | [0;1;32m                     ^
[0m[1mpatch.c:1462:7: [0m[0;1;36mnote: [0mStream pointer might be NULL[0m
 1462 |                     fprintf (fp, outstate->after_newline + if_defined,[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1463 |                              R_do_defines);[0m
      | [0;1;32m                             ~~~~~~~~~~~~~
[0m[1mpatch.c:1466:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1466 |                 if (ferror (fp))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1467 |                   write_fatal ();[0m
      | [0;1;32m                                 
[0m[1mpatch.c:1473:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1473 |         else if (pch_char(new) != pch_char(old))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1474 |           mangled_patch (old, new);[0m
 1475 |         else if (pch_char(new) == '!') {[0m
      | [0;32m        } 
[0m[1mpatch.c:1477:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1477 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1478 |                 return false;[0m
      | [0;1;32m                             
[0m[1mpatch.c:1481:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1481 |                fprintf (fp, 1 + not_defined, R_do_defines);[0m
      | [0;1;32m               ^~~~~~~
[0m[1mpatch.c:1481:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1481 |                fprintf (fp, 1 + not_defined, R_do_defines);[0m
      | [0;1;32m               ^~~~~~~
[0m[1mpatch.c:1481:9: [0m[0;1;35mwarning: [0m[1mStream pointer might be NULL [clang-analyzer-unix.Stream][0m
 1481 |                fprintf (fp, 1 + not_defined, R_do_defines);[0m
      | [0;1;32m               ^
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'val' is null[0m
  137 |       int i = val ? argmatch (val, quoting_style_args, 0, 0) : -1;[0m
      | [0;1;32m              ^~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'i' is < 0[0m
  139 |                          i < 0 ? shell_quoting_style : (enum quoting_style) i);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:144:19: [0m[0;1;36mnote: [0mAssuming 'val' is null[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                  ^~~
[0m[1mpatch.c:144:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                 ^
[0m[1mpatch.c:149:28: [0m[0;1;36mnote: [0m'val' is null[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                           ^~~
[0m[1mpatch.c:149:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                               ^
[0m[1mpatch.c:151:10: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~
[0m[1mpatch.c:151:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m    ^
[0m[1mpatch.c:153:15: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mpatch.c:153:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m         ^
[0m[1mpatch.c:166:9: [0m[0;1;36mnote: [0mAssuming 'set_utc' is false[0m
  166 |     if (set_utc)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:166:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |     if (set_utc)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:169:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:169:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mCalling 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1581:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'outstate.ofp'[0m
 1581 |   outstate->ofp = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mReturning from 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:173:9: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  173 |     if (outfile)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:173:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |     if (outfile)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:182:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  182 |     if (inname)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:182:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |     if (inname)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:185:9: [0m[0;1;36mnote: [0m'inname' is null[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:185:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m               ^
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:197:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:197:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:198:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  198 |           || apply_empty_patch;[0m
      | [0;1;32m          ^
[0m[1mpatch.c:208:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:208:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:211:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:211:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m      ^
[0m[1mpatch.c:221:11: [0m[0;1;36mnote: [0mAssuming 'TMPREJNAME_needs_removal' is false[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:221:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:230:11: [0m[0;1;36mnote: [0mAssuming 'TMPOUTNAME_needs_removal' is false[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:240:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:240:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:240:35: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m                                  ^~~~~~~~~~~
[0m[1mpatch.c:240:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:250:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:250:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:252:8: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  252 |           if (outfile)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpatch.c:252:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |           if (outfile)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:254:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1mpatch.c:254:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:260:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mpatch.c:260:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:292:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:294:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:294:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m          ^
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0m'read_only_behavior' is not equal to RO_IGNORE[0m
  301 |       if (read_only_behavior != RO_IGNORE[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:302:7: [0m[0;1;36mnote: [0mAssuming 'inerrno' is not equal to 0[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m             ^~~~~~~~~
[0m[1mpatch.c:302:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:320:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mpatch.c:320:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:334:11: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:334:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:351:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is true[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:351:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:358:8: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:358:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:369:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:369:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:396:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:396:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:403:10: [0m[0;1;36mnote: [0mAssuming 'merge' is false[0m
  403 |             if (merge)[0m
      | [0;1;32m                ^~~~~
[0m[1mpatch.c:403:6: [0m[0;1;36mnote: [0mTaking false branch[0m
  403 |             if (merge)[0m
      | [0;1;32m            ^
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0mAssuming 'prefix_context' is >= 'suffix_context'[0m
  412 |                 lin context = (prefix_context < suffix_context[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:414:16: [0m[0;1;36mnote: [0mAssuming 'maxfuzz' is >= 'context'[0m
  414 |                 mymaxfuzz = (maxfuzz < context ? maxfuzz : context);[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~
[0m[1mpatch.c:414:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:418:10: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:418:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:421:22: [0m[0;1;36mnote: [0m'fuzz' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                   ^~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:421:30: [0m[0;1;36mnote: [0mAssuming 'in_offset' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                           ^~~~~~~~~
[0m[1mpatch.c:421:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0m'hunk' is equal to 1[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                        ^~~~
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:423:26: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                       ^~~~~
[0m[1mpatch.c:423:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                             ^
[0m[1mpatch.c:453:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:453:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:453:36: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                                                 ^~~~~
[0m[1mpatch.c:454:5: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  454 |                          && ++fuzz <= mymaxfuzz);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:419:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  419 |                 do {[0m
      | [0;1;32m                ^
[0m[1mpatch.c:456:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:456:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                ^
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  466 |             newwhere = (where ? where : pch_first()) + out_offset;[0m
      | [0;1;32m                        ^~~~~
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:467:10: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  467 |             if (skip_rest_of_patch[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:467:10: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:468:7: [0m[0;1;36mnote: [0m'merge' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                    ^~~~~
[0m[1mpatch.c:468:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:470:9: [0m[0;1;36mnote: [0m'merge' is false[0m
  470 |                 || (! merge[0m
      | [0;1;32m                      ^~~~~
[0m[1mpatch.c:470:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  470 |                 || (! merge[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:471:12: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 1[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                         ^~~~~~~~~~
[0m[1mpatch.c:471:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                                    ^
[0m[1mpatch.c:473:9: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  473 |                         || ! where[0m
      | [0;1;32m                             ^~~~~
[0m[1mpatch.c:471:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:474:9: [0m[0;1;36mnote: [0mCalling 'apply_hunk'[0m
  474 |                         || ! apply_hunk (&outstate, where))))[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1421:5: [0m[0;1;36mnote: [0m'fp' initialized to a null pointer value[0m
 1421 |     FILE *fp = outstate->ofp;[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:1424:36: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1427[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1427:12: [0m[0;1;36mnote: [0mAssuming 'old' is <= 'lastline'[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mpatch.c:1427:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1428:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1428:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1450:11: [0m[0;1;36mnote: [0mAssuming 'new' is <= 'pat_end'[0m
 1450 |         else if (new > pat_end) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~
[0m[1mpatch.c:1450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1450 |         else if (new > pat_end) {[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1453:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1453 |         else if (pch_char(new) == '+') {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1453:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1453 |         else if (pch_char(new) == '+') {[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1473:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1473 |         else if (pch_char(new) != pch_char(old))[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1473:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1473 |         else if (pch_char(new) != pch_char(old))[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1475:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1475 |         else if (pch_char(new) == '!') {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1475:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1475 |         else if (pch_char(new) == '!') {[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1476:24: [0m[0;1;36mnote: [0mField 'after_newline' is true[0m
 1476 |             assert (outstate->after_newline);[0m
      | [0;1;32m                              ^
[0m[1mpatch.c:1476:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1476 |             assert (outstate->after_newline);[0m
      | [0;1;32m            ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mpatch.c:1477:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 1477 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m            ^
[0m[1mpatch.c:1479:24: [0m[0;1;36mnote: [0mField 'after_newline' is true[0m
 1479 |             assert (outstate->after_newline);[0m
      | [0;1;32m                              ^
[0m[1mpatch.c:1479:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1479 |             assert (outstate->after_newline);[0m
      | [0;1;32m            ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1mpatch.c:1480:10: [0m[0;1;36mnote: [0mAssuming 'R_do_defines' is non-null[0m
 1480 |             if (R_do_defines) {[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1mpatch.c:1480:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1480 |             if (R_do_defines) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:1481:9: [0m[0;1;36mnote: [0mStream pointer might be NULL[0m
 1481 |                fprintf (fp, 1 + not_defined, R_do_defines);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1482:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1482 |                if (ferror (fp))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1483 |                 write_fatal ();[0m
      | [0;1;32m                               
[0m[1mpatch.c:1499:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1499 |                 if (ferror (fp))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1500 |                   write_fatal ();[0m
      | [0;1;32m                                 
[0m[1mpatch.c:1518:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1518 |                 if (ferror (fp))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1519 |                   write_fatal ();[0m
      | [0;1;32m                                 
[0m[1mpatch.c:1526:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1526 |         if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1527 |             return false;[0m
      | [0;1;32m                         
[0m[1mpatch.c:1530:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1530 |                 fprintf (fp, outstate->after_newline + if_defined,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1530:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1530 |                 fprintf (fp, outstate->after_newline + if_defined,[0m
      | [0;1;32m                ^~~~~~~
[0m[1mpatch.c:1530:3: [0m[0;1;35mwarning: [0m[1mStream pointer might be NULL [clang-analyzer-unix.Stream][0m
 1530 |                 fprintf (fp, outstate->after_newline + if_defined,[0m
      | [0;1;32m                ^
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'val' is null[0m
  137 |       int i = val ? argmatch (val, quoting_style_args, 0, 0) : -1;[0m
      | [0;1;32m              ^~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'i' is < 0[0m
  139 |                          i < 0 ? shell_quoting_style : (enum quoting_style) i);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:144:19: [0m[0;1;36mnote: [0mAssuming 'val' is null[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                  ^~~
[0m[1mpatch.c:144:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                 ^
[0m[1mpatch.c:149:28: [0m[0;1;36mnote: [0m'val' is null[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                           ^~~
[0m[1mpatch.c:149:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                               ^
[0m[1mpatch.c:151:10: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~
[0m[1mpatch.c:151:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m    ^
[0m[1mpatch.c:153:15: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mpatch.c:153:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m         ^
[0m[1mpatch.c:166:9: [0m[0;1;36mnote: [0mAssuming 'set_utc' is false[0m
  166 |     if (set_utc)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:166:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |     if (set_utc)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:169:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:169:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mCalling 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1581:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'outstate.ofp'[0m
 1581 |   outstate->ofp = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mReturning from 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:173:9: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  173 |     if (outfile)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:173:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |     if (outfile)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:182:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  182 |     if (inname)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:182:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |     if (inname)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:185:9: [0m[0;1;36mnote: [0m'inname' is null[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:185:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m               ^
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:197:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:197:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:198:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  198 |           || apply_empty_patch;[0m
      | [0;1;32m          ^
[0m[1mpatch.c:208:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:208:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:211:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:211:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m      ^
[0m[1mpatch.c:221:11: [0m[0;1;36mnote: [0mAssuming 'TMPREJNAME_needs_removal' is false[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:221:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:230:11: [0m[0;1;36mnote: [0mAssuming 'TMPOUTNAME_needs_removal' is false[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:240:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:240:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:240:35: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m                                  ^~~~~~~~~~~
[0m[1mpatch.c:240:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:250:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:250:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:252:8: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  252 |           if (outfile)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpatch.c:252:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |           if (outfile)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:254:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1mpatch.c:254:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:260:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mpatch.c:260:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:292:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:294:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:294:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m          ^
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0m'read_only_behavior' is not equal to RO_IGNORE[0m
  301 |       if (read_only_behavior != RO_IGNORE[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:302:7: [0m[0;1;36mnote: [0mAssuming 'inerrno' is not equal to 0[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m             ^~~~~~~~~
[0m[1mpatch.c:302:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:320:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mpatch.c:320:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:334:11: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:334:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:351:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is true[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:351:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:358:8: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:358:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:369:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:369:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:396:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:396:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:403:10: [0m[0;1;36mnote: [0mAssuming 'merge' is false[0m
  403 |             if (merge)[0m
      | [0;1;32m                ^~~~~
[0m[1mpatch.c:403:6: [0m[0;1;36mnote: [0mTaking false branch[0m
  403 |             if (merge)[0m
      | [0;1;32m            ^
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0mAssuming 'prefix_context' is >= 'suffix_context'[0m
  412 |                 lin context = (prefix_context < suffix_context[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:414:16: [0m[0;1;36mnote: [0mAssuming 'maxfuzz' is >= 'context'[0m
  414 |                 mymaxfuzz = (maxfuzz < context ? maxfuzz : context);[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~
[0m[1mpatch.c:414:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:418:10: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:418:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:421:22: [0m[0;1;36mnote: [0m'fuzz' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                   ^~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:421:30: [0m[0;1;36mnote: [0mAssuming 'in_offset' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                           ^~~~~~~~~
[0m[1mpatch.c:421:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0m'hunk' is equal to 1[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                        ^~~~
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:423:26: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                       ^~~~~
[0m[1mpatch.c:423:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                             ^
[0m[1mpatch.c:453:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:453:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:453:36: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                                                 ^~~~~
[0m[1mpatch.c:454:5: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  454 |                          && ++fuzz <= mymaxfuzz);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:419:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  419 |                 do {[0m
      | [0;1;32m                ^
[0m[1mpatch.c:456:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:456:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                ^
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  466 |             newwhere = (where ? where : pch_first()) + out_offset;[0m
      | [0;1;32m                        ^~~~~
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:467:10: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  467 |             if (skip_rest_of_patch[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:467:10: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:468:7: [0m[0;1;36mnote: [0m'merge' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                    ^~~~~
[0m[1mpatch.c:468:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:470:9: [0m[0;1;36mnote: [0m'merge' is false[0m
  470 |                 || (! merge[0m
      | [0;1;32m                      ^~~~~
[0m[1mpatch.c:470:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  470 |                 || (! merge[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:471:12: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 1[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                         ^~~~~~~~~~
[0m[1mpatch.c:471:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                                    ^
[0m[1mpatch.c:473:9: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  473 |                         || ! where[0m
      | [0;1;32m                             ^~~~~
[0m[1mpatch.c:471:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:474:9: [0m[0;1;36mnote: [0mCalling 'apply_hunk'[0m
  474 |                         || ! apply_hunk (&outstate, where))))[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1421:5: [0m[0;1;36mnote: [0m'fp' initialized to a null pointer value[0m
 1421 |     FILE *fp = outstate->ofp;[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:1424:36: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1427[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1427:12: [0m[0;1;36mnote: [0mAssuming 'old' is > 'lastline'[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mpatch.c:1427:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1525[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1525:9: [0m[0;1;36mnote: [0mAssuming 'new' is <= 'pat_end'[0m
 1525 |     if (new <= pat_end && pch_char(new) == '+') {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mpatch.c:1525:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:1525:27: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1525 |     if (new <= pat_end && pch_char(new) == '+') {[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1525:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1525 |     if (new <= pat_end && pch_char(new) == '+') {[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1526:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1526 |         if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1528:6: [0m[0;1;36mnote: [0mAssuming 'R_do_defines' is non-null[0m
 1528 |         if (R_do_defines) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mpatch.c:1528:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1528 |         if (R_do_defines) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1529:10: [0m[0;1;36mnote: [0m'def_state' is equal to OUTSIDE[0m
 1529 |             if (def_state == OUTSIDE) {[0m
      | [0;1;32m                ^~~~~~~~~
[0m[1mpatch.c:1529:6: [0m[0;1;36mnote: [0mTaking true branch[0m
 1529 |             if (def_state == OUTSIDE) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:1530:3: [0m[0;1;36mnote: [0mStream pointer might be NULL[0m
 1530 |                 fprintf (fp, outstate->after_newline + if_defined,[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m 1531 |                          R_do_defines);[0m
      | [0;1;32m                         ~~~~~~~~~~~~~
[0m[1mpatch.c:1538:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1538 |             if (ferror (fp))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1539 |               write_fatal ();[0m
      | [0;1;32m                             
[0m[1mpatch.c:1545:41: [0m[0;1;35mwarning: [0m[1mStream pointer might be NULL [clang-analyzer-unix.Stream][0m
 1545 |             if (! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                                               ^
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'val' is null[0m
  137 |       int i = val ? argmatch (val, quoting_style_args, 0, 0) : -1;[0m
      | [0;1;32m              ^~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'i' is < 0[0m
  139 |                          i < 0 ? shell_quoting_style : (enum quoting_style) i);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:144:19: [0m[0;1;36mnote: [0mAssuming 'val' is null[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                  ^~~
[0m[1mpatch.c:144:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                 ^
[0m[1mpatch.c:149:28: [0m[0;1;36mnote: [0m'val' is null[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                           ^~~
[0m[1mpatch.c:149:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                               ^
[0m[1mpatch.c:151:10: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~
[0m[1mpatch.c:151:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m    ^
[0m[1mpatch.c:153:15: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mpatch.c:153:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m         ^
[0m[1mpatch.c:166:9: [0m[0;1;36mnote: [0mAssuming 'set_utc' is false[0m
  166 |     if (set_utc)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:166:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |     if (set_utc)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:169:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:169:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mCalling 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1581:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'outstate.ofp'[0m
 1581 |   outstate->ofp = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mReturning from 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:173:9: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  173 |     if (outfile)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:173:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |     if (outfile)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:182:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  182 |     if (inname)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:182:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |     if (inname)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:185:9: [0m[0;1;36mnote: [0m'inname' is null[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:185:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m               ^
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:197:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:197:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:198:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  198 |           || apply_empty_patch;[0m
      | [0;1;32m          ^
[0m[1mpatch.c:208:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:208:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:211:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:211:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m      ^
[0m[1mpatch.c:221:11: [0m[0;1;36mnote: [0mAssuming 'TMPREJNAME_needs_removal' is false[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:221:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:230:11: [0m[0;1;36mnote: [0mAssuming 'TMPOUTNAME_needs_removal' is false[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:240:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:240:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:240:35: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m                                  ^~~~~~~~~~~
[0m[1mpatch.c:240:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:250:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:250:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:252:8: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  252 |           if (outfile)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpatch.c:252:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |           if (outfile)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:254:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1mpatch.c:254:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:260:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mpatch.c:260:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:292:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:294:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:294:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m          ^
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0m'read_only_behavior' is not equal to RO_IGNORE[0m
  301 |       if (read_only_behavior != RO_IGNORE[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:302:7: [0m[0;1;36mnote: [0mAssuming 'inerrno' is not equal to 0[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m             ^~~~~~~~~
[0m[1mpatch.c:302:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:320:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mpatch.c:320:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:334:11: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:334:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:351:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is true[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:351:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:358:8: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:358:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:369:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:369:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:396:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:396:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:403:10: [0m[0;1;36mnote: [0mAssuming 'merge' is false[0m
  403 |             if (merge)[0m
      | [0;1;32m                ^~~~~
[0m[1mpatch.c:403:6: [0m[0;1;36mnote: [0mTaking false branch[0m
  403 |             if (merge)[0m
      | [0;1;32m            ^
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0mAssuming 'prefix_context' is >= 'suffix_context'[0m
  412 |                 lin context = (prefix_context < suffix_context[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:414:16: [0m[0;1;36mnote: [0mAssuming 'maxfuzz' is >= 'context'[0m
  414 |                 mymaxfuzz = (maxfuzz < context ? maxfuzz : context);[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~
[0m[1mpatch.c:414:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:418:10: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:418:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:421:22: [0m[0;1;36mnote: [0m'fuzz' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                   ^~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:421:30: [0m[0;1;36mnote: [0mAssuming 'in_offset' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                           ^~~~~~~~~
[0m[1mpatch.c:421:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0m'hunk' is equal to 1[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                        ^~~~
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:423:26: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                       ^~~~~
[0m[1mpatch.c:423:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                             ^
[0m[1mpatch.c:453:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:453:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:453:36: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                                                 ^~~~~
[0m[1mpatch.c:454:5: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  454 |                          && ++fuzz <= mymaxfuzz);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:419:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  419 |                 do {[0m
      | [0;1;32m                ^
[0m[1mpatch.c:456:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:456:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                ^
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  466 |             newwhere = (where ? where : pch_first()) + out_offset;[0m
      | [0;1;32m                        ^~~~~
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:467:10: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  467 |             if (skip_rest_of_patch[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:467:10: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:468:7: [0m[0;1;36mnote: [0m'merge' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                    ^~~~~
[0m[1mpatch.c:468:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:470:9: [0m[0;1;36mnote: [0m'merge' is false[0m
  470 |                 || (! merge[0m
      | [0;1;32m                      ^~~~~
[0m[1mpatch.c:470:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  470 |                 || (! merge[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:471:12: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 1[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                         ^~~~~~~~~~
[0m[1mpatch.c:471:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                                    ^
[0m[1mpatch.c:473:9: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  473 |                         || ! where[0m
      | [0;1;32m                             ^~~~~
[0m[1mpatch.c:471:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:474:9: [0m[0;1;36mnote: [0mCalling 'apply_hunk'[0m
  474 |                         || ! apply_hunk (&outstate, where))))[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1421:5: [0m[0;1;36mnote: [0m'fp' initialized to a null pointer value[0m
 1421 |     FILE *fp = outstate->ofp;[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:1424:36: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1427[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1427:12: [0m[0;1;36mnote: [0mAssuming 'old' is > 'lastline'[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mpatch.c:1427:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1525[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1525:9: [0m[0;1;36mnote: [0mAssuming 'new' is <= 'pat_end'[0m
 1525 |     if (new <= pat_end && pch_char(new) == '+') {[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mpatch.c:1525:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:1525:27: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1525 |     if (new <= pat_end && pch_char(new) == '+') {[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1525:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1525 |     if (new <= pat_end && pch_char(new) == '+') {[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1526:8: [0m[0;1;36mnote: [0mCalling 'copy_till'[0m
 1526 |         if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1633:9: [0m[0;1;36mnote: [0mAssuming 'R_last_frozen_line' is <= 'lastline'[0m
 1633 |     if (R_last_frozen_line > lastline)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1633:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1633 |     if (R_last_frozen_line > lastline)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1638:12: [0m[0;1;36mnote: [0mAssuming 'R_last_frozen_line' is >= 'lastline'[0m
 1638 |     while (R_last_frozen_line < lastline)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1638:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1650[0m
 1638 |     while (R_last_frozen_line < lastline)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1651:5: [0m[0;1;36mnote: [0mReturning without writing to '->after_newline', which participates in a condition later[0m
 1651 |     return true;[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1526:8: [0m[0;1;36mnote: [0mReturning from 'copy_till'[0m
 1526 |         if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1526:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1526 |         if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1528:6: [0m[0;1;36mnote: [0mAssuming 'R_do_defines' is null[0m
 1528 |         if (R_do_defines) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mpatch.c:1528:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1528 |         if (R_do_defines) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1545:22: [0m[0;1;36mnote: [0mField 'after_newline' is true[0m
 1545 |             if (! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                            ^
[0m[1mpatch.c:1545:37: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1545 |             if (! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                                           ^
[0m[1mpatch.c:1551:9: [0m[0;1;36mnote: [0mAssuming 'new' is <= 'pat_end'[0m
 1551 |         while (new <= pat_end && pch_char (new) == '+');[0m
      | [0;1;32m               ^~~~~~~~~~~~~~
[0m[1mpatch.c:1551:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:1551:27: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1551 |         while (new <= pat_end && pch_char (new) == '+');[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1543:2: [0m[0;1;36mnote: [0mLoop condition is true. Execution continues on line 1545[0m
 1543 |         do[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1545:10: [0m[0;1;36mnote: [0mAssuming field 'after_newline' is false[0m
 1545 |             if (! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1545:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:1545:41: [0m[0;1;36mnote: [0mStream pointer might be NULL[0m
 1545 |             if (! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                                               ^~~~~~~~~~~~~~~
[0m[1mpatch.c:1545:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1545 |             if (! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 1546 |               write_fatal ();[0m
      | [0;1;32m                             
[0m[1mpatch.c:1555:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1555 |         if (ferror (fp))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1556 |           write_fatal ();[0m
      | [0;1;32m                         
[0m[1mpatch.c:1571:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1571 |   if (! f)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1572 |     pfatal ("Can't create file %s", quotearg (name));[0m
      | [0;1;32m                                                     
[0m[1mpatch.c:1589:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1589 |   if (strcmp (name, "-") != 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1590 |     return create_output_file (name, 0);[0m
 1591 |   else[0m
      | [0;32m  } 
[0m[1mpatch.c:1595:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1595 |       if (stdout_dup == -1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1596 |         pfatal ("Failed to duplicate standard output");[0m
      | [0;1;32m                                                       
[0m[1mpatch.c:1598:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1598 |       if (! ofp)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1599 |         pfatal ("Failed to duplicate standard output");[0m
      | [0;1;32m                                                       
[0m[1mpatch.c:1600:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1600 |       if (dup2 (fileno (stderr), fileno (stdout)) == -1)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1601 |         pfatal ("Failed to redirect messages to standard error");[0m
      | [0;1;32m                                                                 
[0m[1mpatch.c:1615:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1615 |   if (fd == -1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1616 |     pfatal ("Can't create temporary file %s", TMPREJNAME);[0m
      | [0;1;32m                                                          
[0m[1mpatch.c:1619:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1619 |   if (! rejfp)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1620 |     pfatal ("Can't open stream for file %s", quotearg (TMPREJNAME));[0m
      | [0;1;32m                                                                    
[0m[1mpatch.c:1643:42: [0m[0;1;35mwarning: [0m[1mStream pointer might be NULL [clang-analyzer-unix.Stream][0m
 1643 |             if ((! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                                                ^
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'val' is null[0m
  137 |       int i = val ? argmatch (val, quoting_style_args, 0, 0) : -1;[0m
      | [0;1;32m              ^~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'i' is < 0[0m
  139 |                          i < 0 ? shell_quoting_style : (enum quoting_style) i);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:144:19: [0m[0;1;36mnote: [0mAssuming 'val' is null[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                  ^~~
[0m[1mpatch.c:144:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                 ^
[0m[1mpatch.c:149:28: [0m[0;1;36mnote: [0m'val' is null[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                           ^~~
[0m[1mpatch.c:149:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                               ^
[0m[1mpatch.c:151:10: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~
[0m[1mpatch.c:151:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m    ^
[0m[1mpatch.c:153:15: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mpatch.c:153:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m         ^
[0m[1mpatch.c:166:9: [0m[0;1;36mnote: [0mAssuming 'set_utc' is false[0m
  166 |     if (set_utc)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:166:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |     if (set_utc)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:169:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:169:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mCalling 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1581:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'outstate.ofp'[0m
 1581 |   outstate->ofp = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mReturning from 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:173:9: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  173 |     if (outfile)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:173:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |     if (outfile)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:182:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  182 |     if (inname)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:182:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |     if (inname)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:185:9: [0m[0;1;36mnote: [0m'inname' is null[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:185:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m               ^
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:197:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:197:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:198:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  198 |           || apply_empty_patch;[0m
      | [0;1;32m          ^
[0m[1mpatch.c:208:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:208:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:211:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:211:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m      ^
[0m[1mpatch.c:221:11: [0m[0;1;36mnote: [0mAssuming 'TMPREJNAME_needs_removal' is false[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:221:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:230:11: [0m[0;1;36mnote: [0mAssuming 'TMPOUTNAME_needs_removal' is false[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:240:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:240:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:240:35: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m                                  ^~~~~~~~~~~
[0m[1mpatch.c:240:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:250:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:250:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:252:8: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  252 |           if (outfile)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpatch.c:252:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |           if (outfile)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:254:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1mpatch.c:254:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:260:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mpatch.c:260:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:292:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:294:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:294:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m          ^
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0m'read_only_behavior' is not equal to RO_IGNORE[0m
  301 |       if (read_only_behavior != RO_IGNORE[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:302:7: [0m[0;1;36mnote: [0mAssuming 'inerrno' is not equal to 0[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m             ^~~~~~~~~
[0m[1mpatch.c:302:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:320:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mpatch.c:320:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:334:11: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:334:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:351:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is true[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:351:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:358:8: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:358:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:369:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:369:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:396:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:396:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:403:10: [0m[0;1;36mnote: [0mAssuming 'merge' is false[0m
  403 |             if (merge)[0m
      | [0;1;32m                ^~~~~
[0m[1mpatch.c:403:6: [0m[0;1;36mnote: [0mTaking false branch[0m
  403 |             if (merge)[0m
      | [0;1;32m            ^
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0mAssuming 'prefix_context' is >= 'suffix_context'[0m
  412 |                 lin context = (prefix_context < suffix_context[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:412:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:414:16: [0m[0;1;36mnote: [0mAssuming 'maxfuzz' is >= 'context'[0m
  414 |                 mymaxfuzz = (maxfuzz < context ? maxfuzz : context);[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~
[0m[1mpatch.c:414:16: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:418:10: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:418:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  418 |             if (!skip_rest_of_patch) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^~~~~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:421:22: [0m[0;1;36mnote: [0m'fuzz' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                   ^~~~
[0m[1mpatch.c:421:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:421:30: [0m[0;1;36mnote: [0mAssuming 'in_offset' is 0[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                                           ^~~~~~~~~
[0m[1mpatch.c:421:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  421 |                     if (! where || fuzz || in_offset)[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0m'hunk' is equal to 1[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                        ^~~~
[0m[1mpatch.c:423:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:423:26: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                       ^~~~~
[0m[1mpatch.c:423:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  423 |                     if (hunk == 1 && ! where && ! (force | apply_anyway)[0m
      | [0;1;32m                                             ^
[0m[1mpatch.c:453:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:453:12: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:453:36: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  453 |                 } while (!skip_rest_of_patch && !where[0m
      | [0;1;32m                                                 ^~~~~
[0m[1mpatch.c:454:5: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  454 |                          && ++fuzz <= mymaxfuzz);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:419:3: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  419 |                 do {[0m
      | [0;1;32m                ^
[0m[1mpatch.c:456:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:456:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |                 if (skip_rest_of_patch) {               /* just got decided */[0m
      | [0;1;32m                ^
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  466 |             newwhere = (where ? where : pch_first()) + out_offset;[0m
      | [0;1;32m                        ^~~~~
[0m[1mpatch.c:466:18: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:467:10: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  467 |             if (skip_rest_of_patch[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:467:10: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:468:7: [0m[0;1;36mnote: [0m'merge' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                    ^~~~~
[0m[1mpatch.c:468:13: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  468 |                 || (merge && ! merge_hunk (hunk, &outstate, where,[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:470:9: [0m[0;1;36mnote: [0m'merge' is false[0m
  470 |                 || (! merge[0m
      | [0;1;32m                      ^~~~~
[0m[1mpatch.c:470:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  470 |                 || (! merge[0m
      | [0;1;32m                    ^
[0m[1mpatch.c:471:12: [0m[0;1;36mnote: [0mAssuming 'where' is not equal to 1[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                         ^~~~~~~~~~
[0m[1mpatch.c:471:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                                    ^
[0m[1mpatch.c:473:9: [0m[0;1;36mnote: [0m'where' is not equal to 0[0m
  473 |                         || ! where[0m
      | [0;1;32m                             ^~~~~
[0m[1mpatch.c:471:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  471 |                     && ((where == 1 && pch_says_nonexistent (reverse) == 2[0m
      | [0;1;32m                        ^
[0m[1mpatch.c:474:9: [0m[0;1;36mnote: [0mCalling 'apply_hunk'[0m
  474 |                         || ! apply_hunk (&outstate, where))))[0m
      | [0;1;32m                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:12: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:1424:36: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m                                   ^~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1424:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1427[0m
 1424 |     while (pch_char(new) == '=' || pch_char(new) == '\n')[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1427:12: [0m[0;1;36mnote: [0mAssuming 'old' is <= 'lastline'[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~
[0m[1mpatch.c:1427:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1428:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1428:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1450:11: [0m[0;1;36mnote: [0mAssuming 'new' is <= 'pat_end'[0m
 1450 |         else if (new > pat_end) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~
[0m[1mpatch.c:1450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1450 |         else if (new > pat_end) {[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1453:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1453 |         else if (pch_char(new) == '+') {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1453:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1453 |         else if (pch_char(new) == '+') {[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1454:12: [0m[0;1;36mnote: [0mCalling 'copy_till'[0m
 1454 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1633:9: [0m[0;1;36mnote: [0mAssuming 'R_last_frozen_line' is <= 'lastline'[0m
 1633 |     if (R_last_frozen_line > lastline)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1633:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1633 |     if (R_last_frozen_line > lastline)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1638:12: [0m[0;1;36mnote: [0mAssuming 'R_last_frozen_line' is >= 'lastline'[0m
 1638 |     while (R_last_frozen_line < lastline)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1638:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1650[0m
 1638 |     while (R_last_frozen_line < lastline)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1651:5: [0m[0;1;36mnote: [0mReturning without writing to '->ofp'[0m
 1651 |     return true;[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1454:12: [0m[0;1;36mnote: [0mReturning from 'copy_till'[0m
 1454 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1454:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 1454 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m            ^
[0m[1mpatch.c:1456:10: [0m[0;1;36mnote: [0mAssuming 'R_do_defines' is null[0m
 1456 |             if (R_do_defines) {[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1mpatch.c:1456:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 1456 |             if (R_do_defines) {[0m
      | [0;1;32m            ^
[0m[1mpatch.c:1427:12: [0m[0;1;36mnote: [0m'old' is <= 'lastline'[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m           ^~~
[0m[1mpatch.c:1427:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1427 |     while (old <= lastline) {[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1428:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1428:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1428 |         if (pch_char(old) == '-') {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1450:11: [0m[0;1;36mnote: [0mAssuming 'new' is <= 'pat_end'[0m
 1450 |         else if (new > pat_end) {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~
[0m[1mpatch.c:1450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1450 |         else if (new > pat_end) {[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1453:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1453 |         else if (pch_char(new) == '+') {[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1453:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1453 |         else if (pch_char(new) == '+') {[0m
      | [0;1;32m             ^
[0m[1mpatch.c:1454:12: [0m[0;1;36mnote: [0mCalling 'copy_till'[0m
 1454 |             if (! copy_till (outstate, where + old - 1))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1629:5: [0m[0;1;36mnote: [0m'fp' initialized to a null pointer value[0m
 1629 |     FILE *fp = outstate->ofp;[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mpatch.c:1633:9: [0m[0;1;36mnote: [0mAssuming 'R_last_frozen_line' is <= 'lastline'[0m
 1633 |     if (R_last_frozen_line > lastline)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1633:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1633 |     if (R_last_frozen_line > lastline)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1638:12: [0m[0;1;36mnote: [0mAssuming 'R_last_frozen_line' is < 'lastline'[0m
 1638 |     while (R_last_frozen_line < lastline)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1638:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1638 |     while (R_last_frozen_line < lastline)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1641:6: [0m[0;1;36mnote: [0mAssuming 'size' is not equal to 0[0m
 1641 |         if (size)[0m
      | [0;1;32m            ^~~~
[0m[1mpatch.c:1641:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1641 |         if (size)[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1643:11: [0m[0;1;36mnote: [0mAssuming field 'after_newline' is false[0m
 1643 |             if ((! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1643:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:1643:42: [0m[0;1;36mnote: [0mStream pointer might be NULL[0m
 1643 |             if ((! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                                                ^~~~~~~~~~~~~~~
[0m[1mpatch.c:1644:8: [0m[0;1;35mwarning: [0m[1mStream pointer might be NULL [clang-analyzer-unix.Stream][0m
 1644 |                 || ! fwrite (s, sizeof *s, size, fp))[0m
      | [0;1;32m                     ^
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'val' is null[0m
  137 |       int i = val ? argmatch (val, quoting_style_args, 0, 0) : -1;[0m
      | [0;1;32m              ^~~
[0m[1mpatch.c:137:15: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'i' is < 0[0m
  139 |                          i < 0 ? shell_quoting_style : (enum quoting_style) i);[0m
      | [0;1;32m                         ^
[0m[1mpatch.c:139:5: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mpatch.c:144:19: [0m[0;1;36mnote: [0mAssuming 'val' is null[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                  ^~~
[0m[1mpatch.c:144:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
  144 |     patch_get = ((val = getenv ("PATCH_GET"))[0m
      | [0;1;32m                 ^
[0m[1mpatch.c:149:28: [0m[0;1;36mnote: [0m'val' is null[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                           ^~~
[0m[1mpatch.c:149:32: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  149 |     simple_backup_suffix = val && *val ? val : ".orig";[0m
      | [0;1;32m                               ^
[0m[1mpatch.c:151:10: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~
[0m[1mpatch.c:151:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  151 |     if ((version_control = getenv ("PATCH_VERSION_CONTROL")))[0m
      | [0;1;32m    ^
[0m[1mpatch.c:153:15: [0m[0;1;36mnote: [0mAssuming 'version_control' is null[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~
[0m[1mpatch.c:153:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  153 |     else if ((version_control = getenv ("VERSION_CONTROL")))[0m
      | [0;1;32m         ^
[0m[1mpatch.c:166:9: [0m[0;1;36mnote: [0mAssuming 'set_utc' is false[0m
  166 |     if (set_utc)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:166:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  166 |     if (set_utc)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:169:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:169:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  169 |     if (make_backups | backup_if_mismatch)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mCalling 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1581:3: [0m[0;1;36mnote: [0mNull pointer value stored to 'outstate.ofp'[0m
 1581 |   outstate->ofp = NULL;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:172:5: [0m[0;1;36mnote: [0mReturning from 'init_output'[0m
  172 |     init_output (&outstate);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:173:9: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  173 |     if (outfile)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpatch.c:173:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  173 |     if (outfile)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:182:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  182 |     if (inname)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:182:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  182 |     if (inname)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:185:9: [0m[0;1;36mnote: [0m'inname' is null[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m        ^~~~~~
[0m[1mpatch.c:185:16: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  185 |     if (inname && outfile)[0m
      | [0;1;32m               ^
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mpatch.c:197:29: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:197:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:197:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  197 |         there_is_another_patch (! (inname || posixly_correct), &file_type)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:198:4: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  198 |           || apply_empty_patch;[0m
      | [0;1;32m          ^
[0m[1mpatch.c:208:11: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:208:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  208 |       if (skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:211:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:211:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  211 |       if (have_git_diff != pch_git_diff ())[0m
      | [0;1;32m      ^
[0m[1mpatch.c:221:11: [0m[0;1;36mnote: [0mAssuming 'TMPREJNAME_needs_removal' is false[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:221:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       if (TMPREJNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:230:11: [0m[0;1;36mnote: [0mAssuming 'TMPOUTNAME_needs_removal' is false[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:230:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  230 |       if (TMPOUTNAME_needs_removal)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:240:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:240:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:240:35: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m                                  ^~~~~~~~~~~
[0m[1mpatch.c:240:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  240 |       if (! skip_rest_of_patch && ! file_type)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:250:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:250:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  250 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:252:8: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  252 |           if (outfile)[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpatch.c:252:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  252 |           if (outfile)[0m
      | [0;1;32m          ^
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                   ^~~~~~~~~~~
[0m[1mpatch.c:254:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpatch.c:254:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~
[0m[1mpatch.c:254:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  254 |           else if (pch_copy () || pch_rename ())[0m
      | [0;1;32m               ^
[0m[1mpatch.c:260:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mpatch.c:260:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  260 |       if (pch_git_diff () && ! skip_rest_of_patch)[0m
      | [0;1;32m                          ^
[0m[1mpatch.c:292:13: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is false[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (! skip_rest_of_patch)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:294:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:294:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  294 |           if (! get_input_file (inname, outname, file_type))[0m
      | [0;1;32m          ^
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0m'read_only_behavior' is not equal to RO_IGNORE[0m
  301 |       if (read_only_behavior != RO_IGNORE[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:301:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpatch.c:302:7: [0m[0;1;36mnote: [0mAssuming 'inerrno' is not equal to 0[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m             ^~~~~~~~~
[0m[1mpatch.c:302:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  302 |           && ! inerrno && ! S_ISLNK (instat.st_mode)[0m
      | [0;1;32m                       ^
[0m[1mpatch.c:320:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mpatch.c:320:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  320 |       if (outfd == -1)[0m
      | [0;1;32m      ^
[0m[1mpatch.c:334:11: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:334:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  334 |       if (diff_type == ED_DIFF) {[0m
      | [0;1;32m      ^
[0m[1mpatch.c:351:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is true[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:351:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  351 |         if (! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF) {[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:358:8: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:358:27: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  358 |         if (! skip_rest_of_patch && ! outfile)[0m
      | [0;1;32m                                 ^
[0m[1mpatch.c:369:7: [0m[0;1;36mnote: [0m'skip_rest_of_patch' is true[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:369:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  369 |         if (!skip_rest_of_patch) {[0m
      | [0;1;32m        ^
[0m[1mpatch.c:396:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:396:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 503[0m
  396 |         while (0 < (got_hunk = another_hunk (diff_type, reverse)))[0m
      | [0;1;32m        ^
[0m[1mpatch.c:503:6: [0m[0;1;36mnote: [0mAssuming 'skip_rest_of_patch' is false[0m
  503 |         if (!skip_rest_of_patch)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:503:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  503 |         if (!skip_rest_of_patch)[0m
      | [0;1;32m        ^
[0m[1mpatch.c:505:10: [0m[0;1;36mnote: [0mAssuming 'got_hunk' is >= 0[0m
  505 |             if (got_hunk < 0  &&  using_plan_a)[0m
      | [0;1;32m                ^~~~~~~~~~~~
[0m[1mpatch.c:505:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  505 |             if (got_hunk < 0  &&  using_plan_a)[0m
      | [0;1;32m                              ^
[0m[1mpatch.c:519:12: [0m[0;1;36mnote: [0mCalling 'spew_output'[0m
  519 |             if (! spew_output (&outstate, &tmpoutst))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1659:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1659 |     if (debug & 256)[0m
      | [0;1;32m        ^~~~~~~~~~~
[0m[1mpatch.c:1659:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1659 |     if (debug & 256)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1668:9: [0m[0;1;36mnote: [0mAssuming 'last_frozen_line' is < 'input_lines'[0m
 1668 |     if (last_frozen_line < input_lines)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1668:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1668 |     if (last_frozen_line < input_lines)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1669:13: [0m[0;1;36mnote: [0mCalling 'copy_till'[0m
 1669 |       if (! copy_till (outstate, input_lines))[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1629:5: [0m[0;1;36mnote: [0m'fp' initialized to a null pointer value[0m
 1629 |     FILE *fp = outstate->ofp;[0m
      | [0;1;32m    ^~~~~~~~
[0m[1mpatch.c:1633:9: [0m[0;1;36mnote: [0mAssuming 'R_last_frozen_line' is <= 'lastline'[0m
 1633 |     if (R_last_frozen_line > lastline)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1633:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 1633 |     if (R_last_frozen_line > lastline)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1638:12: [0m[0;1;36mnote: [0m'R_last_frozen_line' is < 'lastline'[0m
 1638 |     while (R_last_frozen_line < lastline)[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1638:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1638 |     while (R_last_frozen_line < lastline)[0m
      | [0;1;32m    ^
[0m[1mpatch.c:1641:6: [0m[0;1;36mnote: [0mAssuming 'size' is not equal to 0[0m
 1641 |         if (size)[0m
      | [0;1;32m            ^~~~
[0m[1mpatch.c:1641:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 1641 |         if (size)[0m
      | [0;1;32m        ^
[0m[1mpatch.c:1643:23: [0m[0;1;36mnote: [0mField 'after_newline' is true[0m
 1643 |             if ((! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                             ^
[0m[1mpatch.c:1643:38: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1643 |             if ((! outstate->after_newline  &&  putc ('\n', fp) == EOF)[0m
      | [0;1;32m                                            ^
[0m[1mpatch.c:1644:8: [0m[0;1;36mnote: [0mStream pointer might be NULL[0m
 1644 |                 || ! fwrite (s, sizeof *s, size, fp))[0m
      | [0;1;32m                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpatch.c:1644:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1644 |                 || ! fwrite (s, sizeof *s, size, fp))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1645 |               write_fatal ();[0m
      | [0;1;32m                             
[0m[1mpatch.c:1668:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1668 |     if (last_frozen_line < input_lines)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1669 |       if (! copy_till (outstate, input_lines))[0m
 1670 |         return false;[0m
      | [0;1;32m                     
[0m[1mpatch.c:1669:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1669 |       if (! copy_till (outstate, input_lines))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1670 |         return false;[0m
      | [0;1;32m                     
[0m[1mpatch.c:1676:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1676 |             || fclose (outstate->ofp) != 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1677 |           write_fatal ();[0m
      | [0;1;32m                         
[0m[1mpatch.c:1700:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1700 |                          pch_line_len(pline) ))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1701 |                 return false;[0m
      | [0;1;32m                             
[0m[1mpatch.c:1704:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1704 |                  || memcmp (p, pfetch (pline), size) != 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1705 |             return false;[0m
      | [0;1;32m                         
[0m[1mpatch.c:1721:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1721 |   if (! size)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1722 |     return false;[0m
      | [0;1;32m                 
[0m[1mpatch.c:1725:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1725 |   if (! input_lines)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1726 |     return false;[0m
      | [0;1;32m                 
[0m[1mpatch.c:1727:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1727 |   if (where > input_lines)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1728 |     where = input_lines;[0m
      | [0;1;32m                        
[0m[1mpatch.c:1730:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1730 |   if (! size)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1731 |     return false;[0m
      | [0;1;32m                 
[0m[1mpatch.c:1750:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1750 |           while (blen && (*b == ' ' || *b == '\t'))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1751 |             b++, blen--;[0m
      | [0;1;32m                        
[0m[1mpatch.c:1754:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1754 |               if (!(*a == ' ' || *a == '\t'))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1755 |                 return false;[0m
      | [0;1;32m                             
[0m[1mpatch.c:1756:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1756 |               do a++, alen--;[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1757 |               while (alen && (*a == ' ' || *a == '\t'));[0m
      | [0;32m              } 
[0m[1mpatch.c:1759:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1759 |           if (!alen || !blen)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1760 |             return alen == blen;[0m
      | [0;1;32m                                
[0m[1mpatch.c:1762:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1762 |       else if (!alen || *a++ != *b++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1763 |         return false;[0m
 1764 |       else[0m
      | [0;32m      } 
[0m[1mpatch.c:1764:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1764 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1765 |         alen--, blen--;[0m
      | [0;1;32m                       
[0m[1mpatch.c:1793:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1793 |       if (stat_file (name, &st_tmp) != 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1794 |         pfatal ("Can't get file attributes of %s %s", "file", name);[0m
      | [0;1;32m                                                                    
[0m[1mpatch.c:1820:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1820 |           if (verbosity == VERBOSE)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1821 |             say ("Removing %s %s\n",[0m
 1822 |                  S_ISLNK (mode) ? "symbolic link" : "file",[0m
 1823 |                  quotearg (file_to_delete->name));[0m
      | [0;1;32m                                                  
[0m[1mpatch.c:1857:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1857 |   if (from_needs_removal)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1858 |     *from_needs_removal = false;[0m
      | [0;1;32m                                
[0m[1mpatch.c:1868:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1868 |       if (backup)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1869 |         create_backup (from, from_st, true);[0m
      | [0;1;32m                                            
[0m[1mpatch.c:1909:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1909 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1910 |     output_file_now (from, from_needs_removal, from_st, to, mode, backup);[0m
      | [0;1;32m                                                                          
[0m[1mpatch.c:1932:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1932 |   while (gl_list_size (list) > 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1933 |     gl_list_remove_at (list, 0);[0m
      | [0;1;32m                                
[0m[1mpatch.c:1952:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1952 |       if (file_to_output->to && from_needs_removal)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1953 |         safe_unlink (file_to_output->from);[0m
      | [0;1;32m                                           
[0m[1mpatch.c:1962:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1962 |               if (elt == elt2)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1963 |                 break;[0m
      | [0;1;32m                      
[0m[1mpatch.c:1980:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1980 |   if (sig)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1981 |     exit_with_signal (sig);[0m
      | [0;1;32m                           
[0m246 warnings generated.
Suppressed 19 warnings (19 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[71/76][122.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpbck0rag7.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/src/merge.c
[1mmerge.c:68:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |     if (context_lines == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   69 |       goto out;  /* locate_hunk() already tried that */[0m
      | [0;1;32m                                                       
[0m[1mmerge.c:88:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   88 |     if (offset > 0 && pch_first () <= 1)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   89 |       max_pos_offset = 0;[0m
      | [0;1;32m                         
[0m[1mmerge.c:93:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |     if (first_guess <= max_neg_offset)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   94 |       max_neg_offset = first_guess - 1;[0m
      | [0;1;32m                                       
[0m[1mmerge.c:111:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |                 if (changes == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  112 |                   break;[0m
      | [0;1;32m                        
[0m[1mmerge.c:130:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |                 if (changes == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  131 |                   break;[0m
      | [0;1;32m                        
[0m[1mmerge.c:150:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |     if (where < min_where)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  151 |       where = min_where;[0m
      | [0;1;32m                        
[0m[1mmerge.c:161:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |   if (to <= from)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  162 |     printf ("%s",[0m
  163 |             format_linenum (numbuf0, from));[0m
  164 |   else[0m
      | [0;32m  } 
[0m[1mmerge.c:164:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  165 |     printf ("%s-%s",[0m
  166 |             format_linenum (numbuf0, from),[0m
  167 |             format_linenum (numbuf1, to));[0m
      | [0;1;32m                                          
[0m[1mmerge.c:190:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |   else if (last_what == what)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  191 |     fputs (",", stdout);[0m
  192 |   else[0m
      | [0;32m  } 
[0m[1mmerge.c:192:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  193 |     printf (", %s at ", what);[0m
      | [0;1;32m                              
[0m[1mmerge.c:219:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |   while (pch_char (new) == '=' || pch_char (new) == '\n')[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  220 |     new++;[0m
      | [0;1;32m          
[0m[1mmerge.c:235:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  235 |   memset (oldin, ' ', in + matched);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmerge.c:235:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  235 |   memset (oldin, ' ', in + matched);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmerge.c:251:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  251 |           fprintf (stderr, "%s %c",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmerge.c:251:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  251 |           fprintf (stderr, "%s %c",[0m
      | [0;1;32m          ^~~~~~~
[0m[1mmerge.c:254:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  254 |           if (n == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  255 |             fprintf(stderr, " %s,%s\n",[0m
  256 |                     format_linenum (numbuf0, pch_first()),[0m
  257 |                     format_linenum (numbuf1, pch_ptrn_lines()));[0m
  258 |           else if (n <= firstold)[0m
      | [0;32m          } 
[0m[1mmerge.c:255:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  255 |             fprintf(stderr, " %s,%s\n",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mmerge.c:255:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  255 |             fprintf(stderr, " %s,%s\n",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mmerge.c:258:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |           else if (n <= firstold)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  259 |             fprintf (stderr, " |%.*s",[0m
  260 |                      (int) pch_line_len (n), pfetch (n));[0m
  261 |           else if (n == in - 1)[0m
      | [0;32m          } 
[0m[1mmerge.c:259:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  259 |             fprintf (stderr, " |%.*s",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mmerge.c:259:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  259 |             fprintf (stderr, " |%.*s",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mmerge.c:261:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  261 |           else if (n == in - 1)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  262 |             fprintf(stderr, " %s,%s\n",[0m
  263 |                     format_linenum (numbuf0, where),[0m
  264 |                     format_linenum (numbuf1, matched));[0m
  265 |           else if (n >= in && n < in + matched)[0m
      | [0;32m          } 
[0m[1mmerge.c:262:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  262 |             fprintf(stderr, " %s,%s\n",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mmerge.c:262:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  262 |             fprintf(stderr, " %s,%s\n",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mmerge.c:271:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  271 |               fprintf (stderr, " |%.*s",[0m
      | [0;1;32m              ^~~~~~~
[0m[1mmerge.c:271:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  271 |               fprintf (stderr, " |%.*s",[0m
      | [0;1;32m              ^~~~~~~
[0m[1mmerge.c:274:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  275 |             fputc('\n', stderr);[0m
      | [0;1;32m                                
[0m[1mmerge.c:280:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |   if (last_frozen_line < where - 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  281 |     if (! copy_till (outstate, where - 1))[0m
  282 |       return false;[0m
      | [0;1;32m                   
[0m[1mmerge.c:281:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |     if (! copy_till (outstate, where - 1))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  282 |       return false;[0m
      | [0;1;32m                   
[0m[1mmerge.c:296:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |               if (oldin[old] == '-' || oldin[in] == '+')[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  297 |                 goto conflict;[0m
  298 |               else if (oldin[old] == ' ')[0m
      | [0;32m              } 
[0m[1mmerge.c:305:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |           if (oldin[old] == '-' || oldin[in] == '+')[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  306 |             goto conflict;[0m
      | [0;1;32m                          
[0m[1mmerge.c:307:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |           while (pch_char (new) == '+')[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  308 |             new++;[0m
      | [0;1;32m                  
[0m[1mmerge.c:312:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |               || ((verbosity != SILENT) && ! applies_cleanly))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  313 |             merge_result (&first_result, hunk, "merged",[0m
  314 |                           where, where + lines - 1);[0m
      | [0;1;32m                                                    
[0m[1mmerge.c:335:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |                   if (oldin[old] != '-')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  336 |                     break;[0m
      | [0;1;32m                          
[0m[1mmerge.c:337:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |                   if (pch_char (new) == '+')[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  338 |                     goto conflict;[0m
  339 |                   else[0m
      | [0;32m                  } 
[0m[1mmerge.c:339:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  340 |                     assert (pch_char (new) == ' ');[0m
      | [0;1;32m                                                   
[0m[1mmerge.c:344:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |               if (pch_char (old) == '-' || pch_char (new) == '+')[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  345 |                 goto conflict;[0m
      | [0;1;32m                              
[0m[1mmerge.c:349:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |               while (oldin[in] == '+')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  350 |                 in++;[0m
      | [0;1;32m                     
[0m[1mmerge.c:354:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |               if (! copy_till (outstate, where - 1))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  355 |                 return false;[0m
      | [0;1;32m                             
[0m[1mmerge.c:371:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |               if (! copy_till (outstate, where - 1))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  372 |                 return false;[0m
      | [0;1;32m                             
[0m[1mmerge.c:389:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  389 |               while (oldin[in] == '+')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  390 |                 in++;[0m
      | [0;1;32m                     
[0m[1mmerge.c:400:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |               while (pch_char (new) == '+')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  401 |                 new++;[0m
      | [0;1;32m                      
[0m[1mmerge.c:409:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  409 |           else if (pch_char (new) == '+')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  410 |             while (pch_char (new) == '+')[0m
  411 |               new++;[0m
  412 |           else if (oldin[in] == '+')[0m
      | [0;32m          } 
[0m[1mmerge.c:410:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |             while (pch_char (new) == '+')[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  411 |               new++;[0m
      | [0;1;32m                    
[0m[1mmerge.c:412:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |           else if (oldin[in] == '+')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  413 |             while (oldin[in] == '+')[0m
  414 |               in++;[0m
  415 |           else[0m
      | [0;32m          } 
[0m[1mmerge.c:413:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  413 |             while (oldin[in] == '+')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  414 |               in++;[0m
      | [0;1;32m                   
[0m[1mmerge.c:415:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  415 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  416 |             break;[0m
      | [0;1;32m                  
[0m[1mmerge.c:427:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  427 |            firstin++, firstnew++, lastwhere++)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  428 |         /* do nothing */ ;[0m
      | [0;1;32m                          
[0m[1mmerge.c:430:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  430 |       if (already_applied)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  431 |         merge_result (&first_result, hunk, "already applied",[0m
  432 |                       where, lastwhere - 1);[0m
      | [0;1;32m                                            
[0m[1mmerge.c:445:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  445 |           if (! copy_till (outstate, where - 1))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  446 |             return false;[0m
      | [0;1;32m                         
[0m[1mmerge.c:460:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  460 |                    in--, new--, lastwhere--, common_suffix++)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  461 |                 /* do nothing */ ;[0m
      | [0;1;32m                                  
[0m[1mmerge.c:465:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  465 |           if (conflict_style == MERGE_DIFF3)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  466 |             lines += 1 + (old - firstold);[0m
      | [0;1;32m                                          
[0m[1mmerge.c:471:35: [0m[0;1;35mwarning: [0m[1madding 'bool' to a string does not append to the string [clang-diagnostic-string-plus-int][0m
  471 |           fputs (outstate->after_newline + "\n<<<<<<<\n", fp);[0m
      | [0;1;32m                 ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
[0m[1mmerge.c:471:35: [0m[0;1;36mnote: [0muse array indexing to silence this warning[0m
[1mmerge.c:476:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |               if (! copy_till (outstate, where - 1))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  477 |                 return false;[0m
      | [0;1;32m                             
[0m[1mmerge.c:482:39: [0m[0;1;35mwarning: [0m[1madding 'bool' to a string does not append to the string [clang-diagnostic-string-plus-int][0m
  482 |               fputs (outstate->after_newline + "\n|||||||\n", fp);[0m
      | [0;1;32m                     ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
[0m[1mmerge.c:482:39: [0m[0;1;36mnote: [0muse array indexing to silence this warning[0m
[1mmerge.c:491:35: [0m[0;1;35mwarning: [0m[1madding 'bool' to a string does not append to the string [clang-diagnostic-string-plus-int][0m
  491 |           fputs (outstate->after_newline + "\n=======\n", fp);[0m
      | [0;1;32m                 ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
[0m[1mmerge.c:491:35: [0m[0;1;36mnote: [0muse array indexing to silence this warning[0m
[1mmerge.c:498:35: [0m[0;1;35mwarning: [0m[1madding 'bool' to a string does not append to the string [clang-diagnostic-string-plus-int][0m
  498 |           fputs (outstate->after_newline + "\n>>>>>>>\n", fp);[0m
      | [0;1;32m                 ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
[0m[1mmerge.c:498:35: [0m[0;1;36mnote: [0muse array indexing to silence this warning[0m
[1mmerge.c:501:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |           if (ferror (fp))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  502 |             write_fatal ();[0m
      | [0;1;32m                           
[0m[1mmerge.c:508:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |               if (! copy_till (outstate, where - 1))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  509 |                 return false;[0m
      | [0;1;32m                             
[0m[1mmerge.c:530:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |   for (context = 0, old = 1; old <= lastold; old++)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  531 |     if (pch_char (old) == ' ')[0m
  532 |       context++;[0m
      | [0;1;32m                
[0m[1mmerge.c:531:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  531 |     if (pch_char (old) == ' ')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  532 |       context++;[0m
      | [0;1;32m                
[0m98 warnings generated.
Suppressed 43 warnings (43 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[72/76][129.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmp_oo1x5x8.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/backupfile.c
[1mbackupfile.c:87:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   if (!s)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   88 |     s = getenv ("SIMPLE_BACKUP_SUFFIX");[0m
      | [0;1;32m                                        
[0m[1mbackupfile.c:112:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  112 |       memcpy (tmp, base, sizeof ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:112:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  112 |       memcpy (tmp, base, sizeof ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:113:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  113 |       strcpy (base, ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:113:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  113 |       strcpy (base, ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:119:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |           if (name_max != size)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  120 |             baselen_max = SIZE_MAX;[0m
      | [0;1;32m                                   
[0m[1mbackupfile.c:122:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  122 |       memcpy (base, tmp, sizeof ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:122:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  122 |       memcpy (base, tmp, sizeof ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:129:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |       if (!dot)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  130 |         baselen_max = 8;[0m
  131 |       else[0m
      | [0;32m      } 
[0m[1mbackupfile.c:143:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |       if (baselen_max <= baselen)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  144 |         baselen = baselen_max - 1;[0m
      | [0;1;32m                                  
[0m[1mbackupfile.c:197:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   if (dirp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  198 |     rewinddir (dirp);[0m
  199 |   else[0m
      | [0;32m  } 
[0m[1mbackupfile.c:204:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  204 |       memcpy (tmp, base, sizeof ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:204:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  204 |       memcpy (tmp, base, sizeof ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:205:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  205 |       strcpy (base, ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:205:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  205 |       strcpy (base, ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:207:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  207 |       if (!dirp && errno == ENOMEM)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  208 |         result = BACKUP_NOMEM;[0m
      | [0;1;32m                              
[0m[1mbackupfile.c:209:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  209 |       memcpy (base, tmp, sizeof ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:209:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  209 |       memcpy (base, tmp, sizeof ".");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:210:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  210 |       strcpy (base + baselen, ".~1~");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:210:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  210 |       strcpy (base + baselen, ".~1~");[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:211:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |       if (!dirp)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  212 |         return result;[0m
      | [0;1;32m                      
[0m[1mbackupfile.c:223:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |       if (_D_EXACT_NAMLEN (dp) < baselen + 4)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  224 |         continue;[0m
      | [0;1;32m                 
[0m[1mbackupfile.c:226:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |       if (memcmp (buf + base_offset, dp->d_name, baselen + 2) != 0)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  227 |         continue;[0m
      | [0;1;32m                 
[0m[1mbackupfile.c:235:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |       if (! ('1' <= *p && *p <= '9'))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  236 |         continue;[0m
      | [0;1;32m                 
[0m[1mbackupfile.c:238:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |       for (versionlen = 1; ISDIGIT (p[versionlen]); versionlen++)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  239 |         all_9s &= (p[versionlen] == '9');[0m
      | [0;1;32m                                         
[0m[1mbackupfile.c:244:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |                      && memcmp (buf + filelen + 2, p, versionlen) <= 0))))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  245 |         continue;[0m
      | [0;1;32m                 
[0m[1mbackupfile.c:256:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  256 |           if (! xalloc_oversized (new_buffer_size, 2))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  257 |             new_buffer_size *= 2;[0m
      | [0;1;32m                                 
[0m[1mbackupfile.c:272:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  272 |       memcpy (q, p, versionlen + 2);[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:272:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  272 |       memcpy (q, p, versionlen + 2);[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:277:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |       while (*--q == '9')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  278 |         *q = '0';[0m
      | [0;1;32m                 
[0m[1mbackupfile.c:297:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |   if (! simple_backup_suffix)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  298 |     set_simple_backup_suffix (NULL);[0m
      | [0;1;32m                                    
[0m[1mbackupfile.c:305:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |   if (backup_suffix_size_guess < GUESS)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  306 |     backup_suffix_size_guess = GUESS;[0m
      | [0;1;32m                                     
[0m[1mbackupfile.c:310:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  310 |   if (!s)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  311 |     return s;[0m
      | [0;1;32m             
[0m[1mbackupfile.c:316:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  316 |       memcpy (s, file, filelen + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:316:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  316 |       memcpy (s, file, filelen + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mbackupfile.c:318:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |       if (backup_type == simple_backups)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  319 |         memcpy (s + filelen, simple_backup_suffix, simple_backup_suffix_size);[0m
  320 |       else[0m
      | [0;32m      } 
[0m[1mbackupfile.c:319:9: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  319 |         memcpy (s + filelen, simple_backup_suffix, simple_backup_suffix_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mbackupfile.c:319:9: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  319 |         memcpy (s + filelen, simple_backup_suffix, simple_backup_suffix_size);[0m
      | [0;1;32m        ^~~~~~
[0m[1mbackupfile.c:320:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m[1mbackupfile.c:324:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  324 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mbackupfile.c:327:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  327 |             if (backup_type == numbered_existing_backups)[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  328 |               {[0m
  329 |                 backup_type = simple_backups;[0m
  330 |                 memcpy (s + filelen, simple_backup_suffix,[0m
  331 |                         simple_backup_suffix_size);[0m
  332 |               }[0m
  333 |             check_extension (s, filelen, '~');[0m
  334 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mbackupfile.c:330:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  330 |                 memcpy (s + filelen, simple_backup_suffix,[0m
      | [0;1;32m                ^~~~~~
[0m[1mbackupfile.c:330:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  330 |                 memcpy (s + filelen, simple_backup_suffix,[0m
      | [0;1;32m                ^~~~~~
[0m[1mbackupfile.c:337:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  337 |             check_extension (s, filelen, '~');[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  338 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mbackupfile.c:341:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  341 |             free (s);[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  342 |             errno = ENOMEM;[0m
  343 |             return NULL;[0m
      | [0;1;32m                       
[0m      | [0;32m                       ;} 
[0m[1mbackupfile.c:346:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |       if (! rename)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  347 |         break;[0m
      | [0;1;32m              
[0m[1mbackupfile.c:356:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  356 |       if (renameat2 (AT_FDCWD, file, sdir, s + base_offset, flags) == 0)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  357 |         break;[0m
      | [0;1;32m              
[0m[1mbackupfile.c:361:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |           if (dirp)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  362 |             closedir (dirp);[0m
      | [0;1;32m                            
[0m[1mbackupfile.c:369:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  369 |   if (dirp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  370 |     closedir (dirp);[0m
      | [0;1;32m                    
[0m40 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[73/76][129.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpal9n2avp.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/hash.c
[1mhash.c:186:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  187 |             bucket_length++;[0m
      | [0;1;32m                            
[0m[1mhash.c:189:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |           if (bucket_length > max_bucket_length)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  190 |             max_bucket_length = bucket_length;[0m
      | [0;1;32m                                              
[0m[1mhash.c:218:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  219 |             n_entries++;[0m
      | [0;1;32m                        
[0m[1mhash.c:223:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |   if (n_buckets_used == table->n_buckets_used && n_entries == table->n_entries)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  224 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:237:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  237 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:237:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  237 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:238:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  238 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:238:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  238 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:239:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  239 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:239:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  239 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:242:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  242 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:242:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  242 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:252:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |   if (! (n < table->n_buckets))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  253 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:266:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  267 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:269:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |   for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  270 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
  271 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:270:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  270 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  271 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:292:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  292 |   if (table->n_entries == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  293 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:295:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  295 |   for (bucket = table->bucket; ; bucket++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  296 |     if (! (bucket < table->bucket_limit))[0m
  297 |       abort ();[0m
  298 |     else if (bucket->data)[0m
  299 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:296:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |     if (! (bucket < table->bucket_limit))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  297 |       abort ();[0m
  298 |     else if (bucket->data)[0m
      | [0;32m    } 
[0m[1mhash.c:298:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |     else if (bucket->data)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  299 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:316:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |       if (cursor->data == entry && cursor->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  317 |         return cursor->next->data;[0m
      | [0;1;32m                                  
[0m[1mhash.c:323:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  323 |   while (++bucket < table->bucket_limit)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  324 |     if (bucket->data)[0m
  325 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:324:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |     if (bucket->data)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  325 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:349:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  349 |               if (counter >= buffer_size)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  350 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:381:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |               if (! processor (cursor->data, processor_data))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  382 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:433:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  433 |   for (; (ch = *string); string++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  434 |     value = (value * 31 + ch) % n_buckets;[0m
      | [0;1;32m                                          
[0m[1mhash.c:466:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |   if (candidate < 10)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  467 |     candidate = 10;[0m
      | [0;1;32m                   
[0m[1mhash.c:472:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |   while (SIZE_MAX != candidate && !is_prime (candidate))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  473 |     candidate += 2;[0m
      | [0;1;32m                   
[0m[1mhash.c:516:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  516 |   if (tuning == &default_tuning)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  517 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:532:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |       && tuning->shrink_threshold + epsilon < tuning->growth_threshold)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  533 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:549:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |       if (SIZE_MAX <= new_candidate)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  550 |         return 0;[0m
      | [0;1;32m                 
[0m[1mhash.c:554:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  554 |   if (xalloc_oversized (candidate, sizeof (struct hash_entry *)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  555 |     return 0;[0m
      | [0;1;32m             
[0m[1mhash.c:600:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |   if (hasher == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  601 |     hasher = raw_hasher;[0m
      | [0;1;32m                        
[0m[1mhash.c:602:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  602 |   if (comparator == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  603 |     comparator = raw_comparator;[0m
      | [0;1;32m                                
[0m[1mhash.c:606:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |   if (table == NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  607 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:609:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |   if (!tuning)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  610 |     tuning = &default_tuning;[0m
      | [0;1;32m                             
[0m[1mhash.c:623:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  623 |   if (!table->n_buckets)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  624 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:627:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  627 |   if (table->bucket == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  628 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:667:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  667 |               if (table->data_freer)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  668 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:679:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  679 |           if (table->data_freer)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  680 |             table->data_freer (bucket->data);[0m
      | [0;1;32m                                             
[0m[1mhash.c:709:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  709 |               for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  710 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:799:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  799 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  800 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:865:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  865 |   for (bucket = src->bucket; bucket < src->bucket_limit; bucket++)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m[1mhash.c:905:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  905 |         if (safe)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  906 |           continue;[0m
      | [0;1;32m                   
[0m[1mhash.c:915:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  915 |             if (new_entry == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  916 |               return false;[0m
      | [0;1;32m                           
[0m[1mhash.c:949:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  949 |   if (!new_size)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  950 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:951:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  951 |   if (new_size == table->n_buckets)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  952 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:955:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  955 |   if (new_table->bucket == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  956 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:1014:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1014 |          && transfer_entries (table, new_table, false)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1015 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:1047:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1047 |   if (! entry)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1048 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:1053:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1053 |       if (matched_ent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1054 |         *matched_ent = data;[0m
      | [0;1;32m                            
[0m[1mhash.c:1079:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |           if (SIZE_MAX <= candidate)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1080 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:1083:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1083 |           if (!hash_rehash (table, candidate))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1084 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:1087:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1087 |           if (hash_find_entry (table, entry, &bucket, false) != NULL)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1088 |             abort ();[0m
      | [0;1;32m                     
[0m[1mhash.c:1098:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1098 |       if (new_entry == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1099 |         return -1;[0m
      | [0;1;32m                  
[0m[1mhash.c:1146:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1146 |   if (!data)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1147 |     return NULL;[0m
      | [0;1;32m                
[0m56 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[74/76][135.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpczpmqzt8.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/lib/localcharset.c
[1mlocalcharset.c:141:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  141 |       if (dir == NULL || dir[0] == '\0')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  142 |         dir = relocate2 (LIBDIR, &malloc_dir);[0m
      | [0;1;32m                                              
[0m[1mlocalcharset.c:152:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  152 |             memcpy (file_name, dir, dir_len);[0m
      | [0;1;32m            ^~~~~~
[0m[1mlocalcharset.c:152:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  152 |             memcpy (file_name, dir, dir_len);[0m
      | [0;1;32m            ^~~~~~
[0m[1mlocalcharset.c:153:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |             if (add_slash)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  154 |               file_name[dir_len] = DIRECTORY_SEPARATOR;[0m
      | [0;1;32m                                                       
[0m[1mlocalcharset.c:155:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  155 |             memcpy (file_name + dir_len + add_slash, base, base_len + 1);[0m
      | [0;1;32m            ^~~~~~
[0m[1mlocalcharset.c:155:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  155 |             memcpy (file_name + dir_len + add_slash, base, base_len + 1);[0m
      | [0;1;32m            ^~~~~~
[0m[1mlocalcharset.c:161:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  161 |       if (file_name == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  162 |         /* Out of memory.  Treat the file as empty.  */[0m
  163 |         cp = "";[0m
  164 |       else[0m
      | [0;32m      } 
[0m[1mlocalcharset.c:177:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |           if (fd < 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  178 |             /* File not found.  Treat it as empty.  */[0m
  179 |             cp = "";[0m
  180 |           else[0m
      | [0;32m          } 
[0m[1mlocalcharset.c:206:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |                       if (c == EOF)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  207 |                         break;[0m
      | [0;1;32m                              
[0m[1mlocalcharset.c:208:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |                       if (c == '\n' || c == ' ' || c == '\t')[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  209 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mlocalcharset.c:213:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  213 |                           do[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  214 |                             c = getc (fp);[0m
  215 |                           while (!(c == EOF || c == '\n'));[0m
      | [0;32m                          } 
[0m[1mlocalcharset.c:216:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |                           if (c == EOF)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  217 |                             break;[0m
      | [0;1;32m                                  
[0m[1mlocalcharset.c:221:27: [0m[0;1;35mwarning: [0m[1mCall to function 'fscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  221 |                       if (fscanf (fp, "%50s %50s", buf1, buf2) < 2)[0m
      | [0;1;32m                          ^~~~~~
[0m[1mlocalcharset.c:221:27: [0m[0;1;36mnote: [0mCall to function 'fscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fscanf_s' in case of C11[0m
  221 |                       if (fscanf (fp, "%50s %50s", buf1, buf2) < 2)[0m
      | [0;1;32m                          ^~~~~~
[0m[1mlocalcharset.c:221:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |                       if (fscanf (fp, "%50s %50s", buf1, buf2) < 2)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  222 |                         break;[0m
      | [0;1;32m                              
[0m[1mlocalcharset.c:243:23: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  243 |                       strcpy (res_ptr + res_size - (l2 + 1) - (l1 + 1), buf1);[0m
      | [0;1;32m                      ^~~~~~
[0m[1mlocalcharset.c:243:23: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  243 |                       strcpy (res_ptr + res_size - (l2 + 1) - (l1 + 1), buf1);[0m
      | [0;1;32m                      ^~~~~~
[0m[1mlocalcharset.c:244:23: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  244 |                       strcpy (res_ptr + res_size - (l2 + 1), buf2);[0m
      | [0;1;32m                      ^~~~~~
[0m[1mlocalcharset.c:244:23: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  244 |                       strcpy (res_ptr + res_size - (l2 + 1), buf2);[0m
      | [0;1;32m                      ^~~~~~
[0m[1mlocalcharset.c:247:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                   if (res_size == 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  248 |                     cp = "";[0m
  249 |                   else[0m
      | [0;32m                  } 
[0m[1mlocalcharset.c:588:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  588 |   if (codeset == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  589 |     /* The canonical name cannot be determined.  */[0m
  590 |     codeset = "";[0m
      | [0;1;32m                 
[0m[1mlocalcharset.c:595:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |        aliases += strlen (aliases) + 1, aliases += strlen (aliases) + 1)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  596 |     if (strcmp (codeset, aliases) == 0[0m
  597 |         || (aliases[0] == '*' && aliases[1] == '\0'))[0m
  598 |       {[0m
  599 |         codeset = aliases + strlen (aliases) + 1;[0m
  600 |         break;[0m
  601 |       }[0m
      | [0;1;32m       
[0m[1mlocalcharset.c:606:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |   if (codeset[0] == '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  607 |     codeset = "ASCII";[0m
      | [0;1;32m                      
[0m20 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[75/76][176.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpthf2s8ms.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/src/util.c
[1mutil.c:96:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (!file_id_table)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   97 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mutil.c:106:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  106 |    if (!next_slot)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  107 |      next_slot = xmalloc (sizeof *next_slot);[0m
      | [0;1;32m                                             
[0m[1mutil.c:112:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |    if (!p)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  113 |      xalloc_die ();[0m
      | [0;1;32m                   
[0m[1mutil.c:114:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |    if (p == next_slot)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  115 |      next_slot = NULL;[0m
      | [0;1;32m                      
[0m[1mutil.c:155:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |   if (! p)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  156 |     p = __insert_file_id (st, UNKNOWN);[0m
      | [0;1;32m                                       
[0m[1mutil.c:171:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |   for (; *s; s++)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  172 |     if (ISSLASH(*s))[0m
  173 |       return true;[0m
      | [0;1;32m                  
[0m[1mutil.c:172:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |     if (ISSLASH(*s))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  173 |       return true;[0m
      | [0;1;32m                  
[0m[1mutil.c:245:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  245 |       if (new_time)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  246 |         times[0] = times[1] = *new_time;[0m
  247 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:252:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |       if (safe_lutimens (to, times) != 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  253 |         pfatal ("Failed to set the timestamps of %s %s",[0m
  254 |                 S_ISLNK (mode) ? "symbolic link" : "file",[0m
  255 |                 quotearg (to));[0m
      | [0;1;32m                               
[0m[1mutil.c:279:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |                   && errno != EPERM)))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  280 |         pfatal ("Failed to set the %s of %s %s",[0m
  281 |                 (uid == -1) ? "owner" : "owning group",[0m
  282 |                 S_ISLNK (mode) ? "symbolic link" : "file",[0m
  283 |                 quotearg (to));[0m
      | [0;1;32m                               
[0m[1mutil.c:285:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |   if (attr & FA_XATTRS)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  286 |     if (copy_attr (from, to) != 0[0m
  287 |         && errno != ENOSYS && errno != ENOTSUP && errno != EPERM)[0m
  288 |       fatal_exit (0);[0m
      | [0;1;32m                     
[0m[1mutil.c:287:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |         && errno != ENOSYS && errno != ENOTSUP && errno != EPERM)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  288 |       fatal_exit (0);[0m
      | [0;1;32m                     
[0m[1mutil.c:297:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  297 |       if (! S_ISLNK (mode) && safe_chmod (to, mode) != 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  298 | #endif[0m
  299 |         pfatal ("Failed to set the permissions of %s %s",[0m
  300 |                 S_ISLNK (mode) ? "symbolic link" : "file",[0m
  301 |                 quotearg (to));[0m
      | [0;1;32m                               
[0m[1mutil.c:310:28: [0m[0;1;35mwarning: [0m[1mThe value '7' provided to the cast expression is not in the valid range of values for 'file_attributes' [clang-analyzer-optin.core.EnumCastOutOfRange][0m
  310 |   set_file_attributes (to, FA_TIMES | FA_IDS | FA_MODE, from, st, st->st_mode, NULL);[0m
      | [0;1;32m                           ^
[0m[1m./util.h:74:6: [0m[0;1;36mnote: [0menum declared here[0m
   74 | enum file_attributes {[0m
      | [0;1;32m~~~~~^~~~~~~~~~~~~~~~~
[0m   75 |   FA_TIMES = 1,[0m
      | [0;1;32m  ~~~~~~~~~~~~~
[0m   76 |   FA_IDS = 2,[0m
      | [0;1;32m  ~~~~~~~~~~~
[0m   77 |   FA_MODE = 4,[0m
      | [0;1;32m  ~~~~~~~~~~~~
[0m   78 |   FA_XATTRS = 8[0m
      | [0;1;32m  ~~~~~~~~~~~~~
[0m   79 | };[0m
      | [0;1;32m~
[0m[1mutil.c:450:7: [0m[0;1;36mnote: [0mAssuming 'backup' is true[0m
  450 |   if (backup)[0m
      | [0;1;32m      ^~~~~~
[0m[1mutil.c:450:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  450 |   if (backup)[0m
      | [0;1;32m  ^
[0m[1mutil.c:451:24: [0m[0;1;36mnote: [0mAssuming 'to_errno' is 0[0m
  451 |     create_backup (to, to_errno ? NULL : &to_st, false);[0m
      | [0;1;32m                       ^~~~~~~~
[0m[1mutil.c:451:24: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mutil.c:451:5: [0m[0;1;36mnote: [0mCalling 'create_backup'[0m
  451 |     create_backup (to, to_errno ? NULL : &to_st, false);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mutil.c:329:7: [0m[0;1;36mnote: [0m'to_st' is non-null[0m
  329 |   if (to_st && ! (S_ISREG (to_st->st_mode) || S_ISLNK (to_st->st_mode)))[0m
      | [0;1;32m      ^~~~~
[0m[1mutil.c:329:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mutil.c:329:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  329 |   if (to_st && ! (S_ISREG (to_st->st_mode) || S_ISLNK (to_st->st_mode)))[0m
      | [0;1;32m                  ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:128:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISREG'[0m
  128 | #define S_ISREG(mode)    __S_ISTYPE((mode), __S_IFREG)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mutil.c:329:44: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  329 |   if (to_st && ! (S_ISREG (to_st->st_mode) || S_ISLNK (to_st->st_mode)))[0m
      | [0;1;32m                                           ^
[0m[1mutil.c:329:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  329 |   if (to_st && ! (S_ISREG (to_st->st_mode) || S_ISLNK (to_st->st_mode)))[0m
      | [0;1;32m  ^
[0m[1mutil.c:333:7: [0m[0;1;36mnote: [0m'to_st' is non-null[0m
  333 |   if (to_st && lookup_file_id (to_st) == CREATED)[0m
      | [0;1;32m      ^~~~~
[0m[1mutil.c:333:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mutil.c:333:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  333 |   if (to_st && lookup_file_id (to_st) == CREATED)[0m
      | [0;1;32m  ^
[0m[1mutil.c:343:11: [0m[0;1;36mnote: [0mAssuming 'origprae' is null[0m
  343 |       if (origprae || origbase || origsuff)[0m
      | [0;1;32m          ^~~~~~~~
[0m[1mutil.c:343:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mutil.c:343:23: [0m[0;1;36mnote: [0mAssuming 'origbase' is null[0m
  343 |       if (origprae || origbase || origsuff)[0m
      | [0;1;32m                      ^~~~~~~~
[0m[1mutil.c:343:11: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  343 |       if (origprae || origbase || origsuff)[0m
      | [0;1;32m          ^
[0m[1mutil.c:343:35: [0m[0;1;36mnote: [0mAssuming 'origsuff' is null[0m
  343 |       if (origprae || origbase || origsuff)[0m
      | [0;1;32m                                  ^~~~~~~~
[0m[1mutil.c:343:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  343 |       if (origprae || origbase || origsuff)[0m
      | [0;1;32m      ^
[0m[1mutil.c:378:8: [0m[0;1;36mnote: [0mAssuming 'bakname' is non-null[0m
  378 |           if (!bakname)[0m
      | [0;1;32m              ^~~~~~~~
[0m[1mutil.c:378:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  378 |           if (!bakname)[0m
      | [0;1;32m          ^
[0m[1mutil.c:382:13: [0m[0;1;36mnote: [0m'to_st' is non-null[0m
  382 |       if (! to_st)[0m
      | [0;1;32m            ^~~~~
[0m[1mutil.c:382:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  382 |       if (! to_st)[0m
      | [0;1;32m      ^
[0m[1mutil.c:401:16: [0m[0;1;36mnote: [0m'leave_original' is false[0m
  401 |       else if (leave_original)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~
[0m[1mutil.c:401:12: [0m[0;1;36mnote: [0mTaking false branch[0m
  401 |       else if (leave_original)[0m
      | [0;1;32m           ^
[0m[1mutil.c:405:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  405 |           if (debug & 4)[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1mutil.c:405:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  405 |           if (debug & 4)[0m
      | [0;1;32m          ^
[0m[1mutil.c:408:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  408 |           while (safe_rename (to, bakname) != 0)[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mutil.c:408:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  408 |           while (safe_rename (to, bakname) != 0)[0m
      | [0;1;32m          ^
[0m[1mutil.c:410:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  410 |               if (errno == try_makedirs_errno)[0m
      | [0;1;32m                  ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^
[0m[1mutil.c:410:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  410 |               if (errno == try_makedirs_errno)[0m
      | [0;1;32m              ^
[0m[1mutil.c:415:17: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  415 |               else if (errno == EXDEV)[0m
      | [0;1;32m                       ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^
[0m[1mutil.c:415:13: [0m[0;1;36mnote: [0mTaking true branch[0m
  415 |               else if (errno == EXDEV)[0m
      | [0;1;32m                   ^
[0m[1mutil.c:417:5: [0m[0;1;36mnote: [0mCalling 'create_backup_copy'[0m
  417 |                   create_backup_copy (to, bakname, to_st,[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  418 |                                       try_makedirs_errno == 0);[0m
      | [0;1;32m                                      ~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mutil.c:310:28: [0m[0;1;36mnote: [0mThe value '7' provided to the cast expression is not in the valid range of values for 'file_attributes'[0m
  310 |   set_file_attributes (to, FA_TIMES | FA_IDS | FA_MODE, from, st, st->st_mode, NULL);[0m
      | [0;1;32m                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mutil.c:329:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |   if (to_st && ! (S_ISREG (to_st->st_mode) || S_ISLNK (to_st->st_mode)))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  330 |     fatal ("File %s is not a %s -- refusing to create backup",[0m
  331 |            to, S_ISLNK (to_st->st_mode) ? "symbolic link" : "regular file");[0m
      | [0;1;32m                                                                            
[0m[1mutil.c:335:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |       if (debug & 4)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  336 |         say ("File %s already seen\n", quotearg (to));[0m
      | [0;1;32m                                                      
[0m[1mutil.c:356:23: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'olen' is used in the enclosing expression, the value is never actually read from 'olen' [clang-analyzer-deadcode.DeadStores][0m
  356 |           for (o = t + tlen, olen = 0;[0m
      | [0;1;32m                             ^      ~
[0m[1mutil.c:356:23: [0m[0;1;36mnote: [0mAlthough the value stored to 'olen' is used in the enclosing expression, the value is never actually read from 'olen'[0m
  356 |           for (o = t + tlen, olen = 0;[0m
      | [0;1;32m                             ^      ~
[0m[1mutil.c:358:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |                o--)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  359 |             /* do nothing */ ;[0m
      | [0;1;32m                              
[0m[1mutil.c:363:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  363 |           memcpy (bakname, p, plen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:363:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  363 |           memcpy (bakname, p, plen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:364:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  364 |           memcpy (bakname + plen, t, tlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:364:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  364 |           memcpy (bakname + plen, t, tlen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:365:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  365 |           memcpy (bakname + plen + tlen, b, blen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:365:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  365 |           memcpy (bakname + plen + tlen, b, blen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:366:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  366 |           memcpy (bakname + plen + tlen + blen, o, olen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:366:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  366 |           memcpy (bakname + plen + tlen + blen, o, olen);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:367:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  367 |           memcpy (bakname + plen + tlen + blen + olen, s, slen + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:367:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  367 |           memcpy (bakname + plen + tlen + blen + olen, s, slen + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:372:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  372 |               || (origbase && contains_slash (origbase)))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  373 |             try_makedirs_errno = ENOENT;[0m
      | [0;1;32m                                        
[0m[1mutil.c:378:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |           if (!bakname)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  379 |             xalloc_die ();[0m
      | [0;1;32m                          
[0m[1mutil.c:386:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |           if (debug & 4)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  387 |             say ("Creating empty file %s\n", quotearg (bakname));[0m
      | [0;1;32m                                                                 
[0m[1mutil.c:393:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |               if (errno != try_makedirs_errno)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  394 |                 pfatal ("Can't create file %s", quotearg (bakname));[0m
      | [0;1;32m                                                                    
[0m[1mutil.c:398:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |           if (close (fd) != 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  399 |             pfatal ("Can't close file %s", quotearg (bakname));[0m
      | [0;1;32m                                                               
[0m[1mutil.c:401:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |       else if (leave_original)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  402 |         create_backup_copy (to, bakname, to_st, try_makedirs_errno == 0);[0m
  403 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:405:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |           if (debug & 4)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  406 |             say ("Renaming file %s to %s\n",[0m
  407 |                  quotearg_n (0, to), quotearg_n (1, bakname));[0m
      | [0;1;32m                                                              
[0m[1mutil.c:422:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  422 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  423 |                 pfatal ("Can't rename file %s to %s",[0m
  424 |                         quotearg_n (0, to), quotearg_n (1, bakname));[0m
      | [0;1;32m                                                                     
[0m[1mutil.c:450:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  450 |   if (backup)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  451 |     create_backup (to, to_errno ? NULL : &to_st, false);[0m
      | [0;1;32m                                                        
[0m[1mutil.c:452:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |   if (! to_errno)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  453 |     insert_file_id (&to_st, OVERWRITTEN);[0m
      | [0;1;32m                                         
[0m[1mutil.c:466:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |           if ((fd = safe_open (from, O_RDONLY | O_BINARY, 0)) < 0)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  467 |             pfatal ("Can't reopen file %s", quotearg (from));[0m
      | [0;1;32m                                                             
[0m[1mutil.c:468:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |           while ((i = read (fd, buffer + size, PATH_MAX - size)) > 0)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  469 |             size += i;[0m
      | [0;1;32m                      
[0m[1mutil.c:470:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |           if (i != 0 || close (fd) != 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  471 |             read_fatal ();[0m
      | [0;1;32m                          
[0m[1mutil.c:476:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |               if (safe_unlink (to) == 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  477 |                 to_dir_known_to_exist = true;[0m
      | [0;1;32m                                             
[0m[1mutil.c:481:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  481 |               if (errno == ENOENT && ! to_dir_known_to_exist)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  482 |                 makedirs (to);[0m
      | [0;1;32m                              
[0m[1mutil.c:483:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  483 |               if (safe_symlink (buffer, to) != 0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  484 |                 pfatal ("Can't create %s %s", "symbolic link", to);[0m
      | [0;1;32m                                                                   
[0m[1mutil.c:487:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |           if (safe_lstat (to, &to_st) != 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  488 |             pfatal ("Can't get file attributes of %s %s", "symbolic link", to);[0m
      | [0;1;32m                                                                               
[0m[1mutil.c:493:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  493 |           if (debug & 4)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  494 |             say ("Renaming file %s to %s\n",[0m
  495 |                  quotearg_n (0, from), quotearg_n (1, to));[0m
      | [0;1;32m                                                           
[0m[1mutil.c:506:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |                   if (safe_rename (from, to) == 0)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  507 |                     goto rename_succeeded;[0m
      | [0;1;32m                                          
[0m[1mutil.c:515:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  515 |                       if (safe_unlink (to) == 0)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  516 |                         to_dir_known_to_exist = true;[0m
  517 |                       else if (errno != ENOENT)[0m
      | [0;32m                      } 
[0m[1mutil.c:517:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  517 |                       else if (errno != ENOENT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  518 |                         pfatal ("Can't remove file %s", quotearg (to));[0m
      | [0;1;32m                                                                       
[0m[1mutil.c:536:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  536 |               && from_needs_removal)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  537 |             *from_needs_removal = false;[0m
      | [0;1;32m                                        
[0m[1mutil.c:542:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |       if (debug & 4)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  543 |         say ("Removing file %s\n", quotearg (to));[0m
      | [0;1;32m                                                  
[0m[1mutil.c:544:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  544 |       if (safe_unlink (to) != 0 && errno != ENOENT)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  545 |         pfatal ("Can't remove file %s", quotearg (to));[0m
      | [0;1;32m                                                       
[0m[1mutil.c:562:22: [0m[0;1;35mwarning: [0m[1muse of logical '&&' with constant operand [clang-diagnostic-constant-logical-operand][0m
  562 |       if (! (O_CREAT && O_TRUNC))[0m
      | [0;1;32m                     ^
[0m[1mutil.c:562:22: [0m[0;1;36mnote: [0muse '&' for a bitwise operation[0m
  562 |       if (! (O_CREAT && O_TRUNC))[0m
      | [0;1;32m                     ^~
[0m      | [0;32m                     &
[0m[1mutil.c:562:22: [0m[0;1;36mnote: [0mremove constant to silence this warning[0m
  562 |       if (! (O_CREAT && O_TRUNC))[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mutil.c:562:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  562 |       if (! (O_CREAT && O_TRUNC))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  563 |         close (safe_open (file, O_CREAT | O_WRONLY | O_TRUNC, mode));[0m
      | [0;1;32m                                                                     
[0m[1mutil.c:568:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  568 |           if (errno != try_makedirs_errno)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  569 |             pfatal ("Can't create file %s", quotearg (file));[0m
      | [0;1;32m                                                             
[0m[1mutil.c:585:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  585 |   if ((fromfd = safe_open (from, O_RDONLY | O_BINARY, 0)) < 0)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  586 |     pfatal ("Can't reopen file %s", quotearg (from));[0m
      | [0;1;32m                                                     
[0m[1mutil.c:589:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |       if (i == (ssize_t) -1)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  590 |         read_fatal ();[0m
      | [0;1;32m                      
[0m[1mutil.c:591:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |       if (full_write (tofd, buf, i) != i)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  592 |         write_fatal ();[0m
      | [0;1;32m                       
[0m[1mutil.c:594:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  594 |   if (close (fromfd) != 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  595 |     read_fatal ();[0m
      | [0;1;32m                  
[0m[1mutil.c:606:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  606 |   if (debug & 4)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  607 |     say ("Copying %s %s to %s\n",[0m
  608 |          S_ISLNK (mode) ? "symbolic link" : "file",[0m
  609 |          quotearg_n (0, from), quotearg_n (1, to));[0m
      | [0;1;32m                                                   
[0m[1mutil.c:616:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  616 |       if ((r = safe_readlink (from, buffer, PATH_MAX)) < 0)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  617 |         pfatal ("Can't read %s %s", "symbolic link", from);[0m
      | [0;1;32m                                                           
[0m[1mutil.c:619:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  619 |       if (safe_symlink (buffer, to) != 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  620 |         pfatal ("Can't create %s %s", "symbolic link", to);[0m
      | [0;1;32m                                                           
[0m[1mutil.c:621:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  621 |       if (tost && safe_lstat (to, tost) != 0)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  622 |         pfatal ("Can't get file attributes of %s %s", "symbolic link", to);[0m
      | [0;1;32m                                                                           
[0m[1mutil.c:631:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  631 |       if (tost && fstat (tofd, tost) != 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  632 |         pfatal ("Can't get file attributes of %s %s", "file", to);[0m
      | [0;1;32m                                                                  
[0m[1mutil.c:633:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  633 |       if (close (tofd) != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  634 |         write_fatal ();[0m
      | [0;1;32m                       
[0m[1mutil.c:645:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  645 |   if ((tofd = safe_open (to, O_WRONLY | O_BINARY | O_APPEND, 0)) < 0)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  646 |     pfatal ("Can't reopen file %s", quotearg (to));[0m
      | [0;1;32m                                                   
[0m[1mutil.c:648:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |   if (close (tofd) != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  649 |     write_fatal ();[0m
      | [0;1;32m                   
[0m[1mutil.c:675:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  675 |   if (quoted)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  676 |     memcpy (quoted, q, len + 1);[0m
      | [0;1;32m                                
[0m[1mutil.c:676:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  676 |     memcpy (quoted, q, len + 1);[0m
      | [0;1;32m    ^~~~~~
[0m[1mutil.c:676:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  676 |     memcpy (quoted, q, len + 1);[0m
      | [0;1;32m    ^~~~~~
[0m[1mutil.c:710:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  710 |   sprintf (trybuf, "%s/", dir);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:710:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  710 |   sprintf (trybuf, "%s/", dir);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:718:8: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  718 |   if ((try2 ("RCS/%s%s", filebase, RCSSUFFIX)[0m
      | [0;1;32m       ^
[0m[1mutil.c:713:24: [0m[0;1;36mnote: [0mexpanded from macro 'try2'[0m
  713 | #define try2(f,a1,a2) (sprintf (trybuf + dirlen, f, a1,a2), safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:718:8: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  718 |   if ((try2 ("RCS/%s%s", filebase, RCSSUFFIX)[0m
      | [0;1;32m       ^
[0m[1mutil.c:713:24: [0m[0;1;36mnote: [0mexpanded from macro 'try2'[0m
  713 | #define try2(f,a1,a2) (sprintf (trybuf + dirlen, f, a1,a2), safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:719:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  719 |        || try1 ("RCS/%s", filebase)[0m
      | [0;1;32m          ^
[0m[1mutil.c:712:24: [0m[0;1;36mnote: [0mexpanded from macro 'try1'[0m
  712 | #define try1(f,a1)    (sprintf (trybuf + dirlen, f, a1),    safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:719:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  719 |        || try1 ("RCS/%s", filebase)[0m
      | [0;1;32m          ^
[0m[1mutil.c:712:24: [0m[0;1;36mnote: [0mexpanded from macro 'try1'[0m
  712 | #define try1(f,a1)    (sprintf (trybuf + dirlen, f, a1),    safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:720:11: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  720 |        || try2 ("%s%s", filebase, RCSSUFFIX))[0m
      | [0;1;32m          ^
[0m[1mutil.c:713:24: [0m[0;1;36mnote: [0mexpanded from macro 'try2'[0m
  713 | #define try2(f,a1,a2) (sprintf (trybuf + dirlen, f, a1,a2), safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:720:11: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  720 |        || try2 ("%s%s", filebase, RCSSUFFIX))[0m
      | [0;1;32m          ^
[0m[1mutil.c:713:24: [0m[0;1;36mnote: [0mexpanded from macro 'try2'[0m
  713 | #define try2(f,a1,a2) (sprintf (trybuf + dirlen, f, a1,a2), safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:728:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  728 |           sprintf (p, readonly ? CHECKOUT : CHECKOUT_LOCKED, dotslash);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:728:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  728 |           sprintf (p, readonly ? CHECKOUT : CHECKOUT_LOCKED, dotslash);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:737:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  737 |           sprintf (p, RCSDIFF1, dotslash);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:737:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  737 |           sprintf (p, RCSDIFF1, dotslash);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:741:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  741 |           strcpy (p, DEV_NULL);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:741:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  741 |           strcpy (p, DEV_NULL);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:746:12: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  746 |   else if (try2 ("SCCS/%s%s", SCCSPREFIX, filebase)[0m
      | [0;1;32m           ^
[0m[1mutil.c:713:24: [0m[0;1;36mnote: [0mexpanded from macro 'try2'[0m
  713 | #define try2(f,a1,a2) (sprintf (trybuf + dirlen, f, a1,a2), safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:746:12: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  746 |   else if (try2 ("SCCS/%s%s", SCCSPREFIX, filebase)[0m
      | [0;1;32m           ^
[0m[1mutil.c:713:24: [0m[0;1;36mnote: [0mexpanded from macro 'try2'[0m
  713 | #define try2(f,a1,a2) (sprintf (trybuf + dirlen, f, a1,a2), safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:747:8: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  747 |            || try2 ("%s%s", SCCSPREFIX, filebase))[0m
      | [0;1;32m              ^
[0m[1mutil.c:713:24: [0m[0;1;36mnote: [0mexpanded from macro 'try2'[0m
  713 | #define try2(f,a1,a2) (sprintf (trybuf + dirlen, f, a1,a2), safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:747:8: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  747 |            || try2 ("%s%s", SCCSPREFIX, filebase))[0m
      | [0;1;32m              ^
[0m[1mutil.c:713:24: [0m[0;1;36mnote: [0mexpanded from macro 'try2'[0m
  713 | #define try2(f,a1,a2) (sprintf (trybuf + dirlen, f, a1,a2), safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:752:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  752 |           sprintf (p, readonly ? GET : GET_LOCKED);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:752:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  752 |           sprintf (p, readonly ? GET : GET_LOCKED);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:761:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  761 |           strcpy (p, SCCSDIFF1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:761:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  761 |           strcpy (p, SCCSDIFF1);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:764:4: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  764 |           sprintf (p, SCCSDIFF2, dotslash);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:764:4: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  764 |           sprintf (p, SCCSDIFF2, dotslash);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:768:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  768 |           strcpy (p, DEV_NULL);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:768:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  768 |           strcpy (p, DEV_NULL);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:774:8: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  774 |            && try1 ("%s@@", filebase) && S_ISDIR (cstat.st_mode))[0m
      | [0;1;32m              ^
[0m[1mutil.c:712:24: [0m[0;1;36mnote: [0mexpanded from macro 'try1'[0m
  712 | #define try1(f,a1)    (sprintf (trybuf + dirlen, f, a1),    safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:774:8: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  774 |            && try1 ("%s@@", filebase) && S_ISDIR (cstat.st_mode))[0m
      | [0;1;32m              ^
[0m[1mutil.c:712:24: [0m[0;1;36mnote: [0mexpanded from macro 'try1'[0m
  712 | #define try1(f,a1)    (sprintf (trybuf + dirlen, f, a1),    safe_stat (trybuf, &cstat) == 0)[0m
      | [0;1;32m                       ^~~~~~~
[0m[1mutil.c:779:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  779 |           strcpy (p, CLEARTOOL_CO);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:779:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  779 |           strcpy (p, CLEARTOOL_CO);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:785:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  785 |       if (diffbuf)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  786 |         *diffbuf = 0;[0m
      | [0;1;32m                     
[0m[1mutil.c:796:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  796 |           strcpy (p, PERFORCE_CO);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:796:4: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  796 |           strcpy (p, PERFORCE_CO);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:802:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  802 |       if (diffbuf)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  803 |         *diffbuf = 0;[0m
      | [0;1;32m                     
[0m[1mutil.c:827:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  827 |       if (*buf == 'n')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  828 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutil.c:833:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  833 |       if (! exists)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  834 |         fatal ("can't do dry run on nonexistent version-controlled file %s; invoke '%s' and try again",[0m
  835 |                quotearg (filename), getbuf);[0m
      | [0;1;32m                                            
[0m[1mutil.c:839:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  839 |       if (verbosity == VERBOSE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  840 |         say ("Getting file %s from %s%s...\n", quotearg (filename),[0m
  841 |              cs, readonly ? "" : " with lock");[0m
      | [0;1;32m                                               
[0m[1mutil.c:842:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  842 |       if (systemic (getbuf) != 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  843 |         fatal ("Can't get file %s from %s", quotearg (filename), cs);[0m
      | [0;1;32m                                                                     
[0m[1mutil.c:844:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  844 |       if (safe_stat (filename, filestat) != 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  845 |         pfatal ("%s", quotearg (filename));[0m
      | [0;1;32m                                           
[0m[1mutil.c:858:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  858 |   if (! size)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  859 |     return NULL;[0m
      | [0;1;32m                
[0m[1mutil.c:865:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  865 |       if (! using_plan_a)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  866 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mutil.c:868:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  868 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  869 |     memcpy (rv, s, size);[0m
      | [0;1;32m                         
[0m[1mutil.c:869:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  869 |     memcpy (rv, s, size);[0m
      | [0;1;32m    ^~~~~~
[0m[1mutil.c:869:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  869 |     memcpy (rv, s, size);[0m
      | [0;1;32m    ^~~~~~
[0m[1mutil.c:884:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  884 |   while ((*p++ = *s++))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  885 |     /* do nothing */ ;[0m
      | [0;1;32m                      
[0m[1mutil.c:896:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  896 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  897 |         *--p = '0' - (int) (n % 10);[0m
  898 |       while ((n /= 10) != 0);[0m
      | [0;32m      } 
[0m[1mutil.c:904:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  904 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  905 |         *--p = '0' + (int) (n % 10);[0m
  906 |       while ((n /= 10) != 0);[0m
      | [0;32m      } 
[0m[1mutil.c:918:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  918 |   fprintf (stderr, "%s: **** ", program_name);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:918:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  918 |   fprintf (stderr, "%s: **** ", program_name);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:952:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  952 |   fprintf (stderr, "%s: **** ", program_name);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:952:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  952 |   fprintf (stderr, "%s: **** ", program_name);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:1024:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1024 |           if (!buf)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1025 |             xalloc_die ();[0m
      | [0;1;32m                          
[0m[1mutil.c:1027:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |       if (r == 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1028 |         printf ("EOF\n");[0m
 1029 |       else if (r < 0)[0m
      | [0;32m      } 
[0m[1mutil.c:1062:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1062 |       if (verbosity != SILENT)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1063 |         say ("  Applying it anyway.\n");[0m
      | [0;1;32m                                        
[0m[1mutil.c:1079:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |               if (verbosity != SILENT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1080 |                 say ("Skipping patch.\n");[0m
      | [0;1;32m                                          
[0m[1mutil.c:1169:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1169 |           if (sigaction (sigs[i], (struct sigaction *) 0, &initial_act) != 0)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1170 |             continue;[0m
      | [0;1;32m                     
[0m[1mutil.c:1225:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1225 |   if (debug & 8)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1226 |     say ("+ %s\n", command);[0m
      | [0;1;32m                            
[0m[1mutil.c:1241:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1241 |   for (f = filename + FILE_SYSTEM_PREFIX_LEN (filename);  ISSLASH (*f);  f++)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1242 |     /* do nothing */ ;[0m
      | [0;1;32m                      
[0m[1mutil.c:1246:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1246 |   for (; *f; f++)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m[1mutil.c:1252:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1252 |         while (ISSLASH (f[1]))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1253 |           f++;[0m
      | [0;1;32m              
[0m[1mutil.c:1256:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1256 |         if (! f[1])[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1257 |           break;[0m
      | [0;1;32m                
[0m[1mutil.c:1293:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1293 |       for (f = filename;  f <= flim;  f++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1294 |         if (!*f)[0m
 1295 |           {[0m
 1296 |             safe_mkdir (filename,[0m
 1297 |                    S_IRUSR|S_IWUSR|S_IXUSR[0m
 1298 |                    |S_IRGRP|S_IWGRP|S_IXGRP[0m
 1299 |                    |S_IROTH|S_IWOTH|S_IXOTH);[0m
 1300 |             *f = '/';[0m
 1301 |           }[0m
      | [0;1;32m           
[0m[1mutil.c:1315:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1315 |   for (i = strlen (filename);  i != 0;  i--)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1316 |     if (ISSLASH (filename[i])[0m
 1317 |         && ! (ISSLASH (filename[i - 1])[0m
 1318 |               || (filename[i - 1] == '.'[0m
 1319 |                   && (i == 1[0m
 1320 |                       || ISSLASH (filename[i - 2])[0m
 1321 |                       || (filename[i - 2] == '.'[0m
 1322 |                           && (i == 2[0m
 1323 |                               || ISSLASH (filename[i - 3])))))))[0m
 1324 |       {[0m
 1325 |         filename[i] = '\0';[0m
 1326 |         if (safe_rmdir (filename) == 0 && verbosity == VERBOSE)[0m
 1327 |           say ("Removed empty directory %s\n", quotearg (filename));[0m
 1328 |         filename[i] = '/';[0m
 1329 |       }[0m
      | [0;1;32m       
[0m[1mutil.c:1326:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1326 |         if (safe_rmdir (filename) == 0 && verbosity == VERBOSE)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1327 |           say ("Removed empty directory %s\n", quotearg (filename));[0m
      | [0;1;32m                                                                    
[0m[1mutil.c:1356:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1356 |             goto fail;[0m
      | [0;1;32m            ^        
[0m      | [0;32m            {        ;} 
[0m[1mutil.c:1359:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1359 |             *v++ = 0;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1360 |             v = realloc (u, v - u);[0m
 1361 |             if (v)[0m
 1362 |               u = v;[0m
 1363 |             if (endp)[0m
 1364 |               *endp = s;[0m
 1365 |             return u;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mutil.c:1361:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1361 |             if (v)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1362 |               u = v;[0m
      | [0;1;32m                    
[0m[1mutil.c:1363:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1363 |             if (endp)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1364 |               *endp = s;[0m
      | [0;1;32m                        
[0m[1mutil.c:1368:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1368 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mutil.c:1371:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1371 |             *v++ = c;[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m 1372 |             continue;[0m
      | [0;1;32m                    
[0m      | [0;32m                    ;} 
[0m[1mutil.c:1378:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1378 |           case 'a': c = '\a'; break;[0m
      | [0;1;32m                    ^              
[0m      | [0;32m                    {              ;} 
[0m[1mutil.c:1379:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1379 |           case 'b': c = '\b'; break;[0m
      | [0;1;32m                    ^              
[0m      | [0;32m                    {              ;} 
[0m[1mutil.c:1380:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1380 |           case 'f': c = '\f'; break;[0m
      | [0;1;32m                    ^              
[0m      | [0;32m                    {              ;} 
[0m[1mutil.c:1381:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1381 |           case 'n': c = '\n'; break;[0m
      | [0;1;32m                    ^              
[0m      | [0;32m                    {              ;} 
[0m[1mutil.c:1382:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1382 |           case 'r': c = '\r'; break;[0m
      | [0;1;32m                    ^              
[0m      | [0;32m                    {              ;} 
[0m[1mutil.c:1383:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1383 |           case 't': c = '\t'; break;[0m
      | [0;1;32m                    ^              
[0m      | [0;32m                    {              ;} 
[0m[1mutil.c:1384:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1384 |           case 'v': c = '\v'; break;[0m
      | [0;1;32m                    ^              
[0m      | [0;32m                    {              ;} 
[0m[1mutil.c:1392:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1392 |               if (c < '0' || c > '7')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1393 |                 goto fail;[0m
      | [0;1;32m                          
[0m[1mutil.c:1396:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1396 |               if (c < '0' || c > '7')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1397 |                 goto fail;[0m
      | [0;1;32m                          
[0m[1mutil.c:1403:6: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1403 |             goto fail;[0m
      | [0;1;32m            ^        
[0m      | [0;32m            {        ;} 
[0m[1mutil.c:1410:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1410 |   if (endp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m 1411 |     *endp = s;[0m
      | [0;1;32m              
[0m[1mutil.c:1425:23: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1425 |   for (p = n = name;  *p;  p++)[0m
      | [0;1;32m                      ^
[0m[1mutil.c:1570:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1570 |   while (ISSPACE ((unsigned char) *s))[0m
      | [0;1;32m         ^
[0m[1m./common.h:53:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISSPACE'[0m
   53 | #define ISSPACE(c) (CTYPE_DOMAIN (c) && isspace (c))[0m
      | [0;1;32m                    ^
[0m[1m./common.h:48:25: [0m[0;1;36mnote: [0mexpanded from macro 'CTYPE_DOMAIN'[0m
   48 | #define CTYPE_DOMAIN(c) 1[0m
      | [0;1;32m                        ^
[0m[1mutil.c:1570:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1572[0m
 1570 |   while (ISSPACE ((unsigned char) *s))[0m
      | [0;1;32m  ^
[0m[1mutil.c:1572:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1572 |   if (*s == '"')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mutil.c:1572:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1572 |   if (*s == '"')[0m
      | [0;1;32m  ^
[0m[1mutil.c:1575:12: [0m[0;1;36mnote: [0m'ret' is non-null[0m
 1575 |       if (!ret)[0m
      | [0;1;32m           ^~~
[0m[1mutil.c:1575:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1575 |       if (!ret)[0m
      | [0;1;32m      ^
[0m[1mutil.c:1588:9: [0m[0;1;36mnote: [0mCalling 'strip_leading_slashes'[0m
 1588 |   if (! strip_leading_slashes (ret, strip_leading))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mutil.c:1425:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1425 |   for (p = n = name;  *p;  p++)[0m
      | [0;1;32m  ^
[0m[1mutil.c:1427:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1427 |       if (ISSLASH (*p))[0m
      | [0;1;32m          ^
[0m[1m../lib/dosname.h:38:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   38 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mutil.c:1427:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1427 |       if (ISSLASH (*p))[0m
      | [0;1;32m      ^
[0m[1mutil.c:1425:23: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'char' element[0m
 1425 |   for (p = n = name;  *p;  p++)[0m
      | [0;1;32m                      ^~
[0m[1mutil.c:1429:20: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 1429 |           while (ISSLASH (p[1]))[0m
      | [0;1;32m                          ^
[0m[1mutil.c:1570:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1570 |   while (ISSPACE ((unsigned char) *s))[0m
      | [0;1;32m         ^
[0m[1m./common.h:53:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISSPACE'[0m
   53 | #define ISSPACE(c) (CTYPE_DOMAIN (c) && isspace (c))[0m
      | [0;1;32m                    ^
[0m[1m./common.h:48:25: [0m[0;1;36mnote: [0mexpanded from macro 'CTYPE_DOMAIN'[0m
   48 | #define CTYPE_DOMAIN(c) 1[0m
      | [0;1;32m                        ^
[0m[1mutil.c:1570:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1572[0m
 1570 |   while (ISSPACE ((unsigned char) *s))[0m
      | [0;1;32m  ^
[0m[1mutil.c:1572:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1572 |   if (*s == '"')[0m
      | [0;1;32m      ^~~~~~~~~
[0m[1mutil.c:1572:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1572 |   if (*s == '"')[0m
      | [0;1;32m  ^
[0m[1mutil.c:1575:12: [0m[0;1;36mnote: [0m'ret' is non-null[0m
 1575 |       if (!ret)[0m
      | [0;1;32m           ^~~
[0m[1mutil.c:1575:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1575 |       if (!ret)[0m
      | [0;1;32m      ^
[0m[1mutil.c:1588:9: [0m[0;1;36mnote: [0mCalling 'strip_leading_slashes'[0m
 1588 |   if (! strip_leading_slashes (ret, strip_leading))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mutil.c:1425:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1425 |   for (p = n = name;  *p;  p++)[0m
      | [0;1;32m  ^
[0m[1mutil.c:1427:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1427 |       if (ISSLASH (*p))[0m
      | [0;1;32m          ^
[0m[1m../lib/dosname.h:38:22: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   38 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1mutil.c:1427:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 1427 |       if (ISSLASH (*p))[0m
      | [0;1;32m      ^
[0m[1mutil.c:1429:20: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'char' element[0m
 1429 |           while (ISSLASH (p[1]))[0m
      | [0;1;32m                          ^
[0m[1m../lib/dosname.h:38:23: [0m[0;1;36mnote: [0mexpanded from macro 'ISSLASH'[0m
   38 | # define ISSLASH(C) ((C) == '/')[0m
      | [0;1;32m                      ^
[0m[1mutil.c:1429:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1429 |           while (ISSLASH (p[1]))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1430 |             p++;[0m
      | [0;1;32m                
[0m[1mutil.c:1431:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1431 |           if (strip_leading < 0 || --s >= 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1432 |               n = p+1;[0m
      | [0;1;32m                      
[0m[1mutil.c:1437:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1437 |       memmove (name, n, strlen (n) + 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1437:7: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1437 |       memmove (name, n, strlen (n) + 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1440:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1440 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1441 |     return false;[0m
      | [0;1;32m                 
[0m[1mutil.c:1459:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1459 |     while (ISSPACE ((unsigned char) *at))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1460 |         at++;[0m
      | [0;1;32m             
[0m[1mutil.c:1461:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1461 |     if (debug & 128)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1462 |         say ("fetchname %s %d\n", at, strip_leading);[0m
      | [0;1;32m                                                     
[0m[1mutil.c:1469:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1469 |             if (debug & 128)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1470 |               say ("ignoring malformed filename %s\n", quotearg (at));[0m
      | [0;1;32m                                                                      
[0m[1mutil.c:1483:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1483 |                 while (*u != '\t' && ISSPACE ((unsigned char) u[1]))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 1484 |                   u++;[0m
      | [0;1;32m                      
[0m[1mutil.c:1485:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1485 |                 if (*u != '\t' && (strchr (u + 1, pstamp ? '\t' : '\n')))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 1486 |                   continue;[0m
      | [0;1;32m                           
[0m[1mutil.c:1518:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1518 |         if (u != t && *(u-1) == '\n')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1519 |           u--;[0m
      | [0;1;32m              
[0m[1mutil.c:1520:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1520 |         if (u != t && *(u-1) == '\r')[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1521 |           u--;[0m
      | [0;1;32m              
[0m[1mutil.c:1534:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1534 |           if (set_time | set_utc)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1535 |             get_date (&stamp, t, &initial_time);[0m
 1536 |           else[0m
      | [0;32m          } 
[0m[1mutil.c:1561:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1561 |     if (pstamp)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1562 |       *pstamp = stamp;[0m
      | [0;1;32m                      
[0m[1mutil.c:1570:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1570 |   while (ISSPACE ((unsigned char) *s))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1571 |     s++;[0m
      | [0;1;32m        
[0m[1mutil.c:1575:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1575 |       if (!ret)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1576 |         return NULL;[0m
      | [0;1;32m                    
[0m[1mutil.c:1582:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1582 |       for (t = s; *t && ! ISSPACE ((unsigned char) *t); t++)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 1583 |         /* do nothing*/ ;[0m
      | [0;1;32m                         
[0m[1mutil.c:1585:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1585 |       if (endp)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1586 |         *endp = t;[0m
      | [0;1;32m                  
[0m[1mutil.c:1599:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1599 |   if (file_seek (stream, offset, ptrname) != 0)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1600 |     pfatal ("fseek");[0m
      | [0;1;32m                     
[0m[1mutil.c:1649:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1649 |       sprintf (template, "%s/%s.%cXXXXXX", dirname, basename, letter);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1649:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1649 |       sprintf (template, "%s/%s.%cXXXXXX", dirname, basename, letter);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1658:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1658 |       if (! tmpdir)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1659 |         tmpdir = getenv ("TMP");  /* DOS tradition */[0m
      | [0;1;32m                                                     
[0m[1mutil.c:1660:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1660 |       if (! tmpdir)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1661 |         tmpdir = getenv ("TEMP");  /* another DOS tradition */[0m
      | [0;1;32m                                                              
[0m[1mutil.c:1662:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1662 |       if (! tmpdir)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1663 |         tmpdir = TMPDIR;[0m
      | [0;1;32m                        
[0m[1mutil.c:1666:7: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1666 |       sprintf (template, "%s/p%cXXXXXX", tmpdir, letter);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1666:7: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1666 |       sprintf (template, "%s/p%cXXXXXX", tmpdir, letter);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:1688:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1688 |   if (IS_ABSOLUTE_FILE_NAME (name))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1689 |     return false;[0m
      | [0;1;32m                 
[0m[1mutil.c:1693:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1693 |           && ( ! *++name || ISSLASH (*name)))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1694 |         return false;[0m
      | [0;1;32m                     
[0m[1mutil.c:1695:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1695 |       while (*name && ! ISSLASH (*name))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1696 |         name++;[0m
      | [0;1;32m               
[0m[1mutil.c:1697:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1697 |       while (ISSLASH (*name))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1698 |         name++;[0m
      | [0;1;32m               
[0m[1mutil.c:1714:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1714 |   memcpy (root, name, prefix_len);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1714:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1714 |   memcpy (root, name, prefix_len);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1717:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1717 |   if (stat (root, &st))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1718 |     return false;[0m
      | [0;1;32m                 
[0m[1mutil.c:1721:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1721 |   if (stat (".", &st))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1722 |     return false;[0m
      | [0;1;32m                 
[0m167 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[76/76][212.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/tidy-fixes/tmpp2hf3emn.yaml -p=/itch/common/crepos/cu-to-rtu/c/patch-2.7.6 /itch/common/crepos/cu-to-rtu/c/patch-2.7.6/src/pch.c
[1mpch.c:118:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |     if (!filename || !*filename || strEQ (filename, "-"))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  119 |       pfp = stdin;[0m
  120 |     else[0m
      | [0;32m    } 
[0m[1mpch.c:123:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  123 |         if (!pfp)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  124 |           pfatal ("Can't open patch file %s", quotearg (filename));[0m
      | [0;1;32m                                                                   
[0m[1mpch.c:134:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |     if (fstat (fileno (pfp), &st) != 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  135 |       pfatal ("fstat");[0m
      | [0;1;32m                       
[0m[1mpch.c:136:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |     if (S_ISREG (st.st_mode) && (pos = file_tell (pfp)) != -1)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  137 |       file_pos = pos;[0m
  138 |     else[0m
      | [0;32m    } 
[0m[1mpch.c:144:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |         if (fd == -1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  145 |           pfatal ("Can't create temporary file %s", TMPPATNAME);[0m
      | [0;1;32m                                                                
[0m[1mpch.c:148:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |         if (! pfp)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  149 |           pfatal ("Can't open stream for file %s", quotearg (TMPPATNAME));[0m
      | [0;1;32m                                                                          
[0m[1mpch.c:152:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |              st.st_size += charsread)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  153 |           if (fwrite (buf, 1, charsread, pfp) != charsread)[0m
  154 |             write_fatal ();[0m
      | [0;1;32m                           
[0m[1mpch.c:153:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |           if (fwrite (buf, 1, charsread, pfp) != charsread)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  154 |             write_fatal ();[0m
      | [0;1;32m                           
[0m[1mpch.c:155:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |         if (ferror (read_pfp) || fclose (read_pfp) != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  156 |           read_fatal ();[0m
      | [0;1;32m                        
[0m[1mpch.c:158:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  158 |             || file_seek (pfp, (file_offset) 0, SEEK_SET) != 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  159 |           write_fatal ();[0m
      | [0;1;32m                         
[0m[1mpch.c:162:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |     if (p_filesize != (file_offset) p_filesize)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  163 |       fatal ("patch file is too long");[0m
      | [0;1;32m                                       
[0m[1mpch.c:172:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |     if (!p_line)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  173 |         p_line = xmalloc (hunkmax * sizeof *p_line);[0m
      | [0;1;32m                                                    
[0m[1mpch.c:174:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |     if (!p_len)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  175 |         p_len = xmalloc (hunkmax * sizeof *p_len);[0m
      | [0;1;32m                                                  
[0m[1mpch.c:176:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  176 |     if (!p_Char)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  177 |         p_Char = xmalloc (hunkmax * sizeof *p_Char);[0m
      | [0;1;32m                                                    
[0m[1mpch.c:189:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |         && (p_Char = realloc (p_Char, hunkmax * sizeof (*p_Char))))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  190 |       return true;[0m
      | [0;1;32m                  
[0m[1mpch.c:191:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  191 |     if (!using_plan_a)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  192 |       xalloc_die ();[0m
      | [0;1;32m                    
[0m[1mpch.c:209:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |       && p_says_nonexistent[! reverse ^ nonexistent] == 2)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  210 |     return false;[0m
      | [0;1;32m                 
[0m[1mpch.c:212:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |   if (looks_reversed)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  213 |     reverse ^=[0m
  214 |       ok_to_reverse ("The next patch%s would %s the file %s,\nwhich %s!",[0m
  215 |                      reverse ? ", when reversed," : "",[0m
  216 |                      (nonexistent ? "delete"[0m
  217 |                       : is_empty ? "empty out"[0m
  218 |                       : "create"),[0m
  219 |                      quotearg (name),[0m
  220 |                      (nonexistent ? "does not exist"[0m
  221 |                       : is_empty ? "is already empty"[0m
  222 |                       : "already exists"));[0m
      | [0;1;32m                                           
[0m[1mpch.c:232:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |         if (verbosity == VERBOSE)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  233 |             say ("done\n");[0m
      | [0;1;32m                           
[0m[1mpch.c:236:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |     if (verbosity == VERBOSE)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  237 |         say ("Hmm...");[0m
      | [0;1;32m                       
[0m[1mpch.c:240:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |         if (verbosity == VERBOSE)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  241 |           say (p_base[0m
  242 |                ? "  Ignoring the trailing garbage.\ndone\n"[0m
  243 |                : "  I can't seem to find a patch in there anywhere.\n");[0m
      | [0;1;32m                                                                        
[0m[1mpch.c:244:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |         if (! p_base && p_filesize)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  245 |           fatal ("Only garbage was found in the patch input.");[0m
      | [0;1;32m                                                               
[0m[1mpch.c:254:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  254 |     if (verbosity == VERBOSE)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  255 |         say ("  %sooks like %s to me...\n",[0m
  256 |             (p_base == 0 ? "L" : "The next patch l"),[0m
  257 |             diff_type == UNI_DIFF ? "a unified diff" :[0m
  258 |             diff_type == CONTEXT_DIFF ? "a context diff" :[0m
  259 |             diff_type == NEW_CONTEXT_DIFF ? "a new-style context diff" :[0m
  260 |             diff_type == NORMAL_DIFF ? "a normal diff" :[0m
  261 |             diff_type == GIT_BINARY_DIFF ? "a git binary diff" :[0m
  262 |             "an ed script" );[0m
      | [0;1;32m                             
[0m[1mpch.c:264:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |     if (no_strip_trailing_cr)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  265 |       p_strip_trailing_cr = false;[0m
      | [0;1;32m                                  
[0m[1mpch.c:269:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |         if (p_indent)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  270 |           say ("(Patch is indented %lu space%s.)\n",[0m
  271 |                (unsigned long int) p_indent, p_indent==1?"":"s");[0m
      | [0;1;32m                                                                 
[0m[1mpch.c:272:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  272 |         if (p_strip_trailing_cr)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  273 |           say ("(Stripping trailing CRs from patch; use --binary to disable.)\n");[0m
      | [0;1;32m                                                                                  
[0m[1mpch.c:279:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |             if (diff_type != ED_DIFF && diff_type != NORMAL_DIFF)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  280 |               say (strippath == -1[0m
  281 |                    ? "Perhaps you should have used the -p or --strip option?\n"[0m
  282 |                    : "Perhaps you used the wrong -p or --strip option?\n");[0m
      | [0;1;32m                                                                           
[0m[1mpch.c:307:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  307 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  308 |               invc = -1;[0m
      | [0;1;32m                        
[0m[1mpch.c:313:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |                 if (verbosity != SILENT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  314 |                     say ("Skipping patch.\n");[0m
      | [0;1;32m                                              
[0m[1mpch.c:329:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  329 |    while (ISSPACE ((unsigned char) *str))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  330 |      str++;[0m
      | [0;1;32m           
[0m[1mpch.c:334:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |        if (*s >= '0' && *s <= '7')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  335 |         mode = (mode << 3) + (*s - '0');[0m
  336 |        else[0m
      | [0;32m       } 
[0m[1mpch.c:342:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |    if (*s == '\r')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  343 |      s++;[0m
      | [0;1;32m         
[0m[1mpch.c:344:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |    if (*s != '\n')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  345 |      mode = 0;[0m
      | [0;1;32m              
[0m[1mpch.c:359:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  359 |   memcpy (*sha1, start, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1mpch.c:359:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  359 |   memcpy (*sha1, start, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1mpch.c:370:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |   for (s = sha1; *s; s++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  371 |     if (*s != '0')[0m
  372 |       break;[0m
      | [0;1;32m            
[0m[1mpch.c:371:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  371 |     if (*s != '0')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  372 |       break;[0m
      | [0;1;32m            
[0m[1mpch.c:373:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |   if (! *s)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  374 |     return 2;[0m
      | [0;1;32m             
[0m[1mpch.c:377:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  377 |   for (s = sha1; *s; s++, empty_sha1++)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  378 |     if (*s != *empty_sha1)[0m
  379 |       break;[0m
      | [0;1;32m            
[0m[1mpch.c:378:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |     if (*s != *empty_sha1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  379 |       break;[0m
      | [0;1;32m            
[0m[1mpch.c:388:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |   for (s = str; (*s >= '0' && *s <= '9') || (*s >= 'a' && *s <= 'f'); s++)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  389 |     /* do nothing */ ;[0m
      | [0;1;32m                      
[0m[1mpch.c:401:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  401 |       if (! invalid_names[i])[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  402 |         break;[0m
      | [0;1;32m              
[0m[1mpch.c:403:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  403 |       if (! strcmp (invalid_names[i], name))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  404 |         return false;[0m
      | [0;1;32m                     
[0m[1mpch.c:410:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |   if (! is_valid && cwd_is_root (name))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  411 |     is_valid = true;[0m
      | [0;1;32m                    
[0m[1mpch.c:416:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  416 |       if (i < ARRAY_SIZE (invalid_names))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  417 |         invalid_names[i] = name;[0m
      | [0;1;32m                                
[0m[1mpch.c:442:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  443 |       if (p_name[i]) {[0m
  444 |           free (p_name[i]);[0m
  445 |           p_name[i] = 0;[0m
  446 |         }[0m
      | [0;1;32m         
[0m[1mpch.c:447:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  447 |     for (i = 0; i < ARRAY_SIZE (invalid_names); i++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  448 |         invalid_names[i] = NULL;[0m
      | [0;1;32m                                
[0m[1mpch.c:449:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  450 |       if (p_timestr[i])[0m
  451 |         {[0m
  452 |           free(p_timestr[i]);[0m
  453 |           p_timestr[i] = 0;[0m
  454 |         }[0m
      | [0;1;32m         
[0m[1mpch.c:455:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  456 |       if (p_sha1[i])[0m
  457 |         {[0m
  458 |           free (p_sha1[i]);[0m
  459 |           p_sha1[i] = 0;[0m
  460 |         }[0m
      | [0;1;32m         
[0m[1mpch.c:470:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  471 |       need_header = false;[0m
      | [0;1;32m                          
[0m[1mpch.c:495:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  495 |         if (chars_read == (size_t) -1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  496 |           xalloc_die ();[0m
      | [0;1;32m                        
[0m[1mpch.c:519:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  519 |             if (*s == '\t')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  520 |                 indent = (indent + 8) & ~7;[0m
  521 |             else[0m
      | [0;32m            } 
[0m[1mpch.c:521:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  521 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  522 |                 indent++;[0m
      | [0;1;32m                         
[0m[1mpch.c:526:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |             for (t = s + 1; ISDIGIT (*t) || *t == ',';  t++)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  527 |               /* do nothing */ ;[0m
      | [0;1;32m                                
[0m[1mpch.c:530:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |                 for (t++;  ISDIGIT (*t) || *t == ',';  t++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  531 |                   /* do nothing */ ;[0m
      | [0;1;32m                                    
[0m[1mpch.c:532:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |                 for (; *t == ' ' || *t == '\t'; t++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  533 |                   /* do nothing */ ;[0m
      | [0;1;32m                                    
[0m[1mpch.c:534:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  534 |                 if (*t == '\r')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  535 |                   t++;[0m
      | [0;1;32m                      
[0m[1mpch.c:571:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |             for (t = s + 7;  ISSPACE ((unsigned char) *t);  t++)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  572 |               /* do nothing */ ;[0m
      | [0;1;32m                                
[0m[1mpch.c:574:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  574 |             for (t = revision;  *t;  t++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  575 |               if (ISSPACE ((unsigned char) *t))[0m
  576 |                 {[0m
  577 |                   char const *u;[0m
  578 |                   for (u = t + 1;  ISSPACE ((unsigned char) *u);  u++)[0m
  579 |                     /* do nothing */ ;[0m
  580 |                   if (*u)[0m
  581 |                     {[0m
  582 |                       char numbuf[LINENUM_LENGTH_BOUND + 1];[0m
  583 |                       say ("Prereq: with multiple words at line %s of patch\n",[0m
  584 |                            format_linenum (numbuf, this_line));[0m
  585 |                     }[0m
  586 |                   break;[0m
  587 |                 }[0m
      | [0;1;32m                 
[0m[1mpch.c:578:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  578 |                   for (u = t + 1;  ISSPACE ((unsigned char) *u);  u++)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  579 |                     /* do nothing */ ;[0m
      | [0;1;32m                                      
[0m[1mpch.c:588:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  588 |             if (t == revision)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  589 |                 revision = 0;[0m
  590 |             else {[0m
      | [0;32m            } 
[0m[1mpch.c:618:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |                    && (u = skip_spaces (u), ! *u)))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  619 |               for (i = OLD; i <= NEW; i++)[0m
  620 |                 {[0m
  621 |                   free (p_name[i]);[0m
  622 |                   p_name[i] = 0;[0m
  623 |                 }[0m
      | [0;1;32m                 
[0m[1mpch.c:639:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  639 |                 if (*(v = skip_spaces (v)))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  640 |                   p_mode[OLD] = p_mode[NEW] = fetchmode (v);[0m
      | [0;1;32m                                                            
[0m[1mpch.c:703:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  703 |             for (t = s;  t[0] == '-' && t[1] == ' ';  t += 2)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  704 |               /* do nothing */ ;[0m
      | [0;1;32m                                
[0m[1mpch.c:720:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  720 |         if (need_header)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  721 |           continue;[0m
      | [0;1;32m                   
[0m[1mpch.c:746:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  746 |             if (s[0] == '0' && !ISDIGIT (s[1]))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  747 |               p_says_nonexistent[OLD] = 1 + ! p_timestamp[OLD].tv_sec;[0m
      | [0;1;32m                                                                      
[0m[1mpch.c:748:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |             while (*s != ' ' && *s != '\n')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  749 |               s++;[0m
      | [0;1;32m                  
[0m[1mpch.c:750:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  750 |             while (*s == ' ')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  751 |               s++;[0m
      | [0;1;32m                  
[0m[1mpch.c:752:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  752 |             if (s[0] == '+' && s[1] == '0' && !ISDIGIT (s[2]))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  753 |               p_says_nonexistent[NEW] = 1 + ! p_timestamp[NEW].tv_sec;[0m
      | [0;1;32m                                                                      
[0m[1mpch.c:775:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  775 |             if (s[0] == '0' && !ISDIGIT (s[1]))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  776 |               p_says_nonexistent[OLD] = 1 + ! p_timestamp[OLD].tv_sec;[0m
      | [0;1;32m                                                                      
[0m[1mpch.c:779:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  779 |             while (*s != '\n')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  780 |                 s++;[0m
      | [0;1;32m                    
[0m[1mpch.c:795:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  795 |                   && ! p_repl_lines && p_newfirst == 1)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  796 |                 p_says_nonexistent[NEW] = 1 + ! p_timestamp[NEW].tv_sec;[0m
      | [0;1;32m                                                                        
[0m[1mpch.c:830:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  830 |         if (new_file_type && file_type != new_file_type)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  831 |           file_type = 0;[0m
      | [0;1;32m                        
[0m[1mpch.c:836:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  836 |         if (! file_type)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  837 |           file_type = S_IFREG;[0m
      | [0;1;32m                              
[0m[1mpch.c:874:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  874 |         for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m[1mpch.c:881:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  881 |                   if (! stat_errno[i])[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  882 |                     st[i] = st[i0];[0m
      | [0;1;32m                                   
[0m[1mpch.c:889:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  889 |                       if (lookup_file_id (&st[i]) == DELETE_LATER)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  890 |                         stat_errno[i] = ENOENT;[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;32m                      } 
[0m[1mpch.c:891:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m  892 |                         break;[0m
      | [0;1;32m                              
[0m[1mpch.c:907:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  907 |                 for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m[1mpch.c:925:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  925 |                                                getbuf, &st[i]))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  926 |                                 stat_errno[i] = 0;[0m
  927 |                               else[0m
      | [0;32m                              } 
[0m[1mpch.c:927:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  927 |                               else[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  928 |                                 version_controlled[i] = 0;[0m
      | [0;1;32m                                                          
[0m[1mpch.c:933:14: [0m[0;1;35mwarning: [0m[1mBranch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch][0m
  933 |                               if (! stat_errno[i])[0m
      | [0;1;32m                                  ^ ~~~~~~~~~~~~~
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:443:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:443:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m      ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:443:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:443:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m      ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:443:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:443:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m      ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 447[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:447:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  447 |     for (i = 0; i < ARRAY_SIZE (invalid_names); i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:447:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mpch.c:447:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 449[0m
[1mpch.c:449:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:450:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mpch.c:450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:449:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:450:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mpch.c:450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:449:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 455[0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:455:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:456:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:456:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:455:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:456:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:456:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:455:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 461[0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:462:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  462 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:462:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mpch.c:462:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 470[0m
[1mpch.c:470:9: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:470:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpch.c:470:33: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to NORMAL_DIFF[0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:470:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m    ^
[0m[1mpch.c:481:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  481 |     for (;;) {[0m
      | [0;1;32m    ^
[0m[1mpch.c:495:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  495 |         if (chars_read == (size_t) -1)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:495:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  495 |         if (chars_read == (size_t) -1)[0m
      | [0;1;32m        ^
[0m[1mpch.c:497:6: [0m[0;1;36mnote: [0mAssuming 'chars_read' is not equal to 0[0m
  497 |         if (! chars_read) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mpch.c:497:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  497 |         if (! chars_read) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:517:22: [0m[0;1;36mnote: [0mAssuming 'chars_read' is < 2[0m
  517 |         strip_trailing_cr = 2 <= chars_read && buf[chars_read - 2] == '\r';[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~
[0m[1mpch.c:517:38: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  517 |         strip_trailing_cr = 2 <= chars_read && buf[chars_read - 2] == '\r';[0m
      | [0;1;32m                                            ^
[0m[1mpch.c:518:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                      ^~~~~~~~~
[0m[1mpch.c:518:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpch.c:518:29: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                                   ^~~~~~~~~~
[0m[1mpch.c:518:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                      ^
[0m[1mpch.c:518:43: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                                                 ^~~~~~~~~
[0m[1mpch.c:518:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 524[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:524:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  524 |         if (ISDIGIT (*s))[0m
      | [0;1;32m            ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:524:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  524 |         if (ISDIGIT (*s))[0m
      | [0;1;32m        ^
[0m[1mpch.c:539:6: [0m[0;1;36mnote: [0mAssuming 'need_header' is true[0m
  539 |         if (! need_header[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mpch.c:540:6: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  540 |             && first_command_line < 0[0m
      | [0;1;32m            ^
[0m[1mpch.c:549:7: [0m[0;1;36mnote: [0m'stars_last_line' is false[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~
[0m[1mpch.c:549:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m            ^
[0m[1mpch.c:549:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m                                ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:549:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m        ^
[0m[1mpch.c:555:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  555 |         else if (strnEQ(s, "+++ ", 4))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:555:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  555 |         else if (strnEQ(s, "+++ ", 4))[0m
      | [0;1;32m             ^
[0m[1mpch.c:563:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  563 |         else if (strnEQ(s, "Index:", 6))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:563:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  563 |         else if (strnEQ(s, "Index:", 6))[0m
      | [0;1;32m             ^
[0m[1mpch.c:569:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  569 |         else if (strnEQ(s, "Prereq:", 7))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:569:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  569 |         else if (strnEQ(s, "Prereq:", 7))[0m
      | [0;1;32m             ^
[0m[1mpch.c:597:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  597 |         else if (strnEQ (s, "diff --git ", 11))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:597:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  597 |         else if (strnEQ (s, "diff --git ", 11))[0m
      | [0;1;32m             ^
[0m[1mpch.c:627:11: [0m[0;1;36mnote: [0mAssuming 'p_git_diff' is true[0m
  627 |         else if (p_git_diff && strnEQ (s, "index ", 6))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:627:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:627:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  627 |         else if (p_git_diff && strnEQ (s, "index ", 6))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:627:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  627 |         else if (p_git_diff && strnEQ (s, "index ", 6))[0m
      | [0;1;32m             ^
[0m[1mpch.c:644:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  644 |         else if (p_git_diff && strnEQ (s, "old mode ", 9))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:644:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:644:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  644 |         else if (p_git_diff && strnEQ (s, "old mode ", 9))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:644:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  644 |         else if (p_git_diff && strnEQ (s, "old mode ", 9))[0m
      | [0;1;32m             ^
[0m[1mpch.c:649:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  649 |         else if (p_git_diff && strnEQ (s, "new mode ", 9))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:649:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:649:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  649 |         else if (p_git_diff && strnEQ (s, "new mode ", 9))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:649:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  649 |         else if (p_git_diff && strnEQ (s, "new mode ", 9))[0m
      | [0;1;32m             ^
[0m[1mpch.c:654:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  654 |         else if (p_git_diff && strnEQ (s, "deleted file mode ", 18))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:654:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:654:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  654 |         else if (p_git_diff && strnEQ (s, "deleted file mode ", 18))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:654:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  654 |         else if (p_git_diff && strnEQ (s, "deleted file mode ", 18))[0m
      | [0;1;32m             ^
[0m[1mpch.c:660:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  660 |         else if (p_git_diff && strnEQ (s, "new file mode ", 14))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:660:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:660:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  660 |         else if (p_git_diff && strnEQ (s, "new file mode ", 14))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:660:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  660 |         else if (p_git_diff && strnEQ (s, "new file mode ", 14))[0m
      | [0;1;32m             ^
[0m[1mpch.c:666:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  666 |         else if (p_git_diff && strnEQ (s, "rename from ", 12))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:666:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:666:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  666 |         else if (p_git_diff && strnEQ (s, "rename from ", 12))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:666:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  666 |         else if (p_git_diff && strnEQ (s, "rename from ", 12))[0m
      | [0;1;32m             ^
[0m[1mpch.c:673:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  673 |         else if (p_git_diff && strnEQ (s, "rename to ", 10))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:673:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:673:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  673 |         else if (p_git_diff && strnEQ (s, "rename to ", 10))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:673:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  673 |         else if (p_git_diff && strnEQ (s, "rename to ", 10))[0m
      | [0;1;32m             ^
[0m[1mpch.c:680:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  680 |         else if (p_git_diff && strnEQ (s, "copy from ", 10))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:680:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:680:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  680 |         else if (p_git_diff && strnEQ (s, "copy from ", 10))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:680:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  680 |         else if (p_git_diff && strnEQ (s, "copy from ", 10))[0m
      | [0;1;32m             ^
[0m[1mpch.c:687:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  687 |         else if (p_git_diff && strnEQ (s, "copy to ", 8))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:687:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:687:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  687 |         else if (p_git_diff && strnEQ (s, "copy to ", 8))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:687:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  687 |         else if (p_git_diff && strnEQ (s, "copy to ", 8))[0m
      | [0;1;32m             ^
[0m[1mpch.c:694:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  694 |         else if (p_git_diff && strnEQ (s, "GIT binary patch", 16))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:694:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:694:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  694 |         else if (p_git_diff && strnEQ (s, "GIT binary patch", 16))[0m
      | [0;1;32m             ^
[0m[1mpch.c:699:6: [0m[0;1;36mnote: [0mControl jumps to line 826[0m
  699 |             goto scan_exit;[0m
      | [0;1;32m            ^
[0m[1mpch.c:827:9: [0m[0;1;36mnote: [0mAssuming 'file_type' is 0[0m
  827 |     if (file_type)[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mpch.c:827:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  827 |     if (file_type)[0m
      | [0;1;32m    ^
[0m[1mpch.c:836:6: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  836 |         if (! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mpch.c:836:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  836 |         if (! file_type)[0m
      | [0;1;32m        ^
[0m[1mpch.c:864:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  864 |     if (!inname)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:864:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  864 |     if (!inname)[0m
      | [0;1;32m    ^
[0m[1mpch.c:868:6: [0m[0;1;36mnote: [0mAssuming 'posixly_correct' is true[0m
  868 |         if (! posixly_correct && (p_name[OLD] || p_name[NEW]) && p_name[INDEX])[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mpch.c:868:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  868 |         if (! posixly_correct && (p_name[OLD] || p_name[NEW]) && p_name[INDEX])[0m
      | [0;1;32m                              ^
[0m[1mpch.c:874:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  874 |         for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m        ^
[0m[1mpch.c:875:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  875 |           if (p_name[i])[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1mpch.c:875:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  875 |           if (p_name[i])[0m
      | [0;1;32m          ^
[0m[1mpch.c:877:12: [0m[0;1;36mnote: [0m'i0' is equal to NONE[0m
  877 |               if (i0 != NONE && strcmp (p_name[i0], p_name[i]) == 0)[0m
      | [0;1;32m                  ^~
[0m[1mpch.c:877:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  877 |               if (i0 != NONE && strcmp (p_name[i0], p_name[i]) == 0)[0m
      | [0;1;32m                             ^
[0m[1mpch.c:887:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  887 |                   if (! stat_errno[i])[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1mpch.c:887:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  887 |                   if (! stat_errno[i])[0m
      | [0;1;32m                  ^
[0m[1mpch.c:889:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  889 |                       if (lookup_file_id (&st[i]) == DELETE_LATER)[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:889:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  889 |                       if (lookup_file_id (&st[i]) == DELETE_LATER)[0m
      | [0;1;32m                      ^
[0m[1mpch.c:891:18: [0m[0;1;36mnote: [0mAssuming 'posixly_correct' is true[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~
[0m[1mpch.c:891:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:891:37: [0m[0;1;36mnote: [0mCalling 'name_is_valid'[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:399:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  399 |   for (i = 0; i < ARRAY_SIZE (invalid_names); i++)[0m
      | [0;1;32m  ^
[0m[1mpch.c:401:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  401 |       if (! invalid_names[i])[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~
[0m[1mpch.c:401:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  401 |       if (! invalid_names[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:402:2: [0m[0;1;36mnote: [0m Execution continues on line 407[0m
  402 |         break;[0m
      | [0;1;32m        ^
[0m[1mpch.c:410:7: [0m[0;1;36mnote: [0mAssuming 'is_valid' is false[0m
  410 |   if (! is_valid && cwd_is_root (name))[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mpch.c:410:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:410:21: [0m[0;1;36mnote: [0mValue assigned to 'posixly_correct', which participates in a condition later[0m
  410 |   if (! is_valid && cwd_is_root (name))[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpch.c:410:21: [0m[0;1;36mnote: [0mValue assigned to 'patch_get', which participates in a condition later[0m
  410 |   if (! is_valid && cwd_is_root (name))[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpch.c:410:21: [0m[0;1;36mnote: [0mAssigning value, which participates in a condition later[0m
  410 |   if (! is_valid && cwd_is_root (name))[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpch.c:410:21: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  410 |   if (! is_valid && cwd_is_root (name))[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~
[0m[1mpch.c:410:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  410 |   if (! is_valid && cwd_is_root (name))[0m
      | [0;1;32m  ^
[0m[1mpch.c:413:9: [0m[0;1;36mnote: [0m'is_valid' is true[0m
  413 |   if (! is_valid)[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mpch.c:413:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  413 |   if (! is_valid)[0m
      | [0;1;32m  ^
[0m[1mpch.c:891:37: [0m[0;1;36mnote: [0mReturning from 'name_is_valid'[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:891:14: [0m[0;1;36mnote: [0mTaking true branch[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                           ^
[0m[1mpch.c:892:4: [0m[0;1;36mnote: [0m Execution continues on line 898[0m
  892 |                         break;[0m
      | [0;1;32m                        ^
[0m[1mpch.c:898:6: [0m[0;1;36mnote: [0mAssuming 'posixly_correct' is false[0m
  898 |         if (! posixly_correct)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mpch.c:898:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  898 |         if (! posixly_correct)[0m
      | [0;1;32m        ^
[0m[1mpch.c:903:10: [0m[0;1;36mnote: [0m'i' is equal to NONE[0m
  903 |             if (i == NONE && patch_get)[0m
      | [0;1;32m                ^
[0m[1mpch.c:903:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:903:23: [0m[0;1;36mnote: [0mAssuming 'patch_get' is not equal to 0[0m
  903 |             if (i == NONE && patch_get)[0m
      | [0;1;32m                             ^~~~~~~~~
[0m[1mpch.c:903:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  903 |             if (i == NONE && patch_get)[0m
      | [0;1;32m            ^
[0m[1mpch.c:907:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  907 |                 for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                ^
[0m[1mpch.c:908:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  908 |                   if (p_name[i])[0m
      | [0;1;32m                  ^
[0m[1mpch.c:913:26: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  913 |                       bool readonly = (outfile[0m
      | [0;1;32m                                       ^~~~~~~
[0m[1mpch.c:914:12: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  914 |                                        && strcmp (outfile, p_name[i]) != 0);[0m
      | [0;1;32m                                       ^
[0m[1mpch.c:916:13: [0m[0;1;36mnote: [0m'nope' is equal to NONE[0m
  916 |                       if (nope == NONE || strcmp (p_name[nope], p_name[i]) != 0)[0m
      | [0;1;32m                          ^~~~
[0m[1mpch.c:916:26: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  916 |                       if (nope == NONE || strcmp (p_name[nope], p_name[i]) != 0)[0m
      | [0;1;32m                                       ^
[0m[1mpch.c:921:31: [0m[0;1;36mnote: [0mAssuming 'cs' is null[0m
  921 |                           version_controlled[i] = !! cs;[0m
      | [0;1;32m                                                   ^~~~
[0m[1mpch.c:922:10: [0m[0;1;36mnote: [0m'cs' is null[0m
  922 |                           if (cs)[0m
      | [0;1;32m                              ^~
[0m[1mpch.c:922:6: [0m[0;1;36mnote: [0mTaking false branch[0m
  922 |                           if (cs)[0m
      | [0;1;32m                          ^
[0m[1mpch.c:907:31: [0m[0;1;36mnote: [0mThe value 1 is assigned to 'i'[0m
  907 |                 for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                                            ^~~
[0m[1mpch.c:907:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  907 |                 for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                ^
[0m[1mpch.c:908:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  908 |                   if (p_name[i])[0m
      | [0;1;32m                      ^~~~~~~~~
[0m[1mpch.c:908:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  908 |                   if (p_name[i])[0m
      | [0;1;32m                  ^
[0m[1mpch.c:913:26: [0m[0;1;36mnote: [0mAssuming 'outfile' is null[0m
  913 |                       bool readonly = (outfile[0m
      | [0;1;32m                                       ^~~~~~~
[0m[1mpch.c:914:12: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  914 |                                        && strcmp (outfile, p_name[i]) != 0);[0m
      | [0;1;32m                                       ^
[0m[1mpch.c:916:13: [0m[0;1;36mnote: [0m'nope' is not equal to NONE[0m
  916 |                       if (nope == NONE || strcmp (p_name[nope], p_name[i]) != 0)[0m
      | [0;1;32m                          ^~~~
[0m[1mpch.c:916:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpch.c:916:29: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  916 |                       if (nope == NONE || strcmp (p_name[nope], p_name[i]) != 0)[0m
      | [0;1;32m                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:916:9: [0m[0;1;36mnote: [0mTaking true branch[0m
  916 |                       if (nope == NONE || strcmp (p_name[nope], p_name[i]) != 0)[0m
      | [0;1;32m                      ^
[0m[1mpch.c:921:31: [0m[0;1;36mnote: [0mAssuming 'cs' is non-null[0m
  921 |                           version_controlled[i] = !! cs;[0m
      | [0;1;32m                                                   ^~~~
[0m[1mpch.c:922:10: [0m[0;1;36mnote: [0m'cs' is non-null[0m
  922 |                           if (cs)[0m
      | [0;1;32m                              ^~
[0m[1mpch.c:922:6: [0m[0;1;36mnote: [0mTaking true branch[0m
  922 |                           if (cs)[0m
      | [0;1;32m                          ^
[0m[1mpch.c:924:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  924 |                               if (version_get (p_name[i], cs, false, readonly,[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  925 |                                                getbuf, &st[i]))[0m
      | [0;1;32m                                               ~~~~~~~~~~~~~~~
[0m[1mpch.c:924:10: [0m[0;1;36mnote: [0mTaking false branch[0m
  924 |                               if (version_get (p_name[i], cs, false, readonly,[0m
      | [0;1;32m                              ^
[0m[1mpch.c:933:14: [0m[0;1;36mnote: [0mBranch condition evaluates to a garbage value[0m
  933 |                               if (! stat_errno[i])[0m
      | [0;1;32m                                  ^ ~~~~~~~~~~~~~
[0m[1mpch.c:933:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  933 |                               if (! stat_errno[i])[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  934 |                                 break;[0m
      | [0;1;32m                                      
[0m[1mpch.c:946:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  946 |                 && i == NONE)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  947 |               i = i0;[0m
      | [0;1;32m                     
[0m[1mpch.c:955:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  955 |                 for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  956 |                   if (p_name[i])[0m
  957 |                     {[0m
  958 |                       newdirs[i] = (prefix_components (p_name[i], false)[0m
  959 |                                     - prefix_components (p_name[i], true));[0m
  960 |                       if (newdirs[i] < newdirs_min)[0m
  961 |                         newdirs_min = newdirs[i];[0m
  962 |                     }[0m
      | [0;1;32m                     
[0m[1mpch.c:960:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  960 |                       if (newdirs[i] < newdirs_min)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  961 |                         newdirs_min = newdirs[i];[0m
      | [0;1;32m                                                 
[0m[1mpch.c:964:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |                 for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  965 |                   if (p_name[i])[0m
  966 |                     distance_from_minimum[i] = newdirs[i] - newdirs_min;[0m
      | [0;1;32m                                                                        
[0m[1mpch.c:965:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  965 |                   if (p_name[i])[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  966 |                     distance_from_minimum[i] = newdirs[i] - newdirs_min;[0m
      | [0;1;32m                                                                        
[0m[1mpch.c:989:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  989 |             if (inerrno || (instat.st_mode & S_IFMT) == file_type)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  990 |               maybe_reverse (inname, inerrno, inerrno || instat.st_size == 0);[0m
      | [0;1;32m                                                                              
[0m[1mpch.c:992:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  992 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  993 |           inerrno = -1;[0m
      | [0;1;32m                       
[0m[1mpch.c:1016:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1016 |   if (*f)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m 1017 |     while (*++f)[0m
 1018 |       if (ISSLASH (f[0]) && ! ISSLASH (f[-1]))[0m
 1019 |         {[0m
 1020 |           if (checkdirs)[0m
 1021 |             {[0m
 1022 |               *f = '\0';[0m
 1023 |               stat_result = safe_stat (filename, &stat_buf);[0m
 1024 |               *f = '/';[0m
 1025 |               if (! (stat_result == 0 && S_ISDIR (stat_buf.st_mode)))[0m
 1026 |                 break;[0m
 1027 |             }[0m
 1028 | [0m
 1029 |           count++;[0m
 1030 |         }[0m
      | [0;1;32m         
[0m[1mpch.c:1017:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1017 |     while (*++f)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1018 |       if (ISSLASH (f[0]) && ! ISSLASH (f[-1]))[0m
 1019 |         {[0m
 1020 |           if (checkdirs)[0m
 1021 |             {[0m
 1022 |               *f = '\0';[0m
 1023 |               stat_result = safe_stat (filename, &stat_buf);[0m
 1024 |               *f = '/';[0m
 1025 |               if (! (stat_result == 0 && S_ISDIR (stat_buf.st_mode)))[0m
 1026 |                 break;[0m
 1027 |             }[0m
 1028 | [0m
 1029 |           count++;[0m
 1030 |         }[0m
      | [0;1;32m         
[0m[1mpch.c:1025:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1025 |               if (! (stat_result == 0 && S_ISDIR (stat_buf.st_mode)))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m 1026 |                 break;[0m
      | [0;1;32m                      
[0m[1mpch.c:1049:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1049 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m[1mpch.c:1050:20: [0m[0;1;35mwarning: [0m[1mBranch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch][0m
 1050 |     if (name[i] && !ignore[i])[0m
      | [0;1;32m                   ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:443:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:443:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m      ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:443:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:443:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m      ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:443:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:443:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m      ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 447[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:447:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  447 |     for (i = 0; i < ARRAY_SIZE (invalid_names); i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:447:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mpch.c:447:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 449[0m
[1mpch.c:449:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:450:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mpch.c:450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:449:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:450:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mpch.c:450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:449:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 455[0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:455:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:456:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:456:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:455:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:456:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:456:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:455:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 461[0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:462:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  462 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:462:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mpch.c:462:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 470[0m
[1mpch.c:470:9: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:470:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpch.c:470:33: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to NORMAL_DIFF[0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:470:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m    ^
[0m[1mpch.c:481:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  481 |     for (;;) {[0m
      | [0;1;32m    ^
[0m[1mpch.c:495:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  495 |         if (chars_read == (size_t) -1)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:495:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  495 |         if (chars_read == (size_t) -1)[0m
      | [0;1;32m        ^
[0m[1mpch.c:497:6: [0m[0;1;36mnote: [0mAssuming 'chars_read' is not equal to 0[0m
  497 |         if (! chars_read) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mpch.c:497:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  497 |         if (! chars_read) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:517:22: [0m[0;1;36mnote: [0mAssuming 'chars_read' is < 2[0m
  517 |         strip_trailing_cr = 2 <= chars_read && buf[chars_read - 2] == '\r';[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~
[0m[1mpch.c:517:38: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  517 |         strip_trailing_cr = 2 <= chars_read && buf[chars_read - 2] == '\r';[0m
      | [0;1;32m                                            ^
[0m[1mpch.c:518:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                      ^~~~~~~~~
[0m[1mpch.c:518:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpch.c:518:29: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                                   ^~~~~~~~~~
[0m[1mpch.c:518:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                      ^
[0m[1mpch.c:518:43: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                                                 ^~~~~~~~~
[0m[1mpch.c:518:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 524[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:524:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  524 |         if (ISDIGIT (*s))[0m
      | [0;1;32m            ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:524:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  524 |         if (ISDIGIT (*s))[0m
      | [0;1;32m        ^
[0m[1mpch.c:539:6: [0m[0;1;36mnote: [0mAssuming 'need_header' is true[0m
  539 |         if (! need_header[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mpch.c:540:6: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  540 |             && first_command_line < 0[0m
      | [0;1;32m            ^
[0m[1mpch.c:549:7: [0m[0;1;36mnote: [0m'stars_last_line' is false[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~
[0m[1mpch.c:549:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m            ^
[0m[1mpch.c:549:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m                                ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:549:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m        ^
[0m[1mpch.c:555:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  555 |         else if (strnEQ(s, "+++ ", 4))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:555:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  555 |         else if (strnEQ(s, "+++ ", 4))[0m
      | [0;1;32m             ^
[0m[1mpch.c:563:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  563 |         else if (strnEQ(s, "Index:", 6))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:563:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  563 |         else if (strnEQ(s, "Index:", 6))[0m
      | [0;1;32m             ^
[0m[1mpch.c:569:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  569 |         else if (strnEQ(s, "Prereq:", 7))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:569:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  569 |         else if (strnEQ(s, "Prereq:", 7))[0m
      | [0;1;32m             ^
[0m[1mpch.c:597:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  597 |         else if (strnEQ (s, "diff --git ", 11))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:597:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  597 |         else if (strnEQ (s, "diff --git ", 11))[0m
      | [0;1;32m             ^
[0m[1mpch.c:627:11: [0m[0;1;36mnote: [0mAssuming 'p_git_diff' is true[0m
  627 |         else if (p_git_diff && strnEQ (s, "index ", 6))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:627:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:627:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  627 |         else if (p_git_diff && strnEQ (s, "index ", 6))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:627:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  627 |         else if (p_git_diff && strnEQ (s, "index ", 6))[0m
      | [0;1;32m             ^
[0m[1mpch.c:644:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  644 |         else if (p_git_diff && strnEQ (s, "old mode ", 9))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:644:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:644:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  644 |         else if (p_git_diff && strnEQ (s, "old mode ", 9))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:644:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  644 |         else if (p_git_diff && strnEQ (s, "old mode ", 9))[0m
      | [0;1;32m             ^
[0m[1mpch.c:649:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  649 |         else if (p_git_diff && strnEQ (s, "new mode ", 9))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:649:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:649:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  649 |         else if (p_git_diff && strnEQ (s, "new mode ", 9))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:649:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  649 |         else if (p_git_diff && strnEQ (s, "new mode ", 9))[0m
      | [0;1;32m             ^
[0m[1mpch.c:654:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  654 |         else if (p_git_diff && strnEQ (s, "deleted file mode ", 18))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:654:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:654:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  654 |         else if (p_git_diff && strnEQ (s, "deleted file mode ", 18))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:654:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  654 |         else if (p_git_diff && strnEQ (s, "deleted file mode ", 18))[0m
      | [0;1;32m             ^
[0m[1mpch.c:660:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  660 |         else if (p_git_diff && strnEQ (s, "new file mode ", 14))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:660:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:660:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  660 |         else if (p_git_diff && strnEQ (s, "new file mode ", 14))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:660:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  660 |         else if (p_git_diff && strnEQ (s, "new file mode ", 14))[0m
      | [0;1;32m             ^
[0m[1mpch.c:666:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  666 |         else if (p_git_diff && strnEQ (s, "rename from ", 12))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:666:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:666:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  666 |         else if (p_git_diff && strnEQ (s, "rename from ", 12))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:666:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  666 |         else if (p_git_diff && strnEQ (s, "rename from ", 12))[0m
      | [0;1;32m             ^
[0m[1mpch.c:673:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  673 |         else if (p_git_diff && strnEQ (s, "rename to ", 10))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:673:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:673:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  673 |         else if (p_git_diff && strnEQ (s, "rename to ", 10))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:673:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  673 |         else if (p_git_diff && strnEQ (s, "rename to ", 10))[0m
      | [0;1;32m             ^
[0m[1mpch.c:680:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  680 |         else if (p_git_diff && strnEQ (s, "copy from ", 10))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:680:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:680:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  680 |         else if (p_git_diff && strnEQ (s, "copy from ", 10))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:680:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  680 |         else if (p_git_diff && strnEQ (s, "copy from ", 10))[0m
      | [0;1;32m             ^
[0m[1mpch.c:687:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  687 |         else if (p_git_diff && strnEQ (s, "copy to ", 8))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:687:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:687:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  687 |         else if (p_git_diff && strnEQ (s, "copy to ", 8))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:687:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  687 |         else if (p_git_diff && strnEQ (s, "copy to ", 8))[0m
      | [0;1;32m             ^
[0m[1mpch.c:694:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  694 |         else if (p_git_diff && strnEQ (s, "GIT binary patch", 16))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:694:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:694:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  694 |         else if (p_git_diff && strnEQ (s, "GIT binary patch", 16))[0m
      | [0;1;32m             ^
[0m[1mpch.c:699:6: [0m[0;1;36mnote: [0mControl jumps to line 826[0m
  699 |             goto scan_exit;[0m
      | [0;1;32m            ^
[0m[1mpch.c:827:9: [0m[0;1;36mnote: [0mAssuming 'file_type' is 0[0m
  827 |     if (file_type)[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mpch.c:827:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  827 |     if (file_type)[0m
      | [0;1;32m    ^
[0m[1mpch.c:836:6: [0m[0;1;36mnote: [0mAssuming 'file_type' is 0[0m
  836 |         if (! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mpch.c:836:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  836 |         if (! file_type)[0m
      | [0;1;32m        ^
[0m[1mpch.c:864:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  864 |     if (!inname)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:864:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  864 |     if (!inname)[0m
      | [0;1;32m    ^
[0m[1mpch.c:868:6: [0m[0;1;36mnote: [0mAssuming 'posixly_correct' is true[0m
  868 |         if (! posixly_correct && (p_name[OLD] || p_name[NEW]) && p_name[INDEX])[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mpch.c:868:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  868 |         if (! posixly_correct && (p_name[OLD] || p_name[NEW]) && p_name[INDEX])[0m
      | [0;1;32m                              ^
[0m[1mpch.c:874:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  874 |         for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m        ^
[0m[1mpch.c:875:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  875 |           if (p_name[i])[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1mpch.c:875:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  875 |           if (p_name[i])[0m
      | [0;1;32m          ^
[0m[1mpch.c:874:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  874 |         for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m        ^
[0m[1mpch.c:875:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  875 |           if (p_name[i])[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1mpch.c:875:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  875 |           if (p_name[i])[0m
      | [0;1;32m          ^
[0m[1mpch.c:877:12: [0m[0;1;36mnote: [0m'i0' is equal to NONE[0m
  877 |               if (i0 != NONE && strcmp (p_name[i0], p_name[i]) == 0)[0m
      | [0;1;32m                  ^~
[0m[1mpch.c:877:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  877 |               if (i0 != NONE && strcmp (p_name[i0], p_name[i]) == 0)[0m
      | [0;1;32m                             ^
[0m[1mpch.c:887:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  887 |                   if (! stat_errno[i])[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1mpch.c:887:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  887 |                   if (! stat_errno[i])[0m
      | [0;1;32m                  ^
[0m[1mpch.c:889:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  889 |                       if (lookup_file_id (&st[i]) == DELETE_LATER)[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:889:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  889 |                       if (lookup_file_id (&st[i]) == DELETE_LATER)[0m
      | [0;1;32m                      ^
[0m[1mpch.c:891:18: [0m[0;1;36mnote: [0mAssuming 'posixly_correct' is true[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~
[0m[1mpch.c:891:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:891:37: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:891:14: [0m[0;1;36mnote: [0mTaking true branch[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                           ^
[0m[1mpch.c:892:4: [0m[0;1;36mnote: [0m Execution continues on line 898[0m
  892 |                         break;[0m
      | [0;1;32m                        ^
[0m[1mpch.c:898:6: [0m[0;1;36mnote: [0mAssuming 'posixly_correct' is false[0m
  898 |         if (! posixly_correct)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mpch.c:898:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  898 |         if (! posixly_correct)[0m
      | [0;1;32m        ^
[0m[1mpch.c:901:10: [0m[0;1;36mnote: [0mCalling 'best_name'[0m
  901 |             i = best_name (p_name, stat_errno);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:1049:8: [0m[0;1;36mnote: [0mThe value 0 is assigned to 'i'[0m
 1049 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m       ^~~~~~~
[0m[1mpch.c:1049:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1049 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m  ^
[0m[1mpch.c:1050:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1050 |     if (name[i] && !ignore[i])[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1050:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:1050:20: [0m[0;1;36mnote: [0mBranch condition evaluates to a garbage value[0m
 1050 |     if (name[i] && !ignore[i])[0m
      | [0;1;32m                   ^~~~~~~~~~
[0m[1mpch.c:1054:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1054 |         if (components_min < components[i])[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1055 |           continue;[0m
      | [0;1;32m                   
[0m[1mpch.c:1060:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1060 |         if (basename_len_min < basename_len[i])[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1061 |           continue;[0m
      | [0;1;32m                   
[0m[1mpch.c:1066:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1066 |         if (len_min < len[i])[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1067 |           continue;[0m
      | [0;1;32m                   
[0m[1mpch.c:1072:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1072 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1073 |     if (name[i] && !ignore[i][0m
 1074 |         && name_is_valid (name[i])[0m
 1075 |         && components[i] == components_min[0m
 1076 |         && basename_len[i] == basename_len_min[0m
 1077 |         && len[i] == len_min)[0m
 1078 |       break;[0m
      | [0;1;32m            
[0m[1mpch.c:1073:20: [0m[0;1;35mwarning: [0m[1mBranch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch][0m
 1073 |     if (name[i] && !ignore[i][0m
      | [0;1;32m                   ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:443:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:443:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m      ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:443:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:443:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m      ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:443:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:443:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  443 |       if (p_name[i]) {[0m
      | [0;1;32m      ^
[0m[1mpch.c:442:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 447[0m
  442 |     for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:447:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  447 |     for (i = 0; i < ARRAY_SIZE (invalid_names); i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:447:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mpch.c:447:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 449[0m
[1mpch.c:449:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:450:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mpch.c:450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:449:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:450:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1mpch.c:450:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  450 |       if (p_timestr[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:449:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 455[0m
  449 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:455:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:456:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:456:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:455:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:456:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:456:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  456 |       if (p_sha1[i])[0m
      | [0;1;32m      ^
[0m[1mpch.c:455:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 461[0m
  455 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:462:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  462 |     for (i = OLD; i <= NEW; i++)[0m
      | [0;1;32m    ^
[0m[1mpch.c:462:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
[1mpch.c:462:5: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 470[0m
[1mpch.c:470:9: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to ED_DIFF[0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:470:9: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpch.c:470:33: [0m[0;1;36mnote: [0mAssuming 'diff_type' is not equal to NORMAL_DIFF[0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:470:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  470 |     if (diff_type == ED_DIFF || diff_type == NORMAL_DIFF)[0m
      | [0;1;32m    ^
[0m[1mpch.c:481:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  481 |     for (;;) {[0m
      | [0;1;32m    ^
[0m[1mpch.c:495:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  495 |         if (chars_read == (size_t) -1)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:495:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  495 |         if (chars_read == (size_t) -1)[0m
      | [0;1;32m        ^
[0m[1mpch.c:497:6: [0m[0;1;36mnote: [0mAssuming 'chars_read' is not equal to 0[0m
  497 |         if (! chars_read) {[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mpch.c:497:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  497 |         if (! chars_read) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:517:22: [0m[0;1;36mnote: [0mAssuming 'chars_read' is < 2[0m
  517 |         strip_trailing_cr = 2 <= chars_read && buf[chars_read - 2] == '\r';[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~
[0m[1mpch.c:517:38: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  517 |         strip_trailing_cr = 2 <= chars_read && buf[chars_read - 2] == '\r';[0m
      | [0;1;32m                                            ^
[0m[1mpch.c:518:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                      ^~~~~~~~~
[0m[1mpch.c:518:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mpch.c:518:29: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                                   ^~~~~~~~~~
[0m[1mpch.c:518:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                      ^
[0m[1mpch.c:518:43: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m                                                 ^~~~~~~~~
[0m[1mpch.c:518:2: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 524[0m
  518 |         for (s = buf; *s == ' ' || *s == '\t' || *s == 'X'; s++) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:524:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  524 |         if (ISDIGIT (*s))[0m
      | [0;1;32m            ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:524:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  524 |         if (ISDIGIT (*s))[0m
      | [0;1;32m        ^
[0m[1mpch.c:539:6: [0m[0;1;36mnote: [0mAssuming 'need_header' is true[0m
  539 |         if (! need_header[0m
      | [0;1;32m            ^~~~~~~~~~~~~
[0m[1mpch.c:540:6: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  540 |             && first_command_line < 0[0m
      | [0;1;32m            ^
[0m[1mpch.c:549:7: [0m[0;1;36mnote: [0m'stars_last_line' is false[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~
[0m[1mpch.c:549:6: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m            ^
[0m[1mpch.c:549:26: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m                                ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:549:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  549 |         if (!stars_last_line && strnEQ(s, "*** ", 4))[0m
      | [0;1;32m        ^
[0m[1mpch.c:555:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  555 |         else if (strnEQ(s, "+++ ", 4))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:555:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  555 |         else if (strnEQ(s, "+++ ", 4))[0m
      | [0;1;32m             ^
[0m[1mpch.c:563:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  563 |         else if (strnEQ(s, "Index:", 6))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:563:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  563 |         else if (strnEQ(s, "Index:", 6))[0m
      | [0;1;32m             ^
[0m[1mpch.c:569:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  569 |         else if (strnEQ(s, "Prereq:", 7))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:569:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  569 |         else if (strnEQ(s, "Prereq:", 7))[0m
      | [0;1;32m             ^
[0m[1mpch.c:597:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  597 |         else if (strnEQ (s, "diff --git ", 11))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:597:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  597 |         else if (strnEQ (s, "diff --git ", 11))[0m
      | [0;1;32m             ^
[0m[1mpch.c:627:11: [0m[0;1;36mnote: [0mAssuming 'p_git_diff' is true[0m
  627 |         else if (p_git_diff && strnEQ (s, "index ", 6))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:627:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:627:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  627 |         else if (p_git_diff && strnEQ (s, "index ", 6))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:627:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  627 |         else if (p_git_diff && strnEQ (s, "index ", 6))[0m
      | [0;1;32m             ^
[0m[1mpch.c:644:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  644 |         else if (p_git_diff && strnEQ (s, "old mode ", 9))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:644:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:644:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  644 |         else if (p_git_diff && strnEQ (s, "old mode ", 9))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:644:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  644 |         else if (p_git_diff && strnEQ (s, "old mode ", 9))[0m
      | [0;1;32m             ^
[0m[1mpch.c:649:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  649 |         else if (p_git_diff && strnEQ (s, "new mode ", 9))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:649:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:649:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  649 |         else if (p_git_diff && strnEQ (s, "new mode ", 9))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:649:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  649 |         else if (p_git_diff && strnEQ (s, "new mode ", 9))[0m
      | [0;1;32m             ^
[0m[1mpch.c:654:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  654 |         else if (p_git_diff && strnEQ (s, "deleted file mode ", 18))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:654:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:654:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  654 |         else if (p_git_diff && strnEQ (s, "deleted file mode ", 18))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:654:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  654 |         else if (p_git_diff && strnEQ (s, "deleted file mode ", 18))[0m
      | [0;1;32m             ^
[0m[1mpch.c:660:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  660 |         else if (p_git_diff && strnEQ (s, "new file mode ", 14))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:660:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:660:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  660 |         else if (p_git_diff && strnEQ (s, "new file mode ", 14))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:660:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  660 |         else if (p_git_diff && strnEQ (s, "new file mode ", 14))[0m
      | [0;1;32m             ^
[0m[1mpch.c:666:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  666 |         else if (p_git_diff && strnEQ (s, "rename from ", 12))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:666:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:666:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  666 |         else if (p_git_diff && strnEQ (s, "rename from ", 12))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:666:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  666 |         else if (p_git_diff && strnEQ (s, "rename from ", 12))[0m
      | [0;1;32m             ^
[0m[1mpch.c:673:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  673 |         else if (p_git_diff && strnEQ (s, "rename to ", 10))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:673:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:673:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  673 |         else if (p_git_diff && strnEQ (s, "rename to ", 10))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:673:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  673 |         else if (p_git_diff && strnEQ (s, "rename to ", 10))[0m
      | [0;1;32m             ^
[0m[1mpch.c:680:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  680 |         else if (p_git_diff && strnEQ (s, "copy from ", 10))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:680:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:680:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  680 |         else if (p_git_diff && strnEQ (s, "copy from ", 10))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:680:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  680 |         else if (p_git_diff && strnEQ (s, "copy from ", 10))[0m
      | [0;1;32m             ^
[0m[1mpch.c:687:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  687 |         else if (p_git_diff && strnEQ (s, "copy to ", 8))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:687:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:687:25: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  687 |         else if (p_git_diff && strnEQ (s, "copy to ", 8))[0m
      | [0;1;32m                               ^
[0m[1m./common.h:65:26: [0m[0;1;36mnote: [0mexpanded from macro 'strnEQ'[0m
   65 | #define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:687:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  687 |         else if (p_git_diff && strnEQ (s, "copy to ", 8))[0m
      | [0;1;32m             ^
[0m[1mpch.c:694:11: [0m[0;1;36mnote: [0m'p_git_diff' is true[0m
  694 |         else if (p_git_diff && strnEQ (s, "GIT binary patch", 16))[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1mpch.c:694:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:694:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  694 |         else if (p_git_diff && strnEQ (s, "GIT binary patch", 16))[0m
      | [0;1;32m             ^
[0m[1mpch.c:699:6: [0m[0;1;36mnote: [0mControl jumps to line 826[0m
  699 |             goto scan_exit;[0m
      | [0;1;32m            ^
[0m[1mpch.c:827:9: [0m[0;1;36mnote: [0mAssuming 'file_type' is 0[0m
  827 |     if (file_type)[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mpch.c:827:5: [0m[0;1;36mnote: [0mTaking false branch[0m
  827 |     if (file_type)[0m
      | [0;1;32m    ^
[0m[1mpch.c:836:6: [0m[0;1;36mnote: [0mAssuming 'file_type' is not equal to 0[0m
  836 |         if (! file_type)[0m
      | [0;1;32m            ^~~~~~~~~~~
[0m[1mpch.c:836:2: [0m[0;1;36mnote: [0mTaking false branch[0m
  836 |         if (! file_type)[0m
      | [0;1;32m        ^
[0m[1mpch.c:864:9: [0m[0;1;36mnote: [0mAssuming 'inname' is null[0m
  864 |     if (!inname)[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:864:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  864 |     if (!inname)[0m
      | [0;1;32m    ^
[0m[1mpch.c:868:6: [0m[0;1;36mnote: [0mAssuming 'posixly_correct' is true[0m
  868 |         if (! posixly_correct && (p_name[OLD] || p_name[NEW]) && p_name[INDEX])[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mpch.c:868:24: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  868 |         if (! posixly_correct && (p_name[OLD] || p_name[NEW]) && p_name[INDEX])[0m
      | [0;1;32m                              ^
[0m[1mpch.c:874:2: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  874 |         for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m        ^
[0m[1mpch.c:875:8: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  875 |           if (p_name[i])[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1mpch.c:875:4: [0m[0;1;36mnote: [0mTaking true branch[0m
  875 |           if (p_name[i])[0m
      | [0;1;32m          ^
[0m[1mpch.c:877:12: [0m[0;1;36mnote: [0m'i0' is equal to NONE[0m
  877 |               if (i0 != NONE && strcmp (p_name[i0], p_name[i]) == 0)[0m
      | [0;1;32m                  ^~
[0m[1mpch.c:877:23: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  877 |               if (i0 != NONE && strcmp (p_name[i0], p_name[i]) == 0)[0m
      | [0;1;32m                             ^
[0m[1mpch.c:887:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  887 |                   if (! stat_errno[i])[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~
[0m[1mpch.c:887:5: [0m[0;1;36mnote: [0mTaking true branch[0m
  887 |                   if (! stat_errno[i])[0m
      | [0;1;32m                  ^
[0m[1mpch.c:889:13: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  889 |                       if (lookup_file_id (&st[i]) == DELETE_LATER)[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:889:9: [0m[0;1;36mnote: [0mTaking false branch[0m
  889 |                       if (lookup_file_id (&st[i]) == DELETE_LATER)[0m
      | [0;1;32m                      ^
[0m[1mpch.c:891:18: [0m[0;1;36mnote: [0mAssuming 'posixly_correct' is true[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~
[0m[1mpch.c:891:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:891:14: [0m[0;1;36mnote: [0mTaking true branch[0m
  891 |                       else if (posixly_correct && name_is_valid (p_name[i]))[0m
      | [0;1;32m                           ^
[0m[1mpch.c:892:4: [0m[0;1;36mnote: [0m Execution continues on line 898[0m
  892 |                         break;[0m
      | [0;1;32m                        ^
[0m[1mpch.c:898:6: [0m[0;1;36mnote: [0mAssuming 'posixly_correct' is false[0m
  898 |         if (! posixly_correct)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mpch.c:898:2: [0m[0;1;36mnote: [0mTaking true branch[0m
  898 |         if (! posixly_correct)[0m
      | [0;1;32m        ^
[0m[1mpch.c:901:10: [0m[0;1;36mnote: [0mCalling 'best_name'[0m
  901 |             i = best_name (p_name, stat_errno);[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:1049:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1049 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m  ^
[0m[1mpch.c:1050:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1050 |     if (name[i] && !ignore[i])[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1050:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:1050:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 1050 |     if (name[i] && !ignore[i])[0m
      | [0;1;32m    ^
[0m[1mpch.c:1054:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1054 |         if (components_min < components[i])[0m
      | [0;1;32m        ^
[0m[1mpch.c:1060:6: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1060 |         if (basename_len_min < basename_len[i])[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:1060:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1060 |         if (basename_len_min < basename_len[i])[0m
      | [0;1;32m        ^
[0m[1mpch.c:1066:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 1066 |         if (len_min < len[i])[0m
      | [0;1;32m        ^
[0m[1mpch.c:1049:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1049 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m  ^
[0m[1mpch.c:1050:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1050 |     if (name[i] && !ignore[i])[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1050:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1050 |     if (name[i] && !ignore[i])[0m
      | [0;1;32m                ^
[0m[1mpch.c:1049:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1049 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m  ^
[0m[1mpch.c:1050:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1050 |     if (name[i] && !ignore[i])[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1050:17: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1050 |     if (name[i] && !ignore[i])[0m
      | [0;1;32m                ^
[0m[1mpch.c:1049:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 1072[0m
 1049 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m  ^
[0m[1mpch.c:1072:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1072 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m  ^
[0m[1mpch.c:1073:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 1073 |     if (name[i] && !ignore[i][0m
      | [0;1;32m        ^
[0m[1mpch.c:1073:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:1074:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1074 |         && name_is_valid (name[i])[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:1075:2: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1075 |         && components[i] == components_min[0m
      | [0;1;32m        ^
[0m[1mpch.c:1072:31: [0m[0;1;36mnote: [0mThe value 1 is assigned to 'i'[0m
 1072 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m                              ^~~
[0m[1mpch.c:1072:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1072 |   for (i = OLD;  i <= INDEX;  i++)[0m
      | [0;1;32m  ^
[0m[1mpch.c:1073:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1073 |     if (name[i] && !ignore[i][0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1073:9: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mpch.c:1073:20: [0m[0;1;36mnote: [0mBranch condition evaluates to a garbage value[0m
 1073 |     if (name[i] && !ignore[i][0m
      | [0;1;32m                   ^~~~~~~~~~
[0m[1mpch.c:1077:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1077 |         && len[i] == len_min)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1078 |       break;[0m
      | [0;1;32m            
[0m[1mpch.c:1111:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1111 |                 if ((c = getc (i)) == EOF)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1112 |                   read_fatal ();[0m
      | [0;1;32m                                
[0m[1mpch.c:1120:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1120 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 1121 |         Fseek (i, file_pos, SEEK_SET);[0m
      | [0;1;32m                                      
[0m[1mpch.c:1152:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1152 |   if (s == s0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1153 |     fatal ("missing line number at line %s: %s",[0m
 1154 |            format_linenum (numbuf, p_input_line), buf);[0m
      | [0;1;32m                                                       
[0m[1mpch.c:1156:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1156 |   if (overflow)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1157 |     fatal ("line number %.*s is too large at line %s: %s",[0m
 1158 |            (int) (s - s0), s0, format_linenum (numbuf, p_input_line), buf);[0m
      | [0;1;32m                                                                           
[0m[1mpch.c:1181:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1181 |         if (p_end == p_efake)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1182 |             p_end = p_bfake;            /* don't free twice */[0m
 1183 |         else[0m
      | [0;32m        } 
[0m[1mpch.c:1183:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1183 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1184 |             free(p_line[p_end]);[0m
      | [0;1;32m                                
[0m[1mpch.c:1230:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1230 |         while (*s == '*')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1231 |             s++;[0m
      | [0;1;32m                
[0m[1mpch.c:1235:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1235 |             while (*s != '\n')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1236 |                 s++;[0m
      | [0;1;32m                    
[0m[1mpch.c:1239:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1239 |             if (! p_c_function)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1240 |               return -1;[0m
      | [0;1;32m                        
[0m[1mpch.c:1245:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1245 |             if (chars_read == (size_t) -1)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1246 |               return -1;[0m
      | [0;1;32m                        
[0m[1mpch.c:1253:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1253 |                     strcpy (buf, "  \n");  /* assume blank lines got chopped */[0m
      | [0;1;32m                    ^~~~~~
[0m[1mpch.c:1253:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1253 |                     strcpy (buf, "  \n");  /* assume blank lines got chopped */[0m
      | [0;1;32m                    ^~~~~~
[0m[1mpch.c:1260:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1260 |             if (p_end == hunkmax)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1261 |               fatal ("unterminated hunk starting at line %s; giving up at line %s: %s",[0m
 1262 |                      format_linenum (numbuf0, pch_hunk_beg ()),[0m
 1263 |                      format_linenum (numbuf1, p_input_line), buf);[0m
      | [0;1;32m                                                                  
[0m[1mpch.c:1270:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1270 |                 if (strnEQ(buf, "********", 8)) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mpch.c:1275:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1275 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1276 |                       fatal ("unexpected end of hunk at line %s",[0m
 1277 |                              format_linenum (numbuf0, p_input_line));[0m
      | [0;1;32m                                                                     
[0m[1mpch.c:1293:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1293 |                 for (s = buf;  *s && !ISDIGIT (*s);  s++)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1294 |                   /* do nothing */ ;[0m
      | [0;1;32m                                    
[0m[1mpch.c:1295:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1295 |                 if (strnEQ(s,"0,0",3))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1296 |                     remove_prefix (s, 2);[0m
      | [0;1;32m                                         
[0m[1mpch.c:1299:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1299 |                     while (*s && !ISDIGIT (*s))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1300 |                       s++;[0m
      | [0;1;32m                          
[0m[1mpch.c:1303:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1303 |                     if (p_ptrn_lines < 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1304 |                       malformed ();[0m
      | [0;1;32m                                   
[0m[1mpch.c:1306:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1306 |                 else if (p_first)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1307 |                     p_ptrn_lines = 1;[0m
 1308 |                 else {[0m
      | [0;32m                } 
[0m[1mpch.c:1313:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1313 |                     p_ptrn_lines >= LINENUM_MAX - 6)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1314 |                   malformed ();[0m
      | [0;1;32m                               
[0m[1mpch.c:1316:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1316 |                 while (p_max + 1 >= hunkmax)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1317 |                     if (! grow_hunkmax ())[0m
 1318 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mpch.c:1317:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1317 |                     if (! grow_hunkmax ())[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1318 |                         return -1;[0m
      | [0;1;32m                                  
[0m[1mpch.c:1322:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1322 |                 if (buf[1] != '-')[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mpch.c:1322:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1322 |                 if (buf[1] != '-')[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1323 |                   goto change_line;[0m
      | [0;1;32m                                   
[0m[1mpch.c:1324:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1324 |                 if (ptrn_prefix_context == -1)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1325 |                   ptrn_prefix_context = context;[0m
      | [0;1;32m                                                
[0m[1mpch.c:1342:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1342 |                     else if (! repl_beginning)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1343 |                       fatal ("%s '---' at line %s; check line numbers at line %s",[0m
 1344 |                              (p_end <= p_ptrn_lines[0m
 1345 |                               ? "Premature"[0m
 1346 |                               : "Overdue"),[0m
 1347 |                              format_linenum (numbuf0, p_input_line),[0m
 1348 |                              format_linenum (numbuf1, p_hunk_beg));[0m
 1349 |                     else if (! repl_could_be_missing)[0m
      | [0;32m                    } 
[0m[1mpch.c:1349:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1349 |                     else if (! repl_could_be_missing)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1350 |                       fatal ("duplicate '---' at line %s; check line numbers at line %s",[0m
 1351 |                              format_linenum (numbuf0, p_input_line),[0m
 1352 |                              format_linenum (numbuf1,[0m
 1353 |                                              p_hunk_beg + repl_beginning));[0m
 1354 |                     else[0m
      | [0;32m                    } 
[0m[1mpch.c:1371:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1371 |                 for (s = buf;  *s && ! ISDIGIT (*s);  s++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1372 |                   /* do nothing */ ;[0m
      | [0;1;32m                                    
[0m[1mpch.c:1378:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1378 |                         if (!*++s)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1379 |                           malformed ();[0m
      | [0;1;32m                                       
[0m[1mpch.c:1384:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1384 |                     if (p_repl_lines < 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1385 |                       malformed ();[0m
      | [0;1;32m                                   
[0m[1mpch.c:1387:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1387 |                 else if (p_newfirst)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1388 |                   p_repl_lines = 1;[0m
 1389 |                 else[0m
      | [0;32m                } 
[0m[1mpch.c:1395:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1395 |                     p_repl_lines >= LINENUM_MAX - p_end)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m 1396 |                   malformed ();[0m
      | [0;1;32m                               
[0m[1mpch.c:1398:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1398 |                 while (p_max + 1 >= hunkmax)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1399 |                   if (! grow_hunkmax ())[0m
 1400 |                     return -1;[0m
      | [0;1;32m                              
[0m[1mpch.c:1399:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1399 |                   if (! grow_hunkmax ())[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1400 |                     return -1;[0m
      | [0;1;32m                              
[0m[1mpch.c:1404:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1404 |                         || p_repl_lines != 1))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 1405 |                   repl_could_be_missing = false;[0m
      | [0;1;32m                                                
[0m[1mpch.c:1410:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1410 |               change_line:[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mpch.c:1414:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1414 |                     strcpy (s, " \n");[0m
      | [0;1;32m                    ^~~~~~
[0m[1mpch.c:1414:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1414 |                     strcpy (s, " \n");[0m
      | [0;1;32m                    ^~~~~~
[0m[1mpch.c:1426:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1426 |                     if (ptrn_prefix_context == -1)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1427 |                       ptrn_prefix_context = context;[0m
      | [0;1;32m                                                    
[0m[1mpch.c:1431:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1431 |                     if (repl_prefix_context == -1)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1432 |                       repl_prefix_context = context;[0m
      | [0;1;32m                                                    
[0m[1mpch.c:1448:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1448 |                 if (*buf == '\t') {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mpch.c:1471:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1471 |                     if (repl_beginning)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1472 |                         repl_copiable++;[0m
 1473 |                     else[0m
      | [0;32m                    } 
[0m[1mpch.c:1473:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1473 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1474 |                         ptrn_copiable++;[0m
      | [0;1;32m                                        
[0m[1mpch.c:1479:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1479 |                 s = buf + 1;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mpch.c:1482:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1482 |                     strcpy (s, "\n");[0m
      | [0;1;32m                    ^~~~~~
[0m[1mpch.c:1482:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1482 |                     strcpy (s, "\n");[0m
      | [0;1;32m                    ^~~~~~
[0m[1mpch.c:1494:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1494 |                 if (repl_beginning)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1495 |                     repl_copiable++;[0m
 1496 |                 else[0m
      | [0;32m                } 
[0m[1mpch.c:1496:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1496 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1497 |                     ptrn_copiable++;[0m
      | [0;1;32m                                    
[0m[1mpch.c:1510:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1510 |                 if (repl_beginning && repl_could_be_missing) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1511 |                     repl_missing = true;[0m
 1512 |                     goto hunk_done;[0m
 1513 |                 }[0m
 1514 |                 malformed ();[0m
      | [0;1;32m                            
[0m      | [0;32m                            ;} 
[0m[1mpch.c:1519:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1519 |         if (p_end >=0 && !repl_beginning)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1520 |           fatal ("no '---' found in patch at line %s",[0m
 1521 |                  format_linenum (numbuf0, pch_hunk_beg ()));[0m
      | [0;1;32m                                                            
[0m[1mpch.c:1528:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1528 |             for (p_end--; p_end > repl_beginning; p_end--)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1529 |                 free(p_line[p_end]);[0m
      | [0;1;32m                                    
[0m[1mpch.c:1539:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1539 |         else if (! ptrn_missing && ptrn_copiable != repl_copiable)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m 1540 |           fatal ("context mangled in hunk at line %s",[0m
 1541 |                  format_linenum (numbuf0, p_hunk_beg));[0m
 1542 |         else if (!some_context && fillcnt == 1) {[0m
      | [0;32m        } 
[0m[1mpch.c:1567:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1567 |         if (p_prefix_context == -1 || p_suffix_context == -1)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1568 |             fatal ("replacement text or line numbers mangled in hunk at line %s",[0m
 1569 |                    format_linenum (numbuf0, p_hunk_beg));[0m
      | [0;1;32m                                                         
[0m[1mpch.c:1575:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1575 |             if (verbosity == VERBOSE)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 1576 |                 say ("%s\n%s\n%s\n",[0m
 1577 | "(Fascinating -- this is really a new-style context diff but without",[0m
 1578 | "the telltale extra asterisks on the *** line that usually indicate",[0m
 1579 | "the new style...)");[0m
      | [0;1;32m                     
[0m[1mpch.c:1580:18: [0m[0;1;35mwarning: [0m[1mAlthough the value stored to 'difftype' is used in the enclosing expression, the value is never actually read from 'difftype' [clang-analyzer-deadcode.DeadStores][0m
 1580 |             diff_type = difftype = NEW_CONTEXT_DIFF;[0m
      | [0;1;32m                        ^          ~~~~~~~~~~~~~~~~
[0m[1mpch.c:1580:18: [0m[0;1;36mnote: [0mAlthough the value stored to 'difftype' is used in the enclosing expression, the value is never actually read from 'difftype'[0m
 1580 |             diff_type = difftype = NEW_CONTEXT_DIFF;[0m
      | [0;1;32m                        ^          ~~~~~~~~~~~~~~~~
[0m[1mpch.c:1589:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1589 |                        && p_Char[fillsrc] != ' ')[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 1590 |                     fillsrc++;[0m
      | [0;1;32m                              
[0m[1mpch.c:1603:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1603 |                 if (p_Char[fillsrc] == ' ')[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1604 |                   fatal ("replacement text or line numbers mangled in hunk at line %s",[0m
 1605 |                          format_linenum (numbuf0, p_hunk_beg));[0m
      | [0;1;32m                                                               
[0m[1mpch.c:1608:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1608 |             if (debug & 64)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1609 |               printf ("fillsrc %s, filldst %s, rb %s, e+1 %s\n",[0m
 1610 |                       format_linenum (numbuf0, fillsrc),[0m
 1611 |                       format_linenum (numbuf1, filldst),[0m
 1612 |                       format_linenum (numbuf2, repl_beginning),[0m
 1613 |                       format_linenum (numbuf3, p_end + 1));[0m
      | [0;1;32m                                                           
[0m[1mpch.c:1632:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1632 |         if (*s == ',')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1633 |             s = scan_linenum (s + 1, &p_ptrn_lines);[0m
 1634 |         else[0m
      | [0;32m        } 
[0m[1mpch.c:1634:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1634 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1635 |             p_ptrn_lines = 1;[0m
      | [0;1;32m                             
[0m[1mpch.c:1636:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1636 |         if (p_first >= LINENUM_MAX - p_ptrn_lines)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1637 |           malformed ();[0m
      | [0;1;32m                       
[0m[1mpch.c:1638:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1638 |         if (*s == ' ') s++;[0m
      | [0;1;32m                      ^    
[0m      | [0;32m                       {
[0m[1mpch.c:1639:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1639 |         if (*s != '+')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1640 |             malformed ();[0m
      | [0;1;32m                         
[0m[1mpch.c:1642:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1642 |         if (*s == ',')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1643 |             s = scan_linenum (s + 1, &p_repl_lines);[0m
 1644 |         else[0m
      | [0;32m        } 
[0m[1mpch.c:1644:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1644 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1645 |             p_repl_lines = 1;[0m
      | [0;1;32m                             
[0m[1mpch.c:1646:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1646 |         if (p_newfirst >= LINENUM_MAX - p_repl_lines)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1647 |           malformed ();[0m
      | [0;1;32m                       
[0m[1mpch.c:1648:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1648 |         if (*s == ' ') s++;[0m
      | [0;1;32m                      ^    
[0m      | [0;32m                       {
[0m[1mpch.c:1649:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1649 |         if (*s++ != '@')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1650 |             malformed ();[0m
      | [0;1;32m                         
[0m[1mpch.c:1654:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1654 |             while (*s != '\n')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1655 |                 s++;[0m
      | [0;1;32m                    
[0m[1mpch.c:1658:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1658 |             if (! p_c_function)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1659 |               return -1;[0m
      | [0;1;32m                        
[0m[1mpch.c:1661:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1661 |         if (!p_ptrn_lines)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1662 |             p_first++;                  /* do append rather than insert */[0m
      | [0;1;32m                                                                          
[0m[1mpch.c:1663:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1663 |         if (!p_repl_lines)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1664 |             p_newfirst++;[0m
      | [0;1;32m                         
[0m[1mpch.c:1665:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1665 |         if (p_ptrn_lines >= LINENUM_MAX - (p_repl_lines + 1))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1666 |           malformed ();[0m
      | [0;1;32m                       
[0m[1mpch.c:1668:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1668 |         while (p_max + 1 >= hunkmax)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1669 |             if (! grow_hunkmax ())[0m
 1670 |                 return -1;[0m
      | [0;1;32m                          
[0m[1mpch.c:1669:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1669 |             if (! grow_hunkmax ())[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1670 |                 return -1;[0m
      | [0;1;32m                          
[0m[1mpch.c:1674:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1674 |         sprintf (buf, "*** %s,%s ****\n",[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1674:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1674 |         sprintf (buf, "*** %s,%s ****\n",[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1683:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1683 |         sprintf (buf, "--- %s,%s ----\n",[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1683:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1683 |         sprintf (buf, "--- %s,%s ----\n",[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1698:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1698 |                     strcpy (buf, " \n");  /* assume blank lines got chopped */[0m
      | [0;1;32m                    ^~~~~~
[0m[1mpch.c:1698:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1698 |                     strcpy (buf, " \n");  /* assume blank lines got chopped */[0m
      | [0;1;32m                    ^~~~~~
[0m[1mpch.c:1704:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1704 |             if (chars_read == (size_t) -1)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1705 |                 s = 0;[0m
 1706 |             else if (*buf == '\t' || *buf == '\n') {[0m
      | [0;32m            } 
[0m[1mpch.c:1716:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1716 |                 while (--filldst > p_ptrn_lines)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 1717 |                     free(p_line[filldst]);[0m
      | [0;1;32m                                          
[0m[1mpch.c:1723:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1723 |                 if (fillsrc > p_ptrn_lines) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1724 |                     free(s);[0m
 1725 |                     p_end = filldst-1;[0m
 1726 |                     malformed ();[0m
 1727 |                 }[0m
 1728 |                 chars_read -= fillsrc == p_ptrn_lines && incomplete_line ();[0m
 1729 |                 p_Char[fillsrc] = ch;[0m
 1730 |                 p_line[fillsrc] = s;[0m
 1731 |                 p_len[fillsrc++] = chars_read;[0m
 1732 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpch.c:1734:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1734 |                 ch = ' ';[0m
      | [0;1;32m                ^       
[0m      | [0;32m                {       ;} 
[0m[1mpch.c:1737:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1737 |                 if (fillsrc > p_ptrn_lines) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m[1mpch.c:1739:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1739 |                     while (--filldst > p_ptrn_lines)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1740 |                         free(p_line[filldst]);[0m
      | [0;1;32m                                              
[0m[1mpch.c:1751:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1751 |                     while (--filldst > p_ptrn_lines)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1752 |                         free(p_line[filldst]);[0m
      | [0;1;32m                                              
[0m[1mpch.c:1758:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1758 |                 if (filldst > p_end) {[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1759 |                     free(s);[0m
 1760 |                     while (--filldst > p_ptrn_lines)[0m
 1761 |                         free(p_line[filldst]);[0m
 1762 |                     p_end = fillsrc-1;[0m
 1763 |                     malformed ();[0m
 1764 |                 }[0m
 1765 |                 chars_read -= filldst == p_end && incomplete_line ();[0m
 1766 |                 p_Char[filldst] = ch;[0m
 1767 |                 p_line[filldst] = s;[0m
 1768 |                 p_len[filldst++] = chars_read;[0m
 1769 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mpch.c:1760:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1760 |                     while (--filldst > p_ptrn_lines)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1761 |                         free(p_line[filldst]);[0m
      | [0;1;32m                                              
[0m[1mpch.c:1771:3: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1771 |                 p_end = filldst;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1772 |                 malformed ();[0m
      | [0;1;32m                            
[0m      | [0;32m                            ;} 
[0m[1mpch.c:1775:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1775 |                 if (p_prefix_context == -1)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1776 |                     p_prefix_context = context;[0m
      | [0;1;32m                                               
[0m[1mpch.c:1780:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1780 |         if (p_prefix_context == -1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1781 |           malformed ();[0m
      | [0;1;32m                       
[0m[1mpch.c:1801:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1801 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1802 |             p_ptrn_lines = (*s != 'a');[0m
      | [0;1;32m                                       
[0m[1mpch.c:1803:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1803 |         if (p_first >= LINENUM_MAX - p_ptrn_lines)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1804 |           malformed ();[0m
      | [0;1;32m                       
[0m[1mpch.c:1806:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1806 |         if (hunk_type == 'a')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1807 |             p_first++;                  /* do append rather than insert */[0m
      | [0;1;32m                                                                          
[0m[1mpch.c:1809:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1809 |         if (*s == ',')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1810 |             scan_linenum (s + 1, &max);[0m
 1811 |         else[0m
      | [0;32m        } 
[0m[1mpch.c:1811:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1811 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1812 |             max = min;[0m
      | [0;1;32m                      
[0m[1mpch.c:1813:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1813 |         if (min > max || max - min == LINENUM_MAX)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1814 |           malformed ();[0m
      | [0;1;32m                       
[0m[1mpch.c:1815:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1815 |         if (hunk_type == 'd')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1816 |             min++;[0m
      | [0;1;32m                  
[0m[1mpch.c:1819:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1819 |         if (p_newfirst >= LINENUM_MAX - p_repl_lines)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1820 |           malformed ();[0m
      | [0;1;32m                       
[0m[1mpch.c:1821:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1821 |         if (p_ptrn_lines >= LINENUM_MAX - (p_repl_lines + 1))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1822 |           malformed ();[0m
      | [0;1;32m                       
[0m[1mpch.c:1824:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1824 |         while (p_end + 1 >= hunkmax)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1825 |           if (! grow_hunkmax ())[0m
 1826 |             {[0m
 1827 |               p_end = -1;[0m
 1828 |               return -1;[0m
 1829 |             }[0m
      | [0;1;32m             
[0m[1mpch.c:1830:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1830 |         sprintf (buf, "*** %s,%s\n",[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1830:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1830 |         sprintf (buf, "*** %s,%s\n",[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1846:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1846 |             if (!chars_read)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1847 |               fatal ("unexpected end of file in patch at line %s",[0m
 1848 |                      format_linenum (numbuf0, p_input_line));[0m
      | [0;1;32m                                                             
[0m[1mpch.c:1849:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1849 |             if (buf[0] != '<' || (buf[1] != ' ' && buf[1] != '\t'))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1850 |               fatal ("'<' followed by space or tab expected at line %s of patch",[0m
 1851 |                      format_linenum (numbuf0, p_input_line));[0m
      | [0;1;32m                                                             
[0m[1mpch.c:1868:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1868 |             if (! chars_read)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1869 |               fatal ("unexpected end of file in patch at line %s",[0m
 1870 |                      format_linenum (numbuf0, p_input_line));[0m
      | [0;1;32m                                                             
[0m[1mpch.c:1871:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1871 |             if (*buf != '-')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1872 |               fatal ("'---' expected at line %s of patch",[0m
 1873 |                      format_linenum (numbuf0, p_input_line));[0m
      | [0;1;32m                                                             
[0m[1mpch.c:1875:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1875 |         sprintf (buf, "--- %s,%s\n",[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1875:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 1875 |         sprintf (buf, "--- %s,%s\n",[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:1891:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1891 |             if (!chars_read)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1892 |               fatal ("unexpected end of file in patch at line %s",[0m
 1893 |                      format_linenum (numbuf0, p_input_line));[0m
      | [0;1;32m                                                             
[0m[1mpch.c:1894:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1894 |             if (buf[0] != '>' || (buf[1] != ' ' && buf[1] != '\t'))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1895 |               fatal ("'>' followed by space or tab expected at line %s of patch",[0m
 1896 |                      format_linenum (numbuf0, p_input_line));[0m
      | [0;1;32m                                                             
[0m[1mpch.c:1907:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1907 |     if (rev)                            /* backwards patch? */[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1908 |         if (!pch_swap())[0m
 1909 |             say ("Not enough memory to swap next hunk!\n");[0m
      | [0;1;32m                                                           
[0m[1mpch.c:1908:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1908 |         if (!pch_swap())[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1909 |             say ("Not enough memory to swap next hunk!\n");[0m
      | [0;1;32m                                                           
[0m[1mpch.c:1916:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1916 |             fprintf (stderr, "%s %c",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mpch.c:1916:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1916 |             fprintf (stderr, "%s %c",[0m
      | [0;1;32m            ^~~~~~~
[0m[1mpch.c:1919:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1919 |             if (p_Char[i] == '*')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1920 |               fprintf (stderr, " %s,%s\n",[0m
 1921 |                        format_linenum (numbuf0, p_first),[0m
 1922 |                        format_linenum (numbuf1, p_ptrn_lines));[0m
 1923 |             else if (p_Char[i] == '=')[0m
      | [0;32m            } 
[0m[1mpch.c:1920:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1920 |               fprintf (stderr, " %s,%s\n",[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpch.c:1920:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1920 |               fprintf (stderr, " %s,%s\n",[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpch.c:1923:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1923 |             else if (p_Char[i] == '=')[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1924 |               fprintf (stderr, " %s,%s\n",[0m
 1925 |                        format_linenum (numbuf0, p_newfirst),[0m
 1926 |                        format_linenum (numbuf1, p_repl_lines));[0m
 1927 |             else if (p_Char[i] != '^')[0m
      | [0;32m            } 
[0m[1mpch.c:1924:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1924 |               fprintf (stderr, " %s,%s\n",[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpch.c:1924:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1924 |               fprintf (stderr, " %s,%s\n",[0m
      | [0;1;32m              ^~~~~~~
[0m[1mpch.c:1932:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1932 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1933 |               fputc('\n', stderr);[0m
      | [0;1;32m                                  
[0m[1mpch.c:1976:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1976 |               if (ferror (fp))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1977 |                 read_fatal ();[0m
      | [0;1;32m                              
[0m[1mpch.c:1980:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1980 |           if (indent <= i)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1981 |             break;[0m
      | [0;1;32m                  
[0m[1mpch.c:1982:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1982 |           if (c == ' ' || c == 'X')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1983 |             i++;[0m
 1984 |           else if (c == '\t')[0m
      | [0;32m          } 
[0m[1mpch.c:1984:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1984 |           else if (c == '\t')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1985 |             i = (i + 8) & ~7;[0m
 1986 |           else[0m
      | [0;32m          } 
[0m[1mpch.c:1986:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1986 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1987 |             break;[0m
      | [0;1;32m                  
[0m[1mpch.c:1996:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1996 |           if (c == EOF)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1997 |             goto patch_ends_in_middle_of_line;[0m
      | [0;1;32m                                              
[0m[1mpch.c:2005:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2005 |           if (c == EOF)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2006 |             goto patch_ends_in_middle_of_line;[0m
      | [0;1;32m                                              
[0m[1mpch.c:2019:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2019 |                   if (!using_plan_a)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 2020 |                     xalloc_die ();[0m
      | [0;1;32m                                  
[0m[1mpch.c:2027:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2027 |           if (c == '\n')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2028 |             break;[0m
      | [0;1;32m                  
[0m[1mpch.c:2030:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2030 |           if (c == EOF)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2031 |             goto patch_ends_in_middle_of_line;[0m
      | [0;1;32m                                              
[0m[1mpch.c:2038:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2038 |   if (strip_trailing_cr && 2 <= i && b[i - 2] == '\r')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 2039 |     b[i-- - 2] = '\n';[0m
      | [0;1;32m                      
[0m[1mpch.c:2044:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2044 |   if (ferror (fp))[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2045 |     read_fatal ();[0m
      | [0;1;32m                  
[0m[1mpch.c:2059:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2059 |       while ((c = getc (fp)) != '\n'  &&  c != EOF)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2060 |         /* do nothing */ ;[0m
      | [0;1;32m                          
[0m[1mpch.c:2115:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2115 |         if (p_efake <= i)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2116 |             n = p_end - i + 1;[0m
 2117 |         else[0m
      | [0;32m        } 
[0m[1mpch.c:2117:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2117 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 2118 |             n = -i;[0m
      | [0;1;32m                   
[0m[1mpch.c:2125:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2125 |         if (p_Char[n] == '+')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2126 |             p_Char[n] = '-';[0m
      | [0;1;32m                            
[0m[1mpch.c:2138:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2138 |     for (s=p_line[0]; *s; s++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2139 |         if (*s == '-')[0m
 2140 |             *s = '*';[0m
      | [0;1;32m                     
[0m[1mpch.c:2139:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2139 |         if (*s == '-')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2140 |             *s = '*';[0m
      | [0;1;32m                     
[0m[1mpch.c:2146:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2146 |     for (s=tp_line[0]; *s; s++)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2147 |         if (*s == '*')[0m
 2148 |             *s = '-';[0m
      | [0;1;32m                     
[0m[1mpch.c:2147:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2147 |         if (*s == '*')[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2148 |             *s = '-';[0m
      | [0;1;32m                     
[0m[1mpch.c:2152:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2152 |         if (p_Char[n] == '-')[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2153 |             p_Char[n] = '+';[0m
      | [0;1;32m                            
[0m[1mpch.c:2280:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2280 |   if (! fwrite (p_line[line], sizeof (*p_line[line]), p_len[line], file))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 2281 |     write_fatal ();[0m
      | [0;1;32m                   
[0m[1mpch.c:2339:23: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m                      ^
[0m[1mpch.c:2394:9: [0m[0;1;36mnote: [0mAssuming 'dry_run' is true[0m
 2394 |     if (! dry_run && ! skip_rest_of_patch) {[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mpch.c:2394:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2394 |     if (! dry_run && ! skip_rest_of_patch) {[0m
      | [0;1;32m                  ^
[0m[1mpch.c:2407:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2407 |     for (;;) {[0m
      | [0;1;32m    ^
[0m[1mpch.c:2411:8: [0m[0;1;36mnote: [0m'chars_read' is 18446744073709551615[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mpch.c:2411:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:2415:22: [0m[0;1;36mnote: [0mCalling 'get_ed_command_letter'[0m
 2415 |         ed_command_letter = get_ed_command_letter (buf);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2337:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2337 |   if (ISDIGIT (*p))[0m
      | [0;1;32m      ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2337:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2337 |   if (ISDIGIT (*p))[0m
      | [0;1;32m  ^
[0m[1mpch.c:2339:14: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m             ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2339:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m      ^
[0m[1mpch.c:2339:23: [0m[0;1;36mnote: [0mAccess of the heap area at index 2, while it holds only 2 'char' elements[0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m                      ^
[0m[1m./common.h:57:33: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                                ^
[0m[1mpch.c:2339:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 2340 |         /* do nothing */ ;[0m
      | [0;1;32m                          
[0m[1mpch.c:2343:19: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 2343 |           if (! ISDIGIT (*++p))[0m
      | [0;1;32m                         ^
[0m[1mpch.c:2394:9: [0m[0;1;36mnote: [0mAssuming 'dry_run' is true[0m
 2394 |     if (! dry_run && ! skip_rest_of_patch) {[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mpch.c:2394:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2394 |     if (! dry_run && ! skip_rest_of_patch) {[0m
      | [0;1;32m                  ^
[0m[1mpch.c:2407:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2407 |     for (;;) {[0m
      | [0;1;32m    ^
[0m[1mpch.c:2411:8: [0m[0;1;36mnote: [0m'chars_read' is 18446744073709551615[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mpch.c:2411:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:2415:22: [0m[0;1;36mnote: [0mCalling 'get_ed_command_letter'[0m
 2415 |         ed_command_letter = get_ed_command_letter (buf);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2337:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2337 |   if (ISDIGIT (*p))[0m
      | [0;1;32m      ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2337:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2337 |   if (ISDIGIT (*p))[0m
      | [0;1;32m  ^
[0m[1mpch.c:2339:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m             ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2339:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2341[0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m      ^
[0m[1mpch.c:2341:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2341 |       if (*p == ',')[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:2341:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2341 |       if (*p == ',')[0m
      | [0;1;32m      ^
[0m[1mpch.c:2343:19: [0m[0;1;36mnote: [0mAccess of the heap area at index 2, while it holds only 2 'char' elements[0m
 2343 |           if (! ISDIGIT (*++p))[0m
      | [0;1;32m                         ^
[0m[1m./common.h:57:33: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                                ^
[0m[1mpch.c:2343:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2343 |           if (! ISDIGIT (*++p))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2344 |             return 0;[0m
      | [0;1;32m                     
[0m[1mpch.c:2345:20: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 2345 |           while (ISDIGIT (*++p))[0m
      | [0;1;32m                          ^
[0m[1mpch.c:2394:9: [0m[0;1;36mnote: [0mAssuming 'dry_run' is true[0m
 2394 |     if (! dry_run && ! skip_rest_of_patch) {[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mpch.c:2394:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2394 |     if (! dry_run && ! skip_rest_of_patch) {[0m
      | [0;1;32m                  ^
[0m[1mpch.c:2407:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2407 |     for (;;) {[0m
      | [0;1;32m    ^
[0m[1mpch.c:2411:8: [0m[0;1;36mnote: [0m'chars_read' is 18446744073709551615[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mpch.c:2411:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:2416:6: [0m[0;1;36mnote: [0m'ed_command_letter' is 115[0m
 2416 |         if (ed_command_letter) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mpch.c:2416:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 2416 |         if (ed_command_letter) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:2417:10: [0m[0;1;36mnote: [0m'pipefp' is null[0m
 2417 |             if (pipefp)[0m
      | [0;1;32m                ^~~~~~
[0m[1mpch.c:2417:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 2417 |             if (pipefp)[0m
      | [0;1;32m            ^
[0m[1mpch.c:2420:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2420 |             if (ed_command_letter != 'd' && ed_command_letter != 's') {[0m
      | [0;1;32m                ^
[0m[1mpch.c:2420:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 2420 |             if (ed_command_letter != 'd' && ed_command_letter != 's') {[0m
      | [0;1;32m            ^
[0m[1mpch.c:2407:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2407 |     for (;;) {[0m
      | [0;1;32m    ^
[0m[1mpch.c:2411:8: [0m[0;1;36mnote: [0m'chars_read' is 18446744073709551615[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mpch.c:2411:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:2415:22: [0m[0;1;36mnote: [0mCalling 'get_ed_command_letter'[0m
 2415 |         ed_command_letter = get_ed_command_letter (buf);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2337:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2337 |   if (ISDIGIT (*p))[0m
      | [0;1;32m      ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2337:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2337 |   if (ISDIGIT (*p))[0m
      | [0;1;32m  ^
[0m[1mpch.c:2339:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m             ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2339:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2341[0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m      ^
[0m[1mpch.c:2341:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2341 |       if (*p == ',')[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:2341:7: [0m[0;1;36mnote: [0mTaking true branch[0m
 2341 |       if (*p == ',')[0m
      | [0;1;32m      ^
[0m[1mpch.c:2343:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2343 |           if (! ISDIGIT (*++p))[0m
      | [0;1;32m                ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2343:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 2343 |           if (! ISDIGIT (*++p))[0m
      | [0;1;32m          ^
[0m[1mpch.c:2345:11: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2345 |           while (ISDIGIT (*++p))[0m
      | [0;1;32m                 ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2345:4: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2345 |           while (ISDIGIT (*++p))[0m
      | [0;1;32m          ^
[0m[1mpch.c:2345:20: [0m[0;1;36mnote: [0mAccess of the heap area at index 4, while it holds only 4 'char' elements[0m
 2345 |           while (ISDIGIT (*++p))[0m
      | [0;1;32m                          ^
[0m[1m./common.h:57:33: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                                ^
[0m[1mpch.c:2345:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2345 |           while (ISDIGIT (*++p))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2346 |             /* do nothing */ ;[0m
      | [0;1;32m                              
[0m[1mpch.c:2357:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2357 |       if (pair)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 2358 |         return 0;[0m
      | [0;1;32m                 
[0m[1mpch.c:2359:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2359 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mpch.c:2366:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2366 |       if (strncmp (p, "/.//", 4) != 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m 2367 |         return 0;[0m
 2368 |       p += 4;[0m
 2369 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mpch.c:2366:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2366 |       if (strncmp (p, "/.//", 4) != 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2367 |         return 0;[0m
      | [0;1;32m                 
[0m[1mpch.c:2372:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2372 |       return 0;[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mpch.c:2375:10: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 2375 |   while (*p == ' ' || *p == '\t')[0m
      | [0;1;32m         ^
[0m[1mpch.c:2394:9: [0m[0;1;36mnote: [0mAssuming 'dry_run' is true[0m
 2394 |     if (! dry_run && ! skip_rest_of_patch) {[0m
      | [0;1;32m        ^~~~~~~~~
[0m[1mpch.c:2394:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 2394 |     if (! dry_run && ! skip_rest_of_patch) {[0m
      | [0;1;32m                  ^
[0m[1mpch.c:2407:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2407 |     for (;;) {[0m
      | [0;1;32m    ^
[0m[1mpch.c:2411:8: [0m[0;1;36mnote: [0m'chars_read' is 18446744073709551615[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mpch.c:2411:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:2416:6: [0m[0;1;36mnote: [0m'ed_command_letter' is 115[0m
 2416 |         if (ed_command_letter) {[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~
[0m[1mpch.c:2416:2: [0m[0;1;36mnote: [0mTaking true branch[0m
 2416 |         if (ed_command_letter) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:2417:10: [0m[0;1;36mnote: [0m'pipefp' is null[0m
 2417 |             if (pipefp)[0m
      | [0;1;32m                ^~~~~~
[0m[1mpch.c:2417:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 2417 |             if (pipefp)[0m
      | [0;1;32m            ^
[0m[1mpch.c:2420:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2420 |             if (ed_command_letter != 'd' && ed_command_letter != 's') {[0m
      | [0;1;32m                ^
[0m[1mpch.c:2420:6: [0m[0;1;36mnote: [0mTaking false branch[0m
 2420 |             if (ed_command_letter != 'd' && ed_command_letter != 's') {[0m
      | [0;1;32m            ^
[0m[1mpch.c:2407:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2407 |     for (;;) {[0m
      | [0;1;32m    ^
[0m[1mpch.c:2411:8: [0m[0;1;36mnote: [0m'chars_read' is 18446744073709551615[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m              ^~~~~~~~~~
[0m[1mpch.c:2411:2: [0m[0;1;36mnote: [0mTaking false branch[0m
 2411 |         if (! chars_read) {[0m
      | [0;1;32m        ^
[0m[1mpch.c:2415:22: [0m[0;1;36mnote: [0mCalling 'get_ed_command_letter'[0m
 2415 |         ed_command_letter = get_ed_command_letter (buf);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2337:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2337 |   if (ISDIGIT (*p))[0m
      | [0;1;32m      ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2337:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 2337 |   if (ISDIGIT (*p))[0m
      | [0;1;32m  ^
[0m[1mpch.c:2339:14: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m             ^
[0m[1m./common.h:57:21: [0m[0;1;36mnote: [0mexpanded from macro 'ISDIGIT'[0m
   57 | #define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mpch.c:2339:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 2341[0m
 2339 |       while (ISDIGIT (*++p))[0m
      | [0;1;32m      ^
[0m[1mpch.c:2341:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2341 |       if (*p == ',')[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mpch.c:2341:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 2341 |       if (*p == ',')[0m
      | [0;1;32m      ^
[0m[1mpch.c:2353:3: [0m[0;1;36mnote: [0mControl jumps to 'case 100:'  at line 2362[0m
 2353 |   switch (letter)[0m
      | [0;1;32m  ^
[0m[1mpch.c:2363:7: [0m[0;1;36mnote: [0m Execution continues on line 2375[0m
 2363 |       break;[0m
      | [0;1;32m      ^
[0m[1mpch.c:2375:10: [0m[0;1;36mnote: [0mAccess of the heap area at index 2, while it holds only 2 'char' elements[0m
 2375 |   while (*p == ' ' || *p == '\t')[0m
      | [0;1;32m         ^~
[0m[1mpch.c:2375:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2375 |   while (*p == ' ' || *p == '\t')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2376 |     p++;[0m
      | [0;1;32m        
[0m[1mpch.c:2377:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2377 |   if (*p == '\n')[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2378 |     return letter;[0m
      | [0;1;32m                  
[0m[1mpch.c:2399:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2399 |         sprintf (buf, "%s %s%s", editor_program,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:2399:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
 2399 |         sprintf (buf, "%s %s%s", editor_program,[0m
      | [0;1;32m        ^~~~~~~
[0m[1mpch.c:2404:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2404 |         if (!pipefp)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2405 |           pfatal ("Can't open pipe to %s", quotearg (buf));[0m
      | [0;1;32m                                                           
[0m[1mpch.c:2417:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2417 |             if (pipefp)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 2418 |                 if (! fwrite (buf, sizeof *buf, chars_read, pipefp))[0m
 2419 |                     write_fatal ();[0m
      | [0;1;32m                                   
[0m[1mpch.c:2418:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2418 |                 if (! fwrite (buf, sizeof *buf, chars_read, pipefp))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2419 |                     write_fatal ();[0m
      | [0;1;32m                                   
[0m[1mpch.c:2423:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2423 |                     if (pipefp)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2424 |                         if (! fwrite (buf, sizeof *buf, chars_read, pipefp))[0m
 2425 |                             write_fatal ();[0m
      | [0;1;32m                                           
[0m[1mpch.c:2424:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2424 |                         if (! fwrite (buf, sizeof *buf, chars_read, pipefp))[0m
      | [0;1;32m                                                                            ^
[0m      | [0;32m                                                                             {
[0m 2425 |                             write_fatal ();[0m
      | [0;1;32m                                           
[0m[1mpch.c:2426:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2426 |                     if (chars_read == 2  &&  strEQ (buf, ".\n"))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m 2427 |                         break;[0m
      | [0;1;32m                              
[0m[1mpch.c:2437:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2437 |     if (!pipefp)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2438 |       return;[0m
      | [0;1;32m             
[0m[1mpch.c:2440:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2440 |         || fflush (pipefp) != 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 2441 |       write_fatal ();[0m
      | [0;1;32m                     
[0m[1mpch.c:2442:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2442 |     if (pclose (pipefp) != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 2443 |       fatal ("%s FAILED", editor_program);[0m
      | [0;1;32m                                          
[0m[1mpch.c:2449:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2449 |         if (!ifp)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 2450 |           pfatal ("can't open '%s'", outname);[0m
      | [0;1;32m                                              
[0m[1mpch.c:2451:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2451 |         while ((c = getc (ifp)) != EOF)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 2452 |           if (putc (c, ofp) == EOF)[0m
 2453 |             write_fatal ();[0m
      | [0;1;32m                           
[0m[1mpch.c:2452:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2452 |           if (putc (c, ofp) == EOF)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 2453 |             write_fatal ();[0m
      | [0;1;32m                           
[0m[1mpch.c:2454:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2454 |         if (ferror (ifp) || fclose (ifp) != 0)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 2455 |           read_fatal ();[0m
      | [0;1;32m                        
[0m[1mpch.c:2465:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2465 |   while (p_Char[new] == '=' || p_Char[new] == '\n')[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2466 |     new++;[0m
      | [0;1;32m          
[0m[1mpch.c:2473:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2473 |       for (; old <= p_ptrn_lines; old++)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2474 |         if (p_Char[old] == '!')[0m
 2475 |           p_Char[old] = '-';[0m
      | [0;1;32m                            
[0m[1mpch.c:2474:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2474 |         if (p_Char[old] == '!')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2475 |           p_Char[old] = '-';[0m
      | [0;1;32m                            
[0m[1mpch.c:2476:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2476 |       for (; new <= p_end; new++)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 2477 |         if (p_Char[new] == '!')[0m
 2478 |           p_Char[new] = '+';[0m
      | [0;1;32m                            
[0m[1mpch.c:2477:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2477 |         if (p_Char[new] == '!')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2478 |           p_Char[new] = '+';[0m
      | [0;1;32m                            
[0m[1mpch.c:2506:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2506 |                   do[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2507 |                     old++;[0m
 2508 |                   while (old <= p_ptrn_lines && p_Char[old] == '-');[0m
      | [0;32m                  } 
[0m[1mpch.c:2513:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2513 |               do[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2514 |                 new++;[0m
 2515 |               while (new <= p_end && p_Char[new] == '+');[0m
      | [0;32m              } 
[0m280 warnings generated.
Suppressed 9 warnings (9 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
