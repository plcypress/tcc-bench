Command: /itch/common/crepos/tcc-scripts/tidy-braces.sh
Directory: /itch/common/crepos/cu-to-rtu/c/cpio-2.14
----------------------------------------

Enabled checks:
    clang-analyzer-apiModeling.Errno
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.TrustReturnsNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.BitwiseShift
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DereferenceModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.NewArraySize
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.ArrayDelete
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.StringChecker
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.core.EnumCastOutOfRange
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-optin.taint.GenericTaint
    clang-analyzer-optin.taint.TaintPropagation
    clang-analyzer-optin.taint.TaintedAlloc
    clang-analyzer-optin.taint.TaintedDiv
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.ArrayBound
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.MmapWriteExec
    clang-analyzer-security.PointerSub
    clang-analyzer-security.PutenvStackArray
    clang-analyzer-security.SetgidSetuidOrder
    clang-analyzer-security.cert.env.InvalidPtr
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.BlockInCriticalSection
    clang-analyzer-unix.Chroot
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Errno
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.StdCLibraryFunctions
    clang-analyzer-unix.Stream
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NotNullTerminated
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    readability-braces-around-statements

Running clang-tidy for 111 files out of 111 in compilation database ...
[  1/111][0.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpjqbhutiq.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/lib/sysdep.c
[  2/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp0_m0_mqu.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/imaxtostr.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  3/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp6jp5hw_t.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/ialloc.c
7 warnings generated.
Suppressed 7 warnings (7 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  4/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpm5w_hxb1.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/inttostr.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  5/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpkue_t6gz.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/hard-locale.c
[1mhard-locale.c:32:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   32 |   if (setlocale_null_r (category, locale, sizeof (locale)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   33 |     return false;[0m
      | [0;1;32m                 
[0m[1mhard-locale.c:35:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!(strcmp (locale, "C") == 0 || strcmp (locale, "POSIX") == 0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m   36 |     return true;[0m
      | [0;1;32m                
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  6/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp64jwf332.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/fd-safer.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  7/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpzbkqn6ul.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/closeout.c
[1mcloseout.c:122:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |       if (file_name)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  123 |         error (0, errno, "%s: %s", quotearg_colon (file_name),[0m
  124 |                write_error);[0m
  125 |       else[0m
      | [0;32m      } 
[0m[1mcloseout.c:125:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  126 |         error (0, errno, "%s", write_error);[0m
      | [0;1;32m                                            
[0m[1mcloseout.c:133:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |   if (!SANITIZE_ADDRESS && close_stream (stderr) != 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  134 |     _exit (exit_failure);[0m
      | [0;1;32m                         
[0m17 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  8/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpq0aec898.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/mbsrtowcs.c
19 warnings generated.
Suppressed 19 warnings (19 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[  9/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp9qtx2yjn.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/openat-die.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 10/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpxpvmi4al.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/close-stream.c
[1mclose-stream.c:71:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   71 |       if (! fclose_fail)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   72 |         errno = 0;[0m
      | [0;1;32m                  
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 11/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp1_rx0rvs.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/strtoll.c
20 warnings generated.
Suppressed 20 warnings (20 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 12/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpq348xl4p.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/pipe-safer.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 13/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpti24sz3j.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/basename-lgpl.c
[1mbasename-lgpl.c:35:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   while (ISSLASH (*base))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   36 |     base++;[0m
      | [0;1;32m           
[0m[1mbasename-lgpl.c:40:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       if (ISSLASH (*p))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   41 |         last_was_slash = true;[0m
   42 |       else if (last_was_slash)[0m
      | [0;32m      } 
[0m[1mbasename-lgpl.c:58:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |   for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m   59 |     continue;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:62:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       && ISSLASH (name[0]) && ISSLASH (name[1]) && ! name[2])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m   63 |     return 2;[0m
      | [0;1;32m             
[0m[1mbasename-lgpl.c:66:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       && len == prefix_len && ISSLASH (name[prefix_len]))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m   67 |     return prefix_len + 1;[0m
      | [0;1;32m                          
[0m7 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 14/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpe38ngyxj.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/getprogname.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 15/111][0.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp39z7_wun.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/fd-safer-flag.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 16/111][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpfxpx1qd9.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/offtostr.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 17/111][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpea97jty_.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-eexst.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 18/111][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmphrae6jf6.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/free.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 19/111][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpa27t9x0g.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/dirfd.c
[1mdirfd.c:92:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |   if (fd == -1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   93 | # ifndef __KLIBC__[0m
   94 |     errno = ENOTSUP;[0m
      | [0;1;32m                    
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 20/111][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp0fas008d.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/basename.c
[1mbasename.c:61:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   61 |   memcpy (p + dotslash_len, base, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mbasename.c:61:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   61 |   memcpy (p + dotslash_len, base, length);[0m
      | [0;1;32m  ^~~~~~
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 21/111][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpzrnj40vi.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/strtoull.c
19 warnings generated.
Suppressed 19 warnings (19 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 22/111][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp9q42h5fx.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/xalloc-die.c
14 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 23/111][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpu5oavwg3.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/stripslash.c
[1mstripslash.c:39:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   39 |   if (! *base)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   40 |     base = file;[0m
      | [0;1;32m                
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 24/111][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmppn1y9o9r.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-xinl.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 25/111][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpfgimocv1.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-ba.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 26/111][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpf8bv2wrf.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/malloca.c
[1mmalloca.c:42:56: [0m[0;1;35mwarning: [0m[1m'_Static_assert' with no message is a C23 extension [clang-diagnostic-c23-extensions][0m
   42 | static_assert (2 * sa_alignment_max - 1 <= (small_t) -1);[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                       , ""
[0m[1mmalloca.c:63:37: [0m[0;1;35mwarning: [0m[1mThe left operand of '&' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult][0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m[1mmalloca.c:53:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m1 is not equal to 0[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:31:4: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   31 |   ((s) != 0 \[0m
      | [0;1;32m   ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m9223372036854775807 is < -1[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^~~~~~~~~~~
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0m'?' condition is true[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^
[0m[1m./xalloc-oversized.h:32:18: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m                 ^
[0m[1m/usr/include/stdint.h:210:24: [0m[0;1;36mnote: [0mexpanded from macro 'PTRDIFF_MAX'[0m
  210 | #  define PTRDIFF_MAX           (9223372036854775807L)[0m
      | [0;1;32m                                ^
[0m[1mmalloca.c:53:38: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m                                     ^
[0m[1m./xalloc-oversized.h:62:33: [0m[0;1;36mnote: [0mexpanded from macro 'xalloc_oversized'[0m
   62 | # define xalloc_oversized(n, s) __xalloc_oversized (n, s)[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xalloc-oversized.h:32:8: [0m[0;1;36mnote: [0mexpanded from macro '__xalloc_oversized'[0m
   32 |    && ((size_t) (PTRDIFF_MAX < SIZE_MAX ? PTRDIFF_MAX : SIZE_MAX - 1) / (s) \[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m   33 |        < (n)))[0m
      | [0;1;32m       ~~~~~
[0m[1mmalloca.c:53:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   53 |   if (!ckd_add (&nplus, n, plus) && !xalloc_oversized (nplus, 1))[0m
      | [0;1;32m  ^
[0m[1mmalloca.c:57:11: [0m[0;1;36mnote: [0mAssuming 'mem' is not equal to NULL[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m          ^~~~~~~~~~~
[0m[1mmalloca.c:57:7: [0m[0;1;36mnote: [0mTaking true branch[0m
   57 |       if (mem != NULL)[0m
      | [0;1;32m      ^
[0m[1mmalloca.c:59:44: [0m[0;1;36mnote: [0m'umemplus' declared without an initial value[0m
   59 |           uintptr_t umem = (uintptr_t)mem, umemplus;[0m
      | [0;1;32m                                           ^~~~~~~~
[0m[1mmalloca.c:62:11: [0m[0;1;36mnote: [0mAssuming overflow[0m
   62 |           ckd_add (&umemplus, umem, sizeof (small_t) + sa_alignment_max - 1);[0m
      | [0;1;32m          ^
[0m[1m./stdckdint.h:32:34: [0m[0;1;36mnote: [0mexpanded from macro 'ckd_add'[0m
   32 | #define ckd_add(r, a, b) ((bool) _GL_INT_ADD_WRAPV (a, b, r))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./intprops-internal.h:147:37: [0m[0;1;36mnote: [0mexpanded from macro '_GL_INT_ADD_WRAPV'[0m
  147 | # define _GL_INT_ADD_WRAPV(a, b, r) __builtin_add_overflow (a, b, r)[0m
      | [0;1;32m                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mmalloca.c:63:37: [0m[0;1;36mnote: [0mThe left operand of '&' is a garbage value[0m
   63 |           idx_t offset = ((umemplus & ~alignment2_mask)[0m
      | [0;1;32m                           ~~~~~~~~ ^
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 27/111][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp18mdt2x9.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/cloexec.c
[1mcloexec.c:50:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |           || fcntl (desc, F_SETFD, newflags) != -1)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m   51 |         return 0;[0m
      | [0;1;32m                 
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 28/111][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpi5o68vzn.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-pvh.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 29/111][3.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmps6esylkg.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/fatal.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 30/111][0.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpxkby3bv3.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-pin.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 31/111][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpg4_ybdzw.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/fcntl.c
[1mfcntl.c:329:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  329 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:426:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  426 |             break;[0m
      | [0;1;32m            ^    
[0m      | [0;32m            {    ;} 
[0m[1mfcntl.c:430:13: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  430 |             {[0m
      | [0;1;32m            ^
[0m      | [0;32m            {
[0m  431 |               void *p = va_arg (arg, void *);[0m
  432 |               result = fcntl (fd, action, p);[0m
  433 |             }[0m
  434 |             break;[0m
      | [0;1;32m                 
[0m      | [0;32m                 ;} 
[0m[1mfcntl.c:524:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |           if (result >= 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  525 |             have_dupfd_cloexec = -1;[0m
      | [0;1;32m                                    
[0m[1mfcntl.c:528:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  528 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  529 | # endif[0m
  530 |     result = rpl_fcntl_DUPFD (fd, target);[0m
      | [0;1;32m                                          
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 32/111][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpsswiazdq.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/safe-write.c
6 warnings generated.
Suppressed 6 warnings (6 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 33/111][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmplriji55r.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/version-etc-fsf.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 34/111][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpz7vi4v3j.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/setlocale_null.c
[1msetlocale_null.c:145:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       if (bufsize > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  146 |         /* Return an empty string in BUF.[0m
  147 |            This is a convenience for callers that don't want to write explicit[0m
  148 |            code for handling EINVAL.  */[0m
  149 |         buf[0] = '\0';[0m
      | [0;1;32m                      
[0m[1msetlocale_null.c:157:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:157:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  157 |           memcpy (buf, result, length + 1);[0m
      | [0;1;32m          ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m[1msetlocale_null.c:167:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  167 |               memcpy (buf, result, bufsize - 1);[0m
      | [0;1;32m              ^~~~~~
[0m7 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 35/111][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpx7qimvaf.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/uinttostr.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 36/111][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpd_uhwsvb.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/xsize.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 37/111][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpksdeegfj.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/xgetcwd.c
[1mxgetcwd.c:37:15: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'getcwd' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   37 |   char *cwd = getcwd (NULL, 0);[0m
      | [0;1;32m              ^
[0m[1mxgetcwd.c:37:15: [0m[0;1;36mnote: [0mThe 1st argument to 'getcwd' is NULL but should not be NULL[0m
[1mxgetcwd.c:38:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   38 |   if (! cwd && errno == ENOMEM)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m   39 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 38/111][2.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpx8ei9nu2.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/defer.c
[1mdefer.c:34:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   34 |   strcpy (d->header.c_name, file_hdr->c_name);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdefer.c:34:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   34 |   strcpy (d->header.c_name, file_hdr->c_name);[0m
      | [0;1;32m  ^~~~~~
[0m13 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 39/111][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp14t1k2ow.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/getopt1.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 40/111][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp2sv66wpb.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/fd-hook.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 41/111][1.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp40tz34c7.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/dirname-lgpl.c
[1mdirname-lgpl.c:49:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |        prefix_length < length; length--)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   50 |     if (! ISSLASH (file[length - 1]))[0m
   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:50:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |     if (! ISSLASH (file[length - 1]))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m   51 |       break;[0m
      | [0;1;32m            
[0m[1mdirname-lgpl.c:79:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   79 |   if (!dir)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m   80 |     return NULL;[0m
      | [0;1;32m                
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:81:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   81 |   memcpy (dir, file, length);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdirname-lgpl.c:82:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |   if (append_dot)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   83 |     dir[length++] = '.';[0m
      | [0;1;32m                        
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 42/111][2.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpku73x40s.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/lib/paxexit-status.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 43/111][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpbsg392iv.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-fs-xinl.c
11 warnings generated.
Suppressed 11 warnings (11 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 44/111][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpdrdy5ua5.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/dup-safer-flag.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 45/111][3.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpozibjaob.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/chdir-long.c
[1mchdir-long.c:76:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   76 |   if (new_fd < 0)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m   77 |     return -1;[0m
      | [0;1;32m              
[0m[1mchdir-long.c:112:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   if (e == 0 || errno != ENAMETOOLONG)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  113 |     return e;[0m
      | [0;1;32m             
[0m[1mchdir-long.c:150:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  151 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:156:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |         if (cdb_advance_fd (&cdb, "/") != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  157 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:181:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  181 |         if (err != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  182 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:189:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |         if (cdb_advance_fd (&cdb, dir) != 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  190 |           goto Fail;[0m
      | [0;1;32m                    
[0m[1mchdir-long.c:193:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  193 |     if (cdb_fchdir (&cdb) != 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  194 |       goto Fail;[0m
      | [0;1;32m                
[0m11 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 46/111][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpq6kh086v.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/stat-time.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 47/111][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpbh4_0buj.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/mbsrtowcs-state.c
[ 48/111][5.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpacsl_qya.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/xmalloc.c
[1mxmalloc.c:35:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!p)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:67:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   67 |   if (!r && (!p || s))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   68 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:85:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (!r && (!p || (n && s)))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   86 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:199:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  199 |       if (ckd_add (&n, n, (n >> 1) + 1))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  200 |         xalloc_die ();[0m
      | [0;1;32m                      
[0m[1mxmalloc.c:240:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |   if (ckd_add (&n, n0, n0 >> 1))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  241 |     n = IDX_MAX;[0m
      | [0;1;32m                
[0m[1mxmalloc.c:242:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |   if (0 <= n_max && n_max < n)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  243 |     n = n_max;[0m
      | [0;1;32m              
[0m[1mxmalloc.c:264:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |   if (! pa)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  265 |     *pn = 0;[0m
      | [0;1;32m            
[0m[1mxmalloc.c:269:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |           || ckd_mul (&nbytes, n, s)))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  270 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mxmalloc.c:314:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  314 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:314:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  314 |   return memcpy (xmalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:320:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  320 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:320:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  320 |   return memcpy (ximalloc (s), p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:331:10: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  331 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m[1mxmalloc.c:331:10: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  331 |   return memcpy (result, p, s);[0m
      | [0;1;32m         ^~~~~~
[0m18 warnings generated.
Suppressed 7 warnings (7 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 49/111][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpg4ubqg3q.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/save-cwd.c
[1msave-cwd.c:66:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   67 |     cwd->desc = fd_safer_flag (cwd->desc, O_CLOEXEC);[0m
      | [0;1;32m                                                     
[0m[1msave-cwd.c:70:19: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'getcwd' is NULL but should not be NULL [clang-analyzer-unix.StdCLibraryFunctions][0m
   70 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:66:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   66 |   if (!GNULIB_FCNTL_SAFER)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:68:7: [0m[0;1;36mnote: [0mAssuming field 'desc' is < 0[0m
   68 |   if (cwd->desc < 0)[0m
      | [0;1;32m      ^~~~~~~~~~~~~
[0m[1msave-cwd.c:68:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   68 |   if (cwd->desc < 0)[0m
      | [0;1;32m  ^
[0m[1msave-cwd.c:70:19: [0m[0;1;36mnote: [0mThe 1st argument to 'getcwd' is NULL but should not be NULL[0m
   70 |       cwd->name = getcwd (NULL, 0);[0m
      | [0;1;32m                  ^
[0m[1msave-cwd.c:84:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |   if (0 <= cwd->desc)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   85 |     return fchdir (cwd->desc);[0m
   86 |   else[0m
      | [0;32m  } 
[0m[1msave-cwd.c:86:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   87 |     return chdir_long (cwd->name);[0m
      | [0;1;32m                                  
[0m[1msave-cwd.c:93:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |   if (cwd->desc >= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   94 |     close (cwd->desc);[0m
      | [0;1;32m                      
[0m9 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 50/111][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpk_g85ons.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/dup-safer.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 51/111][2.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp6n7m8dq9.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/lib/paxexit.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 52/111][1.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpuwzn96qy.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/localcharset.c
[1mlocalcharset.c:911:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  911 |   if (codeset == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  912 |     /* The canonical name cannot be determined.  */[0m
  913 |     codeset = "";[0m
      | [0;1;32m                 
[0m[1mlocalcharset.c:1070:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1070 |         if (codeset[0] == '\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1071 |           codeset = "ASCII";[0m
      | [0;1;32m                            
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 53/111][3.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpon1_evrm.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/parse-datetime.c
[1mparse-datetime.c:161:40: [0m[0;1;35mwarning: [0m[1m'_Static_assert' with no message is a C23 extension [clang-diagnostic-c23-extensions][0m
  161 | static_assert (TYPE_IS_INTEGER (time_t));[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                       , ""
[0m[1mparse-datetime.c:162:76: [0m[0;1;35mwarning: [0m[1m'_Static_assert' with no message is a C23 extension [clang-diagnostic-c23-extensions][0m
  162 | static_assert (!TYPE_SIGNED (time_t) || INTMAX_MIN <= TYPE_MINIMUM (time_t));[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                           , ""
[0m[1mparse-datetime.c:163:51: [0m[0;1;35mwarning: [0m[1m'_Static_assert' with no message is a C23 extension [clang-diagnostic-c23-extensions][0m
  163 | static_assert (TYPE_MAXIMUM (time_t) <= INTMAX_MAX);[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                  , ""
[0m[1mparse-datetime.c:375:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |          | INT_ADD_WRAPV (pc->rel.year, rel.year, &pc->rel.year)))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  376 |     return false;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:443:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  443 |   if (0 <= pc->day_number && pc->day_number <= 6 && 0 <= len && len < n)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  444 |     snprintf (buffer + len, n - len, &" %s"[len == 0],[0m
  445 |               days_values[pc->day_number]);[0m
  446 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:491:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |   if (!debugging (pc))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  492 |     return;[0m
      | [0;1;32m           
[0m[1mparse-datetime.c:508:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |       if (space)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  509 |         fputc (' ', stderr);[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:526:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |       if (pc->meridian == MERpm)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  527 |         fputs ("pm", stderr);[0m
      | [0;1;32m                             
[0m[1mparse-datetime.c:535:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |       if (space)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  536 |         fputc (' ', stderr);[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:567:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |       if (space)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  568 |         fputc (' ', stderr);[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:580:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  580 |   if (val == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  581 |     return space;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:591:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |   if (!debugging (pc))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  592 |     return;[0m
      | [0;1;32m           
[0m[1mparse-datetime.c:1608:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1608 |   if (!yymsg)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 1609 |     yymsg = "Deleting";[0m
      | [0;1;32m                       
[0m[1mparse-datetime.c:1737:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1737 |       if (YYMAXDEPTH <= yystacksize)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1738 |         goto yyexhaustedlab;[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:1740:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1740 |       if (YYMAXDEPTH < yystacksize)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1741 |         yystacksize = YYMAXDEPTH;[0m
      | [0;1;32m                                 
[0m[1mparse-datetime.c:1747:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1747 |         if (! yyptr)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1748 |           goto yyexhaustedlab;[0m
      | [0;1;32m                              
[0m[1mparse-datetime.c:1752:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1752 |         if (yyss1 != yyssa)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1753 |           YYSTACK_FREE (yyss1);[0m
      | [0;1;32m                               
[0m[1mparse-datetime.c:1764:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1764 |       if (yyss + yystacksize - 1 <= yyssp)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1765 |         YYABORT;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:1770:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1770 |   if (yystate == YYFINAL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1771 |     YYACCEPT;[0m
      | [0;1;32m             
[0m[1mparse-datetime.c:1785:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1785 |   if (yypact_value_is_default (yyn))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1786 |     goto yydefault;[0m
      | [0;1;32m                   
[0m[1mparse-datetime.c:1811:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1811 |   if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1812 |     goto yydefault;[0m
      | [0;1;32m                   
[0m[1mparse-datetime.c:1816:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1816 |       if (yytable_value_is_error (yyn))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1817 |         goto yyerrlab;[0m
      | [0;1;32m                      
[0m[1mparse-datetime.c:1824:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1824 |   if (yyerrstatus)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1825 |     yyerrstatus--;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:1846:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1846 |   if (yyn == 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1847 |     goto yyerrlab;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:1874:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1874 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1875 |         pc->seconds = (yyvsp[0].timespec);[0m
 1876 |         pc->timespec_seen = true;[0m
 1877 |         debug_print_current_time (_("number of seconds"), pc);[0m
 1878 |       }[0m
 1879 | #line 1880 "parse-datetime.c" /* yacc.c:1646  */[0m
 1880 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1884:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1884 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1885 |         pc->times_seen++; pc->dates_seen++;[0m
 1886 |         debug_print_current_time (_("datetime"), pc);[0m
 1887 |       }[0m
 1888 | #line 1889 "parse-datetime.c" /* yacc.c:1646  */[0m
 1889 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1893:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1893 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1894 |         pc->times_seen++;[0m
 1895 |         debug_print_current_time (_("time"), pc);[0m
 1896 |       }[0m
 1897 | #line 1898 "parse-datetime.c" /* yacc.c:1646  */[0m
 1898 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1902:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1902 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1903 |         pc->local_zones_seen++;[0m
 1904 |         debug_print_current_time (_("local_zone"), pc);[0m
 1905 |       }[0m
 1906 | #line 1907 "parse-datetime.c" /* yacc.c:1646  */[0m
 1907 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1911:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1911 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1912 |         pc->J_zones_seen++;[0m
 1913 |         debug_print_current_time ("J", pc);[0m
 1914 |       }[0m
 1915 | #line 1916 "parse-datetime.c" /* yacc.c:1646  */[0m
 1916 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1920:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1920 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1921 |         pc->zones_seen++;[0m
 1922 |         debug_print_current_time (_("zone"), pc);[0m
 1923 |       }[0m
 1924 | #line 1925 "parse-datetime.c" /* yacc.c:1646  */[0m
 1925 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1929:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1929 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1930 |         pc->dates_seen++;[0m
 1931 |         debug_print_current_time (_("date"), pc);[0m
 1932 |       }[0m
 1933 | #line 1934 "parse-datetime.c" /* yacc.c:1646  */[0m
 1934 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1938:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1938 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1939 |         pc->days_seen++;[0m
 1940 |         debug_print_current_time (_("day"), pc);[0m
 1941 |       }[0m
 1942 | #line 1943 "parse-datetime.c" /* yacc.c:1646  */[0m
 1943 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1947:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1947 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1948 |         debug_print_relative_time (_("relative"), pc);[0m
 1949 |       }[0m
 1950 | #line 1951 "parse-datetime.c" /* yacc.c:1646  */[0m
 1951 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1955:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1955 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1956 |         debug_print_current_time (_("number"), pc);[0m
 1957 |       }[0m
 1958 | #line 1959 "parse-datetime.c" /* yacc.c:1646  */[0m
 1959 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1963:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1963 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1964 |         debug_print_relative_time (_("hybrid"), pc);[0m
 1965 |       }[0m
 1966 | #line 1967 "parse-datetime.c" /* yacc.c:1646  */[0m
 1967 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1971:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1971 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1972 |         set_hhmmss (pc, (yyvsp[-1].textintval).value, 0, 0, 0);[0m
 1973 |         pc->meridian = (yyvsp[0].intval);[0m
 1974 |       }[0m
 1975 | #line 1976 "parse-datetime.c" /* yacc.c:1646  */[0m
 1976 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1980:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1980 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1981 |         set_hhmmss (pc, (yyvsp[-3].textintval).value, (yyvsp[-1].textintval).value, 0, 0);[0m
 1982 |         pc->meridian = (yyvsp[0].intval);[0m
 1983 |       }[0m
 1984 | #line 1985 "parse-datetime.c" /* yacc.c:1646  */[0m
 1985 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1989:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1989 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1990 |         set_hhmmss (pc, (yyvsp[-5].textintval).value, (yyvsp[-3].textintval).value, (yyvsp[-1].timespec).tv_sec, (yyvsp[-1].timespec).tv_nsec);[0m
 1991 |         pc->meridian = (yyvsp[0].intval);[0m
 1992 |       }[0m
 1993 | #line 1994 "parse-datetime.c" /* yacc.c:1646  */[0m
 1994 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:1998:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1998 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 1999 |         set_hhmmss (pc, (yyvsp[-1].textintval).value, 0, 0, 0);[0m
 2000 |         pc->meridian = MER24;[0m
 2001 |       }[0m
 2002 | #line 2003 "parse-datetime.c" /* yacc.c:1646  */[0m
 2003 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2007:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2007 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2008 |         set_hhmmss (pc, (yyvsp[-3].textintval).value, (yyvsp[-1].textintval).value, 0, 0);[0m
 2009 |         pc->meridian = MER24;[0m
 2010 |       }[0m
 2011 | #line 2012 "parse-datetime.c" /* yacc.c:1646  */[0m
 2012 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2016:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2016 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2017 |         set_hhmmss (pc, (yyvsp[-5].textintval).value, (yyvsp[-3].textintval).value, (yyvsp[-1].timespec).tv_sec, (yyvsp[-1].timespec).tv_nsec);[0m
 2018 |         pc->meridian = MER24;[0m
 2019 |       }[0m
 2020 | #line 2021 "parse-datetime.c" /* yacc.c:1646  */[0m
 2021 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2025:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2025 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2026 |         pc->zones_seen++;[0m
 2027 |         if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
 2028 |       }[0m
 2029 | #line 2030 "parse-datetime.c" /* yacc.c:1646  */[0m
 2030 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2027:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2027 |         if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
      | [0;1;32m                                                                             ^        
[0m      | [0;32m                                                                              {
[0m[1mparse-datetime.c:2034:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2034 |     { pc->local_isdst = (yyvsp[0].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2035 | #line 2036 "parse-datetime.c" /* yacc.c:1646  */[0m
 2036 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2040:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2040 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2041 |         pc->local_isdst = 1;[0m
 2042 |         pc->dsts_seen++;[0m
 2043 |       }[0m
 2044 | #line 2045 "parse-datetime.c" /* yacc.c:1646  */[0m
 2045 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2049:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2049 |     { pc->time_zone = (yyvsp[0].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2050 | #line 2051 "parse-datetime.c" /* yacc.c:1646  */[0m
 2051 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2055:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2055 |     { pc->time_zone = -HOUR (7); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2056 | #line 2057 "parse-datetime.c" /* yacc.c:1646  */[0m
 2057 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2061:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2061 |     { pc->time_zone = (yyvsp[-1].intval);[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2062 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
 2063 |         debug_print_relative_time (_("relative"), pc);[0m
 2064 |       }[0m
 2065 | #line 2066 "parse-datetime.c" /* yacc.c:1646  */[0m
 2066 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2062:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2062 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
      | [0;1;32m                                                          ^        
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:2070:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2070 |     { pc->time_zone = -HOUR (7);[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2071 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
 2072 |         debug_print_relative_time (_("relative"), pc);[0m
 2073 |       }[0m
 2074 | #line 2075 "parse-datetime.c" /* yacc.c:1646  */[0m
 2075 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2071:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2071 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
      | [0;1;32m                                                          ^        
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:2079:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2079 |     { if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2080 |         if (INT_ADD_WRAPV (pc->time_zone, (yyvsp[-2].intval), &pc->time_zone)) YYABORT; }[0m
 2081 | #line 2082 "parse-datetime.c" /* yacc.c:1646  */[0m
 2082 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2079:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2079 |     { if (! time_zone_hhmm (pc, (yyvsp[-1].textintval), (yyvsp[0].intval))) YYABORT;[0m
      | [0;1;32m                                                                           ^        
[0m      | [0;32m                                                                            {
[0m[1mparse-datetime.c:2080:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2080 |         if (INT_ADD_WRAPV (pc->time_zone, (yyvsp[-2].intval), &pc->time_zone)) YYABORT; }[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m[1mparse-datetime.c:2086:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2086 |     { pc->time_zone = (yyvsp[0].intval) + 60 * 60; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2087 | #line 2088 "parse-datetime.c" /* yacc.c:1646  */[0m
 2088 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2092:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2092 |     { pc->time_zone = (yyvsp[-1].intval) + 60 * 60; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2093 | #line 2094 "parse-datetime.c" /* yacc.c:1646  */[0m
 2094 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2098:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2098 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2099 |         pc->day_ordinal = 0;[0m
 2100 |         pc->day_number = (yyvsp[0].intval);[0m
 2101 |       }[0m
 2102 | #line 2103 "parse-datetime.c" /* yacc.c:1646  */[0m
 2103 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2107:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2107 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2108 |         pc->day_ordinal = 0;[0m
 2109 |         pc->day_number = (yyvsp[-1].intval);[0m
 2110 |       }[0m
 2111 | #line 2112 "parse-datetime.c" /* yacc.c:1646  */[0m
 2112 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2116:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2116 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2117 |         pc->day_ordinal = (yyvsp[-1].intval);[0m
 2118 |         pc->day_number = (yyvsp[0].intval);[0m
 2119 |         pc->debug_ordinal_day_seen = true;[0m
 2120 |       }[0m
 2121 | #line 2122 "parse-datetime.c" /* yacc.c:1646  */[0m
 2122 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2126:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2126 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2127 |         pc->day_ordinal = (yyvsp[-1].textintval).value;[0m
 2128 |         pc->day_number = (yyvsp[0].intval);[0m
 2129 |         pc->debug_ordinal_day_seen = true;[0m
 2130 |       }[0m
 2131 | #line 2132 "parse-datetime.c" /* yacc.c:1646  */[0m
 2132 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2136:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2136 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2137 |         pc->month = (yyvsp[-2].textintval).value;[0m
 2138 |         pc->day = (yyvsp[0].textintval).value;[0m
 2139 |       }[0m
 2140 | #line 2141 "parse-datetime.c" /* yacc.c:1646  */[0m
 2141 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2145:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2145 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m[1mparse-datetime.c:2167:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2167 |             if (debugging (pc))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 2168 |               dbg_printf (_("warning: value %"PRIdMAX" has less than 4 digits. "[0m
 2169 |                             "Assuming MM/DD/YY[YY]\n"),[0m
 2170 |                           (yyvsp[-4].textintval).value);[0m
      | [0;1;32m                                                        
[0m[1mparse-datetime.c:2182:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2182 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2183 |         /* E.g., 17-JUN-1992.  */[0m
 2184 |         pc->day = (yyvsp[-2].textintval).value;[0m
 2185 |         pc->month = (yyvsp[-1].intval);[0m
 2186 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
 2187 |         pc->year.digits = (yyvsp[0].textintval).digits;[0m
 2188 |       }[0m
 2189 | #line 2190 "parse-datetime.c" /* yacc.c:1646  */[0m
 2190 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2186:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2186 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
      | [0;1;32m                                                                                 ^        
[0m      | [0;32m                                                                                  {
[0m[1mparse-datetime.c:2194:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2194 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2195 |         /* E.g., JUN-17-1992.  */[0m
 2196 |         pc->month = (yyvsp[-2].intval);[0m
 2197 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->day)) YYABORT;[0m
 2198 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
 2199 |         pc->year.digits = (yyvsp[0].textintval).digits;[0m
 2200 |       }[0m
 2201 | #line 2202 "parse-datetime.c" /* yacc.c:1646  */[0m
 2202 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2197:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2197 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->day)) YYABORT;[0m
      | [0;1;32m                                                                           ^        
[0m      | [0;32m                                                                            {
[0m[1mparse-datetime.c:2198:82: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2198 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->year.value)) YYABORT;[0m
      | [0;1;32m                                                                                 ^        
[0m      | [0;32m                                                                                  {
[0m[1mparse-datetime.c:2206:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2206 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2207 |         pc->month = (yyvsp[-1].intval);[0m
 2208 |         pc->day = (yyvsp[0].textintval).value;[0m
 2209 |       }[0m
 2210 | #line 2211 "parse-datetime.c" /* yacc.c:1646  */[0m
 2211 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2215:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2215 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2216 |         pc->month = (yyvsp[-3].intval);[0m
 2217 |         pc->day = (yyvsp[-2].textintval).value;[0m
 2218 |         pc->year = (yyvsp[0].textintval);[0m
 2219 |       }[0m
 2220 | #line 2221 "parse-datetime.c" /* yacc.c:1646  */[0m
 2221 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2225:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2225 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2226 |         pc->day = (yyvsp[-1].textintval).value;[0m
 2227 |         pc->month = (yyvsp[0].intval);[0m
 2228 |       }[0m
 2229 | #line 2230 "parse-datetime.c" /* yacc.c:1646  */[0m
 2230 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2234:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2234 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2235 |         pc->day = (yyvsp[-2].textintval).value;[0m
 2236 |         pc->month = (yyvsp[-1].intval);[0m
 2237 |         pc->year = (yyvsp[0].textintval);[0m
 2238 |       }[0m
 2239 | #line 2240 "parse-datetime.c" /* yacc.c:1646  */[0m
 2240 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2244:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2244 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2245 |         /* ISO 8601 format.  YYYY-MM-DD.  */[0m
 2246 |         pc->year = (yyvsp[-2].textintval);[0m
 2247 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->month)) YYABORT;[0m
 2248 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->day)) YYABORT;[0m
 2249 |       }[0m
 2250 | #line 2251 "parse-datetime.c" /* yacc.c:1646  */[0m
 2251 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2247:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2247 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[-1].textintval).value, &pc->month)) YYABORT;[0m
      | [0;1;32m                                                                             ^        
[0m      | [0;32m                                                                              {
[0m[1mparse-datetime.c:2248:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2248 |         if (INT_SUBTRACT_WRAPV (0, (yyvsp[0].textintval).value, &pc->day)) YYABORT;[0m
      | [0;1;32m                                                                          ^        
[0m      | [0;32m                                                                           {
[0m[1mparse-datetime.c:2255:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2255 |     { if (! apply_relative_time (pc, (yyvsp[-1].rel), (yyvsp[0].intval))) YYABORT; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2256 | #line 2257 "parse-datetime.c" /* yacc.c:1646  */[0m
 2257 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2255:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2255 |     { if (! apply_relative_time (pc, (yyvsp[-1].rel), (yyvsp[0].intval))) YYABORT; }[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m[1mparse-datetime.c:2261:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2261 |     { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2262 | #line 2263 "parse-datetime.c" /* yacc.c:1646  */[0m
 2263 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2261:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2261 |     { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m[1mparse-datetime.c:2267:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2267 |     { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2268 | #line 2269 "parse-datetime.c" /* yacc.c:1646  */[0m
 2269 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2267:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2267 |     { if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT; }[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m[1mparse-datetime.c:2273:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2273 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2274 | #line 2275 "parse-datetime.c" /* yacc.c:1646  */[0m
 2275 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2279:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2279 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2280 | #line 2281 "parse-datetime.c" /* yacc.c:1646  */[0m
 2281 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2285:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2285 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2286 | #line 2287 "parse-datetime.c" /* yacc.c:1646  */[0m
 2287 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2291:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2291 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2292 | #line 2293 "parse-datetime.c" /* yacc.c:1646  */[0m
 2293 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2297:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2297 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2298 | #line 2299 "parse-datetime.c" /* yacc.c:1646  */[0m
 2299 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2303:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2303 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2304 | #line 2305 "parse-datetime.c" /* yacc.c:1646  */[0m
 2305 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2309:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2309 |     { (yyval.rel) = RELATIVE_TIME_0;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2310 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].intval), (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
 2311 | #line 2312 "parse-datetime.c" /* yacc.c:1646  */[0m
 2312 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2310:90: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2310 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].intval), (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
      | [0;1;32m                                                                                         ^
[0m      | [0;32m                                                                                          {
[0m[1mparse-datetime.c:2316:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2316 |     { (yyval.rel) = RELATIVE_TIME_0;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2317 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
 2318 | #line 2319 "parse-datetime.c" /* yacc.c:1646  */[0m
 2319 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2317:100: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2317 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m[1mparse-datetime.c:2323:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2323 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).day = (yyvsp[0].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2324 | #line 2325 "parse-datetime.c" /* yacc.c:1646  */[0m
 2325 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2329:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2329 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2330 | #line 2331 "parse-datetime.c" /* yacc.c:1646  */[0m
 2331 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2335:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2335 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2336 | #line 2337 "parse-datetime.c" /* yacc.c:1646  */[0m
 2337 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2341:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2341 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2342 | #line 2343 "parse-datetime.c" /* yacc.c:1646  */[0m
 2343 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2347:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2347 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2348 | #line 2349 "parse-datetime.c" /* yacc.c:1646  */[0m
 2349 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2353:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2353 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2354 | #line 2355 "parse-datetime.c" /* yacc.c:1646  */[0m
 2355 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2359:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2359 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2360 | #line 2361 "parse-datetime.c" /* yacc.c:1646  */[0m
 2361 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2365:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2365 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2366 | #line 2367 "parse-datetime.c" /* yacc.c:1646  */[0m
 2367 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2371:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2371 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2372 | #line 2373 "parse-datetime.c" /* yacc.c:1646  */[0m
 2373 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2377:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2377 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].timespec).tv_sec; (yyval.rel).ns = (yyvsp[-1].timespec).tv_nsec; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2378 | #line 2379 "parse-datetime.c" /* yacc.c:1646  */[0m
 2379 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2383:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2383 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].timespec).tv_sec; (yyval.rel).ns = (yyvsp[-1].timespec).tv_nsec; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2384 | #line 2385 "parse-datetime.c" /* yacc.c:1646  */[0m
 2385 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2389:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2389 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = 1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2390 | #line 2391 "parse-datetime.c" /* yacc.c:1646  */[0m
 2391 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2395:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2395 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).year = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2396 | #line 2397 "parse-datetime.c" /* yacc.c:1646  */[0m
 2397 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2401:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2401 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).month = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2402 | #line 2403 "parse-datetime.c" /* yacc.c:1646  */[0m
 2403 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2407:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2407 |     { (yyval.rel) = RELATIVE_TIME_0;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2408 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
 2409 | #line 2410 "parse-datetime.c" /* yacc.c:1646  */[0m
 2410 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2408:100: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2408 |         if (INT_MULTIPLY_WRAPV ((yyvsp[-1].textintval).value, (yyvsp[0].intval), &(yyval.rel).day)) YYABORT; }[0m
      | [0;1;32m                                                                                                   ^
[0m      | [0;32m                                                                                                    {
[0m[1mparse-datetime.c:2414:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2414 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).hour = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2415 | #line 2416 "parse-datetime.c" /* yacc.c:1646  */[0m
 2416 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2420:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2420 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).minutes = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2421 | #line 2422 "parse-datetime.c" /* yacc.c:1646  */[0m
 2422 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2426:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2426 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).seconds = (yyvsp[-1].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2427 | #line 2428 "parse-datetime.c" /* yacc.c:1646  */[0m
 2428 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2432:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2432 |     { (yyval.rel) = RELATIVE_TIME_0; (yyval.rel).day = (yyvsp[0].intval); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2433 | #line 2434 "parse-datetime.c" /* yacc.c:1646  */[0m
 2434 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2438:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2438 |     { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2439 |         (yyval.timespec).tv_sec = (yyvsp[0].textintval).value; (yyval.timespec).tv_nsec = 0; }[0m
 2440 | #line 2441 "parse-datetime.c" /* yacc.c:1646  */[0m
 2441 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2438:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2438 |     { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m                                                      ^        
[0m      | [0;32m                                                       {
[0m[1mparse-datetime.c:2445:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2445 |     { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2446 |         (yyval.timespec).tv_sec = (yyvsp[0].textintval).value; (yyval.timespec).tv_nsec = 0; }[0m
 2447 | #line 2448 "parse-datetime.c" /* yacc.c:1646  */[0m
 2448 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2445:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2445 |     { if (time_overflow ((yyvsp[0].textintval).value)) YYABORT;[0m
      | [0;1;32m                                                      ^        
[0m      | [0;32m                                                       {
[0m[1mparse-datetime.c:2452:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2452 |     { digits_to_date_time (pc, (yyvsp[0].textintval)); }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2453 | #line 2454 "parse-datetime.c" /* yacc.c:1646  */[0m
 2454 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2458:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2458 |     {[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2459 |         /* Hybrid all-digit and relative offset, so that we accept e.g.,[0m
 2460 |            "YYYYMMDD +N days" as well as "YYYYMMDD N days".  */[0m
 2461 |         digits_to_date_time (pc, (yyvsp[-1].textintval));[0m
 2462 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
 2463 |       }[0m
 2464 | #line 2465 "parse-datetime.c" /* yacc.c:1646  */[0m
 2465 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2462:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2462 |         if (! apply_relative_time (pc, (yyvsp[0].rel), 1)) YYABORT;[0m
      | [0;1;32m                                                          ^        
[0m      | [0;32m                                                           {
[0m[1mparse-datetime.c:2469:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2469 |     { (yyval.intval) = -1; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2470 | #line 2471 "parse-datetime.c" /* yacc.c:1646  */[0m
 2471 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2475:5: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2475 |     { (yyval.intval) = (yyvsp[0].textintval).value; }[0m
      | [0;1;32m    ^
[0m      | [0;32m    {
[0m 2476 | #line 2477 "parse-datetime.c" /* yacc.c:1646  */[0m
 2477 |     break;[0m
      | [0;1;32m         
[0m      | [0;32m         ;} 
[0m[1mparse-datetime.c:2481:16: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2481 |       default: break;[0m
      | [0;1;32m               ^    
[0m      | [0;32m               {    ;} 
[0m[1mparse-datetime.c:2509:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2509 |   if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 2510 |     yystate = yytable[yystate];[0m
 2511 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:2511:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2511 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 2512 |     yystate = yydefgoto[yyn - YYNTOKENS];[0m
      | [0;1;32m                                         
[0m[1mparse-datetime.c:2575:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2575 |           if (yychar == YYEOF)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2576 |             YYABORT;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:2599:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2599 |   if (/*CONSTCOND*/ 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 2600 |      goto yyerrorlab;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:2626:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2626 |               if (0 < yyn)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 2627 |                 break;[0m
      | [0;1;32m                      
[0m[1mparse-datetime.c:2632:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2632 |       if (yyssp == yyss)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2633 |         YYABORT;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:2699:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2699 |   if (yyss != yyssa)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 2700 |     YYSTACK_FREE (yyss);[0m
      | [0;1;32m                        
[0m[1mparse-datetime.c:2920:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2920 |   if (s.digits <= 2 && mm < 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 2921 |     s.value *= 100;[0m
      | [0;1;32m                   
[0m[1mparse-datetime.c:2923:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2923 |   if (mm < 0)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m 2924 |     n_minutes = (s.value / 100) * 60 + s.value % 100;[0m
 2925 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:2933:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2933 |   if (overflow || ! (-24 * 60 <= n_minutes && n_minutes <= 24 * 60))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 2934 |     return false;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:2948:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2948 |       return 0 < hours && hours < 12 ? hours : hours == 12 ? 0 : -1;[0m
      | [0;1;32m      ^                                                            
[0m      | [0;32m      {                                                            ;} 
[0m[1mparse-datetime.c:2950:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2950 |       return 0 < hours && hours < 12 ? hours + 12 : hours == 12 ? 12 : -1;[0m
      | [0;1;32m      ^                                                                  
[0m      | [0;32m      {                                                                  ;} 
[0m[1mparse-datetime.c:2963:41: [0m[0;1;35mwarning: [0m[1m'_Static_assert' with no message is a C23 extension [clang-diagnostic-c23-extensions][0m
 2963 |   static_assert (TM_YEAR_BASE % 100 == 0);[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                        , ""
[0m[1mparse-datetime.c:2983:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2983 |       if (debug)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2984 |         dbg_printf (_("warning: adjusting year value %"PRIdMAX[0m
 2985 |                       " to %"PRIdMAX"\n"),[0m
 2986 |                     textyear.value, year);[0m
      | [0;1;32m                                          
[0m[1mparse-datetime.c:2993:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2993 |       if (debug)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 2994 |         dbg_printf (_("error: out-of-range year %"PRIdMAX"\n"), year);[0m
      | [0;1;32m                                                                      
[0m[1mparse-datetime.c:3006:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3006 |   for (tp = universal_time_zone_table; tp->name; tp++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3007 |     if (strcmp (name, tp->name) == 0)[0m
 3008 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3007:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3007 |     if (strcmp (name, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3008 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3012:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3012 |   for (tp = pc->local_time_zone_table; tp->name; tp++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3013 |     if (strcmp (name, tp->name) == 0)[0m
 3014 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3013:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3013 |     if (strcmp (name, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3014 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3016:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3016 |   for (tp = time_zone_table; tp->name; tp++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3017 |     if (strcmp (name, tp->name) == 0)[0m
 3018 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3017:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3017 |     if (strcmp (name, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3018 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3061:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3061 |   for (p = word; *p; p++)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 3062 |     *p = c_toupper (to_uchar (*p));[0m
      | [0;1;32m                                   
[0m[1mparse-datetime.c:3064:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3064 |   for (tp = meridian_table; tp->name; tp++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3065 |     if (strcmp (word, tp->name) == 0)[0m
 3066 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3065:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3065 |     if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3066 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3072:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3072 |   for (tp = month_and_day_table; tp->name; tp++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3073 |     if ((abbrev ? strncmp (word, tp->name, 3) : strcmp (word, tp->name)) == 0)[0m
 3074 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3073:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3073 |     if ((abbrev ? strncmp (word, tp->name, 3) : strcmp (word, tp->name)) == 0)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3074 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3076:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3076 |   if ((tp = lookup_zone (pc, word)))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3077 |     return tp;[0m
      | [0;1;32m              
[0m[1mparse-datetime.c:3079:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3079 |   if (strcmp (word, dst_table[0].name) == 0)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3080 |     return dst_table;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3082:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3082 |   for (tp = time_units_table; tp->name; tp++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3083 |     if (strcmp (word, tp->name) == 0)[0m
 3084 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3083:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3083 |     if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3084 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3090:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3090 |       for (tp = time_units_table; tp->name; tp++)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m 3091 |         if (strcmp (word, tp->name) == 0)[0m
 3092 |           return tp;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3091:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3091 |         if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3092 |           return tp;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3096:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3096 |   for (tp = relative_time_table; tp->name; tp++)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m 3097 |     if (strcmp (word, tp->name) == 0)[0m
 3098 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3097:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3097 |     if (strcmp (word, tp->name) == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3098 |       return tp;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3101:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3101 |   if (wordlen == 1)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3102 |     for (tp = military_table; tp->name; tp++)[0m
 3103 |       if (word[0] == tp->name[0])[0m
 3104 |         return tp;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:3102:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3102 |     for (tp = military_table; tp->name; tp++)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3103 |       if (word[0] == tp->name[0])[0m
 3104 |         return tp;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:3103:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3103 |       if (word[0] == tp->name[0])[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3104 |         return tp;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:3107:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3107 |   for (period_found = false, p = q = word; (*p = *q); q++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 3108 |     if (*q == '.')[0m
 3109 |       period_found = true;[0m
 3110 |     else[0m
 3111 |       p++;[0m
      | [0;1;32m          
[0m[1mparse-datetime.c:3108:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3108 |     if (*q == '.')[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 3109 |       period_found = true;[0m
 3110 |     else[0m
      | [0;32m    } 
[0m[1mparse-datetime.c:3110:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3110 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m 3111 |       p++;[0m
      | [0;1;32m          
[0m[1mparse-datetime.c:3112:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3112 |   if (period_found && (tp = lookup_zone (pc, word)))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3113 |     return tp;[0m
      | [0;1;32m              
[0m[1mparse-datetime.c:3125:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3125 |       while (c = *pc->input, c_isspace (c))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3126 |         pc->input++;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3135:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3135 |               while (c = *(pc->input = ++p), c_isspace (c))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m 3136 |                 continue;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3137:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3137 |               if (! c_isdigit (c))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3138 |                 /* skip the '-' sign */[0m
 3139 |                 continue;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3141:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3141 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3142 |             sign = 0;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3147:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3147 |               if (INT_MULTIPLY_WRAPV (value, 10, &value))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 3148 |                 return '?';[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:3149:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3149 |               if (INT_ADD_WRAPV (value, sign < 0 ? '0' - c : c - '0', &value))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3150 |                 return '?';[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:3166:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3166 |                   if (c_isdigit (*p))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 3167 |                     ns += *p++ - '0';[0m
      | [0;1;32m                                     
[0m[1mparse-datetime.c:3171:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3171 |               if (sign < 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3172 |                 for (; c_isdigit (*p); p++)[0m
 3173 |                   if (*p != '0')[0m
 3174 |                     {[0m
 3175 |                       ns++;[0m
 3176 |                       break;[0m
 3177 |                     }[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3172:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3172 |                 for (; c_isdigit (*p); p++)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 3173 |                   if (*p != '0')[0m
 3174 |                     {[0m
 3175 |                       ns++;[0m
 3176 |                       break;[0m
 3177 |                     }[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3178:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3178 |               while (c_isdigit (*p))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3179 |                 p++;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3186:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3186 |                   if (INT_SUBTRACT_WRAPV (s, 1, &s))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 3187 |                     return '?';[0m
      | [0;1;32m                               
[0m[1mparse-datetime.c:3214:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3214 |               if (p < buff + sizeof buff - 1)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 3215 |                 *p++ = c;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3224:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3224 |               if (debugging (pc))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 3225 |                 dbg_printf (_("error: unknown word '%s'\n"), buff);[0m
      | [0;1;32m                                                                   
[0m[1mparse-datetime.c:3232:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3232 |       if (c != '(')[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 3233 |         return to_uchar (*pc->input++);[0m
      | [0;1;32m                                       
[0m[1mparse-datetime.c:3239:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3239 |           if (c == '\0')[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3240 |             return c;[0m
      | [0;1;32m                     
[0m[1mparse-datetime.c:3241:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3241 |           if (c == '(')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3242 |             count++;[0m
 3243 |           else if (c == ')')[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:3243:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3243 |           else if (c == ')')[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3244 |             count--;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3267:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3267 |   if (tm1->tm_wday < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3268 |     return false;[0m
      | [0;1;32m                 
[0m[1mparse-datetime.c:3316:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3316 |       if (pc->local_zones_seen && !pc->zones_seen && 0 < pc->local_isdst)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 3317 |         tz += 60 * 60;[0m
      | [0;1;32m                      
[0m[1mparse-datetime.c:3371:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3371 |   if (!debugging (pc))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 3372 |     return;[0m
      | [0;1;32m           
[0m[1mparse-datetime.c:3392:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3392 |       if (sizeof tmp - 1 < i)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3393 |         i = sizeof tmp - 1;[0m
      | [0;1;32m                           
[0m[1mparse-datetime.c:3394:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3394 |       while (0 < i && tmp[i - 1] == ' ')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 3395 |         --i;[0m
      | [0;1;32m            
[0m[1mparse-datetime.c:3401:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3401 |   if (dst_shift)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 3402 |     dbg_printf (_("       non-existing due to daylight-saving time;\n"));[0m
      | [0;1;32m                                                                         
[0m[1mparse-datetime.c:3403:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3403 |   if (!eq_mday && !eq_month)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 3404 |     dbg_printf (_("       invalid day/month combination;\n"));[0m
      | [0;1;32m                                                              
[0m[1mparse-datetime.c:3444:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3444 |   while (c = *p, c_isspace (c))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 3445 |     p++;[0m
      | [0;1;32m        
[0m[1mparse-datetime.c:3460:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3460 |       for (s = tzbase; *s; s++, tzsize++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m[1mparse-datetime.c:3464:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3464 |             if (! (*s == '\\' || *s == '"'))[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3465 |               break;[0m
      | [0;1;32m                    
[0m[1mparse-datetime.c:3475:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3475 |                 if (!tz1alloc)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3476 |                   goto fail;[0m
      | [0;1;32m                            
[0m[1mparse-datetime.c:3480:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3480 |             for (s = tzbase; *s != '"'; s++)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3481 |               *z++ = *(s += *s == '\\');[0m
      | [0;1;32m                                        
[0m[1mparse-datetime.c:3484:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3484 |             if (!tz1)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 3485 |               goto fail;[0m
      | [0;1;32m                        
[0m[1mparse-datetime.c:3490:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3490 |             while (c = *p, c_isspace (c))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 3491 |               p++;[0m
      | [0;1;32m                  
[0m[1mparse-datetime.c:3498:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3498 |   if (! localtime_rz (tz, &now->tv_sec, &tmp))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3499 |     goto fail;[0m
      | [0;1;32m              
[0m[1mparse-datetime.c:3504:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3504 |   if (*p == '\0')[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 3505 |     p = "0";[0m
      | [0;1;32m            
[0m[1mparse-datetime.c:3514:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3514 |       if (debugging (&pc))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3515 |         dbg_printf (_("error: initial year out of range\n"));[0m
      | [0;1;32m                                                             
[0m[1mparse-datetime.c:3560:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3560 |         if (INT_ADD_WRAPV (Start, quarter * (90 * 24 * 60 * 60), &probe))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m 3561 |           break;[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:3609:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3609 |       if (debugging (&pc))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 3610 |         dbg_printf ((input_sentinel <= pc.input[0m
 3611 |                      ? _("error: parsing failed\n")[0m
 3612 |                      : _("error: parsing failed, stopped at '%s'\n")),[0m
 3613 |                     pc.input);[0m
      | [0;1;32m                              
[0m[1mparse-datetime.c:3624:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3624 |       if (pc.timespec_seen)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 3625 |         fprintf (stderr, _("'@timespec' - always UTC"));[0m
 3626 |       else if (pc.zones_seen)[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:3626:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3626 |       else if (pc.zones_seen)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 3627 |         fprintf (stderr, _("parsed date/time string"));[0m
 3628 |       else if (tzstring)[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:3630:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3630 |           if (tz != tzdefault)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3631 |             fprintf (stderr, _("TZ=\"%s\" in date string"), tzstring);[0m
 3632 |           else if (STREQ (tzstring, "UTC0"))[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:3637:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3637 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 3638 |             fprintf (stderr, _("TZ=\"%s\" environment value"), tzstring);[0m
      | [0;1;32m                                                                         
[0m[1mparse-datetime.c:3640:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3640 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 3641 |         fprintf (stderr, _("system default"));[0m
      | [0;1;32m                                              
[0m[1mparse-datetime.c:3646:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3646 |       if (pc.local_zones_seen && !pc.zones_seen && 0 < pc.local_isdst)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m 3647 |         fprintf (stderr, ", dst");[0m
      | [0;1;32m                                  
[0m[1mparse-datetime.c:3649:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3649 |       if (pc.zones_seen)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 3650 |         fprintf (stderr, " (%s)", time_zone_str (pc.time_zone, time_zone_buf));[0m
      | [0;1;32m                                                                               
[0m[1mparse-datetime.c:3655:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3655 |   if (pc.timespec_seen)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 3656 |     *result = pc.seconds;[0m
 3657 |   else[0m
      | [0;32m  } 
[0m[1mparse-datetime.c:3664:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3664 |               if (pc.times_seen > 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3665 |                 dbg_printf ("error: seen multiple time parts\n");[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3666:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3666 |               if (pc.dates_seen > 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 3667 |                 dbg_printf ("error: seen multiple date parts\n");[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3668:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3668 |               if (pc.days_seen > 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3669 |                 dbg_printf ("error: seen multiple days parts\n");[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3670:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3670 |               if (pc.dsts_seen > 1)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 3671 |                 dbg_printf ("error: seen multiple daylight-saving parts\n");[0m
      | [0;1;32m                                                                            
[0m[1mparse-datetime.c:3672:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3672 |               if ((pc.J_zones_seen + pc.local_zones_seen + pc.zones_seen) > 1)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3673 |                 dbg_printf ("error: seen multiple time-zone parts\n");[0m
      | [0;1;32m                                                                      
[0m[1mparse-datetime.c:3682:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3682 |           if (debugging (&pc))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3683 |             dbg_printf (_("error: year, month, or day overflow\n"));[0m
      | [0;1;32m                                                                    
[0m[1mparse-datetime.c:3693:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3693 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3694 |                 dbg_printf (_("error: invalid hour %"PRIdMAX"%s\n"),[0m
 3695 |                             pc.hour, mrd);[0m
      | [0;1;32m                                          
[0m[1mparse-datetime.c:3700:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3700 |           if (debugging (&pc))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3701 |             dbg_printf ((pc.times_seen[0m
 3702 |                          ? _("using specified time as starting value: '%s'\n")[0m
 3703 |                          : _("using current time as starting value: '%s'\n")),[0m
 3704 |                         debug_strftime (&tm, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                     
[0m[1mparse-datetime.c:3710:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3710 |           if (debugging (&pc))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3711 |             dbg_printf ("warning: using midnight as starting time: 00:00:00\n");[0m
      | [0;1;32m                                                                                
[0m[1mparse-datetime.c:3715:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3715 |       if (pc.dates_seen | pc.days_seen | pc.times_seen)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m 3716 |         tm.tm_isdst = -1;[0m
      | [0;1;32m                         
[0m[1mparse-datetime.c:3720:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3720 |       if (pc.local_zones_seen)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3721 |         tm.tm_isdst = pc.local_isdst;[0m
      | [0;1;32m                                     
[0m[1mparse-datetime.c:3756:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3756 |                   if (debugging (&pc))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 3757 |                     dbg_printf (_("error: tzalloc (\"%s\") failed\n"), tz2buf);[0m
      | [0;1;32m                                                                               
[0m[1mparse-datetime.c:3800:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3800 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3801 |                 dbg_printf (_("error: day '%s' "[0m
 3802 |                               "(day ordinal=%"PRIdMAX" number=%d) "[0m
 3803 |                               "resulted in an invalid date: '%s'\n"),[0m
 3804 |                             str_days (&pc, dbg_ord, sizeof dbg_ord),[0m
 3805 |                             pc.day_ordinal, pc.day_number,[0m
 3806 |                             debug_strfdatetime (&tm, &pc, dbg_tm,[0m
 3807 |                                                 sizeof dbg_tm));[0m
      | [0;1;32m                                                                
[0m[1mparse-datetime.c:3811:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3811 |           if (debugging (&pc))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 3812 |             dbg_printf (_("new start date: '%s' is '%s'\n"),[0m
 3813 |                         str_days (&pc, dbg_ord, sizeof dbg_ord),[0m
 3814 |                         debug_strfdatetime (&tm, &pc, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                              
[0m[1mparse-datetime.c:3820:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3820 |           if (!pc.dates_seen && !pc.days_seen)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m 3821 |             dbg_printf (_("using current date as starting value: '%s'\n"),[0m
 3822 |                         debug_strfdate (&tm, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                     
[0m[1mparse-datetime.c:3824:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3824 |           if (pc.days_seen && pc.dates_seen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 3825 |             dbg_printf (_("warning: day (%s) ignored when explicit dates "[0m
 3826 |                           "are given\n"),[0m
 3827 |                         str_days (&pc, dbg_ord, sizeof dbg_ord));[0m
      | [0;1;32m                                                                 
[0m[1mparse-datetime.c:3838:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3838 |               if ((pc.rel.year != 0 || pc.rel.month != 0) && tm.tm_mday != 15)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 3839 |                 dbg_printf (_("warning: when adding relative months/years, "[0m
 3840 |                               "it is recommended to specify the 15th of the "[0m
 3841 |                               "months\n"));[0m
      | [0;1;32m                                           
[0m[1mparse-datetime.c:3843:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3843 |               if (pc.rel.day != 0 && tm.tm_hour != 12)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 3844 |                 dbg_printf (_("warning: when adding relative days, "[0m
 3845 |                               "it is recommended to specify noon\n"));[0m
      | [0;1;32m                                                                      
[0m[1mparse-datetime.c:3853:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3853 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3854 |                 dbg_printf (_("error: %s:%d\n"), __FILE__, __LINE__);[0m
      | [0;1;32m                                                                     
[0m[1mparse-datetime.c:3868:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3868 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3869 |                 dbg_printf (_("error: adding relative date resulted "[0m
 3870 |                               "in an invalid date: '%s'\n"),[0m
 3871 |                             debug_strfdatetime (&tm, &pc, dbg_tm,[0m
 3872 |                                                 sizeof dbg_tm));[0m
      | [0;1;32m                                                                
[0m[1mparse-datetime.c:3900:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3900 |               if (tm0.tm_isdst != -1 && tm.tm_isdst != tm0.tm_isdst)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m 3901 |                 dbg_printf (_("warning: daylight saving time changed after "[0m
 3902 |                               "date adjustment\n"));[0m
      | [0;1;32m                                                    
[0m[1mparse-datetime.c:3953:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3953 |               if (debugging (&pc))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 3954 |                 dbg_printf (_("error: timezone %d caused time_t overflow\n"),[0m
 3955 |                             pc.time_zone);[0m
      | [0;1;32m                                          
[0m[1mparse-datetime.c:3991:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 3991 |             if (debugging (&pc))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 3992 |               dbg_printf (_("error: adding relative time caused an "[0m
 3993 |                             "overflow\n"));[0m
      | [0;1;32m                                           
[0m[1mparse-datetime.c:4024:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4024 |                 && tm.tm_isdst != lmt.tm_isdst)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 4025 |               dbg_printf (_("warning: daylight saving time changed after "[0m
 4026 |                             "time adjustment\n"));[0m
      | [0;1;32m                                                  
[0m[1mparse-datetime.c:4034:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4034 |       if (! tzstring)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 4035 |         dbg_printf (_("timezone: system default\n"));[0m
 4036 |       else if (STREQ (tzstring, "UTC0"))[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:4036:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4036 |       else if (STREQ (tzstring, "UTC0"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 4037 |         dbg_printf (_("timezone: Universal Time\n"));[0m
 4038 |       else[0m
      | [0;32m      } 
[0m[1mparse-datetime.c:4038:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4038 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4039 |         dbg_printf (_("timezone: TZ=\"%s\" environment value\n"), tzstring);[0m
      | [0;1;32m                                                                            
[0m[1mparse-datetime.c:4048:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4048 |       if (got_utc)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 4049 |         dbg_printf (_("final: %s (UTC)\n"),[0m
 4050 |                     debug_strfdatetime (&gmt, NULL,[0m
 4051 |                                         dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                
[0m[1mparse-datetime.c:4063:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4063 |           if (got_utcoff)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 4064 |             dbg_printf (_("final: %s (UTC%s)\n"),[0m
 4065 |                         debug_strfdatetime (&lmt, NULL, dbg_tm, sizeof dbg_tm),[0m
 4066 |                         time_zone_str (utcoff, time_zone_buf));[0m
 4067 |           else[0m
      | [0;32m          } 
[0m[1mparse-datetime.c:4067:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4067 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 4068 |             dbg_printf (_("final: %s (unknown time zone offset)\n"),[0m
 4069 |                         debug_strfdatetime (&lmt, NULL, dbg_tm, sizeof dbg_tm));[0m
      | [0;1;32m                                                                                
[0m[1mparse-datetime.c:4076:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4076 |   if (tz != tzdefault)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 4077 |     tzfree (tz);[0m
      | [0;1;32m                
[0m[1mparse-datetime.c:4105:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 4105 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 4106 |     return false;[0m
      | [0;1;32m                 
[0m262 warnings generated.
Suppressed 24 warnings (24 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 54/111][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp57ap4tr2.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/bitrotate.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 55/111][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpj1m1c1m9.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/full-write.c
[1mfull-write.c:66:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       if (n_rw == (size_t) -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m   67 |         break;[0m
      | [0;1;32m              
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 56/111][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpb656_fn_.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/asnprintf.c
[ 57/111][1.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmplo_gip8z.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/progname.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 58/111][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpj_0rh7m5.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/wctype-h.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 59/111][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp5zfzlps9.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/openat-proc.c
[1mopenat-proc.c:83:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   83 |         if (proc_self_fd < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   84 |           proc_status = -1;[0m
   85 |         else[0m
      | [0;32m        } 
[0m[1mopenat-proc.c:93:13: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   93 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:93:13: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
   93 |             sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mopenat-proc.c:99:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   99 |     if (proc_status < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  100 |       return NULL;[0m
  101 |     else[0m
      | [0;32m    } 
[0m[1mopenat-proc.c:107:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |             if (! result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  108 |               return NULL;[0m
      | [0;1;32m                          
[0m[1mopenat-proc.c:111:18: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  111 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:111:18: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  111 |         dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);[0m
      | [0;1;32m                 ^~~~~~~
[0m[1mopenat-proc.c:152:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  152 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m[1mopenat-proc.c:152:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  152 |   strcpy (result + dirlen, file);[0m
      | [0;1;32m  ^~~~~~
[0m10 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 60/111][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpdd27gc1z.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/exitfail.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 61/111][4.5s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpzb5xmd9k.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/obstack.c
[1mobstack.c:85:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   85 |   if (h->use_extra_arg)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   86 |     return h->chunkfun.extra (h->extra_arg, size);[0m
   87 |   else[0m
      | [0;32m  } 
[0m[1mobstack.c:87:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   87 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   88 |     return h->chunkfun.plain (size);[0m
      | [0;1;32m                                    
[0m[1mobstack.c:94:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   94 |   if (h->use_extra_arg)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   95 |     h->freefun.extra (h->extra_arg, old_chunk);[0m
   96 |   else[0m
      | [0;32m  } 
[0m[1mobstack.c:96:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   97 |     h->freefun.plain (old_chunk);[0m
      | [0;1;32m                                 
[0m[1mobstack.c:113:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |   if (alignment == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  114 |     alignment = DEFAULT_ALIGNMENT;[0m
      | [0;1;32m                                  
[0m[1mobstack.c:136:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |   if (!chunk)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  137 |     (*obstack_alloc_failed_handler) ();[0m
      | [0;1;32m                                       
[0m[1mobstack.c:192:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |   if (new_size < sum2)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  193 |     new_size = sum2;[0m
      | [0;1;32m                    
[0m[1mobstack.c:194:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  194 |   if (new_size < h->chunk_size)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  195 |     new_size = h->chunk_size;[0m
      | [0;1;32m                             
[0m[1mobstack.c:198:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |   if (obj_size <= sum1 && sum1 <= sum2)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  199 |     new_chunk = call_chunkfun (h, new_size);[0m
      | [0;1;32m                                            
[0m[1mobstack.c:200:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |   if (!new_chunk)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  201 |     (*obstack_alloc_failed_handler)();[0m
      | [0;1;32m                                      
[0m[1mobstack.c:211:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  211 |   memcpy (object_base, h->object_base, obj_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mobstack.c:211:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  211 |   memcpy (object_base, h->object_base, obj_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mobstack.c:285:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |   else if (obj != 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  286 |     /* obj is not in any of the chunks! */[0m
  287 |     abort ();[0m
      | [0;1;32m             
[0m[1mobstack.c:339:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  339 |   fprintf (stderr, "%s\n", _("memory exhausted"));[0m
      | [0;1;32m  ^~~~~~~
[0m[1mobstack.c:339:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  339 |   fprintf (stderr, "%s\n", _("memory exhausted"));[0m
      | [0;1;32m  ^~~~~~~
[0m27 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 62/111][2.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp28ffc_dl.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/version-etc.c
[1mversion-etc.c:66:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |   if (command_name)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
   68 |   else[0m
      | [0;32m  } 
[0m[1mversion-etc.c:67:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:67:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   67 |     fprintf (stream, "%s (%s) %s\n", command_name, package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:68:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m                                                  
[0m[1mversion-etc.c:69:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:69:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   69 |     fprintf (stream, "%s %s\n", package, version);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mversion-etc.c:83:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   83 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:83:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   83 |   fprintf (stream, version_etc_copyright, _("(C)"), COPYRIGHT_YEAR);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:88:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   88 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:88:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   88 |   fprintf (stream, _("\[0m
      | [0;1;32m  ^~~~~~~
[0m[1mversion-etc.c:102:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  102 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mversion-etc.c:105:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:105:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:105:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  105 |       fprintf (stream, _("Written by %s.\n"), authors[0]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  106 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:109:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:109:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:109:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |       fprintf (stream, _("Written by %s and %s.\n"), authors[0], authors[1]);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  110 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:113:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:113:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:113:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  113 |       fprintf (stream, _("Written by %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  114 |                authors[0], authors[1], authors[2]);[0m
  115 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:120:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:120:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:120:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |       fprintf (stream, _("Written by %s, %s, %s,\nand %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  121 |                authors[0], authors[1], authors[2], authors[3]);[0m
  122 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:127:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:127:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:127:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  128 |                authors[0], authors[1], authors[2], authors[3], authors[4]);[0m
  129 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:134:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:134:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:134:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  135 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  136 |                authors[5]);[0m
  137 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:142:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:142:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:142:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  142 |       fprintf (stream, _("Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"),[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  143 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  144 |                authors[5], authors[6]);[0m
  145 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:150:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:150:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:150:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  151 | Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"),[0m
  152 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  153 |                 authors[5], authors[6], authors[7]);[0m
  154 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:159:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:159:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:159:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  159 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  160 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"),[0m
  161 |                authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  162 |                authors[5], authors[6], authors[7], authors[8]);[0m
  163 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:170:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:170:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^~~~~~~
[0m[1mversion-etc.c:170:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  170 |       fprintf (stream, _("\[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  171 | Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"),[0m
  172 |                 authors[0], authors[1], authors[2], authors[3], authors[4],[0m
  173 |                 authors[5], authors[6], authors[7], authors[8]);[0m
  174 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mversion-etc.c:189:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |   for (n_authors = 0; authors[n_authors]; n_authors++)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  190 |     ;[0m
      | [0;1;32m     
[0m[1mversion-etc.c:209:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |        n_authors++)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  210 |     ;[0m
      | [0;1;32m     
[0m41 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 63/111][8.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpo0qicwtb.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/lib/paxnames.c
[1mpaxnames.c:54:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   54 |       memcpy (s, string, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mpaxnames.c:54:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   54 |       memcpy (s, string, len);[0m
      | [0;1;32m      ^~~~~~
[0m[1mpaxnames.c:57:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   57 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   58 |     s = xstrdup (string);[0m
      | [0;1;32m                         
[0m[1mpaxnames.c:63:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   63 |          && (e = hash_insert (t, s))))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   64 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mpaxnames.c:68:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |       if (return_prefix)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   69 |         *return_prefix = s;[0m
      | [0;1;32m                           
[0m[1mpaxnames.c:105:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |   if (absolute_names)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  106 |     p = file_name;[0m
  107 |   else[0m
      | [0;32m  } 
[0m[1mpaxnames.c:116:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  116 |           if (p[0] == '.' && p[1] == '.' && (ISSLASH (p[2]) || !p[2]))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  117 |             prefix_len = p + 2 - file_name;[0m
      | [0;1;32m                                           
[0m[1mpaxnames.c:122:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |               if (ISSLASH (c))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  123 |                 break;[0m
      | [0;1;32m                      
[0m[1mpaxnames.c:128:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |       for (p = file_name + prefix_len; ISSLASH (*p); p++)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  129 |         continue;[0m
      | [0;1;32m                 
[0m20 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 64/111][6.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmplxqup7j8.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/main.c
[1mmain.c:282:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  282 |   if (strlen (arg) > 2 && memcmp (arg, "no-", 3) == 0)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  283 |     offset = 3;[0m
      | [0;1;32m               
[0m[1mmain.c:285:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  285 |   for (wt = warn_tab; wt->name; wt++)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  286 |     if (strcmp (arg + offset, wt->name) == 0)[0m
  287 |       {[0m
  288 |         if (offset)[0m
  289 |           warn_option &= ~wt->flag;[0m
  290 |         else[0m
  291 |           warn_option |= wt->flag;[0m
  292 |         return 0;[0m
  293 |       }[0m
      | [0;1;32m       
[0m[1mmain.c:288:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |         if (offset)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  289 |           warn_option &= ~wt->flag;[0m
  290 |         else[0m
      | [0;32m        } 
[0m[1mmain.c:290:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  291 |           warn_option |= wt->flag;[0m
      | [0;1;32m                                  
[0m[1mmain.c:304:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  304 |       name_end = '\0';[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  305 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:308:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  308 |       reset_time_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  309 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:312:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  312 |       append_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  313 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:316:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  316 |       swap_bytes_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  317 |       swap_halfwords_flag = true;[0m
  318 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:321:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  321 |       io_block_size = 5120;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  322 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:325:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  325 |       io_block_size = atoi (arg);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  326 |       if (io_block_size < 1 || io_block_size > INT_MAX/512)[0m
  327 |         USAGE_ERROR ((0, 0, _("invalid block size")));[0m
  328 |       io_block_size *= 512;[0m
  329 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:326:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |       if (io_block_size < 1 || io_block_size > INT_MAX/512)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  327 |         USAGE_ERROR ((0, 0, _("invalid block size")));[0m
      | [0;1;32m                                                      
[0m[1mmain.c:332:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  332 |       if (archive_format != arf_unknown)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  333 |         USAGE_ERROR ((0, 0, _("Archive format multiply defined")));[0m
  334 | #ifdef SVR4_COMPAT[0m
  335 |       archive_format = arf_newascii; /* -H newc.  */[0m
  336 | #else[0m
  337 |       archive_format = arf_oldascii; /* -H odc.  */[0m
  338 | #endif[0m
  339 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:332:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |       if (archive_format != arf_unknown)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  333 |         USAGE_ERROR ((0, 0, _("Archive format multiply defined")));[0m
      | [0;1;32m                                                                   
[0m[1mmain.c:342:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  342 |       io_block_size = atoi (arg);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  343 |       if (io_block_size < 1)[0m
  344 |         USAGE_ERROR ((0, 0, _("invalid block size")));[0m
  345 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:343:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |       if (io_block_size < 1)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  344 |         USAGE_ERROR ((0, 0, _("invalid block size")));[0m
      | [0;1;32m                                                      
[0m[1mmain.c:348:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  348 |       create_dir_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  349 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:352:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  352 |       change_directory_option = arg;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  353 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:356:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  356 |       copy_matching_files = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  357 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:360:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  360 |       pattern_file_name = arg;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  361 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:364:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  364 |       archive_name = arg;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  365 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:368:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  368 |       if (archive_format != arf_unknown)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mmain.c:368:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |       if (archive_format != arf_unknown)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  369 |         USAGE_ERROR ((0, 0, _("Archive format multiply defined")));[0m
      | [0;1;32m                                                                   
[0m[1mmain.c:370:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |       if (!strcasecmp (arg, "crc"))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  371 |         archive_format = arf_crcascii;[0m
  372 |       else if (!strcasecmp (arg, "newc"))[0m
      | [0;32m      } 
[0m[1mmain.c:372:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  372 |       else if (!strcasecmp (arg, "newc"))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  373 |         archive_format = arf_newascii;[0m
  374 |       else if (!strcasecmp (arg, "odc"))[0m
      | [0;32m      } 
[0m[1mmain.c:374:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |       else if (!strcasecmp (arg, "odc"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  375 |         archive_format = arf_oldascii;[0m
  376 |       else if (!strcasecmp (arg, "bin"))[0m
      | [0;32m      } 
[0m[1mmain.c:376:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  376 |       else if (!strcasecmp (arg, "bin"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  377 |         archive_format = arf_binary;[0m
  378 |       else if (!strcasecmp (arg, "ustar"))[0m
      | [0;32m      } 
[0m[1mmain.c:378:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |       else if (!strcasecmp (arg, "ustar"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  379 |         archive_format = arf_ustar;[0m
  380 |       else if (!strcasecmp (arg, "tar"))[0m
      | [0;32m      } 
[0m[1mmain.c:380:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |       else if (!strcasecmp (arg, "tar"))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  381 |         archive_format = arf_tar;[0m
  382 |       else if (!strcasecmp (arg, "hpodc"))[0m
      | [0;32m      } 
[0m[1mmain.c:382:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |       else if (!strcasecmp (arg, "hpodc"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  383 |         archive_format = arf_hpoldascii;[0m
  384 |       else if (!strcasecmp (arg, "hpbin"))[0m
      | [0;32m      } 
[0m[1mmain.c:384:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  384 |       else if (!strcasecmp (arg, "hpbin"))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  385 |         archive_format = arf_hpbinary;[0m
  386 |       else[0m
      | [0;32m      } 
[0m[1mmain.c:386:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  386 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  387 |         USAGE_ERROR ((0, 0, _("\[0m
  388 | invalid archive format `%s'; valid formats are:\n\[0m
  389 | crc newc odc bin ustar tar (all-caps also recognized)"), arg));[0m
      | [0;1;32m                                                               
[0m[1mmain.c:393:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  393 |       if (copy_function != 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  394 |         USAGE_ERROR ((0, 0, _("Mode already defined")));[0m
  395 |       copy_function = process_copy_in;[0m
  396 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:393:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |       if (copy_function != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  394 |         USAGE_ERROR ((0, 0, _("Mode already defined")));[0m
      | [0;1;32m                                                        
[0m[1mmain.c:399:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  399 |       input_archive_name = arg;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  400 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:403:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  403 |       link_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  404 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:407:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  407 |       xstat = stat;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  408 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:411:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  411 |       retain_time_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  412 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:415:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  415 |       set_new_media_message (arg);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  416 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:419:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  419 |       numeric_uid = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  420 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:423:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  423 |       no_abs_paths_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  424 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:427:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  427 |       no_abs_paths_flag = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  428 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:431:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  431 |       if (set_owner_flag || set_group_flag)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  432 |         USAGE_ERROR ((0, 0,[0m
  433 |                       _("--no-preserve-owner cannot be used with --owner")));[0m
  434 |       no_chown_flag = true;[0m
  435 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:431:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  431 |       if (set_owner_flag || set_group_flag)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  432 |         USAGE_ERROR ((0, 0,[0m
  433 |                       _("--no-preserve-owner cannot be used with --owner")));[0m
      | [0;1;32m                                                                             
[0m[1mmain.c:438:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  438 |       if (copy_function != 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  439 |         USAGE_ERROR ((0, 0, _("Mode already defined")));[0m
  440 |       copy_function = process_copy_out;[0m
  441 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:438:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  438 |       if (copy_function != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  439 |         USAGE_ERROR ((0, 0, _("Mode already defined")));[0m
      | [0;1;32m                                                        
[0m[1mmain.c:444:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  444 |       output_archive_name = arg;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  445 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:448:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  448 |       only_verify_crc_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  449 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:452:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  452 |       if (copy_function != 0)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  453 |         USAGE_ERROR ((0, 0, _("Mode already defined")));[0m
  454 |       copy_function = process_copy_pass;[0m
  455 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:452:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  452 |       if (copy_function != 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  453 |         USAGE_ERROR ((0, 0, _("Mode already defined")));[0m
      | [0;1;32m                                                        
[0m[1mmain.c:458:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  458 |       ignore_devno_option = 1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  459 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:462:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  462 |       renumber_inodes_option = 1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  463 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:466:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  466 |       ignore_dirnlink_option = 1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  467 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:470:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  470 |       ignore_devno_option = renumber_inodes_option =[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  471 |         ignore_dirnlink_option = 1;[0m
  472 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:475:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  475 |       rsh_command_option = arg;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  476 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:479:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |       rename_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  480 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:483:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  483 |       rename_batch_file = arg;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  484 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:487:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |       quiet_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  488 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:491:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  491 |       if (no_chown_flag)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1mmain.c:491:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  491 |       if (no_chown_flag)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  492 |         USAGE_ERROR ((0, 0,[0m
  493 |                       _("--owner cannot be used with --no-preserve-owner")));[0m
  494 |       else[0m
      | [0;32m      } 
[0m[1mmain.c:500:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  500 |           if (e)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  501 |             USAGE_ERROR ((0, 0, "%s: %s", arg, e));[0m
      | [0;1;32m                                                   
[0m[1mmain.c:516:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  516 |       swap_bytes_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  517 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:520:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  520 |       swap_halfwords_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  521 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:524:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  524 |       table_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  525 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:528:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  528 |       unconditional_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  529 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:532:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  532 |       verbose_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  533 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:536:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  536 |       dot_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  537 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:540:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  540 |       if (warn_control (arg))[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  541 |         USAGE_ERROR ((0, 0, _("Invalid value for --warning option: %s"), arg));[0m
  542 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:540:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  540 |       if (warn_control (arg))[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  541 |         USAGE_ERROR ((0, 0, _("Invalid value for --warning option: %s"), arg));[0m
      | [0;1;32m                                                                               
[0m[1mmain.c:545:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  545 |       sparse_flag = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  546 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:549:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  549 |       force_local_option = 1;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  550 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:559:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  559 |       to_stdout_option = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  560 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mmain.c:563:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  563 |       return ARGP_ERR_UNKNOWN;[0m
      | [0;1;32m      ^                      
[0m      | [0;32m      {                      ;} 
[0m[1mmain.c:596:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  596 |   if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &index, NULL))[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  597 |     exit (PAXEXIT_FAILURE);[0m
      | [0;1;32m                           
[0m[1mmain.c:603:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |       if (table_flag)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  604 |         copy_function = process_copy_in;[0m
  605 |       else[0m
      | [0;32m      } 
[0m[1mmain.c:605:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  606 |         USAGE_ERROR ((0, 0,[0m
  607 |                       _("You must specify one of -oipt options.")));[0m
      | [0;1;32m                                                                    
[0m[1mmain.c:631:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  631 |       if (archive_name && input_archive_name)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  632 |         USAGE_ERROR ((0, 0,[0m
  633 |                       _("Both -I and -F are used in copy-in mode")));[0m
      | [0;1;32m                                                                     
[0m[1mmain.c:635:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  635 |       if (archive_format == arf_crcascii)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  636 |         crc_i_flag = true;[0m
      | [0;1;32m                          
[0m[1mmain.c:639:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  639 |       if (input_archive_name)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  640 |         archive_name = input_archive_name;[0m
      | [0;1;32m                                          
[0m[1mmain.c:644:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |       if (index != argc)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  645 |         USAGE_ERROR ((0, 0, _("Too many arguments")));[0m
      | [0;1;32m                                                      
[0m[1mmain.c:662:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  662 |       if (append_flag && !(archive_name || output_archive_name))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  663 |         USAGE_ERROR ((0, 0,[0m
  664 |                       _("--append is used but no archive file name "[0m
  665 |                         "is given (use -F or -O options)")));[0m
      | [0;1;32m                                                             
[0m[1mmain.c:669:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  669 |       if (archive_name && output_archive_name)[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  670 |         USAGE_ERROR ((0, 0,[0m
  671 |                       _("Both -O and -F are used in copy-out mode")));[0m
      | [0;1;32m                                                                      
[0m[1mmain.c:673:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  673 |       if (archive_format == arf_unknown)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  674 |         archive_format = arf_binary;[0m
      | [0;1;32m                                    
[0m[1mmain.c:675:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  675 |       if (output_archive_name)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  676 |         archive_name = output_archive_name;[0m
      | [0;1;32m                                           
[0m[1mmain.c:678:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  678 |       if (!arf_stores_inode_p (archive_format))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  679 |         renumber_inodes_option = ignore_devno_option = 0;[0m
      | [0;1;32m                                                         
[0m[1mmain.c:684:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |       if (index < argc - 1)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  685 |         USAGE_ERROR ((0, 0, _("Too many arguments")));[0m
  686 |       else if (index > argc - 1)[0m
      | [0;32m      } 
[0m[1mmain.c:686:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  686 |       else if (index > argc - 1)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  687 |         USAGE_ERROR ((0, 0, _("Not enough arguments")));[0m
      | [0;1;32m                                                        
[0m[1mmain.c:689:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  689 |       if (archive_format != arf_unknown)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  690 |         USAGE_ERROR ((0, 0,[0m
  691 |                       _("Archive format is not specified in copy-pass mode "[0m
  692 |                         "(use --format option)")));[0m
      | [0;1;32m                                                   
[0m[1mmain.c:715:81: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  715 |       if (copy_function != process_copy_in && copy_function != process_copy_out)[0m
      | [0;1;32m                                                                                ^
[0m      | [0;32m                                                                                 {
[0m  716 |         error (PAXEXIT_FAILURE, 0,[0m
  717 |                _("-F can be used only with --create or --extract"));[0m
      | [0;1;32m                                                                    
[0m[1mmain.c:719:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  719 |       if (archive_des < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  720 |         error (PAXEXIT_FAILURE, errno, _("Cannot open %s"),[0m
  721 |                quotearg_colon (archive_name));[0m
      | [0;1;32m                                              
[0m[1mmain.c:727:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  727 |   if (set_owner_flag == false && set_group_flag == false && geteuid ())[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  728 |     no_chown_flag = true;[0m
      | [0;1;32m                         
[0m[1mmain.c:747:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  747 |       if (io_block_size >= 512)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  748 |         in_buf_size = 2 * io_block_size;[0m
  749 |       else[0m
      | [0;32m      } 
[0m[1mmain.c:749:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  749 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  750 |         in_buf_size = 1024;[0m
      | [0;1;32m                           
[0m[1mmain.c:791:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |   if (archive_des >= 0 && rmtclose (archive_des) == -1)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  792 |     error (PAXEXIT_FAILURE, errno, _("error closing archive"));[0m
      | [0;1;32m                                                               
[0m107 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 65/111][1.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp8_r85yj9.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/mbrtowc.c
[1mmbrtowc.c:97:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   97 |   if (! pwc)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m   98 |     pwc = &wc;[0m
      | [0;1;32m              
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 66/111][1.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp8o1rfp54.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-version-etc.c
3 warnings generated.
Suppressed 3 warnings (3 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 67/111][3.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmppf1vp2cm.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/global.c
12 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 68/111][2.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpwcge3ukr.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/filenamecat-lgpl.c
[1mfilenamecat-lgpl.c:58:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   58 |       if (! ISSLASH (dir[dirlen - 1]) && ! ISSLASH (*base))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   59 |         sep = '/';[0m
      | [0;1;32m                  
[0m[1mfilenamecat-lgpl.c:72:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |   if (p_concat == NULL)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   73 |     return NULL;[0m
      | [0;1;32m                
[0m[1mfilenamecat-lgpl.c:82:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |     if (base_in_result)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   83 |       *base_in_result = p;[0m
      | [0;1;32m                          
[0m7 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 69/111][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpyx0rj4ig.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/strnlen1.c
[1mstrnlen1.c:31:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   31 |   if (end != NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m   32 |     return end - string + 1;[0m
   33 |   else[0m
      | [0;32m  } 
[0m[1mstrnlen1.c:33:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   34 |     return maxlen;[0m
      | [0;1;32m                  
[0m4 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 70/111][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp19k2nb9o.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/gettime.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 71/111][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpoedpzzik.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/dirname.c
[1mdirname.c:35:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   35 |   if (!result)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   36 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m5 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 72/111][0.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp6bbhmk87.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/c-ctype.c
16 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 73/111][1.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpo_3wirch.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/opendir-safer.c
[1mopendir-safer.c:62:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |               if (! newdp)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   63 |                 close (f);[0m
      | [0;1;32m                          
[0m3 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 74/111][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpqxiev4ib.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/timespec.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 75/111][1.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpiwkoby7l.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/safe-read.c
[1msafe-read.c:62:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   62 |       if (0 <= result)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m   63 |         return result;[0m
   64 |       else if (IS_EINTR (errno))[0m
      | [0;32m      } 
[0m[1msafe-read.c:64:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |       else if (IS_EINTR (errno))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   65 |         continue;[0m
   66 |       else if (errno == EINVAL && SYS_BUFSIZE_MAX < count)[0m
      | [0;32m      } 
[0m[1msafe-read.c:66:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   66 |       else if (errno == EINVAL && SYS_BUFSIZE_MAX < count)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m   67 |         count = SYS_BUFSIZE_MAX;[0m
   68 |       else[0m
      | [0;32m      } 
[0m[1msafe-read.c:68:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   68 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   69 |         return result;[0m
      | [0;1;32m                      
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 76/111][1.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp51mx73g7.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/unistd.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 77/111][6.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpie6ux8rb.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/dstring.c
[1mdstring.c:37:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   37 |   memset (string, 0, sizeof *string);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdstring.c:37:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   37 |   memset (string, 0, sizeof *string);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdstring.c:93:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |   if (s->ds_idx == 0 && next_ch == EOF)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m   94 |     return NULL;[0m
   95 |   else[0m
      | [0;32m  } 
[0m[1mdstring.c:95:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   96 |     return s->ds_string;[0m
      | [0;1;32m                        
[0m[1mdstring.c:117:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  117 |   memcpy (s->ds_string + s->ds_idx, str, len);[0m
      | [0;1;32m  ^~~~~~
[0m[1mdstring.c:117:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  117 |   memcpy (s->ds_string + s->ds_idx, str, len);[0m
      | [0;1;32m  ^~~~~~
[0m6 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 78/111][0.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp74n7e22d.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-pv.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 79/111][0.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmphg7vxjit.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/umaxtostr.c
4 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 80/111][0.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp1l75a2t8.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/timegm.c
2 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 81/111][3.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp4dn4s8m2.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argmatch.c
[1margmatch.c:95:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |           if (strlen (arglist[i]) == arglen)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m   96 |             /* Exact match found.  */[0m
   97 |             return i;[0m
   98 |           else if (matchind == -1)[0m
      | [0;32m          } 
[0m[1margmatch.c:98:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |           else if (matchind == -1)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   99 |             /* First nonexact match found.  */[0m
  100 |             matchind = i;[0m
  101 |           else[0m
      | [0;32m          } 
[0m[1margmatch.c:115:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |   if (ambiguous)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  116 |     return -2;[0m
  117 |   else[0m
      | [0;32m  } 
[0m[1margmatch.c:117:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  118 |     return matchind;[0m
      | [0;1;32m                    
[0m[1margmatch.c:129:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |       if (!strcmp (arglist[i], arg))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  130 |         return i;[0m
      | [0;1;32m                 
[0m[1margmatch.c:166:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  167 |     if ((i == 0)[0m
  168 |         || memcmp (last_val, (char const *) vallist + valsize * i, valsize))[0m
  169 |       {[0m
  170 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
  171 |         last_val = (char const *) vallist + valsize * i;[0m
  172 |       }[0m
  173 |     else[0m
  174 |       {[0m
  175 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
  176 |       }[0m
      | [0;1;32m       
[0m[1margmatch.c:170:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  170 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:170:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  170 |         fprintf (stderr, "\n  - %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:175:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  175 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:175:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  175 |         fprintf (stderr, ", %s", quote (arglist[i]));[0m
      | [0;1;32m        ^~~~~~~
[0m[1margmatch.c:195:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (allow_abbreviation)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  196 |     res = argmatch (arg, arglist, vallist, valsize);[0m
  197 |   else[0m
      | [0;32m  } 
[0m[1margmatch.c:197:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  197 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  198 |     res = argmatch_exact (arg, arglist);[0m
      | [0;1;32m                                        
[0m[1margmatch.c:200:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  200 |   if (res >= 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  201 |     /* Success. */[0m
  202 |     return res;[0m
      | [0;1;32m               
[0m[1margmatch.c:221:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  221 |   for (i = 0; arglist[i]; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  222 |     if (!memcmp (value, (char const *) vallist + valsize * i, valsize))[0m
  223 |       return arglist[i];[0m
      | [0;1;32m                        
[0m[1margmatch.c:222:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |     if (!memcmp (value, (char const *) vallist + valsize * i, valsize))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  223 |       return arglist[i];[0m
      | [0;1;32m                        
[0m27 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 82/111][1.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpjex7xq9d.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/btowc.c
[1mbtowc.c:38:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   38 |       memset (&state, 0, sizeof (mbstate_t));[0m
      | [0;1;32m      ^~~~~~
[0m[1mbtowc.c:38:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
   38 |       memset (&state, 0, sizeof (mbstate_t));[0m
      | [0;1;32m      ^~~~~~
[0m[1mbtowc.c:40:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   40 |       if (!(ret == (size_t)(-1) || ret == (size_t)(-2)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m   41 | #else[0m
   42 |       if (mbtowc (&wc, buf, 1) >= 0)[0m
   43 | #endif[0m
   44 |         return wc;[0m
      | [0;1;32m                  
[0m6 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 83/111][15.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpipg41y0o.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/c-strcasecmp.c
[1mc-strcasecmp.c:33:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strcasecmp.c:41:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (c1 == '\0')[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strcasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strcasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m20 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 84/111][9.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpr1dkenb7.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/idcache.c
[1midcache.c:64:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   64 |   for (tail = user_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m   65 |     if (tail->id.u == uid)[0m
   66 |       return tail->name;[0m
      | [0;1;32m                        
[0m[1midcache.c:65:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   65 |     if (tail->id.u == uid)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   66 |       return tail->name;[0m
      | [0;1;32m                        
[0m[1midcache.c:76:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   76 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   77 |     tail->name = xstrdup (pwent->pw_name);[0m
      | [0;1;32m                                          
[0m[1midcache.c:96:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   for (tail = user_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m   97 |     /* Avoid a function call for the most common case.  */[0m
   98 |     if (*tail->name == *user && !strcmp (tail->name, user))[0m
   99 |       return &tail->id.u;[0m
      | [0;1;32m                         
[0m[1midcache.c:98:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |     if (*tail->name == *user && !strcmp (tail->name, user))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m   99 |       return &tail->id.u;[0m
      | [0;1;32m                         
[0m[1midcache.c:101:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |   for (tail = nouser_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  102 |     /* Avoid a function call for the most common case.  */[0m
  103 |     if (*tail->name == *user && !strcmp (tail->name, user))[0m
  104 |       return 0;[0m
      | [0;1;32m               
[0m[1midcache.c:103:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  103 |     if (*tail->name == *user && !strcmp (tail->name, user))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  104 |       return 0;[0m
      | [0;1;32m               
[0m[1midcache.c:138:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |   for (tail = group_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  139 |     if (tail->id.g == gid)[0m
  140 |       return tail->name;[0m
      | [0;1;32m                        
[0m[1midcache.c:139:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  139 |     if (tail->id.g == gid)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  140 |       return tail->name;[0m
      | [0;1;32m                        
[0m[1midcache.c:150:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  151 |     tail->name = xstrdup (grent->gr_name);[0m
      | [0;1;32m                                          
[0m[1midcache.c:170:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |   for (tail = group_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  171 |     /* Avoid a function call for the most common case.  */[0m
  172 |     if (*tail->name == *group && !strcmp (tail->name, group))[0m
  173 |       return &tail->id.g;[0m
      | [0;1;32m                         
[0m[1midcache.c:172:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |     if (*tail->name == *group && !strcmp (tail->name, group))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  173 |       return &tail->id.g;[0m
      | [0;1;32m                         
[0m[1midcache.c:175:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |   for (tail = nogroup_alist; tail; tail = tail->next)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  176 |     /* Avoid a function call for the most common case.  */[0m
  177 |     if (*tail->name == *group && !strcmp (tail->name, group))[0m
  178 |       return 0;[0m
      | [0;1;32m               
[0m[1midcache.c:177:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |     if (*tail->name == *group && !strcmp (tail->name, group))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  178 |       return 0;[0m
      | [0;1;32m               
[0m26 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 85/111][16.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp7w9h8lde.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/makepath.c
[1mmakepath.c:64:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   64 |   strcpy (dirpath, argpath);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmakepath.c:64:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   64 |   strcpy (dirpath, argpath);[0m
      | [0;1;32m  ^~~~~~
[0m[1mmakepath.c:72:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   72 |       while (*slash == '/')[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   73 |         slash++;[0m
      | [0;1;32m                
[0m[1mmakepath.c:86:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |                   if (verbose_fmt_string != NULL)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m   87 |                     error (0, 0, verbose_fmt_string, dirpath);[0m
      | [0;1;32m                                                              
[0m[1mmakepath.c:89:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |                   if (stat (dirpath, &stats))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m   90 |                     stat_error (dirpath);[0m
   91 |                   else[0m
      | [0;32m                  } 
[0m[1mmakepath.c:93:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |                       if (owner != -1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   94 |                         stats.st_uid = owner;[0m
      | [0;1;32m                                             
[0m[1mmakepath.c:95:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   95 |                       if (group != -1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   96 |                         stats.st_gid = group;[0m
      | [0;1;32m                                             
[0m[1mmakepath.c:112:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |           while (*slash == '/')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  113 |             slash++;[0m
      | [0;1;32m                    
[0m[1mmakepath.c:132:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  132 |       else if (stat (dirpath, &stats))[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  133 |         stat_error (dirpath);[0m
  134 |       else[0m
      | [0;32m      } 
[0m[1mmakepath.c:136:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |           if (owner != -1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  137 |             stats.st_uid = owner;[0m
      | [0;1;32m                                 
[0m[1mmakepath.c:138:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |           if (group != -1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  139 |             stats.st_gid = group;[0m
      | [0;1;32m                                 
[0m[1mmakepath.c:144:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |       if (verbose_fmt_string != NULL)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  145 |         error (0, 0, verbose_fmt_string, dirpath);[0m
      | [0;1;32m                                                  
[0m23 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 86/111][11.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp5endppio.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/tar.c
[1mtar.c:38:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   38 |   strncpy (hold_tar_linkname, linkname, TARLINKNAMESIZE);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtar.c:38:3: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
   38 |   strncpy (hold_tar_linkname, linkname, TARLINKNAMESIZE);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mtar.c:51:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   if (length > TARPREFIXSIZE)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m   52 |     length = TARPREFIXSIZE+2;[0m
      | [0;1;32m                             
[0m[1mtar.c:53:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   53 |   for (i = length - 1; i > 0; i--)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m   54 |     if (name[i] == '/')[0m
   55 |       break;[0m
      | [0;1;32m            
[0m[1mtar.c:54:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |     if (name[i] == '/')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m   55 |       break;[0m
      | [0;1;32m            
[0m[1mtar.c:67:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   67 |       strncpy (hold_tar_filename, filename, TARNAMESIZE);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:67:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
   67 |       strncpy (hold_tar_filename, filename, TARNAMESIZE);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:72:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   72 |       strncpy (hold_tar_filename, prefix, TARPREFIXSIZE);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:72:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
   72 |       strncpy (hold_tar_filename, prefix, TARPREFIXSIZE);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:74:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   74 |       strcat (hold_tar_filename, "/");[0m
      | [0;1;32m      ^~~~~~
[0m[1mtar.c:74:7: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
   74 |       strcat (hold_tar_filename, "/");[0m
      | [0;1;32m      ^~~~~~
[0m[1mtar.c:75:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   75 |       strncat (hold_tar_filename, filename, TARNAMESIZE);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:75:7: [0m[0;1;36mnote: [0mCall to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11[0m
   75 |       strncat (hold_tar_filename, filename, TARNAMESIZE);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:105:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |   while (p < tar_hdr->chksum)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  106 |     sum += *p++ & 0xff;[0m
      | [0;1;32m                       
[0m[1mtar.c:112:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   while (p < q)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  113 |     sum += *p++ & 0xff;[0m
      | [0;1;32m                       
[0m[1mtar.c:139:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  139 |   memset (&tar_rec, 0, sizeof tar_rec);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtar.c:139:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  139 |   memset (&tar_rec, 0, sizeof tar_rec);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtar.c:147:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  147 |       strncpy (tar_hdr->name, file_hdr->c_name, name_len);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:147:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  147 |       strncpy (tar_hdr->name, file_hdr->c_name, name_len);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:154:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  154 |       strncpy (tar_hdr->prefix, file_hdr->c_name, prefix_len);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:154:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  154 |       strncpy (tar_hdr->prefix, file_hdr->c_name, prefix_len);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:155:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  155 |       strncpy (tar_hdr->name, file_hdr->c_name + prefix_len + 1,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:155:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  155 |       strncpy (tar_hdr->name, file_hdr->c_name + prefix_len + 1,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:170:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  170 |       if (file_hdr->c_tar_linkname)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  171 |         {[0m
  172 |           /* process_copy_out makes sure that c_tar_linkname is shorter[0m
  173 |              than TARLINKNAMESIZE.  */[0m
  174 |           strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,[0m
  175 |                    TARLINKNAMESIZE);[0m
  176 |           tar_hdr->typeflag = LNKTYPE;[0m
  177 |           to_ascii (tar_hdr->size, 0, 12, LG_8, true);[0m
  178 |         }[0m
  179 |       else[0m
  180 |         tar_hdr->typeflag = REGTYPE;[0m
  181 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtar.c:174:4: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  174 |           strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtar.c:174:4: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  174 |           strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtar.c:179:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  180 |         tar_hdr->typeflag = REGTYPE;[0m
      | [0;1;32m                                    
[0m[1mtar.c:183:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  183 |       tar_hdr->typeflag = DIRTYPE;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  184 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtar.c:186:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  186 |       tar_hdr->typeflag = CHRTYPE;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  187 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtar.c:189:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  189 |       tar_hdr->typeflag = BLKTYPE;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  190 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtar.c:193:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  193 |       tar_hdr->typeflag = FIFOTYPE;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  194 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtar.c:198:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  198 |       tar_hdr->typeflag = SYMTYPE;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  199 |       /* process_copy_out makes sure that c_tar_linkname is shorter[0m
  200 |          than TARLINKNAMESIZE.  */[0m
  201 |       strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,[0m
  202 |                TARLINKNAMESIZE);[0m
  203 |       to_ascii (tar_hdr->size, 0, 12, LG_8, true);[0m
  204 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mtar.c:201:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  201 |       strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:201:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  201 |       strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:212:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  212 |       strncpy (tar_hdr->magic, TMAGIC, TMAGLEN);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:212:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  212 |       strncpy (tar_hdr->magic, TMAGIC, TMAGLEN);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:213:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  213 |       strncpy (tar_hdr->version, TVERSION, TVERSLEN);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:213:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  213 |       strncpy (tar_hdr->version, TVERSION, TVERSLEN);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mtar.c:216:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |       if (name)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  217 |         strcpy (tar_hdr->uname, name);[0m
      | [0;1;32m                                      
[0m[1mtar.c:217:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  217 |         strcpy (tar_hdr->uname, name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mtar.c:217:2: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  217 |         strcpy (tar_hdr->uname, name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mtar.c:219:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |       if (name)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  220 |         strcpy (tar_hdr->gname, name);[0m
      | [0;1;32m                                      
[0m[1mtar.c:220:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  220 |         strcpy (tar_hdr->gname, name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mtar.c:220:2: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  220 |         strcpy (tar_hdr->gname, name);[0m
      | [0;1;32m        ^~~~~~
[0m[1mtar.c:243:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  243 |   while (i--)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  244 |     if (*p++)[0m
  245 |       return 0;[0m
      | [0;1;32m               
[0m[1mtar.c:244:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  244 |     if (*p++)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  245 |       return 0;[0m
      | [0;1;32m               
[0m[1mtar.c:306:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  306 |           memmove (&tar_rec, ((char *) &tar_rec) + 1, TARRECORDSIZE - 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtar.c:306:4: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  306 |           memmove (&tar_rec, ((char *) &tar_rec) + 1, TARRECORDSIZE - 1);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mtar.c:312:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |       if (archive_format != arf_ustar)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  313 |         cpio_set_c_name (file_hdr, stash_tar_filename (NULL, tar_hdr->name));[0m
  314 |       else[0m
      | [0;32m      } 
[0m[1mtar.c:314:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  315 |         cpio_set_c_name (file_hdr, stash_tar_filename (tar_hdr->prefix,[0m
  316 |                                                       tar_hdr->name));[0m
      | [0;1;32m                                                                      
[0m[1mtar.c:325:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |           && (uidp = getuidbyname (tar_hdr->uname)))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  326 |         file_hdr->c_uid = *uidp;[0m
  327 |       else[0m
      | [0;32m      } 
[0m[1mtar.c:327:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  327 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  328 |         file_hdr->c_uid = FROM_OCTAL (tar_hdr->uid);[0m
      | [0;1;32m                                                    
[0m[1mtar.c:331:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  331 |           && (gidp = getgidbyname (tar_hdr->gname)))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  332 |         file_hdr->c_gid = *gidp;[0m
  333 |       else[0m
      | [0;32m      } 
[0m[1mtar.c:333:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  334 |         file_hdr->c_gid = FROM_OCTAL (tar_hdr->gid);[0m
      | [0;1;32m                                                    
[0m[1mtar.c:347:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  347 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mtar.c:349:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  349 |           file_hdr->c_mode |= CP_IFDIR;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  350 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtar.c:352:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  352 |           file_hdr->c_mode |= CP_IFCHR;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  353 |           /* If a POSIX tar header has a valid linkname it's always supposed[0m
  354 |              to set typeflag to be LNKTYPE.  System V.4 tar seems to[0m
  355 |              be broken, and for device files with multiple links it[0m
  356 |              puts the name of the link into linkname, but leaves typeflag[0m
  357 |              as CHRTYPE, BLKTYPE, FIFOTYPE, etc.  */[0m
  358 |           file_hdr->c_tar_linkname = stash_tar_linkname (tar_hdr->linkname);[0m
  359 | [0m
  360 |           /* Does POSIX say that the filesize must be 0 for devices?  We[0m
  361 |              assume so, but HPUX's POSIX tar sets it to be 1 which causes[0m
  362 |              us problems (when reading an archive we assume we can always[0m
  363 |              skip to the next file by skipping filesize bytes).  For[0m
  364 |              now at least, it's easier to clear filesize for devices,[0m
  365 |              rather than check everywhere we skip in copyin.c.  */[0m
  366 |           file_hdr->c_filesize = 0;[0m
  367 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtar.c:369:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  369 |           file_hdr->c_mode |= CP_IFBLK;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  370 |           file_hdr->c_tar_linkname = stash_tar_linkname (tar_hdr->linkname);[0m
  371 |           file_hdr->c_filesize = 0;[0m
  372 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtar.c:375:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  375 |           file_hdr->c_mode |= CP_IFIFO;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  376 |           file_hdr->c_tar_linkname = stash_tar_linkname (tar_hdr->linkname);[0m
  377 |           file_hdr->c_filesize = 0;[0m
  378 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtar.c:382:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  382 |           file_hdr->c_mode |= CP_IFLNK;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  383 |           file_hdr->c_tar_linkname = stash_tar_linkname (tar_hdr->linkname);[0m
  384 |           file_hdr->c_filesize = 0;[0m
  385 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtar.c:389:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |           file_hdr->c_mode |= CP_IFREG;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  390 |           file_hdr->c_tar_linkname = stash_tar_linkname (tar_hdr->linkname);[0m
  391 |           file_hdr->c_filesize = 0;[0m
  392 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtar.c:397:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  397 |           if (file_hdr->c_name[file_hdr->c_namesize - 1] == '/')[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  398 |             file_hdr->c_mode |= CP_IFDIR;[0m
  399 |           else[0m
  400 |             file_hdr->c_mode |= CP_IFREG;[0m
  401 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mtar.c:397:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  397 |           if (file_hdr->c_name[file_hdr->c_namesize - 1] == '/')[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  398 |             file_hdr->c_mode |= CP_IFDIR;[0m
  399 |           else[0m
      | [0;32m          } 
[0m[1mtar.c:399:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  399 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  400 |             file_hdr->c_mode |= CP_IFREG;[0m
      | [0;1;32m                                         
[0m[1mtar.c:405:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |   if (bytes_skipped > 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  406 |     warn_junk_bytes (bytes_skipped);[0m
      | [0;1;32m                                    
[0m[1mtar.c:423:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  423 |   if (chksum != tar_checksum (tar_hdr))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  424 |     return 0;[0m
      | [0;1;32m             
[0m[1mtar.c:429:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |   if (!strncmp (tar_hdr->magic, TMAGIC, TMAGLEN - 1))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  430 |       return 2;[0m
      | [0;1;32m               
[0m[1mtar.c:455:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |   if (whole_name_len <= TARNAMESIZE)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  456 |     return false;[0m
      | [0;1;32m                 
[0m[1mtar.c:458:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  458 |   if (archive_format != arf_ustar)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  459 |     return true;[0m
      | [0;1;32m                
[0m[1mtar.c:461:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  461 |   if (whole_name_len > TARNAMESIZE + TARPREFIXSIZE + 1)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  462 |     return true;[0m
      | [0;1;32m                
[0m[1mtar.c:472:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |       || whole_name_len - prefix_name_len - 1 > TARNAMESIZE)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  473 |     return true;[0m
      | [0;1;32m                
[0m67 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 87/111][19.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp_c2l2d32.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/savedir.c
[1msavedir.c:101:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |   if (dirp == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  102 |     return NULL;[0m
      | [0;1;32m                
[0m[1msavedir.c:111:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |       if (! dp)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  112 |         break;[0m
      | [0;1;32m              
[0m[1msavedir.c:122:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |               if (entries_allocated == entries_used)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  123 |                 entries = xpalloc (entries, &entries_allocated, 1, -1,[0m
  124 |                                    sizeof *entries);[0m
      | [0;1;32m                                                    
[0m[1msavedir.c:133:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  133 |               if (allocated - used <= entry_size)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  134 |                 name_space = xpalloc (name_space, &allocated,[0m
  135 |                                       entry_size - (allocated - used),[0m
  136 |                                       IDX_MAX - 1, sizeof *name_space);[0m
      | [0;1;32m                                                                       
[0m[1msavedir.c:137:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  137 |               memcpy (name_space + used, entry, entry_size);[0m
      | [0;1;32m              ^~~~~~
[0m[1msavedir.c:137:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  137 |               memcpy (name_space + used, entry, entry_size);[0m
      | [0;1;32m              ^~~~~~
[0m[1msavedir.c:152:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |       if (entries_used)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  153 |         qsort (entries, entries_used, sizeof *entries, cmp);[0m
      | [0;1;32m                                                            
[0m[1msavedir.c:164:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  164 |   else if (used == allocated)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  165 |     name_space = xirealloc (name_space, used + 1);[0m
      | [0;1;32m                                                  
[0m[1msavedir.c:180:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |   if (! dirp)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  181 |     return NULL;[0m
  182 |   else[0m
      | [0;32m  } 
[0m12 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 88/111][21.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp9u08gxez.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/c-strncasecmp.c
[1mc-strncasecmp.c:33:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   33 |   if (p1 == p2 || n == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   34 |     return 0;[0m
      | [0;1;32m             
[0m[1mc-strncasecmp.c:41:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   41 |       if (--n == 0 || c1 == '\0')[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m   42 |         break;[0m
      | [0;1;32m              
[0m[1mc-strncasecmp.c:49:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   49 |   if (UCHAR_MAX <= INT_MAX)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m   50 |     return c1 - c2;[0m
   51 |   else[0m
      | [0;32m  } 
[0m[1mc-strncasecmp.c:51:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   51 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   52 |     /* On machines where 'char' and 'int' are types of the same size, the[0m
   53 |        difference of two 'unsigned char' values - including the sign bit -[0m
   54 |        doesn't fit in an 'int'.  */[0m
   55 |     return _GL_CMP (c1, c2);[0m
      | [0;1;32m                            
[0m20 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 89/111][15.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp7_c5id_8.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/userspec.c
[1muserspec.c:54:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   54 |   for (; *str; str++)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m   55 |     if (!isdigit (*str))[0m
   56 |       return 0;[0m
      | [0;1;32m               
[0m[1muserspec.c:55:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   55 |     if (!isdigit (*str))[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   56 |       return 0;[0m
      | [0;1;32m               
[0m[1muserspec.c:88:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
   88 |   V_STRDUP (spec, spec_arg);[0m
      | [0;1;32m  ^
[0m[1muserspec.c:44:7: [0m[0;1;36mnote: [0mexpanded from macro 'V_STRDUP'[0m
   44 |       strcpy (dest, src);                                               \[0m
      | [0;1;32m      ^~~~~~
[0m[1muserspec.c:88:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
   88 |   V_STRDUP (spec, spec_arg);[0m
      | [0;1;32m  ^
[0m[1muserspec.c:44:7: [0m[0;1;36mnote: [0mexpanded from macro 'V_STRDUP'[0m
   44 |       strcpy (dest, src);                                               \[0m
      | [0;1;32m      ^~~~~~
[0m[1muserspec.c:92:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   92 |   if (separator == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   93 |     separator = strchr (spec, '.');[0m
      | [0;1;32m                                   
[0m[1muserspec.c:96:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (separator != NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m   97 |     *separator = '\0';[0m
      | [0;1;32m                      
[0m[1muserspec.c:107:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  107 |   if (u == NULL && g == NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  108 |     return "can not omit both user and group";[0m
      | [0;1;32m                                              
[0m[1muserspec.c:117:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  117 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  118 |         pwd = getpwnam (u);[0m
      | [0;1;32m                           
[0m[1muserspec.c:122:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |           if (!isnumber_p (u))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  123 |             error_msg = _("invalid user");[0m
  124 |           else[0m
      | [0;32m          } 
[0m[1muserspec.c:128:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  128 |               if (use_login_group)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  129 |                 error_msg = _("cannot get the login group of a numeric UID");[0m
  130 |               else[0m
      | [0;32m              } 
[0m[1muserspec.c:130:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  131 |                 *uid = atoi (u);[0m
      | [0;1;32m                                
[0m[1muserspec.c:146:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  146 |                   V_STRDUP (groupname, umaxtostr (pwd->pw_gid, nbuf));[0m
      | [0;1;32m                  ^
[0m[1muserspec.c:44:7: [0m[0;1;36mnote: [0mexpanded from macro 'V_STRDUP'[0m
   44 |       strcpy (dest, src);                                               \[0m
      | [0;1;32m      ^~~~~~
[0m[1muserspec.c:146:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  146 |                   V_STRDUP (groupname, umaxtostr (pwd->pw_gid, nbuf));[0m
      | [0;1;32m                  ^
[0m[1muserspec.c:44:7: [0m[0;1;36mnote: [0mexpanded from macro 'V_STRDUP'[0m
   44 |       strcpy (dest, src);                                               \[0m
      | [0;1;32m      ^~~~~~
[0m[1muserspec.c:150:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  150 |                   V_STRDUP (groupname, grp->gr_name);[0m
      | [0;1;32m                  ^
[0m[1muserspec.c:44:7: [0m[0;1;36mnote: [0mexpanded from macro 'V_STRDUP'[0m
   44 |       strcpy (dest, src);                                               \[0m
      | [0;1;32m      ^~~~~~
[0m[1muserspec.c:150:5: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  150 |                   V_STRDUP (groupname, grp->gr_name);[0m
      | [0;1;32m                  ^
[0m[1muserspec.c:44:7: [0m[0;1;36mnote: [0mexpanded from macro 'V_STRDUP'[0m
   44 |       strcpy (dest, src);                                               \[0m
      | [0;1;32m      ^~~~~~
[0m[1muserspec.c:166:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  167 |         grp = getgrnam (g);[0m
      | [0;1;32m                           
[0m[1muserspec.c:171:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  171 |           if (!isnumber_p (g))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  172 |             error_msg = _("invalid group");[0m
  173 |           else[0m
      | [0;32m          } 
[0m[1muserspec.c:173:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  174 |             *gid = atoi (g);[0m
      | [0;1;32m                            
[0m[1muserspec.c:176:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  176 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  177 |         *gid = grp->gr_gid;[0m
      | [0;1;32m                           
[0m[1muserspec.c:180:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |       if (error_msg == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  181 |         V_STRDUP (groupname, g);[0m
      | [0;1;32m                                
[0m[1muserspec.c:181:2: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  181 |         V_STRDUP (groupname, g);[0m
      | [0;1;32m        ^
[0m[1muserspec.c:44:7: [0m[0;1;36mnote: [0mexpanded from macro 'V_STRDUP'[0m
   44 |       strcpy (dest, src);                                               \[0m
      | [0;1;32m      ^~~~~~
[0m[1muserspec.c:181:2: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  181 |         V_STRDUP (groupname, g);[0m
      | [0;1;32m        ^
[0m[1muserspec.c:44:7: [0m[0;1;36mnote: [0mexpanded from macro 'V_STRDUP'[0m
   44 |       strcpy (dest, src);                                               \[0m
      | [0;1;32m      ^~~~~~
[0m[1muserspec.c:189:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  189 |           if (*username_arg == NULL)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  190 |             error_msg = tired;[0m
      | [0;1;32m                              
[0m31 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 90/111][19.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpeb_188kr.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/utimens.c
[1mutimens.c:114:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  114 |       if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  115 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:122:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |       if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  123 |         utime_omit_count++;[0m
      | [0;1;32m                           
[0m[1mutimens.c:139:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  139 |       && timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  140 |     return true;[0m
      | [0;1;32m                
[0m[1mutimens.c:148:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |   if (timespec[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  149 |     timespec[0] = get_stat_atime (statbuf);[0m
  150 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:150:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  150 |   else if (timespec[0].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  151 |     gettime (&timespec[0]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:153:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  153 |   if (timespec[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  154 |     timespec[1] = get_stat_mtime (statbuf);[0m
  155 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;32m  } 
[0m[1mutimens.c:155:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |   else if (timespec[1].tv_nsec == UTIME_NOW)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  156 |     gettime (&timespec[1]);[0m
      | [0;1;32m                           
[0m[1mutimens.c:185:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  185 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  186 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:238:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  238 |           if (fd < 0 ? stat (file, &st) : fstat (fd, &st))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  239 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:240:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  240 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  241 |             ts[0] = get_stat_atime (&st);[0m
  242 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:242:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  243 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:274:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  274 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  275 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:290:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |           if (0 < result)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  291 |             errno = ENOSYS;[0m
      | [0;1;32m                           
[0m[1mutimens.c:396:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |           && (fd < 0 ? stat (file, &st) : fstat (fd, &st)))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  397 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:398:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  399 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:414:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  415 |       t = NULL;[0m
      | [0;1;32m               
[0m[1mutimens.c:474:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |                     if (tt)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  475 |                       futimes (fd, tt);[0m
      | [0;1;32m                                       
[0m[1mutimens.c:544:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  544 |   if (adjustment_needed < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  545 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:571:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  571 |           if (lstat (file, &st))[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  572 |             return -1;[0m
      | [0;1;32m                      
[0m[1mutimens.c:573:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  573 |           if (ts[0].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  574 |             ts[0] = get_stat_atime (&st);[0m
  575 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;32m          } 
[0m[1mutimens.c:575:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |           else if (ts[1].tv_nsec == UTIME_OMIT)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  576 |             ts[1] = get_stat_mtime (&st);[0m
      | [0;1;32m                                         
[0m[1mutimens.c:590:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  590 |       if (0 < result)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  591 |         errno = ENOSYS;[0m
      | [0;1;32m                       
[0m[1mutimens.c:609:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |       if (adjustment_needed != 3 && lstat (file, &st))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  610 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutimens.c:611:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  611 |       if (ts && update_timespec (&st, &ts))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  612 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutimens.c:640:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |   if (!(adjustment_needed || REPLACE_FUNC_STAT_FILE) && lstat (file, &st))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  641 |     return -1;[0m
      | [0;1;32m              
[0m[1mutimens.c:642:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |   if (!S_ISLNK (st.st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  643 |     return fdutimens (-1, file, ts);[0m
      | [0;1;32m                                    
[0m28 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 91/111][24.1s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpw04zh35m.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/printf-args.c
[1mprintf-args.c:44:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   44 |   for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m[1mprintf-args.c:48:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   48 |         ap->a.a_schar = va_arg (args, /*signed char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   49 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:51:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   51 |         ap->a.a_uchar = va_arg (args, /*unsigned char*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   52 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:54:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   54 |         ap->a.a_short = va_arg (args, /*short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   55 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:57:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   57 |         ap->a.a_ushort = va_arg (args, /*unsigned short*/ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   58 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:60:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   60 |         ap->a.a_int = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   61 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:63:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   63 |         ap->a.a_uint = va_arg (args, unsigned int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   64 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:66:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   66 |         ap->a.a_longint = va_arg (args, long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   67 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:69:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   69 |         ap->a.a_ulongint = va_arg (args, unsigned long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   70 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:72:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   72 |         ap->a.a_longlongint = va_arg (args, long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   73 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:75:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   75 |         ap->a.a_ulonglongint = va_arg (args, unsigned long long int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   76 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:79:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   79 |         ap->a.a_int8_t = va_arg (args, /* int8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   80 |         #else[0m
   81 |         ap->a.a_int8_t = va_arg (args, int8_t);[0m
   82 |         #endif[0m
   83 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:86:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   86 |         ap->a.a_uint8_t = va_arg (args, /* uint8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   87 |         #else[0m
   88 |         ap->a.a_uint8_t = va_arg (args, uint8_t);[0m
   89 |         #endif[0m
   90 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:93:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   93 |         ap->a.a_int16_t = va_arg (args, /* int16_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m   94 |         #else[0m
   95 |         ap->a.a_int16_t = va_arg (args, int16_t);[0m
   96 |         #endif[0m
   97 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:100:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  100 |         ap->a.a_uint16_t = va_arg (args, /* uint16_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  101 |         #else[0m
  102 |         ap->a.a_uint16_t = va_arg (args, uint16_t);[0m
  103 |         #endif[0m
  104 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:109:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  109 |         ap->a.a_int32_t = va_arg (args, int32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  110 |         #endif[0m
  111 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:116:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  116 |         ap->a.a_uint32_t = va_arg (args, uint32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  117 |         #endif[0m
  118 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:120:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  120 |         ap->a.a_int64_t = va_arg (args, int64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  121 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:123:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  123 |         ap->a.a_uint64_t = va_arg (args, uint64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  124 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:127:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  127 |         ap->a.a_int_fast8_t = va_arg (args, /* int_fast8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  128 |         #else[0m
  129 |         ap->a.a_int_fast8_t = va_arg (args, int_fast8_t);[0m
  130 |         #endif[0m
  131 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:134:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  134 |         ap->a.a_uint_fast8_t = va_arg (args, /* uint_fast8_t */ int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  135 |         #else[0m
  136 |         ap->a.a_uint_fast8_t = va_arg (args, uint_fast8_t);[0m
  137 |         #endif[0m
  138 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:143:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  143 |         ap->a.a_int_fast16_t = va_arg (args, int_fast16_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  144 |         #endif[0m
  145 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:150:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  150 |         ap->a.a_uint_fast16_t = va_arg (args, uint_fast16_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  151 |         #endif[0m
  152 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:157:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  157 |         ap->a.a_int_fast32_t = va_arg (args, int_fast32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  158 |         #endif[0m
  159 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:164:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |         ap->a.a_uint_fast32_t = va_arg (args, uint_fast32_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  165 |         #endif[0m
  166 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:168:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  168 |         ap->a.a_int_fast64_t = va_arg (args, int_fast64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  169 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:171:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  171 |         ap->a.a_uint_fast64_t = va_arg (args, uint_fast64_t);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  172 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:174:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  174 |         ap->a.a_double = va_arg (args, double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  175 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:177:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  177 |         ap->a.a_longdouble = va_arg (args, long double);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  178 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:180:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  180 |         ap->a.a_char = va_arg (args, int);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  181 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:187:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  187 |         ap->a.a_wide_char =[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  188 |           (sizeof (wint_t) < sizeof (int)[0m
  189 |            ? (wint_t) va_arg (args, int)[0m
  190 |            : va_arg (args, wint_t));[0m
  191 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:194:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  194 |         ap->a.a_string = va_arg (args, const char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  195 |         /* A null pointer is an invalid argument for "%s", but in practice[0m
  196 |            it occurs quite frequently in printf statements that produce[0m
  197 |            debug output.  Use a fallback in this case.  */[0m
  198 |         if (ap->a.a_string == NULL)[0m
  199 |           ap->a.a_string = "(NULL)";[0m
  200 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:198:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  198 |         if (ap->a.a_string == NULL)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  199 |           ap->a.a_string = "(NULL)";[0m
      | [0;1;32m                                    
[0m[1mprintf-args.c:203:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  203 |         ap->a.a_wide_string = va_arg (args, const wchar_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  204 |         /* A null pointer is an invalid argument for "%ls", but in practice[0m
  205 |            it occurs quite frequently in printf statements that produce[0m
  206 |            debug output.  Use a fallback in this case.  */[0m
  207 |         if (ap->a.a_wide_string == NULL)[0m
  208 |           {[0m
  209 |             static const wchar_t wide_null_string[] =[0m
  210 |               {[0m
  211 |                 (wchar_t)'(',[0m
  212 |                 (wchar_t)'N', (wchar_t)'U', (wchar_t)'L', (wchar_t)'L',[0m
  213 |                 (wchar_t)')',[0m
  214 |                 (wchar_t)0[0m
  215 |               };[0m
  216 |             ap->a.a_wide_string = wide_null_string;[0m
  217 |           }[0m
  218 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:221:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  221 |         ap->a.a_pointer = va_arg (args, void *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  222 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:224:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  224 |         ap->a.a_count_schar_pointer = va_arg (args, signed char *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  225 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:227:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  227 |         ap->a.a_count_short_pointer = va_arg (args, short *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  228 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:230:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  230 |         ap->a.a_count_int_pointer = va_arg (args, int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  231 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:233:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  233 |         ap->a.a_count_longint_pointer = va_arg (args, long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  234 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:236:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  236 |         ap->a.a_count_longlongint_pointer = va_arg (args, long long int *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  237 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:239:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  239 |         ap->a.a_count_int8_t_pointer = va_arg (args, int8_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  240 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:242:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  242 |         ap->a.a_count_int16_t_pointer = va_arg (args, int16_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  243 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:245:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  245 |         ap->a.a_count_int32_t_pointer = va_arg (args, int32_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  246 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:248:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  248 |         ap->a.a_count_int64_t_pointer = va_arg (args, int64_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  249 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:251:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  251 |         ap->a.a_count_int_fast8_t_pointer = va_arg (args, int_fast8_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  252 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:254:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  254 |         ap->a.a_count_int_fast16_t_pointer = va_arg (args, int_fast16_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  255 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:257:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  257 |         ap->a.a_count_int_fast32_t_pointer = va_arg (args, int_fast32_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  258 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:260:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  260 |         ap->a.a_count_int_fast64_t_pointer = va_arg (args, int_fast64_t *);[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m  261 |         break;[0m
      | [0;1;32m             
[0m      | [0;32m             ;} 
[0m[1mprintf-args.c:303:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  303 |         return -1;[0m
      | [0;1;32m        ^        
[0m      | [0;32m        {        ;} 
[0m49 warnings generated.

[ 92/111][61.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp2myvtebx.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/time_rz.c
[1mtime_rz.c:58:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   58 |   memcpy (abbrs, abbr, abbr_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtime_rz.c:58:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
   58 |   memcpy (abbrs, abbr, abbr_size);[0m
      | [0;1;32m  ^~~~~~
[0m[1mtime_rz.c:78:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   78 |       if (name)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   79 |         extend_abbrs (tz->abbrs, name, name_size);[0m
      | [0;1;32m                                                  
[0m[1mtime_rz.c:112:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  112 |   if (!zone || ((char *) tm <= zone && zone < (char *) (tm + 1)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  113 |     return true;[0m
      | [0;1;32m                
[0m[1mtime_rz.c:124:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  124 |               if (zone_size < tz->abbrs + ABBR_SIZE_MIN - zone_copy)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  125 |                 extend_abbrs (zone_copy, zone, zone_size);[0m
  126 |               else[0m
      | [0;32m              } 
[0m[1mtime_rz.c:129:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  129 |                   if (!tz)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  130 |                     return false;[0m
      | [0;1;32m                                 
[0m[1mtime_rz.c:162:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  162 |   if (tz != local_tz)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  163 |     while (tz)[0m
  164 |       {[0m
  165 |         timezone_t next = tz->next;[0m
  166 |         free (tz);[0m
  167 |         tz = next;[0m
  168 |       }[0m
      | [0;1;32m       
[0m[1mtime_rz.c:195:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  195 |   if (setenv_TZ (tz->tz_is_set ? tz->abbrs : NULL) != 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  196 |     return false;[0m
      | [0;1;32m                 
[0m[1mtime_rz.c:211:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |       : !tz->tz_is_set)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  212 |     return local_tz;[0m
  213 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:216:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |       if (!old_tz)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  217 |         return old_tz;[0m
      | [0;1;32m                      
[0m[1mtime_rz.c:222:11: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  222 |           errno = saved_errno;[0m
      | [0;1;32m          ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^
[0m[1mtime_rz.c:287:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  287 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:287:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  287 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:291:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  291 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  209 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:211:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  211 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'name' is null[0m
   67 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   68 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:69:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   69 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:70:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
   70 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:70:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   70 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:78:11: [0m[0;1;36mnote: [0m'name' is null[0m
   78 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:78:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   78 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:216:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:216:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:218:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  218 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:221:11: [0m[0;1;36mnote: [0mCalling 'tzfree'[0m
  221 |           tzfree (old_tz);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mtime_rz.c:162:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  162 |   if (tz != local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:162:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  162 |   if (tz != local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:221:11: [0m[0;1;36mnote: [0mReturning from 'tzfree'[0m
  221 |           tzfree (old_tz);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~
[0m[1mtime_rz.c:222:11: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  222 |           errno = saved_errno;[0m
      | [0;1;32m          ^
[0m[1m/usr/include/errno.h:38:18: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m                 ^
[0m[1mtime_rz.c:235:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  236 |     return true;[0m
  237 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:241:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  241 |       if (!ok)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  242 |         saved_errno = errno;[0m
      | [0;1;32m                            
[0m[1mtime_rz.c:268:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  268 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  269 |     return gmtime_r (t, tm);[0m
  270 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:276:37: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:268:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  268 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:268:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  268 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:272:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  272 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  209 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:211:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  211 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'name' is null[0m
   67 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   68 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:69:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   69 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:70:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
   70 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:70:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   70 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:78:11: [0m[0;1;36mnote: [0m'name' is null[0m
   78 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:78:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   78 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:216:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:216:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:218:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  218 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:272:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  272 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:273:11: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  273 |       if (old_tz)[0m
      | [0;1;32m          ^~~~~~
[0m[1mtime_rz.c:273:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  273 |       if (old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:275:29: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  275 |           bool abbr_saved = localtime_r (t, tm) && save_abbr (tz, tm);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:275:49: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  275 |           bool abbr_saved = localtime_r (t, tm) && save_abbr (tz, tm);[0m
      | [0;1;32m                                                ^
[0m[1mtime_rz.c:276:15: [0m[0;1;36mnote: [0mCalling 'revert_tz'[0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:235:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:235:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:276:15: [0m[0;1;36mnote: [0mReturning from 'revert_tz'[0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:276:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtime_rz.c:276:37: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:276:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |           if (revert_tz (old_tz) && abbr_saved)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  277 |             return tm;[0m
      | [0;1;32m                      
[0m[1mtime_rz.c:287:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |   if (!tz)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  288 |     return timegm (tm);[0m
  289 |   else[0m
      | [0;32m  } 
[0m[1mtime_rz.c:308:37: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'old_tz' [clang-analyzer-unix.Malloc][0m
  308 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m                                    ^
[0m[1mtime_rz.c:287:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
  287 |   if (!tz)[0m
      | [0;1;32m      ^~~
[0m[1mtime_rz.c:287:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  287 |   if (!tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:291:27: [0m[0;1;36mnote: [0mCalling 'set_tz'[0m
  291 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'env_tz' is null[0m
  209 |   if (env_tz[0m
      | [0;1;32m      ^~~~~~
[0m[1mtime_rz.c:209:7: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:211:9: [0m[0;1;36mnote: [0mAssuming field 'tz_is_set' is not equal to 0[0m
  211 |       : !tz->tz_is_set)[0m
      | [0;1;32m        ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:209:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  209 |   if (env_tz[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mCalling 'tzalloc'[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'name' is null[0m
   67 |   size_t name_size = name ? strlen (name) + 1 : 0;[0m
      | [0;1;32m                     ^~~~
[0m[1mtime_rz.c:67:22: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'name_size' is < ABBR_SIZE_MIN[0m
   68 |   size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mtime_rz.c:68:22: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mtime_rz.c:69:19: [0m[0;1;36mnote: [0mMemory is allocated[0m
   69 |   timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:70:7: [0m[0;1;36mnote: [0mAssuming 'tz' is non-null[0m
   70 |   if (tz)[0m
      | [0;1;32m      ^~
[0m[1mtime_rz.c:70:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   70 |   if (tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:78:11: [0m[0;1;36mnote: [0m'name' is null[0m
   78 |       if (name)[0m
      | [0;1;32m          ^~~~
[0m[1mtime_rz.c:78:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   78 |       if (name)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:215:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  215 |       timezone_t old_tz = tzalloc (env_tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:216:12: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m           ^~~~~~
[0m[1mtime_rz.c:216:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  216 |       if (!old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:218:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  218 |       if (! change_env (tz))[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:291:27: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  291 |       timezone_t old_tz = set_tz (tz);[0m
      | [0;1;32m                          ^~~~~~~~~~~
[0m[1mtime_rz.c:292:11: [0m[0;1;36mnote: [0m'old_tz' is non-null[0m
  292 |       if (old_tz)[0m
      | [0;1;32m          ^~~~~~
[0m[1mtime_rz.c:292:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  292 |       if (old_tz)[0m
      | [0;1;32m      ^
[0m[1mtime_rz.c:304:21: [0m[0;1;36mnote: [0mAssuming 0 is > field 'tm_yday'[0m
  304 |           bool ok = 0 <= tm_1.tm_yday;[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:306:16: [0m[0;1;36mnote: [0m'ok' is false[0m
  306 |           ok = ok && save_abbr (tz, &tm_1);[0m
      | [0;1;32m               ^~
[0m[1mtime_rz.c:306:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  306 |           ok = ok && save_abbr (tz, &tm_1);[0m
      | [0;1;32m                  ^
[0m[1mtime_rz.c:308:15: [0m[0;1;36mnote: [0mCalling 'revert_tz'[0m
  308 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:235:7: [0m[0;1;36mnote: [0mAssuming 'tz' is equal to 'local_tz'[0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1mtime_rz.c:235:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  235 |   if (tz == local_tz)[0m
      | [0;1;32m  ^
[0m[1mtime_rz.c:308:15: [0m[0;1;36mnote: [0mReturning from 'revert_tz'[0m
  308 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~
[0m[1mtime_rz.c:308:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1mtime_rz.c:308:37: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'old_tz'[0m
  308 |           if (revert_tz (old_tz) && ok)[0m
      | [0;1;32m                                    ^
[0m21 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 93/111][69.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp1t2jsaa1.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/strtol.c
[1mstrtol.c:264:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |   while (ISSPACE (*s))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  265 |     ++s;[0m
      | [0;1;32m        
[0m[1mstrtol.c:266:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |   if (*s == L_('\0'))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  267 |     goto noconv;[0m
      | [0;1;32m                
[0m[1mstrtol.c:280:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  280 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  281 |     negative = 0;[0m
      | [0;1;32m                 
[0m[1mstrtol.c:296:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |       else if (base == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  297 |         base = 8;[0m
      | [0;1;32m                 
[0m[1mstrtol.c:299:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |   else if (base == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  300 |     base = 10;[0m
      | [0;1;32m              
[0m[1mstrtol.c:331:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  331 |       if (s == end)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  332 |         break;[0m
      | [0;1;32m              
[0m[1mstrtol.c:333:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  333 |       if (c >= L_('0') && c <= L_('9'))[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  334 |         c -= L_('0');[0m
  335 |       else if (ISALPHA (c))[0m
      | [0;32m      } 
[0m[1mstrtol.c:335:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  335 |       else if (ISALPHA (c))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  336 |         c = TOUPPER (c) - L_('A') + 10;[0m
  337 |       else[0m
      | [0;32m      } 
[0m[1mstrtol.c:337:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  337 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  338 |         break;[0m
      | [0;1;32m              
[0m[1mstrtol.c:339:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |       if ((int) c >= base)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  340 |         break;[0m
      | [0;1;32m              
[0m[1mstrtol.c:342:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |       if (i > cutoff || (i == cutoff && c > cutlim))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  343 |         overflow = 1;[0m
  344 |       else[0m
      | [0;32m      } 
[0m[1mstrtol.c:352:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  352 |   if (s == save)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  353 |     goto noconv;[0m
      | [0;1;32m                
[0m[1mstrtol.c:357:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |   if (endptr != NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  358 |     *endptr = (STRING_TYPE *) s;[0m
      | [0;1;32m                                
[0m[1mstrtol.c:366:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |               : (unsigned LONG int) STRTOL_LONG_MAX))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  367 |     overflow = 1;[0m
      | [0;1;32m                 
[0m[1mstrtol.c:394:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  394 |           && save[-2] == L_('0'))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  395 |         *endptr = (STRING_TYPE *) &save[-1];[0m
  396 |       else[0m
      | [0;32m      } 
[0m[1mstrtol.c:396:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  397 |         /*  There was no number to convert.  */[0m
  398 |         *endptr = (STRING_TYPE *) nptr;[0m
      | [0;1;32m                                       
[0m20 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 94/111][82.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpdt6qnehq.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/printf-parse.c
[1mprintf-parse.c:149:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  149 |               for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  150 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:155:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  155 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  156 |                     n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                         
[0m[1mprintf-parse.c:157:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  157 |                   if (n == 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  158 |                     /* Positional argument 0.  */[0m
  159 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:160:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |                   if (size_overflow_p (n))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  161 |                     /* n too large, would lead to out of memory later.  */[0m
  162 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:208:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  208 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  209 |                 break;[0m
      | [0;1;32m                      
[0m[1mprintf-parse.c:218:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  218 |               if (max_width_length < 1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  219 |                 max_width_length = 1;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:226:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |                   for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  227 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:232:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  232 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  233 |                         n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                             
[0m[1mprintf-parse.c:234:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |                       if (n == 0)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  235 |                         /* Positional argument 0.  */[0m
  236 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:237:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                       if (size_overflow_p (n))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  238 |                         /* n too large, would lead to out of memory later.  */[0m
  239 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:247:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                   if (dp->width_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  248 |                     /* arg_posn wrapped around.  */[0m
  249 |                     goto error;[0m
      | [0;1;32m                               
[0m[1mprintf-parse.c:251:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:251:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  251 |               REGISTER_ARG (dp->width_arg_index, TYPE_INT);[0m
      | [0;1;32m              ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:258:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |               for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  259 |                 ;[0m
      | [0;1;32m                 
[0m[1mprintf-parse.c:262:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |               if (max_width_length < width_length)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  263 |                 max_width_length = width_length;[0m
      | [0;1;32m                                                
[0m[1mprintf-parse.c:275:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |                   if (max_precision_length < 2)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  276 |                     max_precision_length = 2;[0m
      | [0;1;32m                                             
[0m[1mprintf-parse.c:283:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |                       for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  284 |                         ;[0m
      | [0;1;32m                         
[0m[1mprintf-parse.c:289:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  289 |                           for (np = cp; *np >= '0' && *np <= '9'; np++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  290 |                             n = xsum (xtimes (n, 10), *np - '0');[0m
      | [0;1;32m                                                                 
[0m[1mprintf-parse.c:291:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |                           if (n == 0)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  292 |                             /* Positional argument 0.  */[0m
  293 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:294:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |                           if (size_overflow_p (n))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  295 |                             /* n too large, would lead to out of memory[0m
  296 |                                later.  */[0m
  297 |                             goto error;[0m
      | [0;1;32m                                       
[0m[1mprintf-parse.c:305:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |                       if (dp->precision_arg_index == ARG_NONE)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  306 |                         /* arg_posn wrapped around.  */[0m
  307 |                         goto error;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:309:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:309:19: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  309 |                   REGISTER_ARG (dp->precision_arg_index, TYPE_INT);[0m
      | [0;1;32m                  ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:316:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |                   for (; *cp >= '0' && *cp <= '9'; cp++)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  317 |                     ;[0m
      | [0;1;32m                     
[0m[1mprintf-parse.c:320:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  320 |                   if (max_precision_length < precision_length)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  321 |                     max_precision_length = precision_length;[0m
      | [0;1;32m                                                            
[0m[1mprintf-parse.c:568:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  568 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:575:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  575 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:579:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  579 |                 break;[0m
      | [0;1;32m                ^    
[0m      | [0;32m                {    ;} 
[0m[1mprintf-parse.c:581:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  581 |                 if (signed_type == TYPE_LONGINT[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  582 |                     /* For backward compatibility only.  */[0m
  583 |                     || signed_type == TYPE_LONGLONGINT)[0m
  584 | #if HAVE_WINT_T[0m
  585 |                   type = TYPE_WIDE_CHAR;[0m
  586 | #else[0m
  587 |                   goto error;[0m
  588 | #endif[0m
  589 |                 else[0m
  590 |                   type = TYPE_CHAR;[0m
  591 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:583:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  583 |                     || signed_type == TYPE_LONGLONGINT)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  584 | #if HAVE_WINT_T[0m
  585 |                   type = TYPE_WIDE_CHAR;[0m
  586 | #else[0m
  587 |                   goto error;[0m
  588 | #endif[0m
  589 |                 else[0m
      | [0;32m                } 
[0m[1mprintf-parse.c:589:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  589 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  590 |                   type = TYPE_CHAR;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:594:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  594 |                 type = TYPE_WIDE_CHAR;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  595 |                 c = 'c';[0m
  596 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:599:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  599 |                 if (signed_type == TYPE_LONGINT[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  600 |                     /* For backward compatibility only.  */[0m
  601 |                     || signed_type == TYPE_LONGLONGINT)[0m
  602 | #if HAVE_WCHAR_T[0m
  603 |                   type = TYPE_WIDE_STRING;[0m
  604 | #else[0m
  605 |                   goto error;[0m
  606 | #endif[0m
  607 |                 else[0m
  608 |                   type = TYPE_STRING;[0m
  609 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:601:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  601 |                     || signed_type == TYPE_LONGLONGINT)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  602 | #if HAVE_WCHAR_T[0m
  603 |                   type = TYPE_WIDE_STRING;[0m
  604 | #else[0m
  605 |                   goto error;[0m
  606 | #endif[0m
  607 |                 else[0m
      | [0;32m                } 
[0m[1mprintf-parse.c:607:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  607 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  608 |                   type = TYPE_STRING;[0m
      | [0;1;32m                                     
[0m[1mprintf-parse.c:612:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  612 |                 type = TYPE_WIDE_STRING;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  613 |                 c = 's';[0m
  614 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:617:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  617 |                 type = TYPE_POINTER;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  618 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:620:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  620 |                 type = pointer_type;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  621 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:634:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  634 |                 type = TYPE_NONE;[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m  635 |                 break;[0m
      | [0;1;32m                     
[0m      | [0;32m                     ;} 
[0m[1mprintf-parse.c:638:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  638 |                 goto error;[0m
      | [0;1;32m                ^         
[0m      | [0;32m                {         ;} 
[0m[1mprintf-parse.c:647:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  647 |                     if (dp->arg_index == ARG_NONE)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  648 |                       /* arg_posn wrapped around.  */[0m
  649 |                       goto error;[0m
      | [0;1;32m                                 
[0m[1mprintf-parse.c:651:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  651 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:651:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  651 |                 REGISTER_ARG (dp->arg_index, type);[0m
      | [0;1;32m                ^
[0m[1mprintf-parse.c:113:11: [0m[0;1;36mnote: [0mexpanded from macro 'REGISTER_ARG'[0m
  113 |           memcpy (memory, a->arg, a->count * sizeof (argument));        \[0m
      | [0;1;32m          ^~~~~~
[0m[1mprintf-parse.c:665:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  665 |               if (size_overflow_p (memory_size))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  666 |                 /* Overflow, would lead to out of memory.  */[0m
  667 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:671:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |               if (memory == NULL)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  672 |                 /* Out of memory.  */[0m
  673 |                 goto out_of_memory;[0m
      | [0;1;32m                                   
[0m[1mprintf-parse.c:674:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  674 |               if (d->dir == d->direct_alloc_dir)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                                                                       
[0m[1mprintf-parse.c:675:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:675:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  675 |                 memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));[0m
      | [0;1;32m                ^~~~~~
[0m[1mprintf-parse.c:694:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  694 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  695 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:696:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  696 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  697 |     free (d->dir);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:702:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |   if (a->arg != a->direct_alloc_arg)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  703 |     free (a->arg);[0m
      | [0;1;32m                  
[0m[1mprintf-parse.c:704:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  704 |   if (d->dir != d->direct_alloc_dir)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  705 |     free (d->dir);[0m
      | [0;1;32m                  
[0m50 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 95/111][85.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpx1alsssl.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/nstrftime.c
[1mnstrftime.c:314:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  314 |   while (len-- > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  315 |     dest[len] = TOLOWER ((UCHAR_T) src[len], loc);[0m
      | [0;1;32m                                                  
[0m[1mnstrftime.c:325:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  325 |   while (len-- > 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  326 |     dest[len] = TOUPPER ((UCHAR_T) src[len], loc);[0m
      | [0;1;32m                                                  
[0m[1mnstrftime.c:532:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  532 |   if (! zone)[0m
      | [0;1;32m             ^
[0m      | [0;32m              {
[0m  533 |     zone = "";[0m
      | [0;1;32m              
[0m[1mnstrftime.c:535:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |   if (hour12 > 12)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  536 |     hour12 -= 12;[0m
  537 |   else[0m
      | [0;32m  } 
[0m[1mnstrftime.c:538:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  538 |     if (hour12 == 0)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  539 |       hour12 = 12;[0m
      | [0;1;32m                  
[0m[1mnstrftime.c:647:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  647 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:647:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  647 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:666:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  666 |               continue;[0m
      | [0;1;32m              ^       
[0m      | [0;32m              {       ;} 
[0m[1mnstrftime.c:670:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  670 |               to_uppcase = true;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  671 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:673:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  673 |               change_case = true;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  674 |               continue;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:677:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  677 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mnstrftime.c:688:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |                   || INT_ADD_WRAPV (width, *f - L_('0'), &width))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  689 |                 width = INT_MAX;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:701:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  701 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mnstrftime.c:704:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  704 |           modifier = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  705 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:756:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  756 |           if (f - 1 != percent)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  757 |             goto bad_percent;[0m
  758 |           add1 (*f);[0m
  759 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:756:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  756 |           if (f - 1 != percent)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  757 |             goto bad_percent;[0m
      | [0;1;32m                             
[0m[1mnstrftime.c:758:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  758 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:758:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  758 |           add1 (*f);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:762:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  762 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  763 |             goto bad_format;[0m
  764 |           if (change_case)[0m
  765 |             {[0m
  766 |               to_uppcase = true;[0m
  767 |               to_lowcase = false;[0m
  768 |             }[0m
  769 | #ifdef _NL_CURRENT[0m
  770 |           cpy (aw_len, a_wkday);[0m
  771 |           break;[0m
  772 | #else[0m
  773 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:762:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  762 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  763 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:777:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  777 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  778 |             goto bad_format;[0m
  779 |           if (change_case)[0m
  780 |             {[0m
  781 |               to_uppcase = true;[0m
  782 |               to_lowcase = false;[0m
  783 |             }[0m
  784 | #ifdef _NL_CURRENT[0m
  785 |           cpy (STRLEN (f_wkday), f_wkday);[0m
  786 |           break;[0m
  787 | #else[0m
  788 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:777:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  777 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  778 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:798:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  798 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  799 |             goto bad_format;[0m
  800 | #ifdef _NL_CURRENT[0m
  801 |           if (modifier == L_('O'))[0m
  802 |             cpy (aam_len, a_altmonth);[0m
  803 |           else[0m
  804 |             cpy (am_len, a_month);[0m
  805 |           break;[0m
  806 | #else[0m
  807 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:798:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  798 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  799 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:811:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  811 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  812 |             goto bad_format;[0m
  813 |           if (change_case)[0m
  814 |             {[0m
  815 |               to_uppcase = true;[0m
  816 |               to_lowcase = false;[0m
  817 |             }[0m
  818 | #ifdef _NL_CURRENT[0m
  819 |           if (modifier == L_('O'))[0m
  820 |             cpy (STRLEN (f_altmonth), f_altmonth);[0m
  821 |           else[0m
  822 |             cpy (STRLEN (f_month), f_month);[0m
  823 |           break;[0m
  824 | #else[0m
  825 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:811:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  811 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  812 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:829:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  829 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:829:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  830 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:850:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  850 |             add (len, __strftime_internal (p,[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:156:19: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  156 | #define add(n, f) width_add (width, n, f)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:850:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  850 |             add (len, __strftime_internal (p,[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:156:19: [0m[0;1;36mnote: [0mexpanded from macro 'add'[0m
  156 | #define add(n, f) width_add (width, n, f)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:879:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  879 |             if (modifier != 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  880 |               *u++ = modifier;[0m
      | [0;1;32m                              
[0m[1mnstrftime.c:884:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  884 |             if (len != 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m                                      
[0m[1mnstrftime.c:885:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:885:15: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:885:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:885:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  885 |               cpy (len - 1, ubuf + 1);[0m
      | [0;1;32m              ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:891:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  891 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:920:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  920 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  921 |             goto bad_format;[0m
  922 | #ifdef _NL_CURRENT[0m
  923 |           if (! (modifier == L_('E')[0m
  924 |                  && (*(subfmt =[0m
  925 |                        (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(ERA_D_FMT)))[0m
  926 |                      != L_('\0'))))[0m
  927 |             subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(D_FMT));[0m
  928 |           goto subformat;[0m
  929 | #else[0m
  930 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:920:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  920 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  921 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:933:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  933 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  934 |             goto bad_format;[0m
  935 |           subfmt = L_("%m/%d/%y");[0m
  936 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:933:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  933 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  934 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:939:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  939 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  940 |             goto bad_format;[0m
  941 | [0m
  942 |           DO_NUMBER (2, tp->tm_mday);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:939:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  939 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  940 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:945:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  945 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:945:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  945 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  946 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:958:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  958 |           if (pad == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  959 |             pad = yr_spec;[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:967:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  967 |           if (pad == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  968 |             pad = L_('_');[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:1011:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1011 |           if (negative_number)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1012 |             u_number_value = - u_number_value;[0m
      | [0;1;32m                                              
[0m[1mnstrftime.c:1016:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1016 |               if (tz_colon_mask & 1)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1017 |                 *--bufp = ':';[0m
      | [0;1;32m                              
[0m[1mnstrftime.c:1025:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1025 |           if (pad == 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1026 |             pad = L_('0');[0m
      | [0;1;32m                          
[0m[1mnstrftime.c:1027:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1027 |           if (width < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1028 |             width = digits;[0m
      | [0;1;32m                           
[0m[1mnstrftime.c:1042:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1042 |                     if (p)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m 1043 |                       memset_space (p, padding);[0m
      | [0;1;32m                                                
[0m[1mnstrftime.c:1043:23: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1043 |                       memset_space (p, padding);[0m
      | [0;1;32m                      ^
[0m[1mnstrftime.c:146:32: [0m[0;1;36mnote: [0mexpanded from macro 'memset_space'[0m
  146 | # define memset_space(P, Len) (memset (P, ' ', Len), (P) += (Len))[0m
      | [0;1;32m                               ^~~~~~
[0m[1mnstrftime.c:1043:23: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1043 |                       memset_space (p, padding);[0m
      | [0;1;32m                      ^
[0m[1mnstrftime.c:146:32: [0m[0;1;36mnote: [0mexpanded from macro 'memset_space'[0m
  146 | # define memset_space(P, Len) (memset (P, ' ', Len), (P) += (Len))[0m
      | [0;1;32m                               ^~~~~~
[0m[1mnstrftime.c:1047:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1047 |                 width_add1 (0, sign_char);[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1047:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1047 |                 width_add1 (0, sign_char);[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1051:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1051 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1051:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1051 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1051:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1051 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1051:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1051 |             cpy (numlen, bufp);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1056:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1056 |           if (modifier != 0)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1057 |             goto bad_format;[0m
 1058 |           if (pad == 0 && width < 0)[0m
 1059 |             {[0m
 1060 |               pad = L_('+');[0m
 1061 |               subwidth = 4;[0m
 1062 |             }[0m
 1063 |           else[0m
 1064 |             {[0m
 1065 |               subwidth = width - 6;[0m
 1066 |               if (subwidth < 0)[0m
 1067 |                 subwidth = 0;[0m
 1068 |             }[0m
 1069 |           subfmt = L_("%Y-%m-%d");[0m
 1070 |           goto subformat_width;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnstrftime.c:1056:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1056 |           if (modifier != 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1057 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1066:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1066 |               if (subwidth < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1067 |                 subwidth = 0;[0m
      | [0;1;32m                             
[0m[1mnstrftime.c:1073:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1073 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1074 |             goto bad_format;[0m
 1075 | [0m
 1076 |           DO_NUMBER (2, tp->tm_hour);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:1073:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1073 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1074 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1079:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1079 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1080 |             goto bad_format;[0m
 1081 | [0m
 1082 |           DO_NUMBER (2, hour12);[0m
      | [0;1;32m                               
[0m      | [0;32m                               ;} 
[0m[1mnstrftime.c:1079:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1079 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1080 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1085:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1085 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1086 |             goto bad_format;[0m
 1087 | [0m
 1088 |           DO_NUMBER_SPACEPAD (2, tp->tm_hour);[0m
      | [0;1;32m                                             
[0m      | [0;32m                                             ;} 
[0m[1mnstrftime.c:1085:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1085 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1086 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1091:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1091 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1092 |             goto bad_format;[0m
 1093 | [0m
 1094 |           DO_NUMBER_SPACEPAD (2, hour12);[0m
      | [0;1;32m                                        
[0m      | [0;32m                                        ;} 
[0m[1mnstrftime.c:1091:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1091 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1092 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1097:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1097 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1098 |             goto bad_format;[0m
 1099 | [0m
 1100 |           DO_SIGNED_NUMBER (3, tp->tm_yday < -1, tp->tm_yday + 1U);[0m
      | [0;1;32m                                                                  
[0m      | [0;32m                                                                  ;} 
[0m[1mnstrftime.c:1097:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1097 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1098 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1103:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1103 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1104 |             goto bad_format;[0m
 1105 | [0m
 1106 |           DO_NUMBER (2, tp->tm_min);[0m
      | [0;1;32m                                   
[0m      | [0;32m                                   ;} 
[0m[1mnstrftime.c:1103:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1103 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1104 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1109:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1109 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1110 |             goto bad_format;[0m
 1111 | [0m
 1112 |           DO_SIGNED_NUMBER (2, tp->tm_mon < -1, tp->tm_mon + 1U);[0m
      | [0;1;32m                                                                
[0m      | [0;32m                                                                ;} 
[0m[1mnstrftime.c:1109:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1109 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1110 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1116:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1116 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1116:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1116 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1117 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1120:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1120 |             if (width <= 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1121 |               width = ns_digits;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:1123:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1123 |             while (width < ndigs || (1 < ndigs && n % 10 == 0))[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1124 |               ndigs--, n /= 10;[0m
      | [0;1;32m                               
[0m[1mnstrftime.c:1125:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |             for (int j = ndigs; 0 < j; j--)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1126 |               buf[j - 1] = n % 10 + L_('0'), n /= 10;[0m
      | [0;1;32m                                                     
[0m[1mnstrftime.c:1127:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1127 |             if (!pad)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m 1128 |               pad = L_('0');[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1129:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1129 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1129:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1129 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1129:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1129 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1129:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1129 |             width_cpy (0, ndigs, buf);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1130:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1130 |             width_add (width - ndigs, 0, (void) 0);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1130:13: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1130 |             width_add (width - ndigs, 0, (void) 0);[0m
      | [0;1;32m            ^
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1136:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1136 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1136:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1136 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1136:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1136 |           add1 (L_('\n'));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1137 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^
[0m[1mnstrftime.c:158:3: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  158 |   do                                                                          \[0m
      | [0;1;32m  ^
[0m[1mnstrftime.c:1140:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1140 |           to_lowcase = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1141 | #ifndef _NL_CURRENT[0m
 1142 |           format_char = L_('p');[0m
 1143 | #endif[0m
 1144 |           FALLTHROUGH;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mnstrftime.c:1146:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1146 |           if (change_case)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1147 |             {[0m
 1148 |               to_uppcase = false;[0m
 1149 |               to_lowcase = true;[0m
 1150 |             }[0m
 1151 | #ifdef _NL_CURRENT[0m
 1152 |           cpy (ap_len, ampm);[0m
 1153 |           break;[0m
 1154 | #else[0m
 1155 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:1159:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1159 |           DO_SIGNED_NUMBER (1, false, ((tp->tm_mon * 11) >> 5) + 1);[0m
      | [0;1;32m          ^                                                        
[0m      | [0;32m          {                                                        ;} 
[0m[1mnstrftime.c:721:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_SIGNED_NUMBER'[0m
  721 |           DO_MAYBE_SIGNED_NUMBER (d, negative, v, do_signed_number)[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:725:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_MAYBE_SIGNED_NUMBER'[0m
  725 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1162:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1162 |           subfmt = L_("%H:%M");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1163 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1173:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1173 |           goto underlying_strftime;[0m
      | [0;1;32m          ^                       
[0m      | [0;32m          {                       ;} 
[0m[1mnstrftime.c:1177:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1177 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1178 |             goto bad_format;[0m
 1179 | [0m
 1180 |           DO_NUMBER (2, tp->tm_sec);[0m
      | [0;1;32m                                   
[0m      | [0;32m                                   ;} 
[0m[1mnstrftime.c:1177:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1177 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1178 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1216:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1216 |           if (modifier == L_('O'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1217 |             goto bad_format;[0m
 1218 | #ifdef _NL_CURRENT[0m
 1219 |           if (! (modifier == L_('E')[0m
 1220 |                  && (*(subfmt =[0m
 1221 |                        (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(ERA_T_FMT)))[0m
 1222 |                      != L_('\0'))))[0m
 1223 |             subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(T_FMT));[0m
 1224 |           goto subformat;[0m
 1225 | #else[0m
 1226 |           goto underlying_strftime;[0m
      | [0;1;32m                                  
[0m      | [0;32m                                  ;} 
[0m[1mnstrftime.c:1216:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1216 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1217 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1229:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1229 |           subfmt = L_("%H:%M:%S");[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1230 |           goto subformat;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1233:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1233 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1233:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1233 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1233:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1233 |           add1 (L_('\t'));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1234 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:184:17: [0m[0;1;36mnote: [0mexpanded from macro 'add1'[0m
  184 | #define add1(c) width_add1 (width, c)[0m
      | [0;1;32m                ^
[0m[1mnstrftime.c:188:31: [0m[0;1;36mnote: [0mexpanded from macro 'width_add1'[0m
  188 | # define width_add1(width, c) width_add (width, 1, *p = c)[0m
      | [0;1;32m                              ^
[0m[1mnstrftime.c:158:3: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  158 |   do                                                                          \[0m
      | [0;1;32m  ^
[0m[1mnstrftime.c:1237:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1237 |           DO_NUMBER (1, (tp->tm_wday - 1 + 7) % 7 + 1);[0m
      | [0;1;32m          ^                                           
[0m      | [0;32m          {                                           ;} 
[0m[1mnstrftime.c:713:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_NUMBER'[0m
  713 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1240:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1240 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1241 |             goto bad_format;[0m
 1242 | [0m
 1243 |           DO_NUMBER (2, (tp->tm_yday - tp->tm_wday + 7) / 7);[0m
      | [0;1;32m                                                            
[0m      | [0;32m                                                            ;} 
[0m[1mnstrftime.c:1240:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1240 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1241 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1248:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1248 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1249 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1295:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1295 |                 DO_YEARISH (4, tp->tm_year < -TM_YEAR_BASE - year_adjust,[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1296 |                             (tp->tm_year + (unsigned int) TM_YEAR_BASE[0m
 1297 |                              + year_adjust));[0m
      | [0;1;32m                                            
[0m      | [0;32m                                            ;} 
[0m[1mnstrftime.c:723:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_YEARISH'[0m
  723 |           DO_MAYBE_SIGNED_NUMBER (d, negative, v, do_yearish)[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:725:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_MAYBE_SIGNED_NUMBER'[0m
  725 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1300:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1300 |                 DO_NUMBER (2, days / 7 + 1);[0m
      | [0;1;32m                ^                          
[0m      | [0;32m                {                          ;} 
[0m[1mnstrftime.c:713:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_NUMBER'[0m
  713 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1305:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1305 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1306 |             goto bad_format;[0m
 1307 | [0m
 1308 |           DO_NUMBER (2, (tp->tm_yday - (tp->tm_wday - 1 + 7) % 7 + 7) / 7);[0m
      | [0;1;32m                                                                          
[0m      | [0;32m                                                                          ;} 
[0m[1mnstrftime.c:1305:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1305 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1306 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1311:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1311 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1312 |             goto bad_format;[0m
 1313 | [0m
 1314 |           DO_NUMBER (1, tp->tm_wday);[0m
      | [0;1;32m                                    
[0m      | [0;32m                                    ;} 
[0m[1mnstrftime.c:1311:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1311 |           if (modifier == L_('E'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1312 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1317:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1317 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1336:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1336 |           if (modifier == L_('O'))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1337 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1343:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1343 |           if (modifier == L_('E'))[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1362:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1362 |             if (yy < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1363 |               yy = tp->tm_year < - TM_YEAR_BASE ? -yy : yy + 100;[0m
      | [0;1;32m                                                                 
[0m[1mnstrftime.c:1368:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1368 |           if (change_case)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1384:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1384 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1384:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1384 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1384:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1384 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1384:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1384 |           cpy (strlen (zone), zone);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1391:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1391 |           for (colons = 1; f[colons] == L_(':'); colons++)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m 1392 |             continue;[0m
 1393 |           if (f[colons] != L_('z'))[0m
 1394 |             goto bad_format;[0m
 1395 |           f += colons;[0m
 1396 |           goto do_z_conversion;[0m
      | [0;1;32m                              
[0m      | [0;32m                              ;} 
[0m[1mnstrftime.c:1391:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1391 |           for (colons = 1; f[colons] == L_(':'); colons++)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m 1392 |             continue;[0m
      | [0;1;32m                     
[0m[1mnstrftime.c:1393:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1393 |           if (f[colons] != L_('z'))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1394 |             goto bad_format;[0m
      | [0;1;32m                            
[0m[1mnstrftime.c:1399:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1399 |           colons = 0;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mnstrftime.c:1402:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1402 |           if (tp->tm_isdst < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1403 |             break;[0m
      | [0;1;32m                  
[0m[1mnstrftime.c:1448:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1448 |                 DO_TZ_OFFSET (5, 0, hour_diff * 100 + min_diff);[0m
      | [0;1;32m                ^                                              
[0m      | [0;32m                {                                              ;} 
[0m[1mnstrftime.c:738:11: [0m[0;1;36mnote: [0mexpanded from macro 'DO_TZ_OFFSET'[0m
  738 |           do                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1450:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1450 |               case 1: tz_hh_mm: /* +hh:mm */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m 1451 |                 DO_TZ_OFFSET (6, 04, hour_diff * 100 + min_diff);[0m
      | [0;1;32m                                                                
[0m      | [0;32m                                                                ;} 
[0m[1mnstrftime.c:1453:23: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1453 |               case 2: tz_hh_mm_ss: /* +hh:mm:ss */[0m
      | [0;1;32m                      ^
[0m      | [0;32m                      {
[0m 1454 |                 DO_TZ_OFFSET (9, 024,[0m
 1455 |                               hour_diff * 10000 + min_diff * 100 + sec_diff);[0m
      | [0;1;32m                                                                            
[0m      | [0;32m                                                                            ;} 
[0m[1mnstrftime.c:1458:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1458 |                 if (sec_diff != 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                {
[0m 1459 |                   goto tz_hh_mm_ss;[0m
 1460 |                 if (min_diff != 0)[0m
 1461 |                   goto tz_hh_mm;[0m
 1462 |                 DO_TZ_OFFSET (3, 0, hour_diff);[0m
      | [0;1;32m                                              
[0m      | [0;32m                                              ;} 
[0m[1mnstrftime.c:1458:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1458 |                 if (sec_diff != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1459 |                   goto tz_hh_mm_ss;[0m
      | [0;1;32m                                   
[0m[1mnstrftime.c:1460:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1460 |                 if (min_diff != 0)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1461 |                   goto tz_hh_mm;[0m
      | [0;1;32m                                
[0m[1mnstrftime.c:1465:17: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1465 |                 goto bad_format;[0m
      | [0;1;32m                ^              
[0m      | [0;32m                {              ;} 
[0m[1mnstrftime.c:1470:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1470 |         bad_percent:[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1471 |             --f;[0m
 1472 |             FALLTHROUGH;[0m
      | [0;1;32m                        
[0m      | [0;32m                        ;} 
[0m[1mnstrftime.c:1477:9: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1477 |         bad_format:[0m
      | [0;1;32m        ^
[0m      | [0;32m        {
[0m 1478 |           cpy (f - percent + 1, percent);[0m
 1479 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mnstrftime.c:1478:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1478 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1478:11: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1478 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:221:12: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:89:26: [0m[0;1;36mnote: [0mexpanded from macro 'MEMCPY'[0m
   89 | # define MEMCPY(d, s, n) memcpy (d, s, n)[0m
      | [0;1;32m                         ^~~~~~
[0m[1mnstrftime.c:178:11: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  178 |           f;                                                                  \[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:1478:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1478 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1478:11: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1478 |           cpy (f - percent + 1, percent);[0m
      | [0;1;32m          ^
[0m[1mnstrftime.c:191:19: [0m[0;1;36mnote: [0mexpanded from macro 'cpy'[0m
  191 | #define cpy(n, s) width_cpy (width, n, s)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:215:5: [0m[0;1;36mnote: [0mexpanded from macro 'width_cpy'[0m
  215 |     width_add (width, n,                                                      \[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  216 |          if (to_lowcase)                                                      \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  217 |            memcpy_lowcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  218 |          else if (to_uppcase)                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  219 |            memcpy_uppcase (p, (s), _n LOCALE_ARG);                            \[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  220 |          else                                                                 \[0m
      | [0;1;32m         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  221 |            MEMCPY ((void *) p, (void const *) (s), _n))[0m
      | [0;1;32m           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:174:17: [0m[0;1;36mnote: [0mexpanded from macro 'width_add'[0m
  174 |                 memset_zero (p, _delta);                                      \[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mnstrftime.c:147:31: [0m[0;1;36mnote: [0mexpanded from macro 'memset_zero'[0m
  147 | # define memset_zero(P, Len) (memset (P, '0', Len), (P) += (Len))[0m
      | [0;1;32m                              ^~~~~~
[0m[1mnstrftime.c:1484:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1484 |   if (p && maxsize != 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 1485 |     *p = L_('\0');[0m
      | [0;1;32m                  
[0m141 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 96/111][84.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpv32zxmtc.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/filemode.c
[1mfilemode.c:108:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  108 |   if (S_ISBLK (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  109 |     return 'b';[0m
      | [0;1;32m               
[0m[1mfilemode.c:111:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |   if (S_ISCHR (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  112 |     return 'c';[0m
      | [0;1;32m               
[0m[1mfilemode.c:113:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  113 |   if (S_ISDIR (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  114 |     return 'd';[0m
      | [0;1;32m               
[0m[1mfilemode.c:115:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  115 |   if (S_ISREG (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  116 |     return '-';[0m
      | [0;1;32m               
[0m[1mfilemode.c:118:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |   if (S_ISFIFO (bits))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  119 |     return 'p';[0m
      | [0;1;32m               
[0m[1mfilemode.c:122:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  122 |   if (S_ISLNK (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  123 |     return 'l';[0m
      | [0;1;32m               
[0m[1mfilemode.c:126:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |   if (S_ISSOCK (bits))[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  127 |     return 's';[0m
      | [0;1;32m               
[0m[1mfilemode.c:130:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  130 |   if (S_ISMPC (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  131 |     return 'm';[0m
      | [0;1;32m               
[0m[1mfilemode.c:134:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  134 |   if (S_ISNWK (bits))[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  135 |     return 'n';[0m
      | [0;1;32m               
[0m[1mfilemode.c:160:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |       if (chars[3] != 'x')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  161 |         /* Set-uid, but not executable by owner.  */[0m
  162 |         chars[3] = 'S';[0m
  163 |       else[0m
      | [0;32m      } 
[0m[1mfilemode.c:163:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  164 |         chars[3] = 's';[0m
      | [0;1;32m                       
[0m[1mfilemode.c:170:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  170 |       if (chars[6] != 'x')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  171 |         /* Set-gid, but not executable by group.  */[0m
  172 |         chars[6] = 'S';[0m
  173 |       else[0m
      | [0;32m      } 
[0m[1mfilemode.c:173:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  174 |         chars[6] = 's';[0m
      | [0;1;32m                       
[0m[1mfilemode.c:180:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |       if (chars[9] != 'x')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  181 |         /* Sticky, but not executable by others.  */[0m
  182 |         chars[9] = 'T';[0m
  183 |       else[0m
      | [0;32m      } 
[0m[1mfilemode.c:183:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  183 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  184 |         chars[9] = 't';[0m
      | [0;1;32m                       
[0m15 warnings generated.

[ 97/111][82.2s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpsdi2ulyd.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/quotearg.c
[1mquotearg.c:163:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  163 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  164 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:174:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  174 |   if (!o)[0m
      | [0;1;32m         ^
[0m      | [0;32m          {
[0m  175 |     o = &default_quoting_options;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:177:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  177 |   if (!left_quote || !right_quote)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  178 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:188:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  188 |   if (style == custom_quoting_style)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  189 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:204:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  204 |   if (translation != msgid)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  205 |     return translation;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:226:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  226 |   if (STRCASEEQ (locale_code, "UTF-8", 'U','T','F','-','8',0,0,0,0))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  227 |     return msgid[0] == '`' ? "\xe2\x80\x98": "\xe2\x80\x99";[0m
      | [0;1;32m                                                            
[0m[1mquotearg.c:228:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |   if (STRCASEEQ (locale_code, "GB18030", 'G','B','1','8','0','3','0',0,0))[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  229 |     return msgid[0] == '`' ? "\xa1\ae": "\xa1\xaf";[0m
      | [0;1;32m                                                   
[0m[1mquotearg.c:311:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  311 |       quoting_style = c_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  312 |       elide_outer_quotes = true;[0m
  313 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:315:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  315 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  316 |         STORE ('"');[0m
  317 |       backslash_escapes = true;[0m
  318 |       quote_string = "\"";[0m
  319 |       quote_string_len = 1;[0m
  320 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:315:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  316 |         STORE ('"');[0m
      | [0;1;32m                    
[0m[1mquotearg.c:323:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  323 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  324 |       elide_outer_quotes = false;[0m
  325 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:357:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  357 |         if (!elide_outer_quotes)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  358 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
  359 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:358:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |           for (quote_string = left_quote; *quote_string; quote_string++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  359 |             STORE (*quote_string);[0m
      | [0;1;32m                                  
[0m[1mquotearg.c:364:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  364 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mquotearg.c:367:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  367 |       backslash_escapes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  368 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:370:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  370 |       elide_outer_quotes = true;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  371 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:373:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  373 |       if (!elide_outer_quotes)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  374 |         backslash_escapes = true;[0m
  375 |       FALLTHROUGH;[0m
      | [0;1;32m                  
[0m      | [0;32m                  ;} 
[0m[1mquotearg.c:373:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  374 |         backslash_escapes = true;[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:377:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  377 |       quoting_style = shell_always_quoting_style;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  378 |       if (!elide_outer_quotes)[0m
  379 |         STORE ('\'');[0m
  380 |       quote_string = "'";[0m
  381 |       quote_string_len = 1;[0m
  382 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:378:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |       if (!elide_outer_quotes)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  379 |         STORE ('\'');[0m
      | [0;1;32m                     
[0m[1mquotearg.c:385:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  385 |       elide_outer_quotes = false;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  386 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mquotearg.c:389:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  389 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mquotearg.c:411:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |           if (elide_outer_quotes)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  412 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:420:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  420 |           if (backslash_escapes)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:441:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |           else if (flags & QA_ELIDE_NULL_BYTES)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  442 |             continue;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:446:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  446 |           switch (quoting_style)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:449:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  449 |               if (elide_outer_quotes)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  450 |                 goto force_outer_quoting_style;[0m
  451 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mquotearg.c:449:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  450 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:454:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  454 |               if ((flags & QA_SPLIT_TRIGRAPHS)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mquotearg.c:455:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  455 |                   && i + 2 < argsize && arg[i + 1] == '?')[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m[1mquotearg.c:463:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  463 |                     if (elide_outer_quotes)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  464 |                       goto force_outer_quoting_style;[0m
      | [0;1;32m                                                     
[0m[1mquotearg.c:465:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  465 |                     c = arg[i + 2];[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m  466 |                     i += 2;[0m
  467 |                     STORE ('?');[0m
  468 |                     STORE ('"');[0m
  469 |                     STORE ('"');[0m
  470 |                     STORE ('?');[0m
  471 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mquotearg.c:474:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  474 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mquotearg.c:479:15: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  479 |               break;[0m
      | [0;1;32m              ^    
[0m      | [0;32m              {    ;} 
[0m[1mquotearg.c:483:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  483 |         case '\a': esc = 'a'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:484:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  484 |         case '\b': esc = 'b'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:485:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  485 |         case '\f': esc = 'f'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:486:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  486 |         case '\n': esc = 'n'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:487:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  487 |         case '\r': esc = 'r'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:488:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  488 |         case '\t': esc = 't'; goto c_and_shell_escape;[0m
      | [0;1;32m                   ^                                 
[0m      | [0;32m                   {                                 ;} 
[0m[1mquotearg.c:489:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  489 |         case '\v': esc = 'v'; goto c_escape;[0m
      | [0;1;32m                   ^                       
[0m      | [0;32m                   {                       ;} 
[0m[1mquotearg.c:490:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  490 |         case '\\': esc = c;[0m
      | [0;1;32m                   ^
[0m      | [0;32m                   {
[0m[1mquotearg.c:494:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  494 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  495 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:501:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |           if (backslash_escapes && elide_outer_quotes && quote_string_len)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  502 |             goto store_c;[0m
      | [0;1;32m                         
[0m[1mquotearg.c:506:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  507 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:518:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |           if (! (argsize == SIZE_MAX ? arg[1] == '\0' : argsize == 1))[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  519 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:520:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  520 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2197:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2197 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mquotearg.c:522:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |           if (i != 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  523 |             break;[0m
      | [0;1;32m                  
[0m[1mquotearg.c:524:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  524 |           FALLTHROUGH;[0m
      | [0;1;32m          ^           
[0m      | [0;32m          {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2197:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2197 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mquotearg.c:526:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  526 |           c_and_shell_quote_compat = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  527 |           FALLTHROUGH;[0m
      | [0;1;32m                      
[0m      | [0;32m                      ;} 
[0m[1mquotearg.c:541:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |               && elide_outer_quotes)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  542 |             goto force_outer_quoting_style;[0m
      | [0;1;32m                                           
[0m[1mquotearg.c:543:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  543 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:546:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  546 |           encountered_single_quote = true;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m[1mquotearg.c:550:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  550 |               if (elide_outer_quotes)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  551 |                 goto force_outer_quoting_style;[0m
      | [0;1;32m                                               
[0m[1mquotearg.c:592:11: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  592 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mquotearg.c:614:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  614 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:614:17: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  614 |                 memset (&mbstate, 0, sizeof mbstate);[0m
      | [0;1;32m                ^~~~~~
[0m[1mquotearg.c:618:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |                 if (argsize == SIZE_MAX)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  619 |                   argsize = strlen (arg);[0m
      | [0;1;32m                                         
[0m[1mquotearg.c:626:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  626 |                     if (bytes == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  627 |                       break;[0m
  628 |                     else if (bytes == (size_t) -1)[0m
      | [0;32m                    } 
[0m[1mquotearg.c:636:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  636 |                         while (i + m < argsize && arg[i + m])[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  637 |                           m++;[0m
      | [0;1;32m                              
[0m[1mquotearg.c:650:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |                             for (j = 1; j < bytes; j++)[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  651 |                               switch (arg[i + m + j])[0m
  652 |                                 {[0m
  653 |                                 case '[': case '\\': case '^':[0m
  654 |                                 case '`': case '|':[0m
  655 |                                   goto force_outer_quoting_style;[0m
  656 | [0m
  657 |                                 default:[0m
  658 |                                   break;[0m
  659 |                                 }[0m
      | [0;1;32m                                 
[0m[1mquotearg.c:658:35: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  658 |                                   break;[0m
      | [0;1;32m                                  ^    
[0m      | [0;32m                                  {    ;} 
[0m[1mquotearg.c:662:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  662 |                         if (! iswprint (w))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  663 |                           printable = false;[0m
      | [0;1;32m                                            
[0m[1mquotearg.c:692:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  692 |                     if (ilim <= i + 1)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  693 |                       break;[0m
      | [0;1;32m                            
[0m[1mquotearg.c:708:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |           && !is_right_quote)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  709 |         goto store_c;[0m
      | [0;1;32m                     
[0m[1mquotearg.c:718:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  718 |       if (! c_and_shell_quote_compat)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  719 |         all_c_and_shell_quote_compat = false;[0m
      | [0;1;32m                                             
[0m[1mquotearg.c:723:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  723 |       && elide_outer_quotes)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  724 |     goto force_outer_quoting_style;[0m
      | [0;1;32m                                   
[0m[1mquotearg.c:733:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |       if (all_c_and_shell_quote_compat)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  734 |         return quotearg_buffer_restyled (buffer, orig_buffersize, arg, argsize,[0m
  735 |                                          c_quoting_style,[0m
  736 |                                          flags, quote_these_too,[0m
  737 |                                          left_quote, right_quote);[0m
  738 |       else if (! buffersize && orig_buffersize)[0m
      | [0;32m      } 
[0m[1mquotearg.c:747:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  747 |   if (quote_string && !elide_outer_quotes)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  748 |     for (; *quote_string; quote_string++)[0m
  749 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:748:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  748 |     for (; *quote_string; quote_string++)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  749 |       STORE (*quote_string);[0m
      | [0;1;32m                            
[0m[1mquotearg.c:751:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |   if (len < buffersize)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  752 |     buffer[len] = '\0';[0m
      | [0;1;32m                       
[0m[1mquotearg.c:758:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  758 |   if (quoting_style == shell_always_quoting_style && backslash_escapes)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  759 |     quoting_style = shell_escape_always_quoting_style;[0m
      | [0;1;32m                                                      
[0m[1mquotearg.c:819:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  819 |   if (size)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  820 |     *size = bufsize - 1;[0m
      | [0;1;32m                        
[0m[1mquotearg.c:843:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  843 |   for (i = 1; i < nslots; i++)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  844 |     free (sv[i].val);[0m
      | [0;1;32m                     
[0m[1mquotearg.c:877:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |   if (! (0 <= n && n < nslots_max))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  878 |     abort ();[0m
      | [0;1;32m             
[0m[1mquotearg.c:887:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |       if (preallocated)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  888 |         *sv = slotvec0;[0m
      | [0;1;32m                       
[0m[1mquotearg.c:889:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  889 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:889:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  889 |       memset (sv + nslots, 0, (new_nslots - nslots) * sizeof *sv);[0m
      | [0;1;32m      ^~~~~~
[0m[1mquotearg.c:907:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  907 |         if (val != slot0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  908 |           free (val);[0m
      | [0;1;32m                     
[0m132 warnings generated.
Suppressed 55 warnings (55 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 98/111][88.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp9bqaame1.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/rmt/rmt.c
[1mrmt.c:75:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   75 |       if (len > 1 && str[len-1] == '\n')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   76 |         str[len-1] = 0;[0m
      | [0;1;32m                       
[0m[1mrmt.c:91:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   91 |       DEBUG1 (10, "C: %s", input_buf_ptr);[0m
      | [0;1;32m      ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:91:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   91 |       DEBUG1 (10, "C: %s", input_buf_ptr);[0m
      | [0;1;32m      ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:95:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   95 |   DEBUG (10, "reached EOF");[0m
      | [0;1;32m  ^
[0m[1mrmt.c:42:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG'[0m
   42 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, "%s", msg); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:95:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   95 |   DEBUG (10, "reached EOF");[0m
      | [0;1;32m  ^
[0m[1mrmt.c:42:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG'[0m
   42 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, "%s", msg); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:107:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  107 |   VDEBUG (10, "S: ", fmt);[0m
      | [0;1;32m  ^
[0m[1mrmt.c:60:4: [0m[0;1;36mnote: [0mexpanded from macro 'VDEBUG'[0m
   60 |           fprintf (dbgout, "%s", pfx);          \[0m
      | [0;1;32m          ^~~~~~~
[0m[1mrmt.c:107:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  107 |   VDEBUG (10, "S: ", fmt);[0m
      | [0;1;32m  ^
[0m[1mrmt.c:60:4: [0m[0;1;36mnote: [0mexpanded from macro 'VDEBUG'[0m
   60 |           fprintf (dbgout, "%s", pfx);          \[0m
      | [0;1;32m          ^~~~~~~
[0m[1mrmt.c:119:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  119 |   DEBUG1 (10, "S: E%d\n", code);[0m
      | [0;1;32m  ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:119:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  119 |   DEBUG1 (10, "S: E%d\n", code);[0m
      | [0;1;32m  ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:120:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  120 |   DEBUG1 (10, "S: %s\n", msg);[0m
      | [0;1;32m  ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:120:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  120 |   DEBUG1 (10, "S: %s\n", msg);[0m
      | [0;1;32m  ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:121:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  121 |   DEBUG1 (1, "error: %s\n", msg);[0m
      | [0;1;32m  ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:121:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  121 |   DEBUG1 (1, "error: %s\n", msg);[0m
      | [0;1;32m  ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:122:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  122 |   fprintf (stdout, "E%d\n%s\n", code, msg);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrmt.c:122:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  122 |   fprintf (stdout, "E%d\n%s\n", code, msg);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrmt.c:192:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  192 |   while (*s && c_isblank (*s))[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  193 |     s++;[0m
      | [0;1;32m        
[0m[1mrmt.c:250:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |           if (*mstr == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  251 |             break;[0m
  252 |           else if (c_isdigit (*mstr))[0m
      | [0;32m          } 
[0m[1mrmt.c:252:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |           else if (c_isdigit (*mstr))[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  253 |             v = strtol (mstr, (char**) &p, 10);[0m
  254 |           else if (xlat_kw (mstr, "O_", open_flag_kw, &v, &p))[0m
      | [0;32m          } 
[0m[1mrmt.c:262:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |           if (*p && c_isblank (*p))[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  263 |             p = skip_ws (p);[0m
      | [0;1;32m                            
[0m[1mrmt.c:264:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  264 |           if (*p == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  265 |             break;[0m
  266 |           else if (*p == '|')[0m
      | [0;32m          } 
[0m[1mrmt.c:281:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  282 |     mode = numeric_mode;[0m
      | [0;1;32m                        
[0m[1mrmt.c:331:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  331 |       DEBUG (1, "unexpected EOF");[0m
      | [0;1;32m      ^
[0m[1mrmt.c:42:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG'[0m
   42 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, "%s", msg); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:331:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  331 |       DEBUG (1, "unexpected EOF");[0m
      | [0;1;32m      ^
[0m[1mrmt.c:42:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG'[0m
   42 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, "%s", msg); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:336:11: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'flag_str' [clang-analyzer-unix.Malloc][0m
  336 |       if (device_fd >= 0)[0m
      | [0;1;32m          ^
[0m[1mrmt.c:770:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  770 |   if (isatty (STDOUT_FILENO))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:770:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  770 |   if (isatty (STDOUT_FILENO))[0m
      | [0;1;32m  ^
[0m[1mrmt.c:777:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  777 |   if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &idx, NULL))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:777:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  777 |   if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &idx, NULL))[0m
      | [0;1;32m  ^
[0m[1mrmt.c:779:7: [0m[0;1;36mnote: [0mAssuming 'idx' is equal to 'argc'[0m
  779 |   if (idx != argc)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mrmt.c:779:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  779 |   if (idx != argc)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:789:11: [0m[0;1;36mnote: [0m'stop' is 0[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m          ^~~~
[0m[1mrmt.c:789:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m         ^
[0m[1mrmt.c:789:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:791:7: [0m[0;1;36mnote: [0mControl jumps to 'case 79:'  at line 806[0m
  791 |       switch (buf[0])[0m
      | [0;1;32m      ^
[0m[1mrmt.c:807:4: [0m[0;1;36mnote: [0mCalling 'open_device'[0m
  807 |           open_device (buf + 1);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:328:14: [0m[0;1;36mnote: [0mCalling 'rmt_read'[0m
  328 |   flag_str = rmt_read ();[0m
      | [0;1;32m             ^~~~~~~~~~~
[0m[1mrmt.c:88:16: [0m[0;1;36mnote: [0mMemory is allocated[0m
   88 |   ssize_t rc = getline (&input_buf_ptr, &input_buf_size, stdin);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:89:7: [0m[0;1;36mnote: [0mAssuming 'rc' is > 0[0m
   89 |   if (rc > 0)[0m
      | [0;1;32m      ^~~~~~
[0m[1mrmt.c:89:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   89 |   if (rc > 0)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:91:7: [0m[0;1;36mnote: [0mAssuming 'dbgout' is null[0m
   91 |       DEBUG1 (10, "C: %s", input_buf_ptr);[0m
      | [0;1;32m      ^
[0m[1mrmt.c:44:12: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m           ^~~~~~
[0m[1mrmt.c:91:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   91 |       DEBUG1 (10, "C: %s", input_buf_ptr);[0m
      | [0;1;32m      ^
[0m[1mrmt.c:44:19: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                  ^
[0m[1mrmt.c:91:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
   91 |       DEBUG1 (10, "C: %s", input_buf_ptr);[0m
      | [0;1;32m      ^
[0m[1mrmt.c:44:3: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:92:7: [0m[0;1;36mnote: [0mCalling 'trimnl'[0m
   92 |       trimnl (input_buf_ptr);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:72:7: [0m[0;1;36mnote: [0mAssuming 'str' is non-null[0m
   72 |   if (str)[0m
      | [0;1;32m      ^~~
[0m[1mrmt.c:72:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   72 |   if (str)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:75:11: [0m[0;1;36mnote: [0mAssuming 'len' is <= 1[0m
   75 |       if (len > 1 && str[len-1] == '\n')[0m
      | [0;1;32m          ^~~~~~~
[0m[1mrmt.c:75:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   75 |       if (len > 1 && str[len-1] == '\n')[0m
      | [0;1;32m                  ^
[0m[1mrmt.c:92:7: [0m[0;1;36mnote: [0mReturning from 'trimnl'[0m
   92 |       trimnl (input_buf_ptr);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:328:14: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  328 |   flag_str = rmt_read ();[0m
      | [0;1;32m             ^~~~~~~~~~~
[0m[1mrmt.c:329:8: [0m[0;1;36mnote: [0m'flag_str' is non-null[0m
  329 |   if (!flag_str)[0m
      | [0;1;32m       ^~~~~~~~
[0m[1mrmt.c:329:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  329 |   if (!flag_str)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:334:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  334 |   if (decode_open_flag (flag_str, &flag) == 0)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:336:11: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'flag_str'[0m
  336 |       if (device_fd >= 0)[0m
      | [0;1;32m          ^
[0m[1mrmt.c:336:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |       if (device_fd >= 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  337 |         close (device_fd);[0m
      | [0;1;32m                          
[0m[1mrmt.c:340:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  340 |       if (device_fd < 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  341 |         rmt_error (errno);[0m
  342 |       else[0m
      | [0;32m      } 
[0m[1mrmt.c:342:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  343 |         rmt_reply (0);[0m
      | [0;1;32m                      
[0m[1mrmt.c:367:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |   if (close (device_fd) < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  368 |     rmt_error (errno);[0m
  369 |   else[0m
      | [0;32m  } 
[0m[1mrmt.c:422:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  422 |           whence = SEEK_SET;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  423 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:426:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  426 |           whence = SEEK_CUR;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  427 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:430:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  430 |           whence = SEEK_END;[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  431 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:434:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  434 |           rmt_error_message (EINVAL, N_("Seek direction out of range"));[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  435 |           return;[0m
      | [0;1;32m                
[0m      | [0;32m                ;} 
[0m[1mrmt.c:458:9: [0m[0;1;35mwarning: [0m[1mThe 1st argument to 'lseek' is -1 but should be >= 0 [clang-analyzer-unix.StdCLibraryFunctions][0m
  458 |   off = lseek (device_fd, off, whence);[0m
      | [0;1;32m        ^
[0m[1mrmt.c:770:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  770 |   if (isatty (STDOUT_FILENO))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:770:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  770 |   if (isatty (STDOUT_FILENO))[0m
      | [0;1;32m  ^
[0m[1mrmt.c:777:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  777 |   if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &idx, NULL))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:777:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  777 |   if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &idx, NULL))[0m
      | [0;1;32m  ^
[0m[1mrmt.c:779:7: [0m[0;1;36mnote: [0mAssuming 'idx' is equal to 'argc'[0m
  779 |   if (idx != argc)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mrmt.c:779:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  779 |   if (idx != argc)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:789:11: [0m[0;1;36mnote: [0m'stop' is 0[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m          ^~~~
[0m[1mrmt.c:789:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m         ^
[0m[1mrmt.c:789:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:791:7: [0m[0;1;36mnote: [0mControl jumps to 'case 76:'  at line 802[0m
  791 |       switch (buf[0])[0m
      | [0;1;32m      ^
[0m[1mrmt.c:803:4: [0m[0;1;36mnote: [0mCalling 'lseek_device'[0m
  803 |           lseek_device (buf + 1);[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:417:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  417 |   if (str[0] && str[1] == 0)[0m
      | [0;1;32m      ^~~~~~
[0m[1mrmt.c:417:14: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  417 |   if (str[0] && str[1] == 0)[0m
      | [0;1;32m             ^
[0m[1mrmt.c:438:12: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  438 |   else if (xlat_kw (str, "SEEK_", seek_whence_kw, &whence, (const char **) &p))[0m
      | [0;1;32m           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:438:8: [0m[0;1;36mnote: [0mTaking false branch[0m
  438 |   else if (xlat_kw (str, "SEEK_", seek_whence_kw, &whence, (const char **) &p))[0m
      | [0;1;32m       ^
[0m[1mrmt.c:446:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  446 |   if (*p)[0m
      | [0;1;32m      ^~
[0m[1mrmt.c:446:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  446 |   if (*p)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:452:7: [0m[0;1;36mnote: [0m'n' is equal to 'off'[0m
  452 |   if (n != off || errno == ERANGE)[0m
      | [0;1;32m      ^
[0m[1mrmt.c:452:7: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mrmt.c:452:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  452 |   if (n != off || errno == ERANGE)[0m
      | [0;1;32m                  ^
[0m[1m/usr/include/errno.h:38:16: [0m[0;1;36mnote: [0mexpanded from macro 'errno'[0m
   38 | # define errno (*__errno_location ())[0m
      | [0;1;32m               ^
[0m[1mrmt.c:452:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  452 |   if (n != off || errno == ERANGE)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:458:9: [0m[0;1;36mnote: [0mThe 1st argument to 'lseek' is -1 but should be >= 0[0m
  458 |   off = lseek (device_fd, off, whence);[0m
      | [0;1;32m        ^      ~~~~~~~~~
[0m[1mrmt.c:459:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  459 |   if (off < 0)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  460 |     rmt_error (errno);[0m
  461 |   else[0m
      | [0;32m  } 
[0m[1mrmt.c:461:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  461 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  462 |     rmt_reply (off);[0m
      | [0;1;32m                    
[0m[1mrmt.c:507:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  507 |   if (status == SAFE_READ_ERROR)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  508 |     rmt_error (errno);[0m
  509 |   else[0m
      | [0;32m  } 
[0m[1mrmt.c:559:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |       if (feof (stdin))[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  560 |         rmt_error_message (EIO, N_("Premature eof"));[0m
  561 |       else[0m
      | [0;32m      } 
[0m[1mrmt.c:561:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  561 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  562 |         rmt_error (errno);[0m
      | [0;1;32m                          
[0m[1mrmt.c:567:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  567 |   if (status != size)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  568 |     rmt_error (errno);[0m
  569 |   else[0m
      | [0;32m  } 
[0m[1mrmt.c:569:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  569 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  570 |     rmt_reply (status);[0m
      | [0;1;32m                       
[0m[1mrmt.c:632:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |     if (ioctl (device_fd, MTIOCTOP, (char *) &mtop) < 0)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  633 |       rmt_error (errno);[0m
  634 |     else[0m
      | [0;32m    } 
[0m[1mrmt.c:634:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  635 |       rmt_reply (0);[0m
      | [0;1;32m                    
[0m[1mrmt.c:673:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  673 |     if (ioctl (device_fd, MTIOCGET, (char *) &mtget) < 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  674 |       rmt_error (errno);[0m
  675 |     else[0m
      | [0;32m    } 
[0m[1mrmt.c:711:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  711 |       dbglev = strtol (arg, NULL, 0);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  712 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mrmt.c:715:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  715 |       dbgout = fopen (arg, "w");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  716 |       if (!dbgout)[0m
  717 |         error (EXIT_FAILURE, errno, _("cannot open %s"), arg);[0m
  718 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mrmt.c:716:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  716 |       if (!dbgout)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  717 |         error (EXIT_FAILURE, errno, _("cannot open %s"), arg);[0m
      | [0;1;32m                                                              
[0m[1mrmt.c:721:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  721 |       if (dbglev)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  722 |         {[0m
  723 |           if (!dbgout)[0m
  724 |             dbgout = stderr;[0m
  725 |         }[0m
  726 |       else if (dbgout)[0m
  727 |         dbglev = 1;[0m
  728 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mrmt.c:723:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  723 |           if (!dbgout)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  724 |             dbgout = stderr;[0m
      | [0;1;32m                            
[0m[1mrmt.c:726:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  726 |       else if (dbgout)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  727 |         dbglev = 1;[0m
      | [0;1;32m                   
[0m[1mrmt.c:731:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  731 |       return ARGP_ERR_UNKNOWN;[0m
      | [0;1;32m      ^                      
[0m      | [0;32m      {                      ;} 
[0m[1mrmt.c:777:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  777 |   if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &idx, NULL))[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  778 |     exit (EXIT_FAILURE);[0m
      | [0;1;32m                        
[0m[1mrmt.c:781:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  781 |       if (idx != argc - 1)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  782 |         error (EXIT_FAILURE, 0, _("too many arguments"));[0m
      | [0;1;32m                                                         
[0m[1mrmt.c:784:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  784 |       if (!dbgout)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  785 |         error (EXIT_FAILURE, errno, _("cannot open %s"), argv[idx]);[0m
      | [0;1;32m                                                                    
[0m[1mrmt.c:794:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  794 |           close_device ();[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  795 |           stop = 1;[0m
  796 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:799:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  799 |           iocop_device (buf + 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  800 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:803:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  803 |           lseek_device (buf + 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  804 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:807:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  807 |           open_device (buf + 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  808 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:811:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  811 |           read_device (buf + 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  812 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:815:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  815 |           status_device (buf + 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  816 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:819:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  819 |           write_device (buf + 1);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  820 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrmt.c:823:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  823 |           DEBUG1 (1, "garbage input %s\n", buf);[0m
      | [0;1;32m          ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:823:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  823 |           DEBUG1 (1, "garbage input %s\n", buf);[0m
      | [0;1;32m          ^
[0m[1mrmt.c:44:39: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                                      ^~~~~~~
[0m[1mrmt.c:823:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  823 |           DEBUG1 (1, "garbage input %s\n", buf);[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  824 |           rmt_error_message (EINVAL, N_("Garbage command"));[0m
  825 |           return EXIT_FAILURE;  /* exit status used to be 3 */[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mrmt.c:44:3: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:828:7: [0m[0;1;35mwarning: [0m[1mPotential leak of memory pointed to by 'buf' [clang-analyzer-unix.Malloc][0m
  828 |   if (device_fd >= 0)[0m
      | [0;1;32m      ^
[0m[1mrmt.c:770:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  770 |   if (isatty (STDOUT_FILENO))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:770:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  770 |   if (isatty (STDOUT_FILENO))[0m
      | [0;1;32m  ^
[0m[1mrmt.c:777:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  777 |   if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &idx, NULL))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:777:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  777 |   if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &idx, NULL))[0m
      | [0;1;32m  ^
[0m[1mrmt.c:779:7: [0m[0;1;36mnote: [0mAssuming 'idx' is equal to 'argc'[0m
  779 |   if (idx != argc)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mrmt.c:779:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  779 |   if (idx != argc)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:789:11: [0m[0;1;36mnote: [0m'stop' is 0[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m          ^~~~
[0m[1mrmt.c:789:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m         ^
[0m[1mrmt.c:789:26: [0m[0;1;36mnote: [0mCalling 'rmt_read'[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m                         ^~~~~~~~~~~
[0m[1mrmt.c:88:16: [0m[0;1;36mnote: [0mMemory is allocated[0m
   88 |   ssize_t rc = getline (&input_buf_ptr, &input_buf_size, stdin);[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:89:7: [0m[0;1;36mnote: [0mAssuming 'rc' is > 0[0m
   89 |   if (rc > 0)[0m
      | [0;1;32m      ^~~~~~
[0m[1mrmt.c:89:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   89 |   if (rc > 0)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:91:7: [0m[0;1;36mnote: [0mAssuming 'dbgout' is null[0m
   91 |       DEBUG1 (10, "C: %s", input_buf_ptr);[0m
      | [0;1;32m      ^
[0m[1mrmt.c:44:12: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m           ^~~~~~
[0m[1mrmt.c:91:7: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   91 |       DEBUG1 (10, "C: %s", input_buf_ptr);[0m
      | [0;1;32m      ^
[0m[1mrmt.c:44:19: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m                  ^
[0m[1mrmt.c:91:7: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
   91 |       DEBUG1 (10, "C: %s", input_buf_ptr);[0m
      | [0;1;32m      ^
[0m[1mrmt.c:44:3: [0m[0;1;36mnote: [0mexpanded from macro 'DEBUG1'[0m
   44 |   do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:92:7: [0m[0;1;36mnote: [0mCalling 'trimnl'[0m
   92 |       trimnl (input_buf_ptr);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:72:7: [0m[0;1;36mnote: [0mAssuming 'str' is non-null[0m
   72 |   if (str)[0m
      | [0;1;32m      ^~~
[0m[1mrmt.c:72:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   72 |   if (str)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:75:11: [0m[0;1;36mnote: [0mAssuming 'len' is <= 1[0m
   75 |       if (len > 1 && str[len-1] == '\n')[0m
      | [0;1;32m          ^~~~~~~
[0m[1mrmt.c:75:19: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   75 |       if (len > 1 && str[len-1] == '\n')[0m
      | [0;1;32m                  ^
[0m[1mrmt.c:92:7: [0m[0;1;36mnote: [0mReturning from 'trimnl'[0m
   92 |       trimnl (input_buf_ptr);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:789:26: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m                         ^~~~~~~~~~~
[0m[1mrmt.c:789:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:791:7: [0m[0;1;36mnote: [0mControl jumps to 'case 79:'  at line 806[0m
  791 |       switch (buf[0])[0m
      | [0;1;32m      ^
[0m[1mrmt.c:808:4: [0m[0;1;36mnote: [0m Execution continues on line 789[0m
  808 |           break;[0m
      | [0;1;32m          ^
[0m[1mrmt.c:789:11: [0m[0;1;36mnote: [0m'stop' is 0[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m          ^~~~
[0m[1mrmt.c:789:10: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m         ^
[0m[1mrmt.c:789:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mrmt.c:789:3: [0m[0;1;36mnote: [0mLoop condition is false. Execution jumps to the end of the function[0m
  789 |   while (!stop && (buf = rmt_read ()) != NULL)[0m
      | [0;1;32m  ^
[0m[1mrmt.c:828:7: [0m[0;1;36mnote: [0mPotential leak of memory pointed to by 'buf'[0m
  828 |   if (device_fd >= 0)[0m
      | [0;1;32m      ^
[0m[1mrmt.c:828:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  828 |   if (device_fd >= 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  829 |     close_device ();[0m
      | [0;1;32m                    
[0m83 warnings generated.
Suppressed 27 warnings (27 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[ 99/111][86.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmplshdq3k2.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/lib/paxerror.c
[1mpaxerror.c:342:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  342 |   if (status == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  343 |     write_error (name);[0m
  344 |   else[0m
      | [0;32m  } 
[0m[1mpaxerror.c:344:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  344 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  345 |     ERROR ((0, 0,[0m
  346 |             ngettext ("%s: Wrote only %zu of %zu byte",[0m
  347 |                       "%s: Wrote only %zu of %zu bytes",[0m
  348 |                       size),[0m
  349 |             name, status, size));[0m
      | [0;1;32m                                 
[0m14 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[100/111][99.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp7vyqc3zw.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-parse.c
[1margp-parse.c:95:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   95 |       __argp_state_help (state, state->out_stream, ARGP_HELP_STD_HELP);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m   96 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./argp-namefrob.h:42:27: [0m[0;1;36mnote: [0mexpanded from macro '__argp_state_help'[0m
   42 | #define __argp_state_help argp_state_help[0m
      | [0;1;32m                          ^
[0m[1margp-parse.c:98:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
   98 |       __argp_state_help (state, state->out_stream,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m   99 |                          ARGP_HELP_USAGE | ARGP_HELP_EXIT_OK);[0m
  100 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1m./argp-namefrob.h:42:27: [0m[0;1;36mnote: [0mexpanded from macro '__argp_state_help'[0m
   42 | #define __argp_state_help argp_state_help[0m
      | [0;1;32m                          ^
[0m[1margp-parse.c:104:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  104 |       program_invocation_name = arg;[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m[1margp-parse.c:118:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  118 |           == ARGP_PARSE_ARGV0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  119 |         /* Update what getopt uses too.  */[0m
  120 |         state->argv[0] = arg;[0m
      | [0;1;32m                             
[0m[1margp-parse.c:125:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  125 |       _argp_hang = atoi (arg ? arg : "3600");[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  126 |       while (_argp_hang-- > 0)[0m
  127 |         __sleep (1);[0m
  128 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1margp-parse.c:126:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  126 |       while (_argp_hang-- > 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  127 |         __sleep (1);[0m
      | [0;1;32m                    
[0m[1margp-parse.c:131:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  131 |       return EBADKEY;[0m
      | [0;1;32m      ^             
[0m      | [0;32m      {             ;} 
[0m[1margp-parse.c:152:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  152 |       if (argp_program_version_hook)[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  153 |         (*argp_program_version_hook) (state->out_stream, state);[0m
  154 |       else if (argp_program_version)[0m
  155 |         fprintf (state->out_stream, "%s\n", argp_program_version);[0m
  156 |       else[0m
  157 |         __argp_error (state, "%s",[0m
  158 |                       dgettext (state->root_argp->argp_domain,[0m
  159 |                                 "(PROGRAM ERROR) No version known!?"));[0m
  160 |       if (! (state->flags & ARGP_NO_EXIT))[0m
  161 |         exit (0);[0m
  162 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1margp-parse.c:152:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  152 |       if (argp_program_version_hook)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  153 |         (*argp_program_version_hook) (state->out_stream, state);[0m
  154 |       else if (argp_program_version)[0m
      | [0;32m      } 
[0m[1margp-parse.c:154:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |       else if (argp_program_version)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  155 |         fprintf (state->out_stream, "%s\n", argp_program_version);[0m
  156 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:155:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  155 |         fprintf (state->out_stream, "%s\n", argp_program_version);[0m
      | [0;1;32m        ^~~~~~~
[0m[1margp-parse.c:155:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  155 |         fprintf (state->out_stream, "%s\n", argp_program_version);[0m
      | [0;1;32m        ^~~~~~~
[0m[1margp-parse.c:156:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  156 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  157 |         __argp_error (state, "%s",[0m
  158 |                       dgettext (state->root_argp->argp_domain,[0m
  159 |                                 "(PROGRAM ERROR) No version known!?"));[0m
      | [0;1;32m                                                                       
[0m[1margp-parse.c:160:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  160 |       if (! (state->flags & ARGP_NO_EXIT))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  161 |         exit (0);[0m
      | [0;1;32m                 
[0m[1margp-parse.c:164:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  164 |       return EBADKEY;[0m
      | [0;1;32m      ^             
[0m      | [0;32m      {             ;} 
[0m[1margp-parse.c:179:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |   while (l->name != NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  180 |     if (name != NULL && strcmp (l->name, name) == 0)[0m
  181 |       return l - long_options;[0m
  182 |     else[0m
  183 |       l++;[0m
      | [0;1;32m          
[0m[1margp-parse.c:180:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |     if (name != NULL && strcmp (l->name, name) == 0)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  181 |       return l - long_options;[0m
  182 |     else[0m
      | [0;32m    } 
[0m[1margp-parse.c:182:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  182 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  183 |       l++;[0m
      | [0;1;32m          
[0m[1margp-parse.c:184:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |   if (name == NULL)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  185 |     return l - long_options;[0m
  186 |   else[0m
      | [0;32m  } 
[0m[1margp-parse.c:186:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  187 |     return -1;[0m
      | [0;1;32m              
[0m[1margp-parse.c:237:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  238 |     return EBADKEY;[0m
      | [0;1;32m                   
[0m[1margp-parse.c:301:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  301 |       if (real)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m[1margp-parse.c:304:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |             if (! (opt->flags & OPTION_ALIAS))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  305 |               /* OPT isn't an alias, so we can use values from it.  */[0m
  306 |               real = opt;[0m
      | [0;1;32m                         
[0m[1margp-parse.c:318:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |                         if (real->flags & OPTION_ARG_OPTIONAL)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  319 |                           *cvt->short_end++ = ':';[0m
      | [0;1;32m                                                  
[0m[1margp-parse.c:367:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |           while (children[num_children].argp)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  368 |             num_children++;[0m
      | [0;1;32m                           
[0m[1margp-parse.c:375:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  376 |     parent = 0;[0m
      | [0;1;32m               
[0m[1margp-parse.c:381:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  381 |       while (children->argp)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  382 |         group =[0m
  383 |           convert_options (children++->argp, parent, index++, group, cvt);[0m
      | [0;1;32m                                                                          
[0m[1margp-parse.c:400:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |   if (flags & ARGP_IN_ORDER)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  401 |     *cvt.short_end++ = '-';[0m
  402 |   else if (flags & ARGP_NO_ARGS)[0m
      | [0;32m  } 
[0m[1margp-parse.c:402:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |   else if (flags & ARGP_NO_ARGS)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  403 |     *cvt.short_end++ = '+';[0m
      | [0;1;32m                           
[0m[1margp-parse.c:404:3: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  404 |   *cvt.short_end = '\0';[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:884:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  884 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:884:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  884 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:897:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  897 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:897:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  897 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:921:9: [0m[0;1;36mnote: [0mCalling 'parser_init'[0m
  921 |   err = parser_init (&parser, argp, argc, argv, flags, input);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:471:20: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  471 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:471:19: [0m[0;1;36mnote: [0m'?' condition is true[0m
  471 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                  ^
[0m[1margp-parse.c:476:7: [0m[0;1;36mnote: [0mAssuming 'argp' is null[0m
  476 |   if (argp)[0m
      | [0;1;32m      ^~~~
[0m[1margp-parse.c:476:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  476 |   if (argp)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:496:7: [0m[0;1;36mnote: [0mAssuming field 'storage' is non-null[0m
  496 |   if (! parser->storage)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:496:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  496 |   if (! parser->storage)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:507:3: [0m[0;1;36mnote: [0mCalling 'parser_convert'[0m
  507 |   parser_convert (parser, argp, flags);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:400:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  400 |   if (flags & ARGP_IN_ORDER)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:400:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  400 |   if (flags & ARGP_IN_ORDER)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:404:3: [0m[0;1;36mnote: [0mAccess of the heap area at index 105, while it holds only 105 'char' elements[0m
  404 |   *cvt.short_end = '\0';[0m
      | [0;1;32m  ^~~~~~~~~~~~~~
[0m[1margp-parse.c:410:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  410 |   if (argp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  411 |     parser->egroup = convert_options (argp, 0, 0, parser->groups, &cvt);[0m
  412 |   else[0m
      | [0;32m  } 
[0m[1margp-parse.c:412:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  412 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  413 |     parser->egroup = parser->groups; /* No parsers at all! */[0m
      | [0;1;32m                                                             
[0m[1margp-parse.c:441:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  441 |           while (!__option_is_end (opt++))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  442 |             num_opts++;[0m
      | [0;1;32m                       
[0m[1margp-parse.c:448:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  448 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  449 |     while (child->argp)[0m
  450 |       {[0m
  451 |         calc_sizes ((child++)->argp, szs);[0m
  452 |         szs->num_child_inputs++;[0m
  453 |       }[0m
      | [0;1;32m       
[0m[1margp-parse.c:476:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |   if (argp)[0m
      | [0;1;32m           ^
[0m      | [0;32m            {
[0m  477 |     calc_sizes (argp, &szs);[0m
      | [0;1;32m                            
[0m[1margp-parse.c:496:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |   if (! parser->storage)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  497 |     return ENOMEM;[0m
      | [0;1;32m                  
[0m[1margp-parse.c:506:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  506 |   memset (parser->child_inputs, 0, clen);[0m
      | [0;1;32m  ^~~~~~
[0m[1margp-parse.c:506:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  506 |   memset (parser->child_inputs, 0, clen);[0m
      | [0;1;32m  ^~~~~~
[0m[1margp-parse.c:509:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  509 |   memset (&parser->state, 0, sizeof (struct argp_state));[0m
      | [0;1;32m  ^~~~~~
[0m[1margp-parse.c:509:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  509 |   memset (&parser->state, 0, sizeof (struct argp_state));[0m
      | [0;1;32m  ^~~~~~
[0m[1margp-parse.c:523:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  523 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  524 |     parser->groups->input = input;[0m
      | [0;1;32m                                  
[0m[1margp-parse.c:529:18: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  529 |       if (group->parent)[0m
      | [0;1;32m                 ^
[0m[1margp-parse.c:884:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  884 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:884:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  884 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:897:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  897 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:897:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  897 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:921:9: [0m[0;1;36mnote: [0mCalling 'parser_init'[0m
  921 |   err = parser_init (&parser, argp, argc, argv, flags, input);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:471:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  471 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:471:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  471 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                  ^
[0m[1margp-parse.c:476:7: [0m[0;1;36mnote: [0mAssuming 'argp' is non-null[0m
  476 |   if (argp)[0m
      | [0;1;32m      ^~~~
[0m[1margp-parse.c:476:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  476 |   if (argp)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:496:7: [0m[0;1;36mnote: [0mAssuming field 'storage' is non-null[0m
  496 |   if (! parser->storage)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:496:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  496 |   if (! parser->storage)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:523:15: [0m[0;1;36mnote: [0mField 'groups' is < field 'egroup'[0m
  523 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m              ^
[0m[1margp-parse.c:523:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  523 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:526:8: [0m[0;1;36mnote: [0m'group' is < field 'egroup'[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~
[0m[1margp-parse.c:526:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:526:36: [0m[0;1;36mnote: [0m'err' is 0[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                   ^~~
[0m[1margp-parse.c:526:40: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                       ^
[0m[1margp-parse.c:529:18: [0m[0;1;36mnote: [0mField 'parent' is null[0m
  529 |       if (group->parent)[0m
      | [0;1;32m                 ^
[0m[1margp-parse.c:529:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  529 |       if (group->parent)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:533:19: [0m[0;1;36mnote: [0mField 'parser' is non-null[0m
  533 |       if (!group->parser[0m
      | [0;1;32m                  ^
[0m[1margp-parse.c:534:11: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  534 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m          ^
[0m[1margp-parse.c:526:8: [0m[0;1;36mnote: [0mAssuming 'group' is < field 'egroup'[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:526:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:526:35: [0m[0;1;36mnote: [0mAssuming 'err' is 0[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                  ^~~~
[0m[1margp-parse.c:526:40: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                       ^
[0m[1margp-parse.c:529:11: [0m[0;1;36mnote: [0mAssuming field 'parent' is null[0m
  529 |       if (group->parent)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1margp-parse.c:529:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  529 |       if (group->parent)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:533:11: [0m[0;1;36mnote: [0mAssuming field 'parser' is null[0m
  533 |       if (!group->parser[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1margp-parse.c:533:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:534:14: [0m[0;1;36mnote: [0mAssuming field 'children' is null[0m
  534 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:534:36: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  534 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m                                   ^
[0m[1margp-parse.c:526:8: [0m[0;1;36mnote: [0mAssuming 'group' is < field 'egroup'[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:526:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:526:36: [0m[0;1;36mnote: [0m'err' is 7[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                   ^~~
[0m[1margp-parse.c:526:35: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                  ^
[0m[1margp-parse.c:525:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  525 |   for (group = parser->groups;[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:529:11: [0m[0;1;36mnote: [0mAssuming field 'parent' is null[0m
  529 |       if (group->parent)[0m
      | [0;1;32m          ^~~~~~~~~~~~~
[0m[1margp-parse.c:529:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  529 |       if (group->parent)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:533:11: [0m[0;1;36mnote: [0mAssuming field 'parser' is null[0m
  533 |       if (!group->parser[0m
      | [0;1;32m          ^~~~~~~~~~~~~~
[0m[1margp-parse.c:533:11: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:534:14: [0m[0;1;36mnote: [0mAssuming field 'children' is null[0m
  534 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m             ^~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:534:36: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  534 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m                                   ^
[0m[1margp-parse.c:526:8: [0m[0;1;36mnote: [0mAssuming 'group' is < field 'egroup'[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:526:8: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-parse.c:526:36: [0m[0;1;36mnote: [0m'err' is 7[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                   ^~~
[0m[1margp-parse.c:526:35: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                                  ^
[0m[1margp-parse.c:525:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  525 |   for (group = parser->groups;[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:529:18: [0m[0;1;36mnote: [0mAccess of the heap area at byte offset 216, while it holds only 178 bytes[0m
  529 |       if (group->parent)[0m
      | [0;1;32m          ~~~~~~~^~~~~~
[0m[1margp-parse.c:529:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  529 |       if (group->parent)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  530 |         /* If a child parser, get the initial input value from the parent. */[0m
  531 |         group->input = group->parent->child_inputs[group->parent_index];[0m
      | [0;1;32m                                                                        
[0m[1margp-parse.c:534:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  534 |           && group->argp->children && group->argp->children->argp)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  535 |         /* For the special case where no parsing function is supplied for an[0m
  536 |            argp, propagate its input to its first child, if any (this just[0m
  537 |            makes very simple wrapper argps more convenient).  */[0m
  538 |         group->child_inputs[0] = group->input;[0m
      | [0;1;32m                                              
[0m[1margp-parse.c:542:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  542 |   if (err == EBADKEY)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  543 |     err = 0;                    /* Some parser didn't understand.  */[0m
      | [0;1;32m                                                                     
[0m[1margp-parse.c:545:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   if (err)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  546 |     return err;[0m
      | [0;1;32m               
[0m[1margp-parse.c:551:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  551 |       if (parser->state.flags & ARGP_PARSE_ARGV0)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  552 |         /* getopt always skips ARGV[0], so we have to fake it out.  As long[0m
  553 |            as OPTERR is 0, then it shouldn't actually try to access it.  */[0m
  554 |         parser->state.argv--, parser->state.argc++;[0m
      | [0;1;32m                                                   
[0m[1margp-parse.c:556:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  556 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  557 |     parser->opt_data.opterr = 1;        /* Print error messages.  */[0m
      | [0;1;32m                                                                    
[0m[1margp-parse.c:559:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  560 |     /* There's an argv[0]; use it for messages.  */[0m
  561 |     parser->state.name = __argp_base_name (argv[0]);[0m
  562 |   else[0m
      | [0;32m  } 
[0m[1margp-parse.c:562:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  562 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  563 |     parser->state.name = __argp_short_program_name ();[0m
      | [0;1;32m                                                      
[0m[1margp-parse.c:575:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |   if (err == EBADKEY && arg_ebadkey)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  576 |     /* Suppress errors generated by unparsed arguments.  */[0m
  577 |     err = 0;[0m
      | [0;1;32m            
[0m[1margp-parse.c:587:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  587 |                group++)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  588 |             if (group->args_processed == 0)[0m
  589 |               err = group_parse (group, &parser->state, ARGP_KEY_NO_ARGS, 0);[0m
      | [0;1;32m                                                                             
[0m[1margp-parse.c:588:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  588 |             if (group->args_processed == 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  589 |               err = group_parse (group, &parser->state, ARGP_KEY_NO_ARGS, 0);[0m
      | [0;1;32m                                                                             
[0m[1margp-parse.c:592:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  592 |                group--)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  593 |             err = group_parse (group, &parser->state, ARGP_KEY_END, 0);[0m
      | [0;1;32m                                                                       
[0m[1margp-parse.c:595:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  595 |           if (err == EBADKEY)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  596 |             err = 0;            /* Some parser didn't understand.  */[0m
      | [0;1;32m                                                                     
[0m[1margp-parse.c:599:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  599 |           if (end_index)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  600 |             *end_index = parser->state.next;[0m
      | [0;1;32m                                            
[0m[1margp-parse.c:602:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  602 |       else if (end_index)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  603 |         /* Return any remaining arguments to the user.  */[0m
  604 |         *end_index = parser->state.next;[0m
  605 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:609:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  609 |               && parser->state.err_stream)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  610 |             fprintf (parser->state.err_stream,[0m
  611 |                      dgettext (parser->argp->argp_domain,[0m
  612 |                                "%s: Too many arguments\n"),[0m
  613 |                      parser->state.name);[0m
      | [0;1;32m                                         
[0m[1margp-parse.c:610:13: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  610 |             fprintf (parser->state.err_stream,[0m
      | [0;1;32m            ^~~~~~~
[0m[1margp-parse.c:610:13: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  610 |             fprintf (parser->state.err_stream,[0m
      | [0;1;32m            ^~~~~~~
[0m[1margp-parse.c:624:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  624 |       if (err == EBADKEY)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  625 |         /* An appropriate message describing what the error was should have[0m
  626 |            been printed earlier.  */[0m
  627 |         __argp_state_help (&parser->state, parser->state.err_stream,[0m
  628 |                            ARGP_HELP_STD_ERR);[0m
      | [0;1;32m                                              
[0m[1margp-parse.c:631:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  631 |       for (group = parser->groups; group < parser->egroup; group++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  632 |         group_parse (group, &parser->state, ARGP_KEY_ERROR, 0);[0m
      | [0;1;32m                                                               
[0m[1margp-parse.c:642:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |            ; group--)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  643 |         err = group_parse (group, &parser->state, ARGP_KEY_SUCCESS, 0);[0m
      | [0;1;32m                                                                       
[0m[1margp-parse.c:644:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  644 |       if (err == EBADKEY)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  645 |         err = 0;                /* Some parser didn't understand.  */[0m
      | [0;1;32m                                                                     
[0m[1margp-parse.c:649:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  649 |   for (group = parser->egroup - 1; group >= parser->groups; group--)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  650 |     group_parse (group, &parser->state, ARGP_KEY_FINI, 0);[0m
      | [0;1;32m                                                          
[0m[1margp-parse.c:652:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  652 |   if (err == EBADKEY)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  653 |     err = EINVAL;[0m
      | [0;1;32m                 
[0m[1margp-parse.c:695:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  695 |       if (key == ARGP_KEY_ARGS)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  696 |         /* The default for ARGP_KEY_ARGS is to assume that if NEXT isn't[0m
  697 |            changed by the user, *all* arguments should be considered[0m
  698 |            consumed.  */[0m
  699 |         parser->state.next = parser->state.argc;[0m
      | [0;1;32m                                                
[0m[1margp-parse.c:701:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  701 |       if (parser->state.next > index)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  702 |         /* Remember that we successfully processed a non-option[0m
  703 |            argument -- but only if the user hasn't gotten tricky and set[0m
  704 |            the clock back.  */[0m
  705 |         (--group)->args_processed += (parser->state.next - index);[0m
  706 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:706:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  706 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  707 |         /* The user wants to reparse some args, give getopt another try.  */[0m
  708 |         parser->try_getopt = 1;[0m
      | [0;1;32m                               
[0m[1margp-parse.c:732:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  732 |       if (short_index)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  733 |         for (group = parser->groups; group < parser->egroup; group++)[0m
  734 |           if (group->short_end > short_index)[0m
  735 |             {[0m
  736 |               err = group_parse (group, &parser->state, opt,[0m
  737 |                                  parser->opt_data.optarg);[0m
  738 |               break;[0m
  739 |             }[0m
      | [0;1;32m             
[0m[1margp-parse.c:733:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  733 |         for (group = parser->groups; group < parser->egroup; group++)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  734 |           if (group->short_end > short_index)[0m
  735 |             {[0m
  736 |               err = group_parse (group, &parser->state, opt,[0m
  737 |                                  parser->opt_data.optarg);[0m
  738 |               break;[0m
  739 |             }[0m
      | [0;1;32m             
[0m[1margp-parse.c:759:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  759 |       if (group_key == 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  760 |         __argp_error (&parser->state, "-%c: %s", opt,[0m
  761 |                       dgettext (parser->argp->argp_domain, bad_key_err));[0m
  762 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:765:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  765 |           while (long_opt->val != opt && long_opt->name)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  766 |             long_opt++;[0m
      | [0;1;32m                       
[0m[1margp-parse.c:786:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  786 |   if (parser->state.quoted && parser->state.next < parser->state.quoted)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  787 |     /* The next argument pointer has been moved to before the quoted[0m
  788 |        region, so pretend we never saw the quoting "--", and give getopt[0m
  789 |        another chance.  If the user hasn't removed it, getopt will just[0m
  790 |        process it again.  */[0m
  791 |     parser->state.quoted = 0;[0m
      | [0;1;32m                             
[0m[1margp-parse.c:800:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  800 |       if (parser->state.flags & ARGP_LONG_ONLY)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  801 |         opt = _getopt_long_only_r (parser->state.argc, parser->state.argv,[0m
  802 |                                    parser->short_opts, parser->long_opts, 0,[0m
  803 |                                    &parser->opt_data);[0m
  804 |       else[0m
      | [0;32m      } 
[0m[1margp-parse.c:804:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  804 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  805 |         opt = _getopt_long_r (parser->state.argc, parser->state.argv,[0m
  806 |                               parser->short_opts, parser->long_opts, 0,[0m
  807 |                               &parser->opt_data);[0m
      | [0;1;32m                                                 
[0m[1margp-parse.c:805:13: [0m[0;1;35mwarning: [0m[1mPotential memory leak [clang-analyzer-unix.Malloc][0m
  805 |         opt = _getopt_long_r (parser->state.argc, parser->state.argv,[0m
      | [0;1;32m            ^
[0m[1margp-parse.c:884:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  884 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:884:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  884 |   if (!(flags & ARGP_PARSE_ARGV0))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:897:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  897 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:897:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  897 |   if (! (flags & ARGP_NO_HELP))[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:921:9: [0m[0;1;36mnote: [0mCalling 'parser_init'[0m
  921 |   err = parser_init (&parser, argp, argc, argv, flags, input);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:471:20: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  471 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:471:19: [0m[0;1;36mnote: [0m'?' condition is false[0m
  471 |   szs.short_len = (flags & ARGP_NO_ARGS) ? 0 : 1;[0m
      | [0;1;32m                  ^
[0m[1margp-parse.c:476:7: [0m[0;1;36mnote: [0mAssuming 'argp' is null[0m
  476 |   if (argp)[0m
      | [0;1;32m      ^~~~
[0m[1margp-parse.c:476:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  476 |   if (argp)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:495:21: [0m[0;1;36mnote: [0mMemory is allocated[0m
  495 |   parser->storage = malloc (ssum);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~
[0m[1margp-parse.c:496:7: [0m[0;1;36mnote: [0mAssuming field 'storage' is non-null[0m
  496 |   if (! parser->storage)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:496:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  496 |   if (! parser->storage)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:523:15: [0m[0;1;36mnote: [0mField 'groups' is >= field 'egroup'[0m
  523 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m              ^
[0m[1margp-parse.c:523:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  523 |   if (parser->groups < parser->egroup)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:526:8: [0m[0;1;36mnote: [0m'group' is >= field 'egroup'[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m       ^~~~~
[0m[1margp-parse.c:526:31: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  526 |        group < parser->egroup && (!err || err == EBADKEY);[0m
      | [0;1;32m                              ^
[0m[1margp-parse.c:542:7: [0m[0;1;36mnote: [0m'err' is not equal to EBADKEY[0m
  542 |   if (err == EBADKEY)[0m
      | [0;1;32m      ^~~
[0m[1margp-parse.c:542:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  542 |   if (err == EBADKEY)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:545:7: [0m[0;1;36mnote: [0m'err' is 0[0m
  545 |   if (err)[0m
      | [0;1;32m      ^~~
[0m[1margp-parse.c:545:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  545 |   if (err)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:548:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  548 |   if (parser->state.flags & ARGP_NO_ERRS)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:548:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  548 |   if (parser->state.flags & ARGP_NO_ERRS)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:559:29: [0m[0;1;36mnote: [0m'argv' is equal to field 'argv'[0m
  559 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m                            ^~~~
[0m[1margp-parse.c:559:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  559 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:559:37: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  559 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m                                    ^~~~~~~
[0m[1margp-parse.c:559:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  559 |   if (parser->state.argv == argv && argv[0])[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:921:9: [0m[0;1;36mnote: [0mReturned allocated memory[0m
  921 |   err = parser_init (&parser, argp, argc, argv, flags, input);[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:923:9: [0m[0;1;36mnote: [0m'err' is 0[0m
  923 |   if (! err)[0m
      | [0;1;32m        ^~~
[0m[1margp-parse.c:923:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  923 |   if (! err)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:926:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  926 |       while (! err)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:927:15: [0m[0;1;36mnote: [0mCalling 'parser_parse_next'[0m
  927 |         err = parser_parse_next (&parser, &arg_ebadkey);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:786:7: [0m[0;1;36mnote: [0mAssuming field 'quoted' is 0[0m
  786 |   if (parser->state.quoted && parser->state.next < parser->state.quoted)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:786:28: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  786 |   if (parser->state.quoted && parser->state.next < parser->state.quoted)[0m
      | [0;1;32m                           ^
[0m[1margp-parse.c:793:15: [0m[0;1;36mnote: [0mField 'try_getopt' is 1[0m
  793 |   if (parser->try_getopt && !parser->state.quoted)[0m
      | [0;1;32m              ^
[0m[1margp-parse.c:793:7: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  793 |   if (parser->try_getopt && !parser->state.quoted)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:793:44: [0m[0;1;36mnote: [0mField 'quoted' is 0[0m
  793 |   if (parser->try_getopt && !parser->state.quoted)[0m
      | [0;1;32m                                           ^
[0m[1margp-parse.c:793:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  793 |   if (parser->try_getopt && !parser->state.quoted)[0m
      | [0;1;32m  ^
[0m[1margp-parse.c:800:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  800 |       if (parser->state.flags & ARGP_LONG_ONLY)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-parse.c:800:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  800 |       if (parser->state.flags & ARGP_LONG_ONLY)[0m
      | [0;1;32m      ^
[0m[1margp-parse.c:805:13: [0m[0;1;36mnote: [0mPotential memory leak[0m
  805 |         opt = _getopt_long_r (parser->state.argc, parser->state.argv,[0m
      | [0;1;32m            ^
[0m[1margp-parse.c:818:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  818 |                    == 0)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  819 |             /* Not only is this the end of the options, but it's a[0m
  820 |                "quoted" region, which may have args that *look* like[0m
  821 |                options, so we definitely shouldn't try to use getopt past[0m
  822 |                here, whatever happens.  */[0m
  823 |             parser->state.quoted = parser->state.next;[0m
      | [0;1;32m                                                      
[0m[1margp-parse.c:834:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  834 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  835 |     opt = KEY_END;[0m
      | [0;1;32m                  
[0m[1margp-parse.c:855:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  855 |   if (opt == KEY_ARG)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  856 |     /* A non-option argument; try each parser in turn.  */[0m
  857 |     err = parser_parse_arg (parser, parser->opt_data.optarg);[0m
  858 |   else[0m
      | [0;32m  } 
[0m[1margp-parse.c:858:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  858 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  859 |     err = parser_parse_opt (parser, opt, parser->opt_data.optarg);[0m
      | [0;1;32m                                                                  
[0m[1margp-parse.c:861:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  861 |   if (err == EBADKEY)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  862 |     *arg_ebadkey = (opt == KEY_END || opt == KEY_ARG);[0m
      | [0;1;32m                                                      
[0m[1margp-parse.c:887:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  887 |       if (!program_invocation_name)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  888 |         program_invocation_name = argv[0];[0m
      | [0;1;32m                                          
[0m[1margp-parse.c:891:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  891 |       if (!program_invocation_short_name)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  892 |         program_invocation_short_name = __argp_base_name (argv[0]);[0m
      | [0;1;32m                                                                   
[0m[1margp-parse.c:905:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  905 |       memset (top_argp, 0, sizeof (*top_argp));[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-parse.c:905:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  905 |       memset (top_argp, 0, sizeof (*top_argp));[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-parse.c:908:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  908 |       memset (child, 0, 4 * sizeof (struct argp_child));[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-parse.c:908:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  908 |       memset (child, 0, 4 * sizeof (struct argp_child));[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-parse.c:910:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  910 |       if (argp)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  911 |         (child++)->argp = argp;[0m
      | [0;1;32m                               
[0m[1margp-parse.c:913:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  913 |       if (argp_program_version || argp_program_version_hook)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  914 |         (child++)->argp = &argp_version_argp;[0m
      | [0;1;32m                                             
[0m[1margp-parse.c:926:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  926 |       while (! err)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  927 |         err = parser_parse_next (&parser, &arg_ebadkey);[0m
      | [0;1;32m                                                        
[0m[1margp-parse.c:947:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  947 |       for (group = parser->groups; group < parser->egroup; group++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  948 |         if (group->argp == argp)[0m
  949 |           return group->input;[0m
      | [0;1;32m                              
[0m[1margp-parse.c:948:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  948 |         if (group->argp == argp)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  949 |           return group->input;[0m
      | [0;1;32m                              
[0m103 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[101/111][100.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpbs0gkc4z.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/copyout.c
[1mcopyout.c:48:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   48 |       if (bytes_read < 0)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m   49 |         error (PAXEXIT_FAILURE, errno, _("cannot read checksum for %s"), file_name);[0m
      | [0;1;32m                                                                                    
[0m[1mcopyout.c:50:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   50 |       if (bytes_read == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m   51 |         break;[0m
      | [0;1;32m              
[0m[1mcopyout.c:52:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   52 |       for (i = 0; i < bytes_read; i++)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m   53 |         crc += buf[i] & 0xff;[0m
      | [0;1;32m                             
[0m[1mcopyout.c:56:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   56 |   if (lseek (in_file_des, 0L, SEEK_SET))[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m   57 |     error (PAXEXIT_FAILURE, errno, _("cannot read checksum for %s"), file_name);[0m
      | [0;1;32m                                                                                
[0m[1mcopyout.c:80:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |   if (archive_format == arf_newascii || archive_format == arf_crcascii)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m   81 |     pad = (4 - (offset % 4)) % 4;[0m
   82 |   else if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;32m  } 
[0m[1mcopyout.c:82:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   82 |   else if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m   83 |     pad = (512 - (offset % 512)) % 512;[0m
   84 |   else if (archive_format != arf_oldascii && archive_format != arf_hpoldascii)[0m
      | [0;32m  } 
[0m[1mcopyout.c:84:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |   else if (archive_format != arf_oldascii && archive_format != arf_hpoldascii)[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m   85 |     pad = (2 - (offset % 2)) % 2;[0m
   86 |   else[0m
      | [0;32m  } 
[0m[1mcopyout.c:86:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   87 |     pad = 0;[0m
      | [0;1;32m            
[0m[1mcopyout.c:89:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   89 |   if (pad != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m   90 |     write_nuls_to_file (pad, out_file_des, tape_buffered_write);[0m
      | [0;1;32m                                                                
[0m[1mcopyout.c:119:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  119 |           && d->header.c_dev_min == min)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  120 |         ++count;[0m
      | [0;1;32m                
[0m[1mcopyout.c:173:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  173 |           if (d_prev != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  174 |             d_prev->next = d->next;[0m
  175 |           else[0m
      | [0;32m          } 
[0m[1mcopyout.c:175:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  176 |             deferouts = d->next;[0m
      | [0;1;32m                                
[0m[1mcopyout.c:211:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  211 |   if (archive_format == arf_crcascii)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m  212 |     file_hdr.c_chksum = read_for_checksum (in_file_des,[0m
  213 |                                            file_hdr.c_filesize,[0m
  214 |                                            header->c_name);[0m
      | [0;1;32m                                                           
[0m[1mcopyout.c:216:50: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  216 |   if (write_out_header (&file_hdr, out_file_des))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  217 |     return;[0m
      | [0;1;32m           
[0m[1mcopyout.c:222:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  222 |   if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  223 |     add_inode (file_hdr.c_ino, file_hdr.c_name, file_hdr.c_dev_maj,[0m
  224 |                file_hdr.c_dev_min);[0m
      | [0;1;32m                                   
[0m[1mcopyout.c:228:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |   if (reset_time_flag)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  229 |     set_file_times (in_file_des, file_hdr.c_name, file_hdr.c_mtime,[0m
  230 |                     file_hdr.c_mtime);[0m
      | [0;1;32m                                      
[0m[1mcopyout.c:231:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  231 |   if (close (in_file_des) < 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  232 |     close_error (header->c_name);[0m
      | [0;1;32m                                 
[0m[1mcopyout.c:273:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  273 |   if (nul)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  274 |     where[--digits] = 0;[0m
      | [0;1;32m                        
[0m[1mcopyout.c:300:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |   if (warn_option & CPIO_WARN_TRUNCATE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  301 |     error (0, 0, _("%s: truncating %s"), filename, fieldname);[0m
      | [0;1;32m                                                              
[0m[1mcopyout.c:309:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  309 |   if (to_ascii (where, n, digits, logbase, false))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  310 |     field_width_warning (filename, fieldname);[0m
      | [0;1;32m                                              
[0m[1mcopyout.c:354:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |                          _("file size")))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  355 |     return 1;[0m
      | [0;1;32m             
[0m[1mcopyout.c:358:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |                          _("device major number")))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  359 |     return 1;[0m
      | [0;1;32m             
[0m[1mcopyout.c:362:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  362 |                          _("device minor number")))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m  363 |     return 1;[0m
      | [0;1;32m             
[0m[1mcopyout.c:366:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  366 |                          _("rdev major")))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  367 |     return 1;[0m
      | [0;1;32m             
[0m[1mcopyout.c:370:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |                          _("rdev minor")))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  371 |     return 1;[0m
      | [0;1;32m             
[0m[1mcopyout.c:374:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  374 |                          _("name size")))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  375 |     return 1;[0m
      | [0;1;32m             
[0m[1mcopyout.c:417:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  417 |                          _("name size")))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  418 |     return 1;[0m
      | [0;1;32m             
[0m[1mcopyout.c:421:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  421 |                          _("file size")))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  422 |     return 1;[0m
      | [0;1;32m             
[0m[1mcopyout.c:449:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  449 |       *pdev = *prdev = makedev (0, 1);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  450 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mcopyout.c:453:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  453 |       *pdev = makedev (file_hdr->c_dev_maj, file_hdr->c_dev_min);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  454 |       *prdev = makedev (file_hdr->c_rdev_maj, file_hdr->c_rdev_min);[0m
  455 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mcopyout.c:468:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if ((warn_option & CPIO_WARN_TRUNCATE) && (file_hdr->c_ino >> 16) != 0)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  469 |     error (0, 0, _("%s: truncating inode number"), file_hdr->c_name);[0m
      | [0;1;32m                                                                     
[0m[1mcopyout.c:472:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  472 |   if (short_hdr.c_ino != file_hdr->c_ino)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  473 |     field_width_warning (file_hdr->c_name, _("inode number"));[0m
      | [0;1;32m                                                              
[0m[1mcopyout.c:476:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  476 |   if (short_hdr.c_mode != file_hdr->c_mode)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  477 |     field_width_warning (file_hdr->c_name, _("file mode"));[0m
      | [0;1;32m                                                           
[0m[1mcopyout.c:480:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  480 |   if (short_hdr.c_uid != file_hdr->c_uid)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  481 |     field_width_warning (file_hdr->c_name, _("uid"));[0m
      | [0;1;32m                                                     
[0m[1mcopyout.c:484:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |   if (short_hdr.c_gid != file_hdr->c_gid)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  485 |     field_width_warning (file_hdr->c_name, _("gid"));[0m
      | [0;1;32m                                                     
[0m[1mcopyout.c:488:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  488 |   if (short_hdr.c_nlink != file_hdr->c_nlink)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  489 |     field_width_warning (file_hdr->c_name, _("number of links"));[0m
      | [0;1;32m                                                                 
[0m[1mcopyout.c:541:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  541 |       return write_out_new_ascii_header ("070701", file_hdr, out_des);[0m
      | [0;1;32m      ^                                                              
[0m      | [0;32m      {                                                              ;} 
[0m[1mcopyout.c:544:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  544 |       return write_out_new_ascii_header ("070702", file_hdr, out_des);[0m
      | [0;1;32m      ^                                                              
[0m      | [0;32m      {                                                              ;} 
[0m[1mcopyout.c:547:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  547 |       return write_out_old_ascii_header (makedev (file_hdr->c_dev_maj,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  548 |                                                   file_hdr->c_dev_min),[0m
  549 |                                          makedev (file_hdr->c_rdev_maj,[0m
  550 |                                                   file_hdr->c_rdev_min),[0m
  551 |                                          file_hdr, out_des);[0m
      | [0;1;32m                                                           
[0m      | [0;32m                                                           ;} 
[0m[1mcopyout.c:554:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  554 |       hp_compute_dev (file_hdr, &dev, &rdev);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  555 |       return write_out_old_ascii_header (dev, rdev, file_hdr, out_des);[0m
      | [0;1;32m                                                                      
[0m      | [0;32m                                                                      ;} 
[0m[1mcopyout.c:564:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  564 |       return write_out_tar_header (file_hdr, out_des);[0m
      | [0;1;32m      ^                                              
[0m      | [0;32m      {                                              ;} 
[0m[1mcopyout.c:567:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  567 |       return write_out_binary_header (makedev (file_hdr->c_rdev_maj,[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  568 |                                                file_hdr->c_rdev_min),[0m
  569 |                                       file_hdr, out_des);[0m
      | [0;1;32m                                                        
[0m      | [0;32m                                                        ;} 
[0m[1mcopyout.c:572:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  572 |       hp_compute_dev (file_hdr, &dev, &rdev);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  573 |       /* FIXME: dev ignored. Should it be? */[0m
  574 |       return write_out_binary_header (rdev, file_hdr, out_des);[0m
      | [0;1;32m                                                              
[0m      | [0;32m                                                              ;} 
[0m[1mcopyout.c:577:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  577 |       abort ();[0m
      | [0;1;32m      ^       
[0m      | [0;32m      {       ;} 
[0m[1mcopyout.c:585:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  585 |   strcpy (p, value);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcopyout.c:585:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  585 |   strcpy (p, value);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcopyout.c:617:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  617 |       if (fstat (out_file_des, &file_stat))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  618 |         error (PAXEXIT_FAILURE, errno, _("standard output is closed"));[0m
      | [0;1;32m                                                                       
[0m[1mcopyout.c:632:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  632 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  633 |     change_dir ();[0m
      | [0;1;32m                  
[0m[1mcopyout.c:646:20: [0m[0;1;35mwarning: [0m[1mpassing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  646 |       if ((*xstat) (input_name.ds_string, &file_stat) < 0)[0m
      | [0;1;32m                   ^
[0m[1mcopyout.c:646:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  646 |       if ((*xstat) (input_name.ds_string, &file_stat) < 0)[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  647 |         stat_error (input_name.ds_string);[0m
  648 |       else[0m
      | [0;32m      } 
[0m[1mcopyout.c:658:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  658 |                   if (!ds_endswith (&input_name, '/'))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  659 |                     ds_append (&input_name, '/');[0m
      | [0;1;32m                                                 
[0m[1mcopyout.c:672:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  672 |               if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mcopyout.c:680:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  680 |                       if (write_out_header (&file_hdr, out_file_des))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  681 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mcopyout.c:706:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  706 |               if (archive_format == arf_crcascii)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  707 |                 file_hdr.c_chksum = read_for_checksum (in_file_des,[0m
  708 |                                                        file_hdr.c_filesize,[0m
  709 |                                                        orig_file_name);[0m
      | [0;1;32m                                                                       
[0m[1mcopyout.c:711:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |               if (write_out_header (&file_hdr, out_file_des))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  712 |                 continue;[0m
      | [0;1;32m                         
[0m[1mcopyout.c:719:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  719 |               if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  720 |                 add_inode (file_hdr.c_ino, orig_file_name, file_hdr.c_dev_maj,[0m
  721 |                            file_hdr.c_dev_min);[0m
      | [0;1;32m                                               
[0m[1mcopyout.c:725:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  725 |               if (reset_time_flag)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  726 |                 set_file_times (in_file_des,[0m
  727 |                                 orig_file_name,[0m
  728 |                                 file_stat.st_atime, file_stat.st_mtime);[0m
      | [0;1;32m                                                                        
[0m[1mcopyout.c:729:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  729 |               if (close (in_file_des) < 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  730 |                 close_error (orig_file_name);[0m
      | [0;1;32m                                             
[0m[1mcopyout.c:734:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  734 |               file_hdr.c_filesize = 0;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  735 |               if (ignore_dirnlink_option)[0m
  736 |                 file_hdr.c_nlink = 2;[0m
  737 |               if (write_out_header (&file_hdr, out_file_des))[0m
  738 |                 continue;[0m
  739 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mcopyout.c:735:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  735 |               if (ignore_dirnlink_option)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  736 |                 file_hdr.c_nlink = 2;[0m
      | [0;1;32m                                     
[0m[1mcopyout.c:737:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  737 |               if (write_out_header (&file_hdr, out_file_des))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  738 |                 continue;[0m
      | [0;1;32m                         
[0m[1mcopyout.c:767:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  767 |                       if (write_out_header (&file_hdr, out_file_des))[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  768 |                         continue;[0m
      | [0;1;32m                                 
[0m[1mcopyout.c:774:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  774 |               file_hdr.c_filesize = 0;[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m  775 |               if (write_out_header (&file_hdr, out_file_des))[0m
  776 |                 continue;[0m
  777 |               break;[0m
      | [0;1;32m                   
[0m      | [0;32m                   ;} 
[0m[1mcopyout.c:775:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  775 |               if (write_out_header (&file_hdr, out_file_des))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  776 |                 continue;[0m
      | [0;1;32m                         
[0m[1mcopyout.c:781:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  781 |               {[0m
      | [0;1;32m              ^
[0m      | [0;32m              {
[0m[1mcopyout.c:793:3: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  793 |                 link_name[link_size] = 0;[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:610:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  610 |   if (_isrmt (out_file_des))[0m
      | [0;1;32m      ^
[0m[1m../lib/rmt.h:44:4: [0m[0;1;36mnote: [0mexpanded from macro '_isrmt'[0m
   44 |   ((fd) >= __REM_BIAS)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:610:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  610 |   if (_isrmt (out_file_des))[0m
      | [0;1;32m  ^
[0m[1mcopyout.c:617:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  617 |       if (fstat (out_file_des, &file_stat))[0m
      | [0;1;32m      ^
[0m[1mcopyout.c:621:2: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  621 |         S_ISBLK (file_stat.st_mode) ||[0m
      | [0;1;32m        ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:127:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISBLK'[0m
  127 | #define S_ISBLK(mode)    __S_ISTYPE((mode), __S_IFBLK)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:621:2: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  621 |         S_ISBLK (file_stat.st_mode) ||[0m
      | [0;1;32m        ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:127:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISBLK'[0m
  127 | #define S_ISBLK(mode)    __S_ISTYPE((mode), __S_IFBLK)[0m
      | [0;1;32m                         ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:32: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                ^
[0m[1mcopyout.c:623:2: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  623 |         S_ISCHR (file_stat.st_mode);[0m
      | [0;1;32m        ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:126:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISCHR'[0m
  126 | #define S_ISCHR(mode)    __S_ISTYPE((mode), __S_IFCHR)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:624:28: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  624 |       output_is_seekable = S_ISREG (file_stat.st_mode);[0m
      | [0;1;32m                           ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:128:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISREG'[0m
  128 | #define S_ISREG(mode)    __S_ISTYPE((mode), __S_IFREG)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:627:7: [0m[0;1;36mnote: [0mAssuming 'append_flag' is 0[0m
  627 |   if (append_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mcopyout.c:627:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  627 |   if (append_flag)[0m
      | [0;1;32m  ^
[0m[1mcopyout.c:636:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  636 |   while (ds_fgetstr (stdin, &input_name, name_end) != NULL)[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:636:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  636 |   while (ds_fgetstr (stdin, &input_name, name_end) != NULL)[0m
      | [0;1;32m  ^
[0m[1mcopyout.c:639:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  639 |       if (input_name.ds_string[0] == 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:639:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  639 |       if (input_name.ds_string[0] == 0)[0m
      | [0;1;32m      ^
[0m[1mcopyout.c:646:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  646 |       if ((*xstat) (input_name.ds_string, &file_stat) < 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:646:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  646 |       if ((*xstat) (input_name.ds_string, &file_stat) < 0)[0m
      | [0;1;32m      ^
[0m[1mcopyout.c:653:8: [0m[0;1;36mnote: [0mAssuming 'archive_format' is not equal to arf_tar[0m
  653 |           if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:653:8: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1mcopyout.c:653:37: [0m[0;1;36mnote: [0mAssuming 'archive_format' is not equal to arf_ustar[0m
  653 |           if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;1;32m                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:653:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  653 |           if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;1;32m          ^
[0m[1mcopyout.c:665:7: [0m[0;1;36mnote: [0mAssuming 'no_abs_paths_flag' is not equal to 0[0m
  665 |                                   !no_abs_paths_flag, true);[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:669:4: [0m[0;1;36mnote: [0mControl jumps to 'case 40960:'  at line 780[0m
  669 |           switch (file_hdr.c_mode & CP_IFMT)[0m
      | [0;1;32m          ^
[0m[1mcopyout.c:785:15: [0m[0;1;36mnote: [0mTaint originated here[0m
  785 |                 link_size = readlink (orig_file_name, link_name,[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  786 |                                       file_stat.st_size);[0m
      | [0;1;32m                                      ~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:785:15: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  785 |                 link_size = readlink (orig_file_name, link_name,[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  786 |                                       file_stat.st_size);[0m
      | [0;1;32m                                      ~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:785:15: [0m[0;1;36mnote: [0mAssuming that 'readlink' is successful[0m
  785 |                 link_size = readlink (orig_file_name, link_name,[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  786 |                                       file_stat.st_size);[0m
      | [0;1;32m                                      ~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:787:7: [0m[0;1;36mnote: [0m'link_size' is >= 0[0m
  787 |                 if (link_size < 0)[0m
      | [0;1;32m                    ^~~~~~~~~
[0m[1mcopyout.c:787:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  787 |                 if (link_size < 0)[0m
      | [0;1;32m                ^
[0m[1mcopyout.c:793:3: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  793 |                 link_name[link_size] = 0;[0m
      | [0;1;32m                ^~~~~~~~~~~~~~~~~~~~
[0m[1mcopyout.c:809:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  809 |                         if (write_out_header (&file_hdr, out_file_des))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  810 |                           continue;[0m
      | [0;1;32m                                   
[0m[1mcopyout.c:815:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  815 |                     if (write_out_header (&file_hdr, out_file_des))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  816 |                       continue;[0m
      | [0;1;32m                               
[0m[1mcopyout.c:826:8: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  826 |               error (0, 0, _("%s: unknown file type"), orig_file_name);[0m
      | [0;1;32m              ^                                                       
[0m      | [0;32m              {                                                       ;} 
[0m[1mcopyout.c:829:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  829 |           if (verbose_flag)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  830 |             fprintf (stderr, "%s\n", orig_file_name);[0m
      | [0;1;32m                                                     
[0m[1mcopyout.c:830:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  830 |             fprintf (stderr, "%s\n", orig_file_name);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mcopyout.c:830:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  830 |             fprintf (stderr, "%s\n", orig_file_name);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mcopyout.c:831:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |           if (dot_flag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  832 |             fputc ('.', stderr);[0m
      | [0;1;32m                                
[0m[1mcopyout.c:854:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  854 |   if (archive_format != arf_tar && archive_format != arf_ustar)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  855 |     write_out_header (&file_hdr, out_file_des);[0m
  856 |   else[0m
      | [0;32m  } 
[0m[1mcopyout.c:856:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  857 |     write_nuls_to_file (1024, out_file_des, tape_buffered_write);[0m
      | [0;1;32m                                                                 
[0m[1mcopyout.c:862:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  862 |   if (dot_flag)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  863 |     fputc ('\n', stderr);[0m
      | [0;1;32m                         
[0m[1mcopyout.c:867:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  867 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcopyout.c:867:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  867 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m87 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[102/111][108.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp40niooc3.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/vasnprintf.c
[1mvasnprintf.c:2194:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 2195 |     /* errno is already set.  */[0m
 2196 |     return NULL;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:2205:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 2206 |     goto fail_1_with_EINVAL;[0m
      | [0;1;32m                            
[0m[1mvasnprintf.c:2234:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2234 |         if (size_overflow_p (buf_memsize))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 2235 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:2237:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2237 |         if (buf == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m 2238 |           goto out_of_memory_1;[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:2284:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2290:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2290 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2290:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2290 |                 DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2295:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2295 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 2296 |                   result[length++] = *cp++;[0m
 2297 |                 while (--n > 0);[0m
      | [0;32m                } 
[0m[1mvasnprintf.c:2300:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 2301 |           break;[0m
      | [0;1;32m                
[0m[1mvasnprintf.c:2308:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2308 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2309 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2311:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2311:13: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:2312:13: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 2312 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2194:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:154:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  154 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2205:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:2205:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2225:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2225:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 2243 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:2277:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2277 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2279:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2279:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2259:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2259:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2261:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2261 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2262:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2262:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2264:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2264:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2268:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2268:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2288:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2288 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'i' is not equal to field 'count'[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:9: [0m[0;1;36mnote: [0mTaking false branch[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2304:13: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2304 |         if (dp->conversion == '%')[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2304:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2304 |         if (dp->conversion == '%')[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2308:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2308 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2308:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2308 |             if (!(dp->arg_index == ARG_NONE))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2310:32: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 2310 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:2310:32: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 2310 |             augmented_length = xsum (length, 1);[0m
      | [0;1;32m                               ^~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2311:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is <= 'allocated'[0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2311:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2311 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2312:13: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 2312 |             result[length] = '%';[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2317:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2317 |             if (!(dp->arg_index != ARG_NONE))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 2318 |               abort ();[0m
      | [0;1;32m                       
[0m[1mvasnprintf.c:2325:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2325 |                     *a.arg[dp->arg_index].a.a_count_schar_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2326 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2328:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2328 |                     *a.arg[dp->arg_index].a.a_count_short_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2329 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2331:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2331 |                     *a.arg[dp->arg_index].a.a_count_int_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2332 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2334:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2334 |                     *a.arg[dp->arg_index].a.a_count_longint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2335 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2337:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2337 |                     *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2338 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2340:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2340 |                     *a.arg[dp->arg_index].a.a_count_int8_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2341 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2343:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2343 |                     *a.arg[dp->arg_index].a.a_count_int16_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2344 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2346:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2346 |                     *a.arg[dp->arg_index].a.a_count_int32_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2347 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2349:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2349 |                     *a.arg[dp->arg_index].a.a_count_int64_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2350 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2352:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2352 |                     *a.arg[dp->arg_index].a.a_count_int_fast8_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2353 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2355:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2355 |                     *a.arg[dp->arg_index].a.a_count_int_fast16_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2356 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2358:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2358 |                     *a.arg[dp->arg_index].a.a_count_int_fast32_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2359 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2361:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2361 |                     *a.arg[dp->arg_index].a.a_count_int_fast64_t_pointer = length;[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 2362 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:2364:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 2364 |                     abort ();[0m
      | [0;1;32m                    ^       
[0m      | [0;32m                    {       ;} 
[0m[1mvasnprintf.c:5786:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5786 |                 if (flags & FLAG_GROUP)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5787 |                   *fbp++ = '\'';[0m
      | [0;1;32m                                
[0m[1mvasnprintf.c:5789:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5789 |                 if (flags & FLAG_LEFT)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 5790 |                   *fbp++ = '-';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5791:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5791 |                 if (flags & FLAG_SHOWSIGN)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5792 |                   *fbp++ = '+';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5793:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5793 |                 if (flags & FLAG_SPACE)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 5794 |                   *fbp++ = ' ';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5795:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5795 |                 if (flags & FLAG_ALT)[0m
      | [0;1;32m                                     ^
[0m      | [0;32m                                      {
[0m 5796 |                   *fbp++ = '#';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5798:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5798 |                 if (flags & FLAG_LOCALIZED)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 5799 |                   *fbp++ = 'I';[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:5803:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5803 |                     if (flags & FLAG_ZERO)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 5804 |                       *fbp++ = '0';[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:5812:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5812 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5812:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5812 |                             memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5818:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5818 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5819 |                               *fbp++ = *mp++;[0m
 5820 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5833:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 5833 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5833:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 5833 |                             memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));[0m
      | [0;1;32m                            ^~~~~~
[0m[1mvasnprintf.c:5839:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 5839 |                             do[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 5840 |                               *fbp++ = *mp++;[0m
 5841 |                             while (--n > 0);[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:5906:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5906 |                     FALLTHROUGH;[0m
      | [0;1;32m                    ^           
[0m      | [0;32m                    {           ;} 
[0m[1m./attribute.h:165:21: [0m[0;1;36mnote: [0mexpanded from macro 'FALLTHROUGH'[0m
  165 | #define FALLTHROUGH _GL_ATTRIBUTE_FALLTHROUGH[0m
      | [0;1;32m                    ^
[0m[1m../config.h:2197:38: [0m[0;1;36mnote: [0mexpanded from macro '_GL_ATTRIBUTE_FALLTHROUGH'[0m
 2197 | #   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]][0m
      | [0;1;32m                                     ^
[0m[1mvasnprintf.c:5964:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5964 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:5966:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5966 |                     *fbp++ = 'L';[0m
      | [0;1;32m                    ^
[0m      | [0;32m                    {
[0m 5967 |                     break;[0m
      | [0;1;32m                         
[0m      | [0;32m                         ;} 
[0m[1mvasnprintf.c:5969:21: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 5969 |                     break;[0m
      | [0;1;32m                    ^    
[0m      | [0;32m                    {    ;} 
[0m[1mvasnprintf.c:6060:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6060 |                     if (!(a.arg[dp->width_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m 6061 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:6066:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6066 |                     if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m 6067 |                       abort ();[0m
      | [0;1;32m                               
[0m[1mvasnprintf.c:6080:17: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6080 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6080:17: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6080 |                 ENSURE_ALLOCATION (xsum (length,[0m
      | [0;1;32m                ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6099:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6099 |                     if (maxlen > INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m 6100 |                       maxlen = INT_MAX / TCHARS_PER_DCHAR;[0m
      | [0;1;32m                                                          
[0m[1mvasnprintf.c:6147:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6147 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6148 |                           int arg = a.arg[dp->arg_index].a.a_schar;[0m
 6149 |                           SNPRINTF_BUF (arg);[0m
 6150 |                         }[0m
 6151 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6149:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6149 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6149:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6149 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6153:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6153 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6154 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uchar;[0m
 6155 |                           SNPRINTF_BUF (arg);[0m
 6156 |                         }[0m
 6157 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6155:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6155 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6155:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6155 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6159:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6159 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6160 |                           int arg = a.arg[dp->arg_index].a.a_short;[0m
 6161 |                           SNPRINTF_BUF (arg);[0m
 6162 |                         }[0m
 6163 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6161:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6161 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6161:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6161 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6165:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6165 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6166 |                           unsigned int arg = a.arg[dp->arg_index].a.a_ushort;[0m
 6167 |                           SNPRINTF_BUF (arg);[0m
 6168 |                         }[0m
 6169 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6167:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6167 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6167:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6167 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6171:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6171 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6172 |                           int arg = a.arg[dp->arg_index].a.a_int;[0m
 6173 |                           SNPRINTF_BUF (arg);[0m
 6174 |                         }[0m
 6175 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6173:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6173 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6173:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6173 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6177:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6177 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6178 |                           unsigned int arg = a.arg[dp->arg_index].a.a_uint;[0m
 6179 |                           SNPRINTF_BUF (arg);[0m
 6180 |                         }[0m
 6181 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6179:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6179 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6179:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6179 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6183:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6183 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6184 |                           long int arg = a.arg[dp->arg_index].a.a_longint;[0m
 6185 |                           SNPRINTF_BUF (arg);[0m
 6186 |                         }[0m
 6187 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6185:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6185 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6185:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6185 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6189:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6189 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6190 |                           unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;[0m
 6191 |                           SNPRINTF_BUF (arg);[0m
 6192 |                         }[0m
 6193 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6191:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6191 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6191:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6191 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6195:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6195 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6196 |                           long long int arg = a.arg[dp->arg_index].a.a_longlongint;[0m
 6197 |                           SNPRINTF_BUF (arg);[0m
 6198 |                         }[0m
 6199 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6197:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6197 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6197:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6197 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6201:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6201 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6202 |                           unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;[0m
 6203 |                           SNPRINTF_BUF (arg);[0m
 6204 |                         }[0m
 6205 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6203:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6203 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6203:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6203 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6207:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6207 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6208 |                           int8_t arg = a.arg[dp->arg_index].a.a_int8_t;[0m
 6209 |                           SNPRINTF_BUF (arg);[0m
 6210 |                         }[0m
 6211 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6209:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6209 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6209:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6209 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6213:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6213 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6214 |                           uint8_t arg = a.arg[dp->arg_index].a.a_uint8_t;[0m
 6215 |                           SNPRINTF_BUF (arg);[0m
 6216 |                         }[0m
 6217 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6215:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6215 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6215:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6215 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6219:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6219 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6220 |                           int16_t arg = a.arg[dp->arg_index].a.a_int16_t;[0m
 6221 |                           SNPRINTF_BUF (arg);[0m
 6222 |                         }[0m
 6223 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6221:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6221 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6221:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6221 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6225:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6225 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6226 |                           uint16_t arg = a.arg[dp->arg_index].a.a_uint16_t;[0m
 6227 |                           SNPRINTF_BUF (arg);[0m
 6228 |                         }[0m
 6229 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6227:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6227 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6227:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6227 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6231:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6231 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6232 |                           int32_t arg = a.arg[dp->arg_index].a.a_int32_t;[0m
 6233 |                           SNPRINTF_BUF (arg);[0m
 6234 |                         }[0m
 6235 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6233:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6233 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6233:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6233 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6237:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6237 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6238 |                           uint32_t arg = a.arg[dp->arg_index].a.a_uint32_t;[0m
 6239 |                           SNPRINTF_BUF (arg);[0m
 6240 |                         }[0m
 6241 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6239:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6239 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6239:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6239 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6243:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6243 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6244 |                           int64_t arg = a.arg[dp->arg_index].a.a_int64_t;[0m
 6245 |                           SNPRINTF_BUF (arg);[0m
 6246 |                         }[0m
 6247 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6245:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6245 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6245:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6245 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6249:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6249 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6250 |                           uint64_t arg = a.arg[dp->arg_index].a.a_uint64_t;[0m
 6251 |                           SNPRINTF_BUF (arg);[0m
 6252 |                         }[0m
 6253 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6251:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6251 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6251:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6251 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6255:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6255 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6256 |                           int_fast8_t arg = a.arg[dp->arg_index].a.a_int_fast8_t;[0m
 6257 |                           SNPRINTF_BUF (arg);[0m
 6258 |                         }[0m
 6259 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6257:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6257 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6257:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6257 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6261:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6261 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6262 |                           uint_fast8_t arg = a.arg[dp->arg_index].a.a_uint_fast8_t;[0m
 6263 |                           SNPRINTF_BUF (arg);[0m
 6264 |                         }[0m
 6265 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6263:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6263 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6263:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6263 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6267:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6267 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6268 |                           int_fast16_t arg = a.arg[dp->arg_index].a.a_int_fast16_t;[0m
 6269 |                           SNPRINTF_BUF (arg);[0m
 6270 |                         }[0m
 6271 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6269:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6269 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6269:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6269 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6273:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6273 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6274 |                           uint_fast16_t arg = a.arg[dp->arg_index].a.a_uint_fast16_t;[0m
 6275 |                           SNPRINTF_BUF (arg);[0m
 6276 |                         }[0m
 6277 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6275:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6275 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6275:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6275 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6279:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6279 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6280 |                           int_fast32_t arg = a.arg[dp->arg_index].a.a_int_fast32_t;[0m
 6281 |                           SNPRINTF_BUF (arg);[0m
 6282 |                         }[0m
 6283 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6281:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6281 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6281:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6281 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6285:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6285 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6286 |                           uint_fast32_t arg = a.arg[dp->arg_index].a.a_uint_fast32_t;[0m
 6287 |                           SNPRINTF_BUF (arg);[0m
 6288 |                         }[0m
 6289 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6287:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6287 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6287:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6287 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6291:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6291 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6292 |                           int_fast64_t arg = a.arg[dp->arg_index].a.a_int_fast64_t;[0m
 6293 |                           SNPRINTF_BUF (arg);[0m
 6294 |                         }[0m
 6295 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6293:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6293 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6293:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6293 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6297:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6297 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6298 |                           uint_fast64_t arg = a.arg[dp->arg_index].a.a_uint_fast64_t;[0m
 6299 |                           SNPRINTF_BUF (arg);[0m
 6300 |                         }[0m
 6301 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6299:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6299 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6299:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6299 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6303:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6303 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6304 |                           double arg = a.arg[dp->arg_index].a.a_double;[0m
 6305 |                           SNPRINTF_BUF (arg);[0m
 6306 |                         }[0m
 6307 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6305:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6305 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6305:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6305 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6309:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6309 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6310 |                           long double arg = a.arg[dp->arg_index].a.a_longdouble;[0m
 6311 |                           SNPRINTF_BUF (arg);[0m
 6312 |                         }[0m
 6313 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6311:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6311 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6311:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6311 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6315:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6315 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6316 |                           int arg = a.arg[dp->arg_index].a.a_char;[0m
 6317 |                           SNPRINTF_BUF (arg);[0m
 6318 |                         }[0m
 6319 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6317:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6317 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6317:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6317 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6322:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6322 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6323 |                           wint_t arg = a.arg[dp->arg_index].a.a_wide_char;[0m
 6324 |                           SNPRINTF_BUF (arg);[0m
 6325 |                         }[0m
 6326 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6324:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6324 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6324:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6324 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6329:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6329 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6330 |                           const char *arg = a.arg[dp->arg_index].a.a_string;[0m
 6331 |                           SNPRINTF_BUF (arg);[0m
 6332 |                         }[0m
 6333 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6331:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6331 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6331:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6331 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6336:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6336 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6337 |                           const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;[0m
 6338 |                           SNPRINTF_BUF (arg);[0m
 6339 |                         }[0m
 6340 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6338:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6338 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6338:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6338 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6343:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6343 |                         {[0m
      | [0;1;32m                        ^
[0m      | [0;32m                        {
[0m 6344 |                           void *arg = a.arg[dp->arg_index].a.a_pointer;[0m
 6345 |                           SNPRINTF_BUF (arg);[0m
 6346 |                         }[0m
 6347 |                         break;[0m
      | [0;1;32m                             
[0m      | [0;32m                             ;} 
[0m[1mvasnprintf.c:6345:27: [0m[0;1;35mwarning: [0m[1mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6345 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6345:27: [0m[0;1;36mnote: [0mCall to function 'snprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'snprintf_s' in case of C11[0m
 6345 |                           SNPRINTF_BUF (arg);[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:6106:36: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF_BUF'[0m
 6106 |                         retcount = SNPRINTF ((TCHAR_T *) (result + length), \[0m
      | [0;1;32m                                   ^~~~~~~~
[0m[1mvasnprintf.c:211:20: [0m[0;1;36mnote: [0mexpanded from macro 'SNPRINTF'[0m
  211 | #  define SNPRINTF snprintf[0m
      | [0;1;32m                   ^~~~~~~~
[0m[1mvasnprintf.c:6349:25: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 6349 |                         abort ();[0m
      | [0;1;32m                        ^       
[0m      | [0;32m                        {       ;} 
[0m[1mvasnprintf.c:6362:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6362 |                             && ((TCHAR_T *) (result + length)) [count] != '\0')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 6363 |                           abort ();[0m
      | [0;1;32m                                   
[0m[1mvasnprintf.c:6365:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6365 |                         if (retcount > count)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 6366 |                           count = retcount;[0m
      | [0;1;32m                                           
[0m[1mvasnprintf.c:6449:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6449 |                             if (dp->conversion == 'c' || dp->conversion == 's')[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m 6450 |                               errno = EILSEQ;[0m
 6451 |                             else[0m
      | [0;32m                            } 
[0m[1mvasnprintf.c:6451:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6451 |                             else[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 6452 |                               errno = EINVAL;[0m
      | [0;1;32m                                             
[0m[1mvasnprintf.c:6469:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6469 |                         if (maxlen == INT_MAX / TCHARS_PER_DCHAR)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 6470 |                           goto overflow;[0m
 6471 |                         else[0m
      | [0;32m                        } 
[0m[1mvasnprintf.c:6489:29: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6489 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6489:29: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6489 |                             ENSURE_ALLOCATION (n);[0m
      | [0;1;32m                            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6858:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6858:5: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2271:11: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2271 |           DCHAR_CPY (memory, result, length);                                \[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mvasnprintf.c:155:21: [0m[0;1;36mnote: [0mexpanded from macro 'DCHAR_CPY'[0m
  155 | #  define DCHAR_CPY memcpy[0m
      | [0;1;32m                    ^~~~~~
[0m[1mvasnprintf.c:6859:5: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
 6859 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2194:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1mvasnprintf.c:154:24: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_PARSE'[0m
  154 | #  define PRINTF_PARSE printf_parse[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2194:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2194 |   if (PRINTF_PARSE (format, &d, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2205:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m      ^
[0m[1m./printf-args.h:28:27: [0m[0;1;36mnote: [0mexpanded from macro 'PRINTF_FETCHARGS'[0m
   28 | # define PRINTF_FETCHARGS printf_fetchargs[0m
      | [0;1;32m                          ^
[0m[1mvasnprintf.c:2205:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 2205 |   if (PRINTF_FETCHARGS (args, &a) < 0)[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2225:9: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2225:5: [0m[0;1;36mnote: [0mTaking true branch[0m
 2225 |     if (buf_neededlength < 4000 / sizeof (TCHAR_T))[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0mAssuming 'resultbuf' is equal to NULL[0m
 2243 |     allocated = (resultbuf != NULL ? *lengthp : 0);[0m
      | [0;1;32m                 ^~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2243:18: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1mvasnprintf.c:2277:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 2277 |     for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2279:13: [0m[0;1;36mnote: [0mAssuming 'cp' is not equal to field 'dir_start'[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2279:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2279 |         if (cp != dp->dir_start)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'allocated' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2258:22: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2258 |         allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \[0m
      | [0;1;32m                     ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'augmented_length' is > 'allocated'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2259:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2259:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2259 |         if ((needed) > allocated)                                            \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2261:23: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2261 |         memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \[0m
      | [0;1;32m                      ^
[0m[1m./xsize.h:99:4: [0m[0;1;36mnote: [0mexpanded from macro 'xtimes'[0m
   99 |   ((N) <= SIZE_MAX / (ELSIZE) ? (size_t) (N) * (ELSIZE) : SIZE_MAX)[0m
      | [0;1;32m   ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory_size' is not equal to -1[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2262:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./xsize.h:103:4: [0m[0;1;36mnote: [0mexpanded from macro 'size_overflow_p'[0m
  103 |   ((SIZE) == SIZE_MAX)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2262:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2262 |         if (size_overflow_p (memory_size))                                   \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2264:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2264:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2264 |         if (result == resultbuf)                                             \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mAssuming 'memory' is not equal to null[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2268:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m            ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2268:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2268 |         if (memory == NULL)                                                  \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'result' is equal to 'resultbuf'[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:13: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0m'length' is <= 0[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2270:36: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m                                   ^~~~~~
[0m[1mvasnprintf.c:2284:13: [0m[0;1;36mnote: [0mTaking false branch[0m
 2284 |             ENSURE_ALLOCATION (augmented_length);[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2270:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2270 |         if (result == resultbuf && length > 0)                               \[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2288:13: [0m[0;1;36mnote: [0mTaking true branch[0m
 2288 |             if (sizeof (FCHAR_T) == sizeof (DCHAR_T))[0m
      | [0;1;32m            ^
[0m[1mvasnprintf.c:2300:13: [0m[0;1;36mnote: [0mAssuming 'i' is equal to field 'count'[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1mvasnprintf.c:2300:9: [0m[0;1;36mnote: [0mTaking true branch[0m
 2300 |         if (i == d.count)[0m
      | [0;1;32m        ^
[0m[1mvasnprintf.c:2301:11: [0m[0;1;36mnote: [0m Execution continues on line 6858[0m
 2301 |           break;[0m
      | [0;1;32m          ^
[0m[1mvasnprintf.c:6858:24: [0m[0;1;36mnote: [0mCalling 'xsum'[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2275:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:2253:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0mAssuming 'sum' is >= 'size1'[0m
   68 |   return (sum >= size1 ? sum : SIZE_MAX);[0m
      | [0;1;32m          ^~~~~~~~~~~~
[0m[1m./xsize.h:68:11: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1mvasnprintf.c:6858:24: [0m[0;1;36mnote: [0mReturning from 'xsum'[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m                       ^
[0m[1mvasnprintf.c:2275:27: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m                          ^~~~~~
[0m[1mvasnprintf.c:2253:10: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m         ^~~~~~
[0m[1mvasnprintf.c:6858:5: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:2253:9: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~
[0m[1mvasnprintf.c:6858:5: [0m[0;1;36mnote: [0mTaking false branch[0m
 6858 |     ENSURE_ALLOCATION (xsum (length, 1));[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:2275:3: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION'[0m
 2275 |   ENSURE_ALLOCATION_ELSE((needed), goto out_of_memory; )[0m
      | [0;1;32m  ^
[0m[1mvasnprintf.c:2253:5: [0m[0;1;36mnote: [0mexpanded from macro 'ENSURE_ALLOCATION_ELSE'[0m
 2253 |     if ((needed) > allocated)                                                \[0m
      | [0;1;32m    ^
[0m[1mvasnprintf.c:6859:5: [0m[0;1;36mnote: [0mAccess of 'char' element in the heap area at an overflowing index[0m
 6859 |     result[length] = '\0';[0m
      | [0;1;32m    ^~~~~~~~~~~~~~
[0m[1mvasnprintf.c:6867:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6867 |         if (memory != NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 6868 |           result = memory;[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:6871:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6871 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 6872 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m[1mvasnprintf.c:6898:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6898 |     if (result != resultbuf)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 6899 |       free (result);[0m
      | [0;1;32m                    
[0m[1mvasnprintf.c:6900:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 6900 |     if (buf_malloced != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 6901 |       free (buf_malloced);[0m
      | [0;1;32m                          
[0m192 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[103/111][105.0s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpt8_ngd1e.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/copyin.c
[1mcopyin.c:68:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
   68 |       fprintf (tty_out, _("rename %s -> "), file_hdr->c_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcopyin.c:68:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
   68 |       fprintf (tty_out, _("rename %s -> "), file_hdr->c_name);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcopyin.c:68:7: [0m[0;1;35mwarning: [0m[1mStream pointer might be NULL [clang-analyzer-unix.Stream][0m
   68 |       fprintf (tty_out, _("rename %s -> "), file_hdr->c_name);[0m
      | [0;1;32m      ^
[0m[1mcopyin.c:1366:3: [0m[0;1;36mnote: [0m'tty_out' initialized to a null pointer value[0m
 1366 |   FILE *tty_out = NULL;         /* Interactive file for rename option.  */[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1mcopyin.c:1379:7: [0m[0;1;36mnote: [0mAssuming 'pattern_file_name' is null[0m
 1379 |   if (pattern_file_name)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:1379:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1379 |   if (pattern_file_name)[0m
      | [0;1;32m  ^
[0m[1mcopyin.c:1384:7: [0m[0;1;36mnote: [0mAssuming 'rename_batch_file' is null[0m
 1384 |   if (rename_batch_file)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:1384:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1384 |   if (rename_batch_file)[0m
      | [0;1;32m  ^
[0m[1mcopyin.c:1392:12: [0m[0;1;36mnote: [0mAssuming 'rename_flag' is 0[0m
 1392 |   else if (rename_flag)[0m
      | [0;1;32m           ^~~~~~~~~~~
[0m[1mcopyin.c:1392:8: [0m[0;1;36mnote: [0mTaking false branch[0m
 1392 |   else if (rename_flag)[0m
      | [0;1;32m       ^
[0m[1mcopyin.c:1408:7: [0m[0;1;36mnote: [0mAssuming 'table_flag' is 0[0m
 1408 |   if (table_flag && verbose_flag)[0m
      | [0;1;32m      ^~~~~~~~~~
[0m[1mcopyin.c:1408:18: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1408 |   if (table_flag && verbose_flag)[0m
      | [0;1;32m                 ^
[0m[1mcopyin.c:1413:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1413 |   if (_isrmt (in_file_des))[0m
      | [0;1;32m      ^
[0m[1m../lib/rmt.h:44:4: [0m[0;1;36mnote: [0mexpanded from macro '_isrmt'[0m
   44 |   ((fd) >= __REM_BIAS)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:1413:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1413 |   if (_isrmt (in_file_des))[0m
      | [0;1;32m  ^
[0m[1mcopyin.c:1420:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1420 |       if (fstat (in_file_des, &file_stat))[0m
      | [0;1;32m      ^
[0m[1mcopyin.c:1424:2: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1424 |         S_ISBLK (file_stat.st_mode) ||[0m
      | [0;1;32m        ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:127:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISBLK'[0m
  127 | #define S_ISBLK(mode)    __S_ISTYPE((mode), __S_IFBLK)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:1424:30: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1424 |         S_ISBLK (file_stat.st_mode) ||[0m
      | [0;1;32m                                    ^
[0m[1mcopyin.c:1434:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1434 |   while (1)[0m
      | [0;1;32m  ^
[0m[1mcopyin.c:1462:20: [0m[0;1;36mnote: [0mField 'c_namesize' is not equal to 0[0m
 1462 |       if (file_hdr.c_namesize == 0)[0m
      | [0;1;32m                   ^
[0m[1mcopyin.c:1462:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1462 |       if (file_hdr.c_namesize == 0)[0m
      | [0;1;32m      ^
[0m[1mcopyin.c:1467:8: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1467 |           if (strcmp (CPIO_TRAILER_NAME, file_hdr.c_name) == 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:1467:4: [0m[0;1;36mnote: [0mTaking false branch[0m
 1467 |           if (strcmp (CPIO_TRAILER_NAME, file_hdr.c_name) == 0)[0m
      | [0;1;32m          ^
[0m[1mcopyin.c:1470:52: [0m[0;1;36mnote: [0mAssuming 'no_abs_paths_flag' is not equal to 0[0m
 1470 |           cpio_safer_name_suffix (file_hdr.c_name, false, !no_abs_paths_flag,[0m
      | [0;1;32m                                                          ^~~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:1474:8: [0m[0;1;36mnote: [0mAssuming 'num_patterns' is <= 0[0m
 1474 |           if (num_patterns <= 0)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:1474:4: [0m[0;1;36mnote: [0mTaking true branch[0m
 1474 |           if (num_patterns <= 0)[0m
      | [0;1;32m          ^
[0m[1mcopyin.c:1488:11: [0m[0;1;36mnote: [0m'skip_file' is 0[0m
 1488 |       if (skip_file)[0m
      | [0;1;32m          ^~~~~~~~~
[0m[1mcopyin.c:1488:7: [0m[0;1;36mnote: [0mTaking false branch[0m
 1488 |       if (skip_file)[0m
      | [0;1;32m      ^
[0m[1mcopyin.c:1509:16: [0m[0;1;36mnote: [0mAssuming 'table_flag' is 0[0m
 1509 |       else if (table_flag)[0m
      | [0;1;32m               ^~~~~~~~~~
[0m[1mcopyin.c:1509:12: [0m[0;1;36mnote: [0mTaking false branch[0m
 1509 |       else if (table_flag)[0m
      | [0;1;32m           ^
[0m[1mcopyin.c:1513:16: [0m[0;1;36mnote: [0mAssuming 'append_flag' is 0[0m
 1513 |       else if (append_flag)[0m
      | [0;1;32m               ^~~~~~~~~~~
[0m[1mcopyin.c:1513:12: [0m[0;1;36mnote: [0mTaking false branch[0m
 1513 |       else if (append_flag)[0m
      | [0;1;32m           ^
[0m[1mcopyin.c:1518:16: [0m[0;1;36mnote: [0mAssuming 'only_verify_crc_flag' is 0[0m
 1518 |       else if (only_verify_crc_flag)[0m
      | [0;1;32m               ^~~~~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:1518:12: [0m[0;1;36mnote: [0mTaking false branch[0m
 1518 |       else if (only_verify_crc_flag)[0m
      | [0;1;32m           ^
[0m[1mcopyin.c:1555:8: [0m[0;1;36mnote: [0mAssuming 'rename_flag' is not equal to 0[0m
 1555 |           if (rename_flag || rename_batch_file)[0m
      | [0;1;32m              ^~~~~~~~~~~
[0m[1mcopyin.c:1555:20: [0m[0;1;36mnote: [0mLeft side of '||' is true[0m
 1555 |           if (rename_flag || rename_batch_file)[0m
      | [0;1;32m                          ^
[0m[1mcopyin.c:1557:44: [0m[0;1;36mnote: [0mPassing null pointer value via 3rd parameter 'tty_out'[0m
 1557 |               if (query_rename(&file_hdr, tty_in, tty_out, rename_in) < 0)[0m
      | [0;1;32m                                                  ^~~~~~~
[0m[1mcopyin.c:1557:12: [0m[0;1;36mnote: [0mCalling 'query_rename'[0m
 1557 |               if (query_rename(&file_hdr, tty_in, tty_out, rename_in) < 0)[0m
      | [0;1;32m                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:60:8: [0m[0;1;36mnote: [0m'initialized_new_name' is 0[0m
   60 |   if (!initialized_new_name)[0m
      | [0;1;32m       ^~~~~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:60:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   60 |   if (!initialized_new_name)[0m
      | [0;1;32m  ^
[0m[1mcopyin.c:66:7: [0m[0;1;36mnote: [0mAssuming 'rename_flag' is not equal to 0[0m
   66 |   if (rename_flag)[0m
      | [0;1;32m      ^~~~~~~~~~~
[0m[1mcopyin.c:66:3: [0m[0;1;36mnote: [0mTaking true branch[0m
   66 |   if (rename_flag)[0m
      | [0;1;32m  ^
[0m[1mcopyin.c:68:7: [0m[0;1;36mnote: [0mStream pointer might be NULL[0m
   68 |       fprintf (tty_out, _("rename %s -> "), file_hdr->c_name);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopyin.c:80:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   80 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m   81 |     cpio_set_c_name (file_hdr, new_name.ds_string);[0m
      | [0;1;32m                                                   
[0m[1mcopyin.c:96:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   96 |   if (archive_format == arf_crcascii || archive_format == arf_newascii)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m   97 |     pad = (4 - (offset % 4)) % 4;[0m
   98 |   else if (archive_format == arf_binary || archive_format == arf_hpbinary)[0m
      | [0;32m  } 
[0m[1mcopyin.c:98:75: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   98 |   else if (archive_format == arf_binary || archive_format == arf_hpbinary)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m   99 |     pad = (2 - (offset % 2)) % 2;[0m
  100 |   else if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;32m  } 
[0m[1mcopyin.c:100:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  100 |   else if (archive_format == arf_tar || archive_format == arf_ustar)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  101 |     pad = (512 - (offset % 512)) % 512;[0m
  102 |   else[0m
      | [0;32m  } 
[0m[1mcopyin.c:102:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  102 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  103 |     pad = 0;[0m
      | [0;1;32m            
[0m[1mcopyin.c:105:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  105 |   if (pad != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  106 |     tape_toss_input (in_file_des, pad);[0m
      | [0;1;32m                                       
[0m[1mcopyin.c:147:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  147 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  148 |             long_format (file_hdr, file_hdr->c_tar_linkname);[0m
      | [0;1;32m                                                             
[0m[1mcopyin.c:151:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  151 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  152 | #endif[0m
  153 |         long_format (file_hdr, (char *) 0);[0m
      | [0;1;32m                                           
[0m[1mcopyin.c:276:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  276 |           if (d_prev != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  277 |             d_prev->next = d->next;[0m
  278 |           else[0m
      | [0;32m          } 
[0m[1mcopyin.c:278:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  278 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  279 |             deferments = d->next;[0m
      | [0;1;32m                                 
[0m[1mcopyin.c:322:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  322 |           if (d_prev != NULL)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  323 |             d_prev->next = d->next;[0m
  324 |           else[0m
      | [0;32m          } 
[0m[1mcopyin.c:324:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  324 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  325 |             deferments = d->next;[0m
      | [0;1;32m                                 
[0m[1mcopyin.c:385:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |       if (close (out_file_des) < 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  386 |         close_error (d->header.c_name);[0m
      | [0;1;32m                                       
[0m[1mcopyin.c:396:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |   if (to_stdout_option)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  397 |     out_file_des = STDOUT_FILENO;[0m
  398 |   else[0m
      | [0;32m  } 
[0m[1mcopyin.c:499:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  499 |       if ((file_hdr->c_filesize % 4) == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  500 |         swapping_halfwords = true;[0m
  501 |       else[0m
      | [0;32m      } 
[0m[1mcopyin.c:501:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  502 |         error (0, 0, _("cannot swap halfwords of %s: odd number of halfwords"),[0m
  503 |                file_hdr->c_name);[0m
      | [0;1;32m                                 
[0m[1mcopyin.c:507:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  507 |       if ((file_hdr->c_filesize % 2) == 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  508 |         swapping_bytes = true;[0m
  509 |       else[0m
      | [0;32m      } 
[0m[1mcopyin.c:509:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  509 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  510 |         error (0, 0, _("cannot swap bytes of %s: odd number of bytes"),[0m
  511 |                file_hdr->c_name);[0m
      | [0;1;32m                                 
[0m[1mcopyin.c:520:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |           if (crc != file_hdr->c_chksum)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  521 |             error (0, 0, _("%s: checksum error (0x%x, should be 0x%x)"),[0m
  522 |                    file_hdr->c_name, crc, file_hdr->c_chksum);[0m
      | [0;1;32m                                                              
[0m[1mcopyin.c:530:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |   if (close (out_file_des) < 0)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  531 |     close_error (file_hdr->c_name);[0m
      | [0;1;32m                                   
[0m[1mcopyin.c:535:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |       if (crc != file_hdr->c_chksum)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  536 |         error (0, 0, _("%s: checksum error (0x%x, should be 0x%x)"),[0m
  537 |                file_hdr->c_name, crc, file_hdr->c_chksum);[0m
      | [0;1;32m                                                          
[0m[1mcopyin.c:557:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  557 |   if (to_stdout_option)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  558 |     return;[0m
      | [0;1;32m           
[0m[1mcopyin.c:614:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  614 |           && errno != EPERM)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  615 |         chown_error_details (file_hdr->c_name, uid, gid);[0m
      | [0;1;32m                                                         
[0m[1mcopyin.c:618:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |   if (chmod (file_hdr->c_name, file_hdr->c_mode) < 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  619 |     chmod_error_details (file_hdr->c_name, file_hdr->c_mode);[0m
      | [0;1;32m                                                             
[0m[1mcopyin.c:620:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  620 |   if (retain_time_flag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  621 |     set_file_times (-1, file_hdr->c_name, file_hdr->c_mtime,[0m
  622 |                     file_hdr->c_mtime);[0m
      | [0;1;32m                                       
[0m[1mcopyin.c:650:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  650 |   if (0 < nshift)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  651 |     n <<= nshift;[0m
      | [0;1;32m                 
[0m[1mcopyin.c:695:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  695 |   strcpy (p->target, newpath);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcopyin.c:695:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  695 |   strcpy (p->target, newpath);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcopyin.c:697:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  697 |   strcpy (p->source, oldpath);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcopyin.c:697:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  697 |   strcpy (p->source, oldpath);[0m
      | [0;1;32m  ^~~~~~
[0m[1mcopyin.c:702:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  702 |         && hash_insert (delayed_link_table, p)))[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  703 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mcopyin.c:713:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  713 |   if (!delayed_link_table)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  714 |     return;[0m
      | [0;1;32m           
[0m[1mcopyin.c:728:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  728 |           if (unlink (dl->target))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  729 |             unlink_error (dl->target);[0m
  730 |           else[0m
      | [0;32m          } 
[0m[1mcopyin.c:738:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  738 |               if (res < 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  739 |                 symlink_error (dl->source, dl->target);[0m
  740 |               else if (!no_chown_flag)[0m
      | [0;32m              } 
[0m[1mcopyin.c:744:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |                   if (lchown (dl->target, uid, gid) < 0 && errno != EPERM)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  745 |                     chown_error_details (dl->target, uid, gid);[0m
      | [0;1;32m                                                               
[0m[1mcopyin.c:770:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  770 |       if (!link_name)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  771 |         return;[0m
      | [0;1;32m               
[0m[1mcopyin.c:775:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  775 |       if (to_stdout_option)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  776 |         return;[0m
      | [0;1;32m               
[0m[1mcopyin.c:780:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  780 |   if (no_abs_paths_flag)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  781 |     symlink_placeholder (link_name, file_hdr->c_name, file_hdr);[0m
  782 |   else[0m
      | [0;32m  } 
[0m[1mcopyin.c:791:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  791 |       if (res < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  792 |         symlink_error (link_name, file_hdr->c_name);[0m
  793 |       else if (!no_chown_flag)[0m
      | [0;32m      } 
[0m[1mcopyin.c:797:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  797 |           if (lchown (file_hdr->c_name, uid, gid) < 0 && errno != EPERM)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  798 |             chown_error_details (file_hdr->c_name, uid, gid);[0m
      | [0;1;32m                                                             
[0m[1mcopyin.c:810:71: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  810 |       && try_existing_file (file_hdr, in_file_des, &existing_dir) < 0)[0m
      | [0;1;32m                                                                      ^
[0m      | [0;32m                                                                       {
[0m  811 |     return;[0m
      | [0;1;32m           
[0m[1mcopyin.c:817:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  817 |       copyin_regular_file (file_hdr, in_file_des);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  818 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mcopyin.c:821:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  821 |       cpio_create_dir (file_hdr, existing_dir);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  822 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mcopyin.c:833:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  833 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mcopyin.c:837:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  837 |       copyin_link (file_hdr, in_file_des);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  838 |       break;[0m
      | [0;1;32m           
[0m      | [0;32m           ;} 
[0m[1mcopyin.c:842:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  842 |       error (0, 0, _("%s: unknown file type"), file_hdr->c_name);[0m
      | [0;1;32m      ^
[0m      | [0;32m      {
[0m  843 |       tape_toss_input (in_file_des, file_hdr->c_filesize);[0m
  844 |       tape_skip_padding (in_file_des, file_hdr->c_filesize);[0m
      | [0;1;32m                                                           
[0m      | [0;32m                                                           ;} 
[0m[1mcopyin.c:877:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  877 |   if (numeric_uid)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  878 |     printf ("%-8ju %-8ju ",[0m
  879 |             (uintmax_t) file_hdr->c_uid,[0m
  880 |             (uintmax_t) file_hdr->c_gid);[0m
  881 |   else[0m
      | [0;32m  } 
[0m[1mcopyin.c:881:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  881 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  882 |     printf ("%-8.8s %-8.8s ", getuser (file_hdr->c_uid),[0m
  883 |             getgroup (file_hdr->c_gid));[0m
      | [0;1;32m                                        
[0m[1mcopyin.c:886:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  886 |       || (file_hdr->c_mode & CP_IFMT) == CP_IFBLK)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  887 |     printf ("%3ju, %3ju ",[0m
  888 |             (uintmax_t) file_hdr->c_rdev_maj,[0m
  889 |             (uintmax_t) file_hdr->c_rdev_min);[0m
  890 |   else[0m
      | [0;32m  } 
[0m[1mcopyin.c:890:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  890 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  891 |     printf ("%8ju ", (uintmax_t) file_hdr->c_filesize);[0m
      | [0;1;32m                                                       
[0m[1mcopyin.c:904:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  904 |   if (timespec_cmp (current_time, when_timespec) < 0)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  905 |     current_time = current_timespec ();[0m
      | [0;1;32m                                       
[0m[1mcopyin.c:914:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  914 |       memcpy (tbuf + 11, tbuf + 19, sizeof " 1970" - 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mcopyin.c:914:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  914 |       memcpy (tbuf + 11, tbuf + 19, sizeof " 1970" - 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mcopyin.c:943:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  943 |   if (num_patterns < 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  944 |     num_patterns = 0;[0m
      | [0;1;32m                     
[0m[1mcopyin.c:950:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  950 |   if (pattern_fp == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  951 |     open_fatal (pattern_file_name);[0m
      | [0;1;32m                                   
[0m[1mcopyin.c:954:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  954 |       if (new_num_patterns == max_new_patterns)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  955 |         new_save_patterns = x2nrealloc (new_save_patterns,[0m
  956 |                                         &max_new_patterns,[0m
  957 |                                         sizeof (new_save_patterns[0]));[0m
      | [0;1;32m                                                                       
[0m[1mcopyin.c:964:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |   if (ferror (pattern_fp) || fclose (pattern_fp) == EOF)[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  965 |     close_error (pattern_file_name);[0m
      | [0;1;32m                                    
[0m[1mcopyin.c:967:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  967 |   for (i = 0; i < num_patterns; ++i)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  968 |     new_save_patterns[i] = save_patterns[i];[0m
      | [0;1;32m                                            
[0m[1mcopyin.c:986:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  986 |       if (buf == end)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  987 |         return 0;[0m
      | [0;1;32m                 
[0m[1mcopyin.c:990:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  990 |   if (buf == end || *buf == 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  991 |     return 0;[0m
      | [0;1;32m             
[0m[1mcopyin.c:1010:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1010 |       if (++buf == end || *buf == 0)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1011 |         break;[0m
      | [0;1;32m              
[0m[1mcopyin.c:1015:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1015 |   if (overflow)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1016 |     error (0, 0, _("Archive value %.*s is out of range"),[0m
 1017 |            (int) digs, where);[0m
      | [0;1;32m                              
[0m[1mcopyin.c:1054:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1054 |           if (peeked_bytes < 6)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1055 |             error (PAXEXIT_FAILURE, 0, _("premature end of archive"));[0m
      | [0;1;32m                                                                      
[0m[1mcopyin.c:1057:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1057 |           if (!strncmp (tmpbuf.s, "070701", 6))[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m 1058 |             archive_format = arf_newascii;[0m
 1059 |           else if (!strncmp (tmpbuf.s, "070707", 6))[0m
      | [0;32m          } 
[0m[1mcopyin.c:1059:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1059 |           else if (!strncmp (tmpbuf.s, "070707", 6))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1060 |             archive_format = arf_oldascii;[0m
 1061 |           else if (!strncmp (tmpbuf.s, "070702", 6))[0m
      | [0;32m          } 
[0m[1mcopyin.c:1067:59: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1067 |                    || tmpbuf.us == swab_short ((unsigned short) 070707))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m 1068 |             archive_format = arf_binary;[0m
 1069 |           else if (peeked_bytes >= 512[0m
      | [0;32m          } 
[0m[1mcopyin.c:1072:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1072 |               if (check_tar == 2)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1073 |                 archive_format = arf_ustar;[0m
 1074 |               else[0m
      | [0;32m              } 
[0m[1mcopyin.c:1074:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1074 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1075 |                 archive_format = arf_tar;[0m
      | [0;1;32m                                         
[0m[1mcopyin.c:1087:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1087 |       if (append_flag)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1088 |         last_header_start = input_bytes - io_block_size +[0m
 1089 |           (in_buff - input_buffer);[0m
      | [0;1;32m                                   
[0m[1mcopyin.c:1090:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1090 |       if (bytes_skipped > 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1091 |         warn_junk_bytes (bytes_skipped);[0m
      | [0;1;32m                                        
[0m[1mcopyin.c:1102:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1102 |       if (append_flag)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1103 |         last_header_start = input_bytes - io_block_size[0m
 1104 |           + (in_buff - input_buffer) - 6;[0m
      | [0;1;32m                                         
[0m[1mcopyin.c:1108:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1108 |           if (bytes_skipped > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1109 |             warn_junk_bytes (bytes_skipped);[0m
      | [0;1;32m                                            
[0m[1mcopyin.c:1117:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1117 |           if (bytes_skipped > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1118 |             warn_junk_bytes (bytes_skipped);[0m
      | [0;1;32m                                            
[0m[1mcopyin.c:1126:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1126 |           if (bytes_skipped > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1127 |             warn_junk_bytes (bytes_skipped);[0m
      | [0;1;32m                                            
[0m[1mcopyin.c:1137:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1137 |           if (bytes_skipped > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1138 |             warn_junk_bytes (bytes_skipped);[0m
      | [0;1;32m                                            
[0m[1mcopyin.c:1144:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1144 |       memmove (magic.str, magic.str + 1, sizeof (magic.str) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcopyin.c:1144:7: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1144 |       memmove (magic.str, magic.str + 1, sizeof (magic.str) - 1);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcopyin.c:1223:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1223 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mcopyin.c:1225:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1225 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mcopyin.c:1308:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1308 |   if (file_hdr->c_namesize % 2)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1309 |     tape_toss_input (in_des, 1L);[0m
      | [0;1;32m                                 
[0m[1mcopyin.c:1335:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1335 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mcopyin.c:1337:2: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1337 |         break;[0m
      | [0;1;32m        ^    
[0m      | [0;32m        {    ;} 
[0m[1mcopyin.c:1408:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1408 |   if (table_flag && verbose_flag)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1409 |     current_time = current_timespec ();[0m
      | [0;1;32m                                       
[0m[1mcopyin.c:1420:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1420 |       if (fstat (in_file_des, &file_stat))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1421 |         error (PAXEXIT_FAILURE, errno, _("standard input is closed"));[0m
      | [0;1;32m                                                                      
[0m[1mcopyin.c:1462:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1462 |       if (file_hdr.c_namesize == 0)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1463 |         skip_file = true;[0m
 1464 |       else[0m
      | [0;32m      } 
[0m[1mcopyin.c:1467:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1467 |           if (strcmp (CPIO_TRAILER_NAME, file_hdr.c_name) == 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1468 |             break;[0m
      | [0;1;32m                  
[0m[1mcopyin.c:1474:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1474 |           if (num_patterns <= 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1475 |             skip_file = false;[0m
 1476 |           else[0m
      | [0;32m          } 
[0m[1mcopyin.c:1482:61: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1482 |                   if (fnmatch (save_patterns[i], file_hdr.c_name, 0) == 0)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m 1483 |                     skip_file = !copy_matching_files;[0m
      | [0;1;32m                                                     
[0m[1mcopyin.c:1543:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1543 |                 fprintf (stderr, "%s\n", file_hdr.c_name);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcopyin.c:1543:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1543 |                 fprintf (stderr, "%s\n", file_hdr.c_name);[0m
      | [0;1;32m                ^~~~~~~
[0m[1mcopyin.c:1567:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1567 |           if (verbose_flag)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1568 |             fprintf (stderr, "%s\n", file_hdr.c_name);[0m
      | [0;1;32m                                                      
[0m[1mcopyin.c:1568:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1568 |             fprintf (stderr, "%s\n", file_hdr.c_name);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mcopyin.c:1568:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1568 |             fprintf (stderr, "%s\n", file_hdr.c_name);[0m
      | [0;1;32m            ^~~~~~~
[0m[1mcopyin.c:1569:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1569 |           if (dot_flag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1570 |             fputc ('.', stderr);[0m
      | [0;1;32m                                
[0m[1mcopyin.c:1574:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1574 |   if (dot_flag)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1575 |     fputc ('\n', stderr);[0m
      | [0;1;32m                         
[0m[1mcopyin.c:1582:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1582 |   if (append_flag)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1583 |     return;[0m
      | [0;1;32m           
[0m[1mcopyin.c:1593:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1593 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcopyin.c:1593:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
 1593 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m105 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[104/111][111.4s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp9oj2vqwz.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/copypass.c
[1mcopypass.c:70:3: [0m[0;1;35mwarning: [0m[1mValue stored to 'dirname_len' is never read [clang-analyzer-deadcode.DeadStores][0m
   70 |   dirname_len = strlen (directory_name);[0m
      | [0;1;32m  ^             ~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:70:3: [0m[0;1;36mnote: [0mValue stored to 'dirname_len' is never read[0m
   70 |   dirname_len = strlen (directory_name);[0m
      | [0;1;32m  ^             ~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:101:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  101 |                   && input_name.ds_string[2] == '\0')))[0m
      | [0;1;32m                                                       ^
[0m      | [0;32m                                                        {
[0m  102 |         continue;[0m
      | [0;1;32m                 
[0m[1mcopypass.c:104:20: [0m[0;1;35mwarning: [0m[1mpassing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  104 |       if ((*xstat) (input_name.ds_string, &in_file_stat) < 0)[0m
      | [0;1;32m                   ^
[0m[1mcopypass.c:111:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  111 |       for (slash = input_name.ds_string; *slash == '/'; ++slash)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m  112 |         ;[0m
      | [0;1;32m         
[0m[1mcopypass.c:148:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  148 |           if (link_flag)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  149 |             /* User said to link it if possible.  Try and link to[0m
  150 |                the original copy.  If that fails we'll still try[0m
  151 |                and link to a copy we've already made.  */[0m
  152 |             link_res = link_to_name (output_name.ds_string,[0m
  153 |                                      input_name.ds_string);[0m
      | [0;1;32m                                                           
[0m[1mcopypass.c:154:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  154 |           if ( (link_res < 0) && (in_file_stat.st_nlink > 1) )[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  155 |             link_res = link_to_maj_min_ino (output_name.ds_string,[0m
  156 |                                 major (in_file_stat.st_dev),[0m
  157 |                                 minor (in_file_stat.st_dev),[0m
  158 |                                 in_file_stat.st_ino);[0m
      | [0;1;32m                                                     
[0m[1mcopypass.c:203:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  203 |               if (close (in_file_des) < 0)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  204 |                 close_error (input_name.ds_string);[0m
      | [0;1;32m                                                   
[0m[1mcopypass.c:206:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |               if (close (out_file_des) < 0)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  207 |                 close_error (output_name.ds_string);[0m
      | [0;1;32m                                                    
[0m[1mcopypass.c:233:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  233 |           if (link_flag)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  234 |             /* User said to link it if possible.  */[0m
  235 |             link_res = link_to_name (output_name.ds_string,[0m
  236 |                                      input_name.ds_string);[0m
      | [0;1;32m                                                           
[0m[1mcopypass.c:237:56: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |           if ( (link_res < 0) && (in_file_stat.st_nlink > 1) )[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  238 |             link_res = link_to_maj_min_ino (output_name.ds_string,[0m
  239 |                         major (in_file_stat.st_dev),[0m
  240 |                         minor (in_file_stat.st_dev),[0m
  241 |                         in_file_stat.st_ino);[0m
      | [0;1;32m                                             
[0m[1mcopypass.c:277:4: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  277 |           link_name[link_size] = '\0';[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:71:7: [0m[0;1;36mnote: [0mAssuming 'change_directory_option' is null[0m
   71 |   if (change_directory_option && !ISSLASH (directory_name[0]))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:71:31: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   71 |   if (change_directory_option && !ISSLASH (directory_name[0]))[0m
      | [0;1;32m                              ^
[0m[1mcopypass.c:86:10: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
   86 |   while (ds_fgetstr (stdin, &input_name, name_end) != NULL)[0m
      | [0;1;32m         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:86:3: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
   86 |   while (ds_fgetstr (stdin, &input_name, name_end) != NULL)[0m
      | [0;1;32m  ^
[0m[1mcopypass.c:91:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   91 |       if (input_name.ds_string[0] == '\0')[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:91:7: [0m[0;1;36mnote: [0mTaking false branch[0m
   91 |       if (input_name.ds_string[0] == '\0')[0m
      | [0;1;32m      ^
[0m[1mcopypass.c:98:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
   98 |       if (input_name.ds_string[0] == '.'[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:99:4: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
   99 |           && (input_name.ds_string[1] == '\0'[0m
      | [0;1;32m          ^
[0m[1mcopypass.c:104:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  104 |       if ((*xstat) (input_name.ds_string, &in_file_stat) < 0)[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:104:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  104 |       if ((*xstat) (input_name.ds_string, &in_file_stat) < 0)[0m
      | [0;1;32m      ^
[0m[1mcopypass.c:111:42: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  111 |       for (slash = input_name.ds_string; *slash == '/'; ++slash)[0m
      | [0;1;32m                                         ^~~~~~~~~~~~~
[0m[1mcopypass.c:111:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 113[0m
  111 |       for (slash = input_name.ds_string; *slash == '/'; ++slash)[0m
      | [0;1;32m      ^
[0m[1mcopypass.c:117:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  117 |       if (lstat (output_name.ds_string, &out_file_stat) == 0)[0m
      | [0;1;32m      ^
[0m[1mcopypass.c:144:11: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  144 |       if (S_ISREG (in_file_stat.st_mode))[0m
      | [0;1;32m          ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:128:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISREG'[0m
  128 | #define S_ISREG(mode)    __S_ISTYPE((mode), __S_IFREG)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:144:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  144 |       if (S_ISREG (in_file_stat.st_mode))[0m
      | [0;1;32m      ^
[0m[1mcopypass.c:213:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  213 |       else if (S_ISDIR (in_file_stat.st_mode))[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:125:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISDIR'[0m
  125 | #define S_ISDIR(mode)    __S_ISTYPE((mode), __S_IFDIR)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:213:12: [0m[0;1;36mnote: [0mTaking false branch[0m
  213 |       else if (S_ISDIR (in_file_stat.st_mode))[0m
      | [0;1;32m           ^
[0m[1mcopypass.c:221:16: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  221 |       else if (S_ISCHR (in_file_stat.st_mode) ||[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:126:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISCHR'[0m
  126 | #define S_ISCHR(mode)    __S_ISTYPE((mode), __S_IFCHR)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:221:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  221 |       else if (S_ISCHR (in_file_stat.st_mode) ||[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:126:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISCHR'[0m
  126 | #define S_ISCHR(mode)    __S_ISTYPE((mode), __S_IFCHR)[0m
      | [0;1;32m                         ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:32: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                ^
[0m[1mcopypass.c:222:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  222 |                S_ISBLK (in_file_stat.st_mode) ||[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:127:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISBLK'[0m
  127 | #define S_ISBLK(mode)    __S_ISTYPE((mode), __S_IFBLK)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:221:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  221 |       else if (S_ISCHR (in_file_stat.st_mode) ||[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:126:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISCHR'[0m
  126 | #define S_ISCHR(mode)    __S_ISTYPE((mode), __S_IFCHR)[0m
      | [0;1;32m                         ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:32: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                ^
[0m[1mcopypass.c:224:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  224 |                S_ISFIFO (in_file_stat.st_mode) ||[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:130:26: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISFIFO'[0m
  130 | # define S_ISFIFO(mode)  __S_ISTYPE((mode), __S_IFIFO)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:221:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  221 |       else if (S_ISCHR (in_file_stat.st_mode) ||[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:126:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISCHR'[0m
  126 | #define S_ISCHR(mode)    __S_ISTYPE((mode), __S_IFCHR)[0m
      | [0;1;32m                         ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:32: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                ^
[0m[1mcopypass.c:227:9: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  227 |                S_ISSOCK (in_file_stat.st_mode) ||[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:142:25: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISSOCK'[0m
  142 | # define S_ISSOCK(mode) __S_ISTYPE((mode), __S_IFSOCK)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:221:16: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
  221 |       else if (S_ISCHR (in_file_stat.st_mode) ||[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:126:24: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISCHR'[0m
  126 | #define S_ISCHR(mode)    __S_ISTYPE((mode), __S_IFCHR)[0m
      | [0;1;32m                         ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:32: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                ^
[0m[1mcopypass.c:221:12: [0m[0;1;36mnote: [0mTaking false branch[0m
  221 |       else if (S_ISCHR (in_file_stat.st_mode) ||[0m
      | [0;1;32m           ^
[0m[1mcopypass.c:263:16: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  263 |       else if (S_ISLNK (in_file_stat.st_mode))[0m
      | [0;1;32m               ^
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:133:25: [0m[0;1;36mnote: [0mexpanded from macro 'S_ISLNK'[0m
  133 | # define S_ISLNK(mode)   __S_ISTYPE((mode), __S_IFLNK)[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/x86_64-linux-gnu/sys/stat.h:123:33: [0m[0;1;36mnote: [0mexpanded from macro '__S_ISTYPE'[0m
  123 | #define __S_ISTYPE(mode, mask)  (((mode) & __S_IFMT) == (mask))[0m
      | [0;1;32m                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:263:12: [0m[0;1;36mnote: [0mTaking true branch[0m
  263 |       else if (S_ISLNK (in_file_stat.st_mode))[0m
      | [0;1;32m           ^
[0m[1mcopypass.c:269:16: [0m[0;1;36mnote: [0mTaint originated here[0m
  269 |           link_size = readlink (input_name.ds_string, link_name,[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  270 |                                 in_file_stat.st_size);[0m
      | [0;1;32m                                ~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:269:16: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  269 |           link_size = readlink (input_name.ds_string, link_name,[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  270 |                                 in_file_stat.st_size);[0m
      | [0;1;32m                                ~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:269:16: [0m[0;1;36mnote: [0mAssuming that 'readlink' is successful[0m
  269 |           link_size = readlink (input_name.ds_string, link_name,[0m
      | [0;1;32m                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m  270 |                                 in_file_stat.st_size);[0m
      | [0;1;32m                                ~~~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:271:8: [0m[0;1;36mnote: [0m'link_size' is >= 0[0m
  271 |           if (link_size < 0)[0m
      | [0;1;32m              ^~~~~~~~~
[0m[1mcopypass.c:271:4: [0m[0;1;36mnote: [0mTaking false branch[0m
  271 |           if (link_size < 0)[0m
      | [0;1;32m          ^
[0m[1mcopypass.c:277:4: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  277 |           link_name[link_size] = '\0';[0m
      | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~
[0m[1mcopypass.c:300:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |                   && errno != EPERM)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  301 |                 chown_error_details (output_name.ds_string, uid, gid);[0m
      | [0;1;32m                                                                      
[0m[1mcopypass.c:311:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |       if (verbose_flag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  312 |         fprintf (stderr, "%s\n", output_name.ds_string);[0m
      | [0;1;32m                                                        
[0m[1mcopypass.c:312:2: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  312 |         fprintf (stderr, "%s\n", output_name.ds_string);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mcopypass.c:312:2: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  312 |         fprintf (stderr, "%s\n", output_name.ds_string);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mcopypass.c:313:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |       if (dot_flag)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  314 |         fputc ('.', stderr);[0m
      | [0;1;32m                            
[0m[1mcopypass.c:317:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  317 |   if (dot_flag)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  318 |     fputc ('\n', stderr);[0m
      | [0;1;32m                         
[0m[1mcopypass.c:325:7: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  325 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcopypass.c:325:7: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  325 |       fprintf (stderr,[0m
      | [0;1;32m      ^~~~~~~
[0m[1mcopypass.c:354:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |   if (link_name == NULL)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  355 |     add_inode (st_ino, file_name,[0m
  356 |                st_dev_maj,[0m
  357 |                st_dev_min);[0m
  358 |   else[0m
      | [0;32m  } 
[0m[1mcopypass.c:358:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  359 |     link_res = link_to_name (file_name, link_name);[0m
      | [0;1;32m                                                   
[0m[1mcopypass.c:382:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  382 |       if (verbose_flag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  383 |         error (0, 0, _("%s linked to %s"),[0m
  384 |                link_target, link_name);[0m
      | [0;1;32m                                       
[0m32 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[105/111][111.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpn0f06b_2.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/lib/rtapelib.c
[1mrtapelib.c:124:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  124 |   if (written == length)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  125 |     return 0;[0m
      | [0;1;32m             
[0m[1mrtapelib.c:165:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |   for (cursor = command_buffer; *cursor; cursor++)[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m  166 |     if (*cursor != ' ')[0m
  167 |       break;[0m
      | [0;1;32m            
[0m[1mrtapelib.c:166:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  166 |     if (*cursor != ' ')[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  167 |       break;[0m
      | [0;1;32m            
[0m[1mrtapelib.c:179:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  179 |         while (safe_read (READ_SIDE (handle), &character, 1) == 1)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  180 |           if (character == '\n')[0m
  181 |             break;[0m
      | [0;1;32m                  
[0m[1mrtapelib.c:180:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |           if (character == '\n')[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  181 |             break;[0m
      | [0;1;32m                  
[0m[1mrtapelib.c:186:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  186 |       if (*cursor == 'F')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  187 |         _rmt_shutdown (handle, errno);[0m
      | [0;1;32m                                      
[0m[1mrtapelib.c:215:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  215 |       if (0 <= result)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  216 |         return result;[0m
      | [0;1;32m                      
[0m[1mrtapelib.c:228:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  228 |   if (! status)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  229 |     return -1;[0m
  230 |   else[0m
      | [0;32m  } 
[0m[1mrtapelib.c:239:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  239 |       for (;  *status == ' ' || *status == '\t';  status++)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  240 |         continue;[0m
      | [0;1;32m                 
[0m[1mrtapelib.c:248:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |           if (9 < (unsigned) digit)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  249 |             break;[0m
  250 |           else[0m
      | [0;32m          } 
[0m[1mrtapelib.c:254:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  254 |               if (c10 / 10 != count || (negative ? c10 < nc : nc < c10))[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m  255 |                 return -1;[0m
      | [0;1;32m                          
[0m[1mrtapelib.c:317:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  317 |   sprintf (buf, "%d ", oflag);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrtapelib.c:317:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  317 |   sprintf (buf, "%d ", oflag);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrtapelib.c:321:20: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  321 |     case O_RDONLY: strcat (buf, "O_RDONLY"); break;[0m
      | [0;1;32m                   ^~~~~~
[0m[1mrtapelib.c:321:20: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  321 |     case O_RDONLY: strcat (buf, "O_RDONLY"); break;[0m
      | [0;1;32m                   ^~~~~~
[0m[1mrtapelib.c:321:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  321 |     case O_RDONLY: strcat (buf, "O_RDONLY"); break;[0m
      | [0;1;32m                   ^                              
[0m      | [0;32m                   {                              ;} 
[0m[1mrtapelib.c:322:18: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  322 |     case O_RDWR: strcat (buf, "O_RDWR"); break;[0m
      | [0;1;32m                 ^~~~~~
[0m[1mrtapelib.c:322:18: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  322 |     case O_RDWR: strcat (buf, "O_RDWR"); break;[0m
      | [0;1;32m                 ^~~~~~
[0m[1mrtapelib.c:322:18: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  322 |     case O_RDWR: strcat (buf, "O_RDWR"); break;[0m
      | [0;1;32m                 ^                            
[0m      | [0;32m                 {                            ;} 
[0m[1mrtapelib.c:323:20: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  323 |     case O_WRONLY: strcat (buf, "O_WRONLY"); break;[0m
      | [0;1;32m                   ^~~~~~
[0m[1mrtapelib.c:323:20: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  323 |     case O_WRONLY: strcat (buf, "O_WRONLY"); break;[0m
      | [0;1;32m                   ^~~~~~
[0m[1mrtapelib.c:323:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  323 |     case O_WRONLY: strcat (buf, "O_WRONLY"); break;[0m
      | [0;1;32m                   ^                              
[0m      | [0;32m                   {                              ;} 
[0m[1mrtapelib.c:324:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  324 |     default: abort ();[0m
      | [0;1;32m             ^       
[0m      | [0;32m             {       ;} 
[0m[1mrtapelib.c:328:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  328 |   if (oflag & O_APPEND) strcat (buf, "|O_APPEND");[0m
      | [0;1;32m                       ^                          
[0m      | [0;32m                        {
[0m[1mrtapelib.c:328:25: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  328 |   if (oflag & O_APPEND) strcat (buf, "|O_APPEND");[0m
      | [0;1;32m                        ^~~~~~
[0m[1mrtapelib.c:328:25: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  328 |   if (oflag & O_APPEND) strcat (buf, "|O_APPEND");[0m
      | [0;1;32m                        ^~~~~~
[0m[1mrtapelib.c:330:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  330 |   if (oflag & O_CREAT) strcat (buf, "|O_CREAT");[0m
      | [0;1;32m                      ^                         
[0m      | [0;32m                       {
[0m[1mrtapelib.c:330:24: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  330 |   if (oflag & O_CREAT) strcat (buf, "|O_CREAT");[0m
      | [0;1;32m                       ^~~~~~
[0m[1mrtapelib.c:330:24: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  330 |   if (oflag & O_CREAT) strcat (buf, "|O_CREAT");[0m
      | [0;1;32m                       ^~~~~~
[0m[1mrtapelib.c:332:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  332 |   if (oflag & O_DSYNC) strcat (buf, "|O_DSYNC");[0m
      | [0;1;32m                      ^                         
[0m      | [0;32m                       {
[0m[1mrtapelib.c:332:24: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  332 |   if (oflag & O_DSYNC) strcat (buf, "|O_DSYNC");[0m
      | [0;1;32m                       ^~~~~~
[0m[1mrtapelib.c:332:24: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  332 |   if (oflag & O_DSYNC) strcat (buf, "|O_DSYNC");[0m
      | [0;1;32m                       ^~~~~~
[0m[1mrtapelib.c:334:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  334 |   if (oflag & O_EXCL) strcat (buf, "|O_EXCL");[0m
      | [0;1;32m                     ^                        
[0m      | [0;32m                      {
[0m[1mrtapelib.c:334:23: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  334 |   if (oflag & O_EXCL) strcat (buf, "|O_EXCL");[0m
      | [0;1;32m                      ^~~~~~
[0m[1mrtapelib.c:334:23: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  334 |   if (oflag & O_EXCL) strcat (buf, "|O_EXCL");[0m
      | [0;1;32m                      ^~~~~~
[0m[1mrtapelib.c:336:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |   if (oflag & O_LARGEFILE) strcat (buf, "|O_LARGEFILE");[0m
      | [0;1;32m                          ^                             
[0m      | [0;32m                           {
[0m[1mrtapelib.c:336:28: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  336 |   if (oflag & O_LARGEFILE) strcat (buf, "|O_LARGEFILE");[0m
      | [0;1;32m                           ^~~~~~
[0m[1mrtapelib.c:336:28: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  336 |   if (oflag & O_LARGEFILE) strcat (buf, "|O_LARGEFILE");[0m
      | [0;1;32m                           ^~~~~~
[0m[1mrtapelib.c:339:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |   if (oflag & O_NOCTTY) strcat (buf, "|O_NOCTTY");[0m
      | [0;1;32m                       ^                          
[0m      | [0;32m                        {
[0m[1mrtapelib.c:339:25: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  339 |   if (oflag & O_NOCTTY) strcat (buf, "|O_NOCTTY");[0m
      | [0;1;32m                        ^~~~~~
[0m[1mrtapelib.c:339:25: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  339 |   if (oflag & O_NOCTTY) strcat (buf, "|O_NOCTTY");[0m
      | [0;1;32m                        ^~~~~~
[0m[1mrtapelib.c:341:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  341 |   if (oflag & O_NONBLOCK) strcat (buf, "|O_NONBLOCK");[0m
      | [0;1;32m                         ^                            
[0m      | [0;32m                          {
[0m[1mrtapelib.c:341:27: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  341 |   if (oflag & O_NONBLOCK) strcat (buf, "|O_NONBLOCK");[0m
      | [0;1;32m                          ^~~~~~
[0m[1mrtapelib.c:341:27: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  341 |   if (oflag & O_NONBLOCK) strcat (buf, "|O_NONBLOCK");[0m
      | [0;1;32m                          ^~~~~~
[0m[1mrtapelib.c:343:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |   if (oflag & O_RSYNC) strcat (buf, "|O_RSYNC");[0m
      | [0;1;32m                      ^                         
[0m      | [0;32m                       {
[0m[1mrtapelib.c:343:24: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  343 |   if (oflag & O_RSYNC) strcat (buf, "|O_RSYNC");[0m
      | [0;1;32m                       ^~~~~~
[0m[1mrtapelib.c:343:24: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  343 |   if (oflag & O_RSYNC) strcat (buf, "|O_RSYNC");[0m
      | [0;1;32m                       ^~~~~~
[0m[1mrtapelib.c:346:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  346 |   if (oflag & O_SYNC) strcat (buf, "|O_SYNC");[0m
      | [0;1;32m                     ^                        
[0m      | [0;32m                      {
[0m[1mrtapelib.c:346:23: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  346 |   if (oflag & O_SYNC) strcat (buf, "|O_SYNC");[0m
      | [0;1;32m                      ^~~~~~
[0m[1mrtapelib.c:346:23: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  346 |   if (oflag & O_SYNC) strcat (buf, "|O_SYNC");[0m
      | [0;1;32m                      ^~~~~~
[0m[1mrtapelib.c:348:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  348 |   if (oflag & O_TRUNC) strcat (buf, "|O_TRUNC");[0m
      | [0;1;32m                      ^                         
[0m      | [0;32m                       {
[0m[1mrtapelib.c:348:24: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  348 |   if (oflag & O_TRUNC) strcat (buf, "|O_TRUNC");[0m
      | [0;1;32m                       ^~~~~~
[0m[1mrtapelib.c:348:24: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  348 |   if (oflag & O_TRUNC) strcat (buf, "|O_TRUNC");[0m
      | [0;1;32m                       ^~~~~~
[0m[1mrtapelib.c:361:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  361 |   if (!pw)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  362 |     return "getpwuid";[0m
      | [0;1;32m                      
[0m[1mrtapelib.c:363:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  363 |   if (initgroups (pw->pw_name, gid) != 0)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  364 |     return "initgroups";[0m
      | [0;1;32m                        
[0m[1mrtapelib.c:365:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  365 |   if (gid != getegid () && setgid (gid) != 0 && errno != EPERM)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  366 |     return "setgid";[0m
      | [0;1;32m                    
[0m[1mrtapelib.c:367:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  367 |   if (uid != geteuid () && setuid (uid) != 0 && errno != EPERM)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m  368 |     return "setuid";[0m
      | [0;1;32m                    
[0m[1mrtapelib.c:393:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  393 |        remote_pipe_number++)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  394 |     if (READ_SIDE (remote_pipe_number) == -1[0m
  395 |         && WRITE_SIDE (remote_pipe_number) == -1)[0m
  396 |       break;[0m
      | [0;1;32m            
[0m[1mrtapelib.c:395:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |         && WRITE_SIDE (remote_pipe_number) == -1)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  396 |       break;[0m
      | [0;1;32m            
[0m[1mrtapelib.c:414:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  414 |     for (cursor = file_name_copy; *cursor; cursor++)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m[1mrtapelib.c:418:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  418 |           break;[0m
      | [0;1;32m          ^    
[0m      | [0;32m          {    ;} 
[0m[1mrtapelib.c:428:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  428 |           if (!remote_user)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  429 |             {[0m
  430 |               remote_user = remote_host;[0m
  431 |               *cursor = '\0';[0m
  432 |               remote_host = cursor + 1;[0m
  433 |             }[0m
  434 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrtapelib.c:437:4: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  437 |           if (!remote_file)[0m
      | [0;1;32m          ^
[0m      | [0;32m          {
[0m  438 |             {[0m
  439 |               *cursor = '\0';[0m
  440 |               remote_file = cursor + 1;[0m
  441 |             }[0m
  442 |           break;[0m
      | [0;1;32m               
[0m      | [0;32m               ;} 
[0m[1mrtapelib.c:449:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |   if (gethostbyname (remote_host) == NULL)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  450 |     error (EXIT_ON_EXEC_ERROR, 0, _("Cannot connect to %s: resolve failed"),[0m
  451 |            remote_host);[0m
      | [0;1;32m                        
[0m[1mrtapelib.c:453:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  453 |   if (remote_user && *remote_user == '\0')[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  454 |     remote_user = 0;[0m
      | [0;1;32m                    
[0m[1mrtapelib.c:521:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  521 |             || close (from_remote[remote_pipe_number][PWRITE]) != 0)[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  522 |           error (EXIT_ON_EXEC_ERROR, errno,[0m
  523 |                  _("Cannot redirect files for remote shell"));[0m
      | [0;1;32m                                                              
[0m[1mrtapelib.c:526:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  526 |         if (reseterr)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  527 |           error (EXIT_ON_EXEC_ERROR, errno,[0m
  528 |                  _("Cannot reset uid and gid: %s"), reseterr);[0m
      | [0;1;32m                                                              
[0m[1mrtapelib.c:530:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  530 |         if (remote_user)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  531 |           execl (remote_shell, remote_shell_basename, remote_host,[0m
  532 |                  "-l", remote_user, rmt_command, (char *) 0);[0m
  533 |         else[0m
      | [0;32m        } 
[0m[1mrtapelib.c:533:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  534 |           execl (remote_shell, remote_shell_basename, remote_host,[0m
  535 |                  rmt_command, (char *) 0);[0m
      | [0;1;32m                                          
[0m[1mrtapelib.c:555:5: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  555 |     sprintf (command_buffer, "O%s\n", remote_file);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mrtapelib.c:555:5: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  555 |     sprintf (command_buffer, "O%s\n", remote_file);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mrtapelib.c:557:5: [0m[0;1;35mwarning: [0m[1mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  557 |     strcat (command_buffer, "\n");[0m
      | [0;1;32m    ^~~~~~
[0m[1mrtapelib.c:557:5: [0m[0;1;36mnote: [0mCall to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119[0m
  557 |     strcat (command_buffer, "\n");[0m
      | [0;1;32m    ^~~~~~
[0m[1mrtapelib.c:581:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |   if (do_command (handle, "C\n") == -1)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  582 |     return -1;[0m
      | [0;1;32m              
[0m[1mrtapelib.c:599:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  599 |   sprintf (command_buffer, "R%zu\n", length);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrtapelib.c:599:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  599 |   sprintf (command_buffer, "R%zu\n", length);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrtapelib.c:602:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  602 |       || status > length)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  603 |     return SAFE_READ_ERROR;[0m
      | [0;1;32m                           
[0m[1mrtapelib.c:627:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  627 |   sprintf (command_buffer, "W%zu\n", length);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrtapelib.c:627:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  627 |   sprintf (command_buffer, "W%zu\n", length);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrtapelib.c:628:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  628 |   if (do_command (handle, command_buffer) == -1)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  629 |     return 0;[0m
      | [0;1;32m             
[0m[1mrtapelib.c:637:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  637 |       if (r < 0)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  638 |         return 0;[0m
      | [0;1;32m                 
[0m[1mrtapelib.c:639:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  639 |       if (r == length)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  640 |         return length;[0m
      | [0;1;32m                      
[0m[1mrtapelib.c:659:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  659 |     case SEEK_SET: whence = 0; break;[0m
      | [0;1;32m                   ^                
[0m      | [0;32m                   {                ;} 
[0m[1mrtapelib.c:660:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  660 |     case SEEK_CUR: whence = 1; break;[0m
      | [0;1;32m                   ^                
[0m      | [0;32m                   {                ;} 
[0m[1mrtapelib.c:661:20: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  661 |     case SEEK_END: whence = 2; break;[0m
      | [0;1;32m                   ^                
[0m      | [0;32m                   {                ;} 
[0m[1mrtapelib.c:662:14: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
  662 |     default: abort ();[0m
      | [0;1;32m             ^       
[0m      | [0;32m             {       ;} 
[0m[1mrtapelib.c:666:3: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  666 |   sprintf (command_buffer, "L%jd\n%d\n", off, whence);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrtapelib.c:666:3: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  666 |   sprintf (command_buffer, "L%jd\n%d\n", off, whence);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mrtapelib.c:668:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  668 |   if (do_command (handle, command_buffer) == -1)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  669 |     return -1;[0m
      | [0;1;32m              
[0m[1mrtapelib.c:696:2: [0m[0;1;35mwarning: [0m[1mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  696 |         sprintf (command_buffer, "I%d\n%jd\n", mtop->mt_op, count);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrtapelib.c:696:2: [0m[0;1;36mnote: [0mCall to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11[0m
  696 |         sprintf (command_buffer, "I%d\n%jd\n", mtop->mt_op, count);[0m
      | [0;1;32m        ^~~~~~~
[0m[1mrtapelib.c:697:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  697 |         if (do_command (handle, command_buffer) == -1)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  698 |           return -1;[0m
      | [0;1;32m                    
[0m[1mrtapelib.c:717:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |             || (status = get_status (handle), status == -1))[0m
      | [0;1;32m                                                            ^
[0m      | [0;32m                                                             {
[0m  718 |           return -1;[0m
      | [0;1;32m                    
[0m[1mrtapelib.c:742:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  742 |         if (mtget->MTIO_CHECK_FIELD < 256)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  743 |           return 0;[0m
      | [0;1;32m                   
[0m90 warnings generated.
Suppressed 16 warnings (16 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[106/111][128.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp68m5jlcw.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/mktime.c
[1mmktime.c:281:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  281 |   if (errno != EOVERFLOW)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  282 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmktime.c:294:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  294 |       if (mid == ok || mid == bad)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  295 |         break;[0m
      | [0;1;32m              
[0m[1mmktime.c:296:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |       if (convert_time (convert, mid, tp))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  297 |         ok = mid, oktm = *tp;[0m
  298 |       else if (errno != EOVERFLOW)[0m
      | [0;32m      } 
[0m[1mmktime.c:298:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  298 |       else if (errno != EOVERFLOW)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  299 |         return NULL;[0m
  300 |       else[0m
      | [0;32m      } 
[0m[1mmktime.c:300:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  300 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  301 |         bad = mid;[0m
      | [0;1;32m                  
[0m[1mmktime.c:304:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |   if (oktm.tm_sec < 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  305 |     return NULL;[0m
      | [0;1;32m                
[0m[1mmktime.c:373:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |       if (sec < 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  374 |         sec = 0;[0m
      | [0;1;32m                
[0m[1mmktime.c:375:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  375 |       if (59 < sec)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  376 |         sec = 59;[0m
      | [0;1;32m                 
[0m[1mmktime.c:392:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  392 |       if (! ranged_convert (convert, &t, &tm))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  393 |         return -1;[0m
      | [0;1;32m                  
[0m[1mmktime.c:395:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  395 |       if (dt == 0)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  396 |         break;[0m
      | [0;1;32m              
[0m[1mmktime.c:402:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  402 |                   : (isdst != 0) != (tm.tm_isdst != 0))))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  403 |         /* We can't possibly find a match, as we are oscillating[0m
  404 |            between two values.  The requested time probably falls[0m
  405 |            within a spring-forward gap of size DT.  Follow the common[0m
  406 |            practice in this case, which is to return a time that is DT[0m
  407 |            away from the requested time, preferring a time whose[0m
  408 |            tm_isdst differs from the requested value.  (If no tm_isdst[0m
  409 |            was requested and only one of the two values has a nonzero[0m
  410 |            tm_isdst, prefer that value.)  In practice, this is more[0m
  411 |            useful than returning -1.  */[0m
  412 |         goto offset_found;[0m
      | [0;1;32m                          
[0m[1mmktime.c:464:65: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |       for (delta = stride; delta < delta_bound; delta += stride)[0m
      | [0;1;32m                                                                ^
[0m      | [0;32m                                                                 {
[0m[1mmktime.c:471:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  471 |                 if (! ranged_convert (convert, &ot, &otm))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  472 |                   return -1;[0m
      | [0;1;32m                            
[0m[1mmktime.c:486:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  486 |                         if (errno != EOVERFLOW)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  487 |                           return -1;[0m
      | [0;1;32m                                    
[0m[1mmktime.c:495:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  495 |       if (mktime_min <= t && t <= mktime_max && convert_time (convert, t, &tm))[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  496 |         goto offset_found;[0m
      | [0;1;32m                          
[0m[1mmktime.c:522:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  522 |       if (! convert_time (convert, t, &tm))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  523 |         return -1;[0m
      | [0;1;32m                  
[0m18 warnings generated.
Suppressed 2 warnings (2 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[107/111][130.3s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp5s2ejlnl.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/hash.c
[1mhash.c:172:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  172 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  173 |             bucket_length++;[0m
      | [0;1;32m                            
[0m[1mhash.c:175:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  175 |           if (bucket_length > max_bucket_length)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  176 |             max_bucket_length = bucket_length;[0m
      | [0;1;32m                                              
[0m[1mhash.c:201:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  201 |           while (cursor = cursor->next, cursor)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  202 |             n_entries++;[0m
      | [0;1;32m                        
[0m[1mhash.c:206:80: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |   if (n_buckets_used == table->n_buckets_used && n_entries == table->n_entries)[0m
      | [0;1;32m                                                                               ^
[0m      | [0;32m                                                                                {
[0m  207 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:220:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:220:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  220 |   fprintf (stream, "# entries:         %lu\n", (unsigned long int) n_entries);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:221:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  221 |   fprintf (stream, "# buckets:         %lu\n", (unsigned long int) n_buckets);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:222:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  222 |   fprintf (stream, "# buckets used:    %lu (%.2f%%)\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:225:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  225 |   fprintf (stream, "max bucket length: %lu\n",[0m
      | [0;1;32m  ^~~~~~~
[0m[1mhash.c:235:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  235 |   if (! (n < table->n_buckets))[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  236 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:246:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  246 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  247 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:249:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |   for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:250:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  250 |     if (entry == cursor->data || table->comparator (entry, cursor->data))[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  251 |       return cursor->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:263:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  263 |   if (table->n_entries == 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  264 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:266:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  266 |   for (bucket = table->bucket; ; bucket++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  267 |     if (! (bucket < table->bucket_limit))[0m
  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:267:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |     if (! (bucket < table->bucket_limit))[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  268 |       abort ();[0m
  269 |     else if (bucket->data)[0m
      | [0;32m    } 
[0m[1mhash.c:269:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  269 |     else if (bucket->data)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  270 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:283:49: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  283 |       if (cursor->data == entry && cursor->next)[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  284 |         return cursor->next->data;[0m
      | [0;1;32m                                  
[0m[1mhash.c:290:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  290 |   while (++bucket < table->bucket_limit)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  291 |     if (bucket->data)[0m
  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:291:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  291 |     if (bucket->data)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  292 |       return bucket->data;[0m
      | [0;1;32m                          
[0m[1mhash.c:312:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  312 |               if (counter >= buffer_size)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  313 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:336:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  336 |               if (! processor (cursor->data, processor_data))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  337 |                 return counter;[0m
      | [0;1;32m                               
[0m[1mhash.c:385:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  385 |   for (; (ch = *string); string++)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  386 |     value = (value * 31 + ch) % n_buckets;[0m
      | [0;1;32m                                          
[0m[1mhash.c:418:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |   if (candidate < 10)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  419 |     candidate = 10;[0m
      | [0;1;32m                   
[0m[1mhash.c:424:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  424 |   while (SIZE_MAX != candidate && !is_prime (candidate))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  425 |     candidate += 2;[0m
      | [0;1;32m                   
[0m[1mhash.c:468:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  468 |   if (tuning == &default_tuning)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  469 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:484:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |       && tuning->shrink_threshold + epsilon < tuning->growth_threshold)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  485 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:501:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if ((float) SIZE_MAX <= new_candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  502 |         return 0;[0m
      | [0;1;32m                 
[0m[1mhash.c:506:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  506 |   if (xalloc_oversized (candidate, sizeof (struct hash_entry *)))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  507 |     return 0;[0m
      | [0;1;32m             
[0m[1mhash.c:518:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |   if (hasher == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  519 |     hasher = raw_hasher;[0m
      | [0;1;32m                        
[0m[1mhash.c:520:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  520 |   if (comparator == NULL)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  521 |     comparator = raw_comparator;[0m
      | [0;1;32m                                
[0m[1mhash.c:524:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  524 |   if (table == NULL)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  525 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:527:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  527 |   if (!tuning)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  528 |     tuning = &default_tuning;[0m
      | [0;1;32m                             
[0m[1mhash.c:541:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  541 |   if (!table->n_buckets)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  542 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:545:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  545 |   if (table->bucket == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  546 |     goto fail;[0m
      | [0;1;32m              
[0m[1mhash.c:581:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  581 |               if (table->data_freer)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  582 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:593:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  593 |           if (table->data_freer)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  594 |             table->data_freer (bucket->data);[0m
      | [0;1;32m                                             
[0m[1mhash.c:618:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  618 |               for (cursor = bucket; cursor; cursor = cursor->next)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m  619 |                 table->data_freer (cursor->data);[0m
      | [0;1;32m                                                 
[0m[1mhash.c:708:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |   if (bucket->data == NULL)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  709 |     return NULL;[0m
      | [0;1;32m                
[0m[1mhash.c:774:67: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   for (bucket = src->bucket; bucket < src->bucket_limit; bucket++)[0m
      | [0;1;32m                                                                  ^
[0m      | [0;32m                                                                   {
[0m[1mhash.c:814:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  814 |         if (safe)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  815 |           continue;[0m
      | [0;1;32m                   
[0m[1mhash.c:824:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |             if (new_entry == NULL)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  825 |               return false;[0m
      | [0;1;32m                           
[0m[1mhash.c:850:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  850 |   if (!new_size)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  851 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:852:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (new_size == table->n_buckets)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  853 |     return true;[0m
      | [0;1;32m                
[0m[1mhash.c:856:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  856 |   if (new_table->bucket == NULL)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  857 |     return false;[0m
      | [0;1;32m                 
[0m[1mhash.c:915:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  915 |          && transfer_entries (table, new_table, false)))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  916 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:932:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  932 |   if (! entry)[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  933 |     abort ();[0m
      | [0;1;32m             
[0m[1mhash.c:938:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  938 |       if (matched_ent)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  939 |         *matched_ent = data;[0m
      | [0;1;32m                            
[0m[1mhash.c:964:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  964 |           if ((float) SIZE_MAX <= candidate)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  965 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:968:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  968 |           if (!hash_rehash (table, candidate))[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  969 |             return -1;[0m
      | [0;1;32m                      
[0m[1mhash.c:972:70: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  972 |           if (hash_find_entry (table, entry, &bucket, false) != NULL)[0m
      | [0;1;32m                                                                     ^
[0m      | [0;32m                                                                      {
[0m  973 |             abort ();[0m
      | [0;1;32m                     
[0m[1mhash.c:983:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  983 |       if (new_entry == NULL)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  984 |         return -1;[0m
      | [0;1;32m                  
[0m[1mhash.c:1021:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1021 |   if (!data)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1022 |     return NULL;[0m
      | [0;1;32m                
[0m56 warnings generated.
Suppressed 4 warnings (4 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[108/111][128.9s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmp677kzmyi.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/getopt.c
[1mgetopt.c:206:72: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |   for (nameend = d->__nextchar; *nameend && *nameend != '='; nameend++)[0m
      | [0;1;32m                                                                       ^
[0m      | [0;32m                                                                        {
[0m  207 |     /* Do nothing.  */ ;[0m
      | [0;1;32m                        
[0m[1mgetopt.c:212:63: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |   for (p = longopts, n_options = 0; p->name; p++, n_options++)[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m  213 |     if (!strncmp (p->name, d->__nextchar, namelen)[0m
  214 |         && namelen == strlen (p->name))[0m
  215 |       {[0m
  216 |         /* Exact match found.  */[0m
  217 |         pfound = p;[0m
  218 |         option_index = n_options;[0m
  219 |         break;[0m
  220 |       }[0m
      | [0;1;32m       
[0m[1mgetopt.c:230:73: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |       for (p = longopts, option_index = 0; p->name; p++, option_index++)[0m
      | [0;1;32m                                                                        ^
[0m      | [0;32m                                                                         {
[0m[1mgetopt.c:247:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  247 |                     if (!print_errors)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  248 |                       /* Don't waste effort tracking the ambig set if[0m
  249 |                          we're not going to print it anyway.  */[0m
  250 |                       ambig_fallback = 1;[0m
  251 |                     else if (!ambig_set)[0m
      | [0;32m                    } 
[0m[1mgetopt.c:253:38: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  253 |                         if (__libc_use_alloca (n_options))[0m
      | [0;1;32m                                                          ^
[0m      | [0;32m                                                           {
[0m  254 |                           ambig_set = alloca (n_options);[0m
  255 |                         else if ((ambig_set = malloc (n_options)) == NULL)[0m
      | [0;32m                        } 
[0m[1mgetopt.c:255:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  255 |                         else if ((ambig_set = malloc (n_options)) == NULL)[0m
      | [0;1;32m                                                                          ^
[0m      | [0;32m                                                                           {
[0m  256 |                           /* Fall back to simpler error message.  */[0m
  257 |                           ambig_fallback = 1;[0m
  258 |                         else[0m
      | [0;32m                        } 
[0m[1mgetopt.c:258:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  258 |                         else[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  259 |                           ambig_malloced = 1;[0m
      | [0;1;32m                                             
[0m[1mgetopt.c:263:8: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  263 |                             memset (ambig_set, 0, n_options);[0m
      | [0;1;32m                            ^~~~~~
[0m[1mgetopt.c:263:8: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  263 |                             memset (ambig_set, 0, n_options);[0m
      | [0;1;32m                            ^~~~~~
[0m[1mgetopt.c:267:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  267 |                     if (ambig_set)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  268 |                       ambig_set[option_index] = 1;[0m
      | [0;1;32m                                                  
[0m[1mgetopt.c:277:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  277 |               if (ambig_fallback)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  278 |                 fprintf (stderr, _("%s: option '%s%s' is ambiguous\n"),[0m
  279 |                          argv[0], prefix, d->__nextchar);[0m
  280 |               else[0m
      | [0;32m              } 
[0m[1mgetopt.c:278:3: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  278 |                 fprintf (stderr, _("%s: option '%s%s' is ambiguous\n"),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mgetopt.c:278:3: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  278 |                 fprintf (stderr, _("%s: option '%s%s' is ambiguous\n"),[0m
      | [0;1;32m                ^~~~~~~
[0m[1mgetopt.c:283:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  283 |                   fprintf (stderr,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:283:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  283 |                   fprintf (stderr,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:287:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  287 |                   for (option_index = 0; option_index < n_options; option_index++)[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  288 |                     if (ambig_set[option_index])[0m
  289 |                       fprintf (stderr, " '%s%s'",[0m
  290 |                                prefix, longopts[option_index].name);[0m
      | [0;1;32m                                                                    
[0m[1mgetopt.c:288:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  288 |                     if (ambig_set[option_index])[0m
      | [0;1;32m                                                ^
[0m      | [0;32m                                                 {
[0m  289 |                       fprintf (stderr, " '%s%s'",[0m
  290 |                                prefix, longopts[option_index].name);[0m
      | [0;1;32m                                                                    
[0m[1mgetopt.c:289:9: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  289 |                       fprintf (stderr, " '%s%s'",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mgetopt.c:289:9: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  289 |                       fprintf (stderr, " '%s%s'",[0m
      | [0;1;32m                      ^~~~~~~
[0m[1mgetopt.c:295:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  295 |                   fprintf (stderr, "\n");[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:295:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  295 |                   fprintf (stderr, "\n");[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:299:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  299 |           if (ambig_malloced)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  300 |             free (ambig_set);[0m
      | [0;1;32m                             
[0m[1mgetopt.c:318:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  318 |           if (print_errors)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  319 |             fprintf (stderr, _("%s: unrecognized option '%s%s'\n"),[0m
  320 |                      argv[0], prefix, d->__nextchar);[0m
      | [0;1;32m                                                     
[0m[1mgetopt.c:319:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  319 |             fprintf (stderr, _("%s: unrecognized option '%s%s'\n"),[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:319:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  319 |             fprintf (stderr, _("%s: unrecognized option '%s%s'\n"),[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:339:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  339 |       if (pfound->has_arg)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  340 |         d->optarg = nameend + 1;[0m
  341 |       else[0m
      | [0;32m      } 
[0m[1mgetopt.c:343:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  343 |           if (print_errors)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  344 |             fprintf (stderr,[0m
  345 |                      _("%s: option '%s%s' doesn't allow an argument\n"),[0m
  346 |                      argv[0], prefix, pfound->name);[0m
      | [0;1;32m                                                    
[0m[1mgetopt.c:344:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  344 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:344:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  344 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:354:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  354 |       if (d->optind < argc)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  355 |         d->optarg = argv[d->optind++];[0m
  356 |       else[0m
      | [0;32m      } 
[0m[1mgetopt.c:358:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  358 |           if (print_errors)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  359 |             fprintf (stderr,[0m
  360 |                      _("%s: option '%s%s' requires an argument\n"),[0m
  361 |                      argv[0], prefix, pfound->name);[0m
      | [0;1;32m                                                    
[0m[1mgetopt.c:359:6: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  359 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:359:6: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  359 |             fprintf (stderr,[0m
      | [0;1;32m            ^~~~~~~
[0m[1mgetopt.c:368:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  368 |   if (longind != NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  369 |     *longind = option_index;[0m
      | [0;1;32m                            
[0m[1mgetopt.c:388:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  388 |   if (d->optind == 0)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  389 |     d->optind = 1;[0m
      | [0;1;32m                  
[0m[1mgetopt.c:405:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  405 |   else if (posixly_correct || !!getenv ("POSIXLY_CORRECT"))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  406 |     d->__ordering = REQUIRE_ORDER;[0m
  407 |   else[0m
      | [0;32m  } 
[0m[1mgetopt.c:407:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  407 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  408 |     d->__ordering = PERMUTE;[0m
      | [0;1;32m                            
[0m[1mgetopt.c:477:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  477 |   if (argc < 1)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  478 |     return -1;[0m
      | [0;1;32m              
[0m[1mgetopt.c:482:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  482 |   if (d->optind == 0 || !d->__initialized)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  483 |     optstring = _getopt_initialize (argc, argv, optstring, d, posixly_correct);[0m
  484 |   else if (optstring[0] == '-' || optstring[0] == '+')[0m
      | [0;32m  } 
[0m[1mgetopt.c:484:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |   else if (optstring[0] == '-' || optstring[0] == '+')[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m  485 |     optstring++;[0m
      | [0;1;32m                
[0m[1mgetopt.c:487:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  487 |   if (optstring[0] == ':')[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  488 |     print_errors = 0;[0m
      | [0;1;32m                     
[0m[1mgetopt.c:499:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  499 |       if (d->__last_nonopt > d->optind)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m  500 |         d->__last_nonopt = d->optind;[0m
      | [0;1;32m                                     
[0m[1mgetopt.c:501:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  501 |       if (d->__first_nonopt > d->optind)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  502 |         d->__first_nonopt = d->optind;[0m
      | [0;1;32m                                      
[0m[1mgetopt.c:510:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  510 |               && d->__last_nonopt != d->optind)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  511 |             exchange (argv, d);[0m
  512 |           else if (d->__last_nonopt != d->optind)[0m
      | [0;32m          } 
[0m[1mgetopt.c:512:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  512 |           else if (d->__last_nonopt != d->optind)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  513 |             d->__first_nonopt = d->optind;[0m
      | [0;1;32m                                          
[0m[1mgetopt.c:518:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  518 |           while (d->optind < argc && NONOPTION_P)[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  519 |             d->optind++;[0m
      | [0;1;32m                        
[0m[1mgetopt.c:533:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  533 |               && d->__last_nonopt != d->optind)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  534 |             exchange (argv, d);[0m
  535 |           else if (d->__first_nonopt == d->__last_nonopt)[0m
      | [0;32m          } 
[0m[1mgetopt.c:535:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  535 |           else if (d->__first_nonopt == d->__last_nonopt)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  536 |             d->__first_nonopt = d->optind;[0m
      | [0;1;32m                                          
[0m[1mgetopt.c:549:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |           if (d->__first_nonopt != d->__last_nonopt)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  550 |             d->optind = d->__first_nonopt;[0m
      | [0;1;32m                                          
[0m[1mgetopt.c:559:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |           if (d->__ordering == REQUIRE_ORDER)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  560 |             return -1;[0m
      | [0;1;32m                      
[0m[1mgetopt.c:599:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  599 |               if (code != -1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  600 |                 return code;[0m
      | [0;1;32m                            
[0m[1mgetopt.c:615:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  615 |     if (*d->__nextchar == '\0')[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  616 |       ++d->optind;[0m
      | [0;1;32m                  
[0m[1mgetopt.c:620:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  620 |         if (print_errors)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  621 |           fprintf (stderr, _("%s: invalid option -- '%c'\n"), argv[0], c);[0m
      | [0;1;32m                                                                          
[0m[1mgetopt.c:621:4: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  621 |           fprintf (stderr, _("%s: invalid option -- '%c'\n"), argv[0], c);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgetopt.c:621:4: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  621 |           fprintf (stderr, _("%s: invalid option -- '%c'\n"), argv[0], c);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mgetopt.c:630:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  630 |         if (*d->__nextchar != '\0')[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  631 |           d->optarg = d->__nextchar;[0m
  632 |         else if (d->optind == argc)[0m
      | [0;32m        } 
[0m[1mgetopt.c:634:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |             if (print_errors)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  635 |               fprintf (stderr,[0m
  636 |                        _("%s: option requires an argument -- '%c'\n"),[0m
  637 |                        argv[0], c);[0m
      | [0;1;32m                                   
[0m[1mgetopt.c:635:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  635 |               fprintf (stderr,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mgetopt.c:635:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  635 |               fprintf (stderr,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mgetopt.c:640:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  640 |             if (optstring[0] == ':')[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  641 |               c = ':';[0m
  642 |             else[0m
      | [0;32m            } 
[0m[1mgetopt.c:642:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  642 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  643 |               c = '?';[0m
      | [0;1;32m                      
[0m[1mgetopt.c:646:6: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  646 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  647 |           d->optarg = argv[d->optind];[0m
      | [0;1;32m                                      
[0m[1mgetopt.c:664:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  664 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  665 |               d->optarg = NULL;[0m
      | [0;1;32m                               
[0m[1mgetopt.c:680:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  680 |                 if (print_errors)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  681 |                   fprintf (stderr,[0m
  682 |                            _("%s: option requires an argument -- '%c'\n"),[0m
  683 |                            argv[0], c);[0m
      | [0;1;32m                                       
[0m[1mgetopt.c:681:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  681 |                   fprintf (stderr,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:681:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  681 |                   fprintf (stderr,[0m
      | [0;1;32m                  ^~~~~~~
[0m[1mgetopt.c:686:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  686 |                 if (optstring[0] == ':')[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  687 |                   c = ':';[0m
  688 |                 else[0m
      | [0;32m                } 
[0m[1mgetopt.c:688:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  688 |                 else[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  689 |                   c = '?';[0m
      | [0;1;32m                          
[0m[1mgetopt.c:691:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  691 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  692 |               /* We already incremented 'optind' once;[0m
  693 |                  increment it again when taking next ARGV-elt as argument.  */[0m
  694 |               d->optarg = argv[d->optind++];[0m
      | [0;1;32m                                            
[0m72 warnings generated.
Suppressed 14 warnings (14 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[109/111][146.7s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmphdatbvab.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-fmtstream.c
[1margp-fmtstream.c:140:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  140 |               memmove (buf + pad, buf, fs->p - buf);[0m
      | [0;1;32m              ^~~~~~~
[0m[1margp-fmtstream.c:140:15: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  140 |               memmove (buf + pad, buf, fs->p - buf);[0m
      | [0;1;32m              ^~~~~~~
[0m[1margp-fmtstream.c:142:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  142 |               memset (buf, ' ', pad); /* Fill in the spaces.  */[0m
      | [0;1;32m              ^~~~~~
[0m[1margp-fmtstream.c:142:15: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
  142 |               memset (buf, ' ', pad); /* Fill in the spaces.  */[0m
      | [0;1;32m              ^~~~~~
[0m[1margp-fmtstream.c:165:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  165 |       if (fs->point_col < 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  166 |         fs->point_col = 0;[0m
      | [0;1;32m                          
[0m[1margp-fmtstream.c:180:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  180 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  181 |             /* Set the end-of-line pointer for the code below to[0m
  182 |                the end of the buffer.  */[0m
  183 |             nl = fs->p;[0m
      | [0;1;32m                       
[0m[1margp-fmtstream.c:203:15: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  203 |               memmove (buf + (r - fs->point_col), nl, fs->p - nl);[0m
      | [0;1;32m              ^~~~~~~
[0m[1margp-fmtstream.c:203:15: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  203 |               memmove (buf + (r - fs->point_col), nl, fs->p - nl);[0m
      | [0;1;32m              ^~~~~~~
[0m[1margp-fmtstream.c:229:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  229 |           while (p >= buf && !isblank ((unsigned char) *p))[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m  230 |             --p;[0m
      | [0;1;32m                
[0m[1margp-fmtstream.c:236:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  236 |               if (p >= buf)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  237 |                 do[0m
  238 |                   --p;[0m
  239 |                 while (p >= buf && isblank ((unsigned char) *p));[0m
      | [0;1;32m                                                                 
[0m[1margp-fmtstream.c:237:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  237 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  238 |                   --p;[0m
  239 |                 while (p >= buf && isblank ((unsigned char) *p));[0m
      | [0;32m                } 
[0m[1margp-fmtstream.c:248:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |               if (p < nl)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  249 |                 do[0m
  250 |                   ++p;[0m
  251 |                 while (p < nl && !isblank ((unsigned char) *p));[0m
      | [0;1;32m                                                                
[0m[1margp-fmtstream.c:249:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  249 |                 do[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  250 |                   ++p;[0m
  251 |                 while (p < nl && !isblank ((unsigned char) *p));[0m
      | [0;32m                } 
[0m[1margp-fmtstream.c:262:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  262 |               do[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  263 |                 ++p;[0m
  264 |               while (isblank ((unsigned char) *p));[0m
      | [0;32m              } 
[0m[1margp-fmtstream.c:284:19: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  284 |                   memmove (nl + 1 + fs->wmargin, nextline, mv);[0m
      | [0;1;32m                  ^~~~~~~
[0m[1margp-fmtstream.c:284:19: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  284 |                   memmove (nl + 1 + fs->wmargin, nextline, mv);[0m
      | [0;1;32m                  ^~~~~~~
[0m[1margp-fmtstream.c:296:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  296 |                   if (nl > fs->buf)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  297 |                     fwrite_unlocked (fs->buf, 1, nl - fs->buf, fs->stream);[0m
      | [0;1;32m                                                                           
[0m[1margp-fmtstream.c:305:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  305 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  306 |             /* We can fit the newline and blanks in before[0m
  307 |                the next word.  */[0m
  308 |             *nl++ = '\n';[0m
      | [0;1;32m                         
[0m[1margp-fmtstream.c:311:83: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  311 |               || (nextline == buf + len + 1 && fs->end - nextline >= fs->wmargin))[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  312 |             /* Add blanks up to the wrap margin column.  */[0m
  313 |             for (i = 0; i < fs->wmargin; ++i)[0m
  314 |               *nl++ = ' ';[0m
  315 |           else[0m
      | [0;32m          } 
[0m[1margp-fmtstream.c:313:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  313 |             for (i = 0; i < fs->wmargin; ++i)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  314 |               *nl++ = ' ';[0m
      | [0;1;32m                          
[0m[1margp-fmtstream.c:315:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  315 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  316 |             for (i = 0; i < fs->wmargin; ++i)[0m
  317 | #ifdef _LIBC[0m
  318 |               if (_IO_fwide (fs->stream, 0) > 0)[0m
  319 |                 putwc_unlocked (L' ', fs->stream);[0m
  320 |               else[0m
  321 | #endif[0m
  322 |                 putc_unlocked (' ', fs->stream);[0m
      | [0;1;32m                                                
[0m[1margp-fmtstream.c:316:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  316 |             for (i = 0; i < fs->wmargin; ++i)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m  317 | #ifdef _LIBC[0m
  318 |               if (_IO_fwide (fs->stream, 0) > 0)[0m
  319 |                 putwc_unlocked (L' ', fs->stream);[0m
  320 |               else[0m
  321 | #endif[0m
  322 |                 putc_unlocked (' ', fs->stream);[0m
      | [0;1;32m                                                
[0m[1margp-fmtstream.c:326:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  326 |           if (nl < nextline)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  327 |             memmove (nl, nextline, buf + len - nextline);[0m
      | [0;1;32m                                                         
[0m[1margp-fmtstream.c:327:13: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  327 |             memmove (nl, nextline, buf + len - nextline);[0m
      | [0;1;32m            ^~~~~~~
[0m[1margp-fmtstream.c:327:13: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  327 |             memmove (nl, nextline, buf + len - nextline);[0m
      | [0;1;32m            ^~~~~~~
[0m[1margp-fmtstream.c:374:11: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  374 |           memmove (fs->buf, fs->buf + wrote, fs->p - fs->buf);[0m
      | [0;1;32m          ^~~~~~~
[0m[1margp-fmtstream.c:374:11: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  374 |           memmove (fs->buf, fs->buf + wrote, fs->p - fs->buf);[0m
      | [0;1;32m          ^~~~~~~
[0m[1margp-fmtstream.c:411:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  411 |       if (! __argp_fmtstream_ensure (fs, size_guess))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  412 |         return -1;[0m
      | [0;1;32m                  
[0m[1margp-fmtstream.c:416:13: [0m[0;1;35mwarning: [0m[1mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  416 |       out = __vsnprintf (fs->p, avail, fmt, args);[0m
      | [0;1;32m            ^
[0m[1m./argp-namefrob.h:96:21: [0m[0;1;36mnote: [0mexpanded from macro '__vsnprintf'[0m
   96 | #define __vsnprintf vsnprintf[0m
      | [0;1;32m                    ^~~~~~~~~
[0m[1margp-fmtstream.c:416:13: [0m[0;1;36mnote: [0mCall to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11[0m
  416 |       out = __vsnprintf (fs->p, avail, fmt, args);[0m
      | [0;1;32m            ^
[0m[1m./argp-namefrob.h:96:21: [0m[0;1;36mnote: [0mexpanded from macro '__vsnprintf'[0m
   96 | #define __vsnprintf vsnprintf[0m
      | [0;1;32m                    ^~~~~~~~~
[0m[1margp-fmtstream.c:418:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  418 |       if ((size_t) out >= avail)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m  419 |         size_guess = out + 1;[0m
      | [0;1;32m                             
[0m37 warnings generated.
Suppressed 13 warnings (13 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[110/111][197.8s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpqya1n4yw.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/src/util.c
[1mutil.c:84:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   84 |           if (bytes_written > 0)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m   85 |             rest_output_size = output_size - bytes_written;[0m
   86 |           else[0m
      | [0;32m          } 
[0m[1mutil.c:86:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   86 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m   87 |             rest_output_size = output_size;[0m
      | [0;1;32m                                           
[0m[1mutil.c:90:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   90 |           if (rest_bytes_written != rest_output_size)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m   91 |             error (PAXEXIT_FAILURE, errno, _("write error"));[0m
      | [0;1;32m                                                             
[0m[1mutil.c:93:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
   93 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m   94 |         error (PAXEXIT_FAILURE, errno, _("write error"));[0m
      | [0;1;32m                                                         
[0m[1mutil.c:125:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  125 |           if (swapping_bytes)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  126 |             swab_array (output_buffer, 2 * complete_words);[0m
      | [0;1;32m                                                           
[0m[1mutil.c:136:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  136 |   if (sparse_flag)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  137 |     bytes_written = sparse_write (out_des, output_buffer, output_size, flush);[0m
  138 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:138:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  138 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  139 |     bytes_written = write (out_des, output_buffer, output_size);[0m
      | [0;1;32m                                                                
[0m[1mutil.c:143:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  143 |       if (bytes_written == -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  144 |         error (PAXEXIT_FAILURE, errno, _("write error"));[0m
  145 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:145:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  145 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  146 |         error (PAXEXIT_FAILURE, 0, _("write error: partial write"));[0m
      | [0;1;32m                                                                    
[0m[1mutil.c:207:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  207 |   if (input_size == SAFE_READ_ERROR)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  208 |     error (PAXEXIT_FAILURE, errno, _("read error"));[0m
      | [0;1;32m                                                    
[0m[1mutil.c:209:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  209 |   if (input_size == 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  210 |     error (PAXEXIT_FAILURE, 0, _("premature end of file"));[0m
      | [0;1;32m                                                           
[0m[1mutil.c:230:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |   else if (input_size == 0)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  231 |     return (1);[0m
      | [0;1;32m               
[0m[1mutil.c:248:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  248 |       if (space_left == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  249 |         tape_empty_output_buffer (out_des);[0m
  250 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:252:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  252 |           if (bytes_left < space_left)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  253 |             space_left = bytes_left;[0m
      | [0;1;32m                                    
[0m[1mutil.c:254:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  254 |           memcpy (out_buff, in_buf, (unsigned) space_left);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:254:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  254 |           memcpy (out_buff, in_buf, (unsigned) space_left);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:275:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  275 |       if (space_left == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  276 |         disk_empty_output_buffer (out_des, false);[0m
  277 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:279:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  279 |           if (bytes_left < space_left)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m  280 |             space_left = bytes_left;[0m
      | [0;1;32m                                    
[0m[1mutil.c:281:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  281 |           memcpy (out_buff, in_buf, (unsigned) space_left);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:281:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  281 |           memcpy (out_buff, in_buf, (unsigned) space_left);[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:302:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  302 |       if (input_size == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  303 |         tape_fill_input_buffer (in_des, io_block_size);[0m
      | [0;1;32m                                                       
[0m[1mutil.c:304:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  304 |       if (bytes_left < input_size)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  305 |         space_left = bytes_left;[0m
  306 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:306:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  306 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  307 |         space_left = input_size;[0m
      | [0;1;32m                                
[0m[1mutil.c:308:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  308 |       memcpy (in_buf, in_buff, (unsigned) space_left);[0m
      | [0;1;32m      ^~~~~~
[0m[1mutil.c:308:7: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  308 |       memcpy (in_buf, in_buff, (unsigned) space_left);[0m
      | [0;1;32m      ^~~~~~
[0m[1mutil.c:358:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  358 |           memmove (input_buffer, input_buffer + half, half);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:358:4: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
  358 |           memmove (input_buffer, input_buffer + half, half);[0m
      | [0;1;32m          ^~~~~~~
[0m[1mutil.c:370:8: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  370 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m  371 |             break;[0m
      | [0;1;32m                  
[0m[1mutil.c:373:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  373 |       if (tmp_input_size < 0)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  374 |         error (PAXEXIT_FAILURE, errno, _("read error"));[0m
      | [0;1;32m                                                        
[0m[1mutil.c:378:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  378 |   if (num_bytes <= input_size)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  379 |     got_bytes = num_bytes;[0m
  380 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:380:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  380 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  381 |     got_bytes = input_size;[0m
      | [0;1;32m                           
[0m[1mutil.c:382:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  382 |   memcpy (peek_buf, in_buff, (unsigned) got_bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:382:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
  382 |   memcpy (peek_buf, in_buff, (unsigned) got_bytes);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:396:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  396 |       if (input_size == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  397 |         tape_fill_input_buffer (in_des, io_block_size);[0m
      | [0;1;32m                                                       
[0m[1mutil.c:398:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  398 |       if (bytes_left < input_size)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m  399 |         space_left = bytes_left;[0m
  400 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:400:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  400 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  401 |         space_left = input_size;[0m
      | [0;1;32m                                
[0m[1mutil.c:406:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  406 |           for (k = 0; k < space_left; ++k)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  407 |             crc += in_buff[k] & 0xff;[0m
      | [0;1;32m                                     
[0m[1mutil.c:427:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  427 |   for (i = 0; i < blocks; ++i)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  428 |     writer (zeros_512, out_des, sizeof zeros_512);[0m
      | [0;1;32m                                                  
[0m[1mutil.c:429:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  429 |   if (extra_bytes)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  430 |     writer (zeros_512, out_des, extra_bytes);[0m
      | [0;1;32m                                             
[0m[1mutil.c:449:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  449 |       if (input_size == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  450 |         tape_fill_input_buffer (in_des, io_block_size);[0m
      | [0;1;32m                                                       
[0m[1mutil.c:454:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  454 |           for (k = 0; k < size; ++k)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  455 |             crc += in_buff[k] & 0xff;[0m
      | [0;1;32m                                     
[0m[1mutil.c:484:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  484 |       if (input_size == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m[1mutil.c:498:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  498 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  499 |               error (0, 0,[0m
  500 |                      _("Read error at byte %lld in file %s, padding with zeros"),[0m
  501 |                      (long long) (original_num_bytes - num_bytes), filename);[0m
      | [0;1;32m                                                                             
[0m[1mutil.c:508:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  508 |           for (k = 0; k < size; ++k)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  509 |             crc += in_buff[k] & 0xff;[0m
      | [0;1;32m                                     
[0m[1mutil.c:537:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  537 |       if (input_size == 0)[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m[1mutil.c:549:10: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  549 |             else[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m  550 |               error (0, 0,[0m
  551 |                      _("Read error at byte %lld in file %s, padding with zeros"),[0m
  552 |                      (long long) (original_num_bytes - num_bytes), filename);[0m
      | [0;1;32m                                                                             
[0m[1mutil.c:559:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  559 |           for (k = 0; k < size; ++k)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  560 |             crc += in_buff[k] & 0xff;[0m
      | [0;1;32m                                     
[0m[1mutil.c:576:16: [0m[0;1;35mwarning: [0m[1mpassing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C23 [clang-diagnostic-deprecated-non-prototype][0m
  576 |   if ((*xstat) (file_name, &new_file_stat) < 0)[0m
      | [0;1;32m               ^
[0m[1mutil.c:584:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  584 |   if (new_file_stat.st_size > old_file_size)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m  585 |     error (0, 0,[0m
  586 |            ngettext ("File %s grew, %"PRIuMAX" new byte not copied",[0m
  587 |                      "File %s grew, %"PRIuMAX" new bytes not copied",[0m
  588 |                      (long)(new_file_stat.st_size - old_file_size)),[0m
  589 |            file_name, (uintmax_t) (new_file_stat.st_size - old_file_size));[0m
  590 | [0m
  591 |   else if (new_file_stat.st_mtime != old_file_mtime)[0m
      | [0;32m  } 
[0m[1mutil.c:591:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  591 |   else if (new_file_stat.st_mtime != old_file_mtime)[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  592 |     error (0, 0, _("File %s was modified while being copied"), file_name);[0m
      | [0;1;32m                                                                          
[0m[1mutil.c:605:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |   if (dir == NULL)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  606 |     error (PAXEXIT_FAILURE, 0, _("virtual memory exhausted"));[0m
      | [0;1;32m                                                              
[0m[1mutil.c:611:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  611 |       if (warn_option & CPIO_WARN_INTERDIR)[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m  612 |         fmt = _("Creating intermediate directory `%s'");[0m
  613 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:613:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  613 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  614 |         fmt = NULL;[0m
      | [0;1;32m                   
[0m[1mutil.c:648:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  648 |   if (lseek (out_file_des, start_of_block, SEEK_SET) < 0)[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m  649 |     error (PAXEXIT_FAILURE, errno, _("cannot seek on output"));[0m
      | [0;1;32m                                                               
[0m[1mutil.c:654:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  654 |       if (lseek (out_file_des, start_of_block, SEEK_SET) < 0)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m  655 |         error (PAXEXIT_FAILURE, errno, _("cannot seek on output"));[0m
      | [0;1;32m                                                                   
[0m[1mutil.c:708:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  708 |   if (!hash_table)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m  709 |     return NULL;[0m
      | [0;1;32m                
[0m[1mutil.c:743:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  743 |   if (renumber_inodes_option)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  744 |     temp->trans_inode = next_inode++;[0m
  745 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:745:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  745 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  746 |     temp->trans_inode = temp->inode;[0m
      | [0;1;32m                                    
[0m[1mutil.c:751:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |         && (e = hash_insert (hash_table, temp))))[0m
      | [0;1;32m                                                 ^
[0m      | [0;32m                                                  {
[0m  752 |     xalloc_die ();[0m
      | [0;1;32m                  
[0m[1mutil.c:766:14: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  766 |           if (!ival)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  767 |             ival = add_inode (st->st_ino, NULL,[0m
  768 |                               major (st->st_dev), minor (st->st_dev));[0m
      | [0;1;32m                                                                      
[0m[1mutil.c:771:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  771 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  772 |         hdr->c_ino = next_inode++;[0m
      | [0;1;32m                                  
[0m[1mutil.c:774:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  774 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  775 |     hdr->c_ino = st->st_ino;[0m
      | [0;1;32m                            
[0m[1mutil.c:801:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  801 |   if (copy_function == copy_in)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  802 |     fd = rmtopen (file, O_RDONLY | O_BINARY, MODE_RW, rsh_command_option);[0m
  803 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:805:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  805 |       if (!append_flag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  806 |         fd = rmtopen (file, O_WRONLY | O_CREAT | O_TRUNC | O_BINARY, MODE_RW,[0m
  807 |                         rsh_command_option);[0m
  808 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:808:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  808 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m  809 |         fd = rmtopen (file, O_RDWR | O_BINARY, MODE_RW, rsh_command_option);[0m
      | [0;1;32m                                                                            
[0m[1mutil.c:852:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (tty_in == NULL)[0m
      | [0;1;32m                     ^
[0m      | [0;32m                      {
[0m  853 |     error (PAXEXIT_FAILURE, errno, TTY_NAME);[0m
      | [0;1;32m                                             
[0m[1mutil.c:855:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  855 |   if (tty_out == NULL)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  856 |     error (PAXEXIT_FAILURE, errno, TTY_NAME);[0m
      | [0;1;32m                                             
[0m[1mutil.c:865:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  865 |   if (new_media_message)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  866 |     fprintf (tty_out, "%s", new_media_message);[0m
  867 |   else if (new_media_message_with_number)[0m
      | [0;32m  } 
[0m[1mutil.c:866:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  866 |     fprintf (tty_out, "%s", new_media_message);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:866:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  866 |     fprintf (tty_out, "%s", new_media_message);[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:867:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  867 |   else if (new_media_message_with_number)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m  868 |     fprintf (tty_out, "%s%d%s", new_media_message_with_number, reel_number,[0m
  869 |              new_media_message_after_number);[0m
  870 |   else if (archive_name)[0m
      | [0;32m  } 
[0m[1mutil.c:868:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  868 |     fprintf (tty_out, "%s%d%s", new_media_message_with_number, reel_number,[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:868:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  868 |     fprintf (tty_out, "%s%d%s", new_media_message_with_number, reel_number,[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:870:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  870 |   else if (archive_name)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  871 |     fprintf (tty_out, _("Found end of tape.  Load next tape and press RETURN. "));[0m
  872 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:871:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  871 |     fprintf (tty_out, _("Found end of tape.  Load next tape and press RETURN. "));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:871:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  871 |     fprintf (tty_out, _("Found end of tape.  Load next tape and press RETURN. "));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:872:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  872 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  873 |     fprintf (tty_out, _("Found end of tape.  To continue, type device/file name when ready.\n"));[0m
      | [0;1;32m                                                                                                 
[0m[1mutil.c:873:5: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  873 |     fprintf (tty_out, _("Found end of tape.  To continue, type device/file name when ready.\n"));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:873:5: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  873 |     fprintf (tty_out, _("Found end of tape.  To continue, type device/file name when ready.\n"));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:881:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  881 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  882 |         c = getc (tty_in);[0m
  883 |       while (c != EOF && c != '\n');[0m
      | [0;32m      } 
[0m[1mutil.c:886:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  886 |       if (tape_des == -1)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  887 |         open_error (archive_name);[0m
      | [0;1;32m                                  
[0m[1mutil.c:895:8: [0m[0;1;35mwarning: [0m[1mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  895 |               fprintf (tty_out,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mutil.c:895:8: [0m[0;1;36mnote: [0mCall to function 'fprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fprintf_s' in case of C11[0m
  895 |               fprintf (tty_out,[0m
      | [0;1;32m              ^~~~~~~
[0m[1mutil.c:901:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  901 |           if (str_res == NULL || str_res[0] == '\0')[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m  902 |             exit (PAXEXIT_FAILURE);[0m
      | [0;1;32m                                   
[0m[1mutil.c:906:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  906 |           if (tape_des == -1)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m  907 |             open_error (next_archive_name);[0m
      | [0;1;32m                                           
[0m[1mutil.c:920:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  920 |   if (tape_des != old_tape_des)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  921 |     error (PAXEXIT_FAILURE, 0, _("internal error: tape descriptor changed from %d to %d"),[0m
  922 |            old_tape_des, tape_des);[0m
      | [0;1;32m                                   
[0m[1mutil.c:945:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  945 |       if (*p == 'd' && prev_was_percent)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m  946 |         break;[0m
      | [0;1;32m              
[0m[1mutil.c:959:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
  959 |       strncpy (new_media_message_with_number, message, length);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:959:7: [0m[0;1;36mnote: [0mCall to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11[0m
  959 |       strncpy (new_media_message_with_number, message, length);[0m
      | [0;1;32m      ^~~~~~~
[0m[1mutil.c:963:7: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
  963 |       strcpy (new_media_message_after_number, p + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mutil.c:963:7: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
  963 |       strcpy (new_media_message_after_number, p + 1);[0m
      | [0;1;32m      ^~~~~~
[0m[1mutil.c:998:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  998 |       if (*buf++ != '\0')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  999 |         return 0;[0m
      | [0;1;32m                 
[0m[1mutil.c:1031:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1031 |       if (rest < DISKBLOCKSIZE)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1032 |         /* Force write */[0m
 1033 |         state = not_in_zeros;[0m
 1034 |       else[0m
      | [0;32m      } 
[0m[1mutil.c:1043:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1043 |                   if (n == -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1044 |                     return -1;[0m
      | [0;1;32m                              
[0m[1mutil.c:1046:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1046 |                   if (n < bytes)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1047 |                     return nwritten + seek_count;[0m
      | [0;1;32m                                                 
[0m[1mutil.c:1050:12: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1050 |               else[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1051 |                 seek_count += rest;[0m
      | [0;1;32m                                   
[0m[1mutil.c:1057:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1057 |               if (lseek (fildes, seek_count, SEEK_CUR) == -1)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1058 |                 return -1;[0m
      | [0;1;32m                          
[0m[1mutil.c:1071:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1071 |       if (seek_count && lseek (fildes, seek_count, SEEK_CUR) == -1)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1072 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutil.c:1076:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1076 |       if (n == -1)[0m
      | [0;1;32m                  ^
[0m      | [0;32m                   {
[0m 1077 |         return n;[0m
      | [0;1;32m                 
[0m[1mutil.c:1084:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1084 |       if (lseek (fildes, delayed_seek_count - 1, SEEK_CUR) == -1)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m 1085 |         return -1;[0m
      | [0;1;32m                  
[0m[1mutil.c:1087:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1087 |       if (n != 1)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m 1088 |         return n;[0m
      | [0;1;32m                 
[0m[1mutil.c:1108:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1108 |   if (S_ISREG (st->st_mode))[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1109 |     hdr->c_mode |= CP_IFREG;[0m
 1110 |   else if (S_ISDIR (st->st_mode))[0m
      | [0;32m  } 
[0m[1mutil.c:1110:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1110 |   else if (S_ISDIR (st->st_mode))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1111 |     hdr->c_mode |= CP_IFDIR;[0m
 1112 | #ifdef S_ISBLK[0m
 1113 |   else if (S_ISBLK (st->st_mode))[0m
      | [0;32m  } 
[0m[1mutil.c:1113:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1113 |   else if (S_ISBLK (st->st_mode))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1114 |     hdr->c_mode |= CP_IFBLK;[0m
 1115 | #endif[0m
 1116 | #ifdef S_ISCHR[0m
 1117 |   else if (S_ISCHR (st->st_mode))[0m
      | [0;32m  } 
[0m[1mutil.c:1117:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1117 |   else if (S_ISCHR (st->st_mode))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1118 |     hdr->c_mode |= CP_IFCHR;[0m
 1119 | #endif[0m
 1120 | #ifdef S_ISFIFO[0m
 1121 |   else if (S_ISFIFO (st->st_mode))[0m
      | [0;32m  } 
[0m[1mutil.c:1121:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1121 |   else if (S_ISFIFO (st->st_mode))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1122 |     hdr->c_mode |= CP_IFIFO;[0m
 1123 | #endif[0m
 1124 | #ifdef S_ISLNK[0m
 1125 |   else if (S_ISLNK (st->st_mode))[0m
      | [0;32m  } 
[0m[1mutil.c:1125:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1125 |   else if (S_ISLNK (st->st_mode))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1126 |     hdr->c_mode |= CP_IFLNK;[0m
 1127 | #endif[0m
 1128 | #ifdef S_ISSOCK[0m
 1129 |   else if (S_ISSOCK (st->st_mode))[0m
      | [0;32m  } 
[0m[1mutil.c:1129:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1129 |   else if (S_ISSOCK (st->st_mode))[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1130 |     hdr->c_mode |= CP_IFSOCK;[0m
 1131 | #endif[0m
 1132 | #ifdef S_ISNWK[0m
 1133 |   else if (S_ISNWK (st->st_mode))[0m
      | [0;32m  } 
[0m[1mutil.c:1133:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1133 |   else if (S_ISNWK (st->st_mode))[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1134 |     hdr->c_mode |= CP_IFNWK;[0m
      | [0;1;32m                            
[0m[1mutil.c:1158:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1158 |   memset (st, 0, sizeof (*st));[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1158:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1158 |   memset (st, 0, sizeof (*st));[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1162:30: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1162 |   if (hdr->c_mode & CP_IFREG)[0m
      | [0;1;32m                             ^
[0m      | [0;32m                              {
[0m 1163 |     st->st_mode |= S_IFREG;[0m
 1164 |   else if (hdr->c_mode & CP_IFDIR)[0m
      | [0;32m  } 
[0m[1mutil.c:1164:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1164 |   else if (hdr->c_mode & CP_IFDIR)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1165 |     st->st_mode |= S_IFDIR;[0m
 1166 | #ifdef S_IFBLK[0m
 1167 |   else if (hdr->c_mode & CP_IFBLK)[0m
      | [0;32m  } 
[0m[1mutil.c:1167:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1167 |   else if (hdr->c_mode & CP_IFBLK)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1168 |     st->st_mode |= S_IFBLK;[0m
 1169 | #endif[0m
 1170 | #ifdef S_IFCHR[0m
 1171 |   else if (hdr->c_mode & CP_IFCHR)[0m
      | [0;32m  } 
[0m[1mutil.c:1171:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1171 |   else if (hdr->c_mode & CP_IFCHR)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1172 |     st->st_mode |= S_IFCHR;[0m
 1173 | #endif[0m
 1174 | #ifdef S_IFFIFO[0m
 1175 |   else if (hdr->c_mode & CP_IFIFO)[0m
 1176 |     st->st_mode |= S_IFIFO;[0m
 1177 | #endif[0m
 1178 | #ifdef S_IFLNK[0m
 1179 |   else if (hdr->c_mode & CP_IFLNK)[0m
      | [0;32m  } 
[0m[1mutil.c:1179:35: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1179 |   else if (hdr->c_mode & CP_IFLNK)[0m
      | [0;1;32m                                  ^
[0m      | [0;32m                                   {
[0m 1180 |     st->st_mode |= S_IFLNK;[0m
 1181 | #endif[0m
 1182 | #ifdef S_IFSOCK[0m
 1183 |   else if (hdr->c_mode & CP_IFSOCK)[0m
      | [0;32m  } 
[0m[1mutil.c:1183:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1183 |   else if (hdr->c_mode & CP_IFSOCK)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m 1184 |     st->st_mode |= S_IFSOCK;[0m
      | [0;1;32m                            
[0m[1mutil.c:1208:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1208 |   if (HAVE_FCHOWN && fd != -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1209 |     return fchown (fd, uid, gid);[0m
 1210 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:1210:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1210 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1211 |     return chown (name, uid, gid);[0m
      | [0;1;32m                                  
[0m[1mutil.c:1217:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1217 |   if (HAVE_FCHMOD && fd != -1)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1218 |     return fchmod (fd, mode);[0m
 1219 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:1219:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1219 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1220 |     return chmod (name, mode);[0m
      | [0;1;32m                              
[0m[1mutil.c:1231:22: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1231 |           && errno != EPERM)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1232 |         chown_error_details (header->c_name, uid, gid);[0m
      | [0;1;32m                                                       
[0m[1mutil.c:1235:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1235 |   if (fchmod_or_chmod (fd, header->c_name, header->c_mode) < 0)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1236 |     chmod_error_details (header->c_name, header->c_mode);[0m
      | [0;1;32m                                                         
[0m[1mutil.c:1237:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1237 |   if (retain_time_flag)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1238 |     set_file_times (fd, header->c_name, header->c_mtime, header->c_mtime);[0m
      | [0;1;32m                                                                          
[0m[1mutil.c:1247:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1247 |   memset (&ts, 0, sizeof ts);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1247:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1247 |   memset (&ts, 0, sizeof ts);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1254:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1254 |   if (fdutimens (fd, name, ts) < 0 && errno != EROFS)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m 1255 |     utime_error (name);[0m
      | [0;1;32m                       
[0m[1mutil.c:1262:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1262 |   while (file_hdr->c_name_buflen < len)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1263 |     file_hdr->c_name = x2realloc (file_hdr->c_name, &file_hdr->c_name_buflen);[0m
      | [0;1;32m                                                                              
[0m[1mutil.c:1273:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1273 |   memmove (file_hdr->c_name, name, len);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:1273:3: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1273 |   memmove (file_hdr->c_name, name, len);[0m
      | [0;1;32m  ^~~~~~~
[0m[1mutil.c:1285:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1285 |   if (strip_leading_dots && strcmp (p, "./"))[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1286 |     /* strip leading `./' from the filename.  */[0m
 1287 |     while (*p == '.' && *(p + 1) == '/')[0m
 1288 |       {[0m
 1289 |         ++p;[0m
 1290 |         while (*p == '/')[0m
 1291 |           ++p;[0m
 1292 |       }[0m
      | [0;1;32m       
[0m[1mutil.c:1290:19: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1290 |         while (*p == '/')[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1291 |           ++p;[0m
      | [0;1;32m              
[0m[1mutil.c:1293:17: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1293 |   if (p != name)[0m
      | [0;1;32m                ^
[0m      | [0;32m                 {
[0m 1294 |     /* The 'p' string is shortened version of 'name' with one exception;  when[0m
 1295 |        the 'name' points to an empty string (buffer where name[0] == '\0') the[0m
 1296 |        'p' then points to static string ".".  So caller needs to ensure there[0m
 1297 |        are at least two bytes available in 'name' buffer so memmove succeeds. */[0m
 1298 |     memmove (name, p, (size_t)(strlen (p) + 1));[0m
      | [0;1;32m                                                
[0m[1mutil.c:1298:5: [0m[0;1;35mwarning: [0m[1mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1298 |     memmove (name, p, (size_t)(strlen (p) + 1));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:1298:5: [0m[0;1;36mnote: [0mCall to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11[0m
 1298 |     memmove (name, p, (size_t)(strlen (p) + 1));[0m
      | [0;1;32m    ^~~~~~~
[0m[1mutil.c:1331:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1331 |   memcpy (&data->stat, file_stat, sizeof data->stat);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1331:3: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1331 |   memcpy (&data->stat, file_stat, sizeof data->stat);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1333:3: [0m[0;1;35mwarning: [0m[1mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy][0m
 1333 |   strcpy (data->stat.c_name, file_stat->c_name);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1333:3: [0m[0;1;36mnote: [0mCall to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119[0m
 1333 |   strcpy (data->stat.c_name, file_stat->c_name);[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1392:4: [0m[0;1;35mwarning: [0m[1mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1392 |           memcpy (&data->stat, file_hdr,[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:1392:4: [0m[0;1;36mnote: [0mCall to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11[0m
 1392 |           memcpy (&data->stat, file_hdr,[0m
      | [0;1;32m          ^~~~~~
[0m[1mutil.c:1446:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1446 |   if (to_stdout_option)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1447 |     return 0;[0m
      | [0;1;32m             
[0m[1mutil.c:1462:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1462 |   if (!existing_dir)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1463 |     res = cpio_mkdir (file_hdr, &setstat_delayed);[0m
 1464 |   else[0m
      | [0;32m  } 
[0m[1mutil.c:1464:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1464 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1465 |     res = 0;[0m
      | [0;1;32m            
[0m[1mutil.c:1497:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1497 |   if (!setstat_delayed && repair_delayed_set_stat (file_hdr))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1498 |     set_perms (-1, file_hdr);[0m
      | [0;1;32m                             
[0m[1mutil.c:1511:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1511 |                          _("Creating directory `%s'") : NULL))[0m
      | [0;1;32m                                                              ^
[0m      | [0;32m                                                               {
[0m 1512 |             exit (PAXEXIT_FAILURE);[0m
      | [0;1;32m                                   
[0m[1mutil.c:1514:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1514 |           if (chdir (change_directory_option) == 0)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1515 |             return;[0m
      | [0;1;32m                   
[0m[1mutil.c:1533:7: [0m[0;1;35mwarning: [0m[1mcase statement body should be in braces [readability-braces-around-statements][0m
 1533 |       break;[0m
      | [0;1;32m      ^    
[0m      | [0;32m      {    ;} 
[0m[1mutil.c:1541:3: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1541 |   memset (file_hdr, 0, sizeof (*file_hdr));[0m
      | [0;1;32m  ^~~~~~
[0m[1mutil.c:1541:3: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1541 |   memset (file_hdr, 0, sizeof (*file_hdr));[0m
      | [0;1;32m  ^~~~~~
[0m142 warnings generated.
Suppressed 12 warnings (12 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

[111/111][208.6s] /home/C00536225/dev/tcc/build/bin/clang-tidy --use-color -checks=readability-braces-around-statements -export-fixes /itch/common/crepos/cu-to-rtu/c/cpio-2.14/tidy-fixes/tmpzy0rop_s.yaml -p=/itch/common/crepos/cu-to-rtu/c/cpio-2.14 /itch/common/crepos/cu-to-rtu/c/cpio-2.14/gnu/argp-help.c
[1margp-help.c:144:69: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  144 |           || up->uparams_offs == offsetof (struct uparams, rmargin))[0m
      | [0;1;32m                                                                    ^
[0m      | [0;32m                                                                     {
[0m  145 |         continue;[0m
      | [0;1;32m                 
[0m[1margp-help.c:175:11: [0m[0;1;35mwarning: [0m[1mPotential out of bound access to the region with tainted index [clang-analyzer-security.ArrayBound][0m
  175 |           SKIPWS (var);[0m
      | [0;1;32m          ^
[0m[1margp-help.c:168:31: [0m[0;1;36mnote: [0mexpanded from macro 'SKIPWS'[0m
  168 | #define SKIPWS(p) do { while (isspace ((unsigned char) *p)) p++; } while (0);[0m
      | [0;1;32m                              ^
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1690:5: [0m[0;1;36mnote: [0mCalling 'fill_in_uparams'[0m
 1690 |     fill_in_uparams (state);[0m
      | [0;1;32m    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:165:21: [0m[0;1;36mnote: [0mTaint originated here[0m
  165 |   const char *var = getenv ("ARGP_HELP_FMT");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:165:21: [0m[0;1;36mnote: [0mTaint propagated to the return value[0m
  165 |   const char *var = getenv ("ARGP_HELP_FMT");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:165:21: [0m[0;1;36mnote: [0mAssuming the environment variable exists[0m
  165 |   const char *var = getenv ("ARGP_HELP_FMT");[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:170:7: [0m[0;1;36mnote: [0m'var' is non-null[0m
  170 |   if (var)[0m
      | [0;1;32m      ^~~
[0m[1margp-help.c:170:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  170 |   if (var)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:173:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  173 |       while (*var)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:175:11: [0m[0;1;36mnote: [0mAccess of the region with a tainted index that may be too large[0m
  175 |           SKIPWS (var);[0m
      | [0;1;32m          ^
[0m[1margp-help.c:168:31: [0m[0;1;36mnote: [0mexpanded from macro 'SKIPWS'[0m
  168 | #define SKIPWS(p) do { while (isspace ((unsigned char) *p)) p++; } while (0);[0m
      | [0;1;32m                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:197:21: [0m[0;1;36mnote: [0mexpanded from macro 'isspace'[0m
  197 | # define isspace(c)     __isctype((c), _ISspace)[0m
      | [0;1;32m                        ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1m/usr/include/ctype.h:89:4: [0m[0;1;36mnote: [0mexpanded from macro '__isctype'[0m
   89 |   ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)[0m
      | [0;1;32m   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:184:83: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  184 |               while (isalnum ((unsigned char) *arg) || *arg == '-' || *arg == '_')[0m
      | [0;1;32m                                                                                  ^
[0m      | [0;32m                                                                                   {
[0m  185 |                 arg++;[0m
      | [0;1;32m                      
[0m[1margp-help.c:190:47: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  190 |               if (*arg == '\0' || *arg == ',')[0m
      | [0;1;32m                                              ^
[0m      | [0;32m                                               {
[0m  191 |                 unspec = 1;[0m
  192 |               else if (*arg == '=')[0m
      | [0;32m              } 
[0m[1margp-help.c:206:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  206 |                   else[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m  207 |                     val = 1;[0m
      | [0;1;32m                            
[0m[1margp-help.c:212:57: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  212 |                   while (isdigit ((unsigned char) *arg))[0m
      | [0;1;32m                                                        ^
[0m      | [0;32m                                                         {
[0m  213 |                     arg++;[0m
      | [0;1;32m                          
[0m[1margp-help.c:219:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  219 |                    un++)[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  220 |                 if (strlen (un->name) == var_len[0m
  221 |                     && strncmp (var, un->name, var_len) == 0)[0m
  222 |                   {[0m
  223 |                     if (unspec && !un->is_bool)[0m
  224 |                       __argp_failure (state, 0, 0,[0m
  225 |                                       dgettext (state == NULL ? NULL[0m
  226 |                                                 : state->root_argp->argp_domain,[0m
  227 |                                                 "\[0m
  228 | %.*s: ARGP_HELP_FMT parameter requires a value"),[0m
  229 |                                       (int) var_len, var);[0m
  230 |                     else[0m
  231 |                       *(int *)((char *)&new_params + un->uparams_offs) = val;[0m
  232 |                     break;[0m
  233 |                   }[0m
      | [0;1;32m                   
[0m[1margp-help.c:223:48: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  223 |                     if (unspec && !un->is_bool)[0m
      | [0;1;32m                                               ^
[0m      | [0;32m                                                {
[0m  224 |                       __argp_failure (state, 0, 0,[0m
  225 |                                       dgettext (state == NULL ? NULL[0m
  226 |                                                 : state->root_argp->argp_domain,[0m
  227 |                                                 "\[0m
  228 | %.*s: ARGP_HELP_FMT parameter requires a value"),[0m
  229 |                                       (int) var_len, var);[0m
  230 |                     else[0m
      | [0;32m                    } 
[0m[1margp-help.c:230:25: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  230 |                     else[0m
      | [0;1;32m                        ^
[0m      | [0;32m                         {
[0m  231 |                       *(int *)((char *)&new_params + un->uparams_offs) = val;[0m
      | [0;1;32m                                                                             
[0m[1margp-help.c:234:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  234 |               if (un == uparam_names + nuparam_names)[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  235 |                 __argp_failure (state, 0, 0,[0m
  236 |                                 dgettext (state == NULL ? NULL[0m
  237 |                                           : state->root_argp->argp_domain, "\[0m
  238 | %.*s: Unknown ARGP_HELP_FMT parameter"),[0m
  239 |                                 (int) var_len, var);[0m
      | [0;1;32m                                                    
[0m[1margp-help.c:242:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  242 |               if (*var == ',')[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m  243 |                 var++;[0m
      | [0;1;32m                      
[0m[1margp-help.c:347:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  347 |   while (beg < end)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  348 |     if (*beg == ch)[0m
  349 |       return 1;[0m
  350 |     else[0m
  351 |       beg++;[0m
      | [0;1;32m            
[0m[1margp-help.c:348:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  348 |     if (*beg == ch)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  349 |       return 1;[0m
  350 |     else[0m
      | [0;32m    } 
[0m[1margp-help.c:350:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  350 |     else[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  351 |       beg++;[0m
      | [0;1;32m            
[0m[1margp-help.c:464:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  464 |           if (! oalias (o))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  465 |             hol->num_entries++;[0m
      | [0;1;32m                               
[0m[1margp-help.c:466:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  466 |           if (oshort (o))[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m  467 |             num_short_options++;        /* This is an upper bound.  */[0m
      | [0;1;32m                                                                      
[0m[1margp-help.c:470:22: [0m[0;1;35mwarning: [0m[1mCall to 'malloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI][0m
  470 |       hol->entries = malloc (sizeof (struct hol_entry) * hol->num_entries);[0m
      | [0;1;32m                     ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1693:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1693 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1693 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1701:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1701:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1703 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1032:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1032 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:449:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  449 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:449:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  449 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:451:3: [0m[0;1;36mnote: [0mThe value 0 is assigned to field 'num_entries'[0m
  451 |   hol->num_entries = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:454:7: [0m[0;1;36mnote: [0mAssuming 'opts' is non-null[0m
  454 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:454:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  454 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:459:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  459 |       assert (! oalias (opts));[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:459:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  459 |       assert (! oalias (opts));[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:462:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 470[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:470:22: [0m[0;1;36mnote: [0mCall to 'malloc' has an allocation size of 0 bytes[0m
  470 |       hol->entries = malloc (sizeof (struct hol_entry) * hol->num_entries);[0m
      | [0;1;32m                     ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:474:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  474 |       if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m  475 |         assert (hol->num_entries <= SIZE_MAX / sizeof (struct hol_entry));[0m
      | [0;1;32m                                                                          
[0m[1margp-help.c:481:18: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  481 |           entry->opt = o;[0m
      | [0;1;32m                 ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1693:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1693 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1693 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1701:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1701:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1703 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1033:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1033 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1033:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1033 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1034:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1034 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1037:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1037:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1043:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1043 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1033:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1033 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1033:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1033 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1034:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1034 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1037:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1037:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1043:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1043 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1032:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1032 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:449:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  449 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:449:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  449 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:454:7: [0m[0;1;36mnote: [0mAssuming 'opts' is non-null[0m
  454 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:454:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  454 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:459:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  459 |       assert (! oalias (opts));[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:459:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  459 |       assert (! oalias (opts));[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:462:22: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:462:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:464:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  464 |           if (! oalias (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:466:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  466 |           if (oshort (o))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:466:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  466 |           if (oshort (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:462:22: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:462:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 470[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:473:15: [0m[0;1;36mnote: [0mAssuming field 'entries' is non-null[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:473:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1margp-help.c:473:31: [0m[0;1;36mnote: [0mAssuming field 'short_options' is non-null[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m                              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:473:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:474:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  474 |       if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:479:44: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:479:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:485:13: [0m[0;1;36mnote: [0mAssuming field 'group' is not equal to 0[0m
  485 |             o->group[0m
      | [0;1;32m            ^~~~~~~~
[0m[1margp-help.c:485:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1margp-help.c:496:19: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:496:30: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                             ^
[0m[1margp-help.c:501:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  501 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1margp-help.c:501:29: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  501 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                            ^
[0m[1margp-help.c:493:11: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  493 |           do[0m
      | [0;1;32m          ^
[0m[1margp-help.c:479:44: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:479:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:481:18: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'struct hol_entry' element[0m
  481 |           entry->opt = o;[0m
      | [0;1;32m          ~~~~~~~^~~
[0m[1margp-help.c:496:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m  497 |                 /* O has a valid short option which hasn't already been used.*/[0m
  498 |                 *so++ = o->key;[0m
      | [0;1;32m                               
[0m[1margp-help.c:498:17: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  498 |                 *so++ = o->key;[0m
      | [0;1;32m                ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1693:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1693 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1693 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1701:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1701:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1703 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1033:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1033 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1033:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1033 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1034:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1034 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1037:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1037:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1043:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1043 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1033:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1033 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1033:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1033 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1034:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1034 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1037:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1037:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1043:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1043 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1032:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1032 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:449:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  449 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:449:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  449 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:454:7: [0m[0;1;36mnote: [0mAssuming 'opts' is non-null[0m
  454 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:454:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  454 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:459:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  459 |       assert (! oalias (opts));[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:459:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  459 |       assert (! oalias (opts));[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:462:22: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:462:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:464:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  464 |           if (! oalias (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:466:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  466 |           if (oshort (o))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:466:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  466 |           if (oshort (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:462:22: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:462:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 470[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:473:15: [0m[0;1;36mnote: [0mAssuming field 'entries' is non-null[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:473:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1margp-help.c:473:31: [0m[0;1;36mnote: [0mAssuming field 'short_options' is non-null[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m                              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:473:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:474:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  474 |       if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:479:44: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:479:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:485:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
  485 |             o->group[0m
      | [0;1;32m            ^~~~~~~~
[0m[1margp-help.c:485:13: [0m[0;1;36mnote: [0m'?' condition is false[0m
[1margp-help.c:487:17: [0m[0;1;36mnote: [0mAssuming field 'name' is non-null[0m
  487 |             : ((!o->name && !o->key)[0m
      | [0;1;32m                ^~~~~~~~
[0m[1margp-help.c:487:26: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  487 |             : ((!o->name && !o->key)[0m
      | [0;1;32m                         ^
[0m[1margp-help.c:496:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:496:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:496:33: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:496:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:501:18: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  501 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1margp-help.c:501:18: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
[1margp-help.c:493:11: [0m[0;1;36mnote: [0mLoop condition is true. Execution continues on line 495[0m
  493 |           do[0m
      | [0;1;32m          ^
[0m[1margp-help.c:496:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:496:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:496:33: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:496:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:498:17: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'char' element[0m
  498 |                 *so++ = o->key;[0m
      | [0;1;32m                ^~~~~
[0m[1margp-help.c:503:7: [0m[0;1;35mwarning: [0m[1mOut of bound access to memory after the end of the heap area [clang-analyzer-security.ArrayBound][0m
  503 |       *so = '\0';               /* null terminated so we can find the length */[0m
      | [0;1;32m      ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1693:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1693 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1693 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1701:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1701:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1703 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1033:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1033 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1033:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1033 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1034:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1034 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1037:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1037:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1043:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1043 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1033:7: [0m[0;1;36mnote: [0mAssuming 'child' is non-null[0m
 1033 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1033:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1033 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1034:5: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
 1034 |     while (child->argp)[0m
      | [0;1;32m    ^
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mAssuming field 'group' is 0[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m            ^~~~~~~~~~~~
[0m[1margp-help.c:1037:13: [0m[0;1;36mnote: [0mLeft side of '||' is false[0m
[1margp-help.c:1037:29: [0m[0;1;36mnote: [0mAssuming field 'header' is null[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m                            ^~~~~~~~~~~~~
[0m[1margp-help.c:1037:12: [0m[0;1;36mnote: [0m'?' condition is false[0m
 1037 |           ((child->group || child->header)[0m
      | [0;1;32m           ^
[0m[1margp-help.c:1043:26: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1043 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
      | [0;1;32m                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1032:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1032 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:449:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  449 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:449:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  449 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:454:7: [0m[0;1;36mnote: [0mAssuming 'opts' is non-null[0m
  454 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:454:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  454 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:459:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  459 |       assert (! oalias (opts));[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:459:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  459 |       assert (! oalias (opts));[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:462:22: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:462:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:464:11: [0m[0;1;36mnote: [0mTaking true branch[0m
  464 |           if (! oalias (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:466:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  466 |           if (oshort (o))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:466:11: [0m[0;1;36mnote: [0mTaking false branch[0m
  466 |           if (oshort (o))[0m
      | [0;1;32m          ^
[0m[1margp-help.c:462:22: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m                     ^~~~~~~~~~
[0m[1margp-help.c:462:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 470[0m
  462 |       for (o = opts; ! oend (o); o++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:473:15: [0m[0;1;36mnote: [0mAssuming field 'entries' is non-null[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:473:15: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m              ^
[0m[1margp-help.c:473:31: [0m[0;1;36mnote: [0mAssuming field 'short_options' is non-null[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m                              ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:473:7: [0m[0;1;36mnote: [0mTaking true branch[0m
  473 |       assert (hol->entries && hol->short_options);[0m
      | [0;1;32m      ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:474:7: [0m[0;1;36mnote: [0mTaking false branch[0m
  474 |       if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:479:44: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:479:7: [0m[0;1;36mnote: [0mLoop condition is true.  Entering loop body[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:485:13: [0m[0;1;36mnote: [0mAssuming field 'group' is not equal to 0[0m
  485 |             o->group[0m
      | [0;1;32m            ^~~~~~~~
[0m[1margp-help.c:485:13: [0m[0;1;36mnote: [0m'?' condition is true[0m
[1margp-help.c:496:19: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:496:19: [0m[0;1;36mnote: [0mLeft side of '&&' is true[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:277:21: [0m[0;1;36mnote: [0mexpanded from macro 'oshort'[0m
  277 | #define oshort(opt) __option_is_short (opt)[0m
      | [0;1;32m                    ^
[0m[1m./argp-namefrob.h:30:27: [0m[0;1;36mnote: [0mexpanded from macro '__option_is_short'[0m
   30 | #define __option_is_short _option_is_short[0m
      | [0;1;32m                          ^
[0m[1margp-help.c:496:33: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:496:15: [0m[0;1;36mnote: [0mTaking true branch[0m
  496 |               if (oshort (o) && ! find_char (o->key, hol->short_options, so))[0m
      | [0;1;32m              ^
[0m[1margp-help.c:501:18: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  501 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                 ^~~~~~~~~~
[0m[1margp-help.c:501:29: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
  501 |           while (! oend (o) && oalias (o));[0m
      | [0;1;32m                            ^
[0m[1margp-help.c:493:11: [0m[0;1;36mnote: [0mLoop condition is false.  Exiting loop[0m
  493 |           do[0m
      | [0;1;32m          ^
[0m[1margp-help.c:479:44: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m                                           ^~~~~~~~~~
[0m[1margp-help.c:479:7: [0m[0;1;36mnote: [0mLoop condition is false. Execution continues on line 503[0m
  479 |       for (o = opts, entry = hol->entries; ! oend (o); entry++)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:503:7: [0m[0;1;36mnote: [0mAccess of the heap area at index 1, while it holds only a single 'char' element[0m
  503 |       *so = '\0';               /* null terminated so we can find the length */[0m
      | [0;1;32m      ^~~
[0m[1margp-help.c:570:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  570 |   for (opt = real, nopts = entry->num; nopts > 0 && !val; opt++, nopts--)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  571 |     if (oshort (opt) && *so == opt->key)[0m
  572 |       {[0m
  573 |         if (!oalias (opt))[0m
  574 |           real = opt;[0m
  575 |         if (ovisible (opt))[0m
  576 |           val = (*func)(opt, real, domain, cookie);[0m
  577 |         so++;[0m
  578 |       }[0m
      | [0;1;32m       
[0m[1margp-help.c:573:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  573 |         if (!oalias (opt))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  574 |           real = opt;[0m
      | [0;1;32m                     
[0m[1margp-help.c:575:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  575 |         if (ovisible (opt))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  576 |           val = (*func)(opt, real, domain, cookie);[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:600:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  600 |   for (opt = real, nopts = entry->num; nopts > 0 && !val; opt++, nopts--)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  601 |     if (opt->name)[0m
  602 |       {[0m
  603 |         if (!oalias (opt))[0m
  604 |           real = opt;[0m
  605 |         if (ovisible (opt))[0m
  606 |           val = (*func)(opt, real, domain, cookie);[0m
  607 |       }[0m
      | [0;1;32m       
[0m[1margp-help.c:603:27: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  603 |         if (!oalias (opt))[0m
      | [0;1;32m                          ^
[0m      | [0;32m                           {
[0m  604 |           real = opt;[0m
      | [0;1;32m                     
[0m[1margp-help.c:605:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  605 |         if (ovisible (opt))[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m  606 |           val = (*func)(opt, real, domain, cookie);[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:634:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  634 |   for (opt = entry->opt, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  635 |     if (opt->name && ovisible (opt))[0m
  636 |       return opt->name;[0m
      | [0;1;32m                       
[0m[1margp-help.c:635:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  635 |     if (opt->name && ovisible (opt))[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m  636 |       return opt->name;[0m
      | [0;1;32m                       
[0m[1margp-help.c:645:3: [0m[0;1;35mwarning: [0m[1mAssigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign][0m
  645 |   struct hol_entry *entry = hol->entries;[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1693:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1693 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1693 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1701:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1701:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:13: [0m[0;1;36mnote: [0mCalling 'argp_hol'[0m
 1703 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1032:21: [0m[0;1;36mnote: [0mCalling 'make_hol'[0m
 1032 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:447:21: [0m[0;1;36mnote: [0mUninitialized value stored to field 'entries'[0m
  447 |   struct hol *hol = malloc (sizeof (struct hol));[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:449:11: [0m[0;1;36mnote: [0mAssuming 'hol' is non-null[0m
  449 |   assert (hol);[0m
      | [0;1;32m          ^
[0m[1m/usr/include/assert.h:109:11: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m          ^~~~
[0m[1margp-help.c:449:3: [0m[0;1;36mnote: [0mTaking true branch[0m
  449 |   assert (hol);[0m
      | [0;1;32m  ^
[0m[1m/usr/include/assert.h:109:7: [0m[0;1;36mnote: [0mexpanded from macro 'assert'[0m
  109 |       if (expr)                                                         \[0m
      | [0;1;32m      ^
[0m[1margp-help.c:454:7: [0m[0;1;36mnote: [0mAssuming 'opts' is null[0m
  454 |   if (opts)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:454:3: [0m[0;1;36mnote: [0mTaking false branch[0m
  454 |   if (opts)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1032:21: [0m[0;1;36mnote: [0mReturning from 'make_hol'[0m
 1032 |   struct hol *hol = make_hol (argp, cluster);[0m
      | [0;1;32m                    ^~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1033:7: [0m[0;1;36mnote: [0mAssuming 'child' is null[0m
 1033 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1033:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1033 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1703:13: [0m[0;1;36mnote: [0mReturning from 'argp_hol'[0m
 1703 |       hol = argp_hol (argp, 0);[0m
      | [0;1;32m            ^~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1706:7: [0m[0;1;36mnote: [0mCalling 'hol_set_group'[0m
 1706 |       hol_set_group (hol, "help", -1);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:670:29: [0m[0;1;36mnote: [0mCalling 'hol_find_entry'[0m
  670 |   struct hol_entry *entry = hol_find_entry (hol, name);[0m
      | [0;1;32m                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:645:3: [0m[0;1;36mnote: [0mAssigned value is garbage or undefined[0m
  645 |   struct hol_entry *entry = hol->entries;[0m
      | [0;1;32m  ^                         ~~~~~~~~~~~~
[0m[1margp-help.c:653:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  653 |       while (num_opts-- > 0)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m  654 |         if (opt->name && ovisible (opt) && strcmp (opt->name, name) == 0)[0m
  655 |           return entry;[0m
  656 |         else[0m
  657 |           opt++;[0m
      | [0;1;32m                
[0m[1margp-help.c:654:74: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  654 |         if (opt->name && ovisible (opt) && strcmp (opt->name, name) == 0)[0m
      | [0;1;32m                                                                         ^
[0m      | [0;32m                                                                          {
[0m  655 |           return entry;[0m
  656 |         else[0m
      | [0;32m        } 
[0m[1margp-help.c:656:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  656 |         else[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  657 |           opt++;[0m
      | [0;1;32m                
[0m[1margp-help.c:671:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  671 |   if (entry)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m  672 |     entry->group = group;[0m
      | [0;1;32m                         
[0m[1margp-help.c:682:66: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  682 |   if ((group1 < 0 && group2 < 0) || (group1 >= 0 && group2 >= 0))[0m
      | [0;1;32m                                                                 ^
[0m      | [0;32m                                                                  {
[0m  683 |     return group1 - group2;[0m
  684 |   else[0m
      | [0;32m  } 
[0m[1margp-help.c:684:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  684 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  685 |     /* Return > 0 if group1 < 0 <= group2.[0m
  686 |        Return < 0 if group2 < 0 <= group1.  */[0m
  687 |     return group2 - group1;[0m
      | [0;1;32m                           
[0m[1margp-help.c:698:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  698 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  699 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:711:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  711 |   if (cl1->parent == cl2->parent)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m  712 |     return hol_sibling_cluster_cmp (cl1, cl2);[0m
  713 |   else[0m
      | [0;32m  } 
[0m[1margp-help.c:717:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  717 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  718 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:722:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  722 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  723 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:740:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  740 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  741 |         cl1 = cl1->parent;[0m
  742 |       while (cl1->depth > cl2->depth);[0m
      | [0;32m      } 
[0m[1margp-help.c:744:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  744 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  745 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:751:9: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  751 |       do[0m
      | [0;1;32m        ^
[0m      | [0;32m         {
[0m  752 |         cl2 = cl2->parent;[0m
  753 |       while (cl1->depth < cl2->depth);[0m
      | [0;32m      } 
[0m[1margp-help.c:755:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  755 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  756 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:760:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  760 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m  761 |     return hol_cousin_cluster_cmp (cl1, cl2);[0m
      | [0;1;32m                                             
[0m[1margp-help.c:769:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  769 |   while (cl->parent)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m  770 |     cl = cl->parent;[0m
      | [0;1;32m                    
[0m[1margp-help.c:782:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  782 |   while (isspace ((unsigned char) **name))[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m  783 |     (*name)++;[0m
      | [0;1;32m              
[0m[1margp-help.c:787:54: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  787 |   while (**name && !isalnum ((unsigned char) **name))[0m
      | [0;1;32m                                                     ^
[0m      | [0;32m                                                      {
[0m  788 |     (*name)++;[0m
      | [0;1;32m              
[0m[1margp-help.c:817:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  817 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  818 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:824:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  824 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  825 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:831:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  831 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  832 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:838:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  838 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  839 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:852:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  852 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  853 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:869:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  869 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  870 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:874:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  874 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  875 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:881:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  881 |   if (cmp != 0)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m  882 |     return cmp;[0m
      | [0;1;32m               
[0m[1margp-help.c:888:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  888 |       if (cmp != 0)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m  889 |         return cmp;[0m
      | [0;1;32m                   
[0m[1margp-help.c:894:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  894 |           if (cmp != 0)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m  895 |             return cmp;[0m
      | [0;1;32m                       
[0m[1margp-help.c:921:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  921 |       for (i = 0, e = hol->entries; i < hol->num_entries; i++, e++)[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m  922 |         e->ord = i;[0m
      | [0;1;32m                   
[0m[1margp-help.c:940:18: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  940 |   while (*cl_end)[0m
      | [0;1;32m                 ^
[0m      | [0;32m                  {
[0m  941 |     cl_end = &(*cl_end)->next;[0m
      | [0;1;32m                              
[0m[1margp-help.c:970:36: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  970 |           if (SIZE_MAX <= UINT_MAX)[0m
      | [0;1;32m                                   ^
[0m      | [0;32m                                    {
[0m  971 |             assert (num_entries <= SIZE_MAX / sizeof (struct hol_entry));[0m
      | [0;1;32m                                                                         
[0m[1margp-help.c:981:76: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
  981 |           for (e = entries, left = hol->num_entries; left > 0; e++, left--)[0m
      | [0;1;32m                                                                           ^
[0m      | [0;32m                                                                            {
[0m  982 |             e->short_options[0m
  983 |               = short_options + (e->short_options - hol->short_options);[0m
      | [0;1;32m                                                                        
[0m[1margp-help.c:1003:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1003 |                                        short_options + hol_so_len))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 1004 |                         /* The short option CH isn't shadowed by HOL's options,[0m
 1005 |                            so add it to the sum.  */[0m
 1006 |                         *so++ = ch;[0m
      | [0;1;32m                                   
[0m[1margp-help.c:1033:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1033 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1034 |     while (child->argp)[0m
 1035 |       {[0m
 1036 |         struct hol_cluster *child_cluster =[0m
 1037 |           ((child->group || child->header)[0m
 1038 |            /* Put CHILD->argp within its own cluster.  */[0m
 1039 |            ? hol_add_cluster (hol, child->group, child->header,[0m
 1040 |                               child - argp->children, cluster, argp)[0m
 1041 |            /* Just merge it into the parent's cluster.  */[0m
 1042 |            : cluster);[0m
 1043 |         hol_append (hol, argp_hol (child->argp, child_cluster)) ;[0m
 1044 |         child++;[0m
 1045 |       }[0m
      | [0;1;32m       
[0m[1margp-help.c:1057:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1057 |   while (needed-- > 0)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1058 |     __argp_fmtstream_putc (stream, ' ');[0m
      | [0;1;32m                                        
[0m[1margp-help.c:1067:44: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1067 |       >= __argp_fmtstream_rmargin (stream))[0m
      | [0;1;32m                                           ^
[0m      | [0;32m                                            {
[0m 1068 |     __argp_fmtstream_putc (stream, '\n');[0m
 1069 |   else[0m
      | [0;32m  } 
[0m[1margp-help.c:1069:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1069 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1070 |     __argp_fmtstream_putc (stream, ' ');[0m
      | [0;1;32m                                        
[0m[1margp-help.c:1082:45: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1082 |       if (real->flags & OPTION_ARG_OPTIONAL)[0m
      | [0;1;32m                                            ^
[0m      | [0;32m                                             {
[0m 1083 |         __argp_fmtstream_printf (stream, opt_fmt,[0m
 1084 |                                  dgettext (domain, real->arg));[0m
 1085 |       else[0m
      | [0;32m      } 
[0m[1margp-help.c:1085:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1085 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1086 |         __argp_fmtstream_printf (stream, req_fmt,[0m
 1087 |                                  dgettext (domain, real->arg));[0m
      | [0;1;32m                                                               
[0m[1margp-help.c:1135:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1135 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1136 |     /* No filter.  */[0m
 1137 |     return doc;[0m
      | [0;1;32m               
[0m[1margp-help.c:1156:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1156 |           if (pest->hhstate->prev_entry)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1157 |             /* Precede with a blank line.  */[0m
 1158 |             __argp_fmtstream_putc (pest->stream, '\n');[0m
      | [0;1;32m                                                       
[0m[1margp-help.c:1170:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1170 |   if (fstr != tstr)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1171 |     free ((char *) fstr);[0m
      | [0;1;32m                         
[0m[1margp-help.c:1179:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1179 |   while (cl1 && cl1 != cl2)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1180 |     cl1 = cl1->parent;[0m
      | [0;1;32m                      
[0m[1margp-help.c:1196:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1196 |       if (pest->hhstate->sep_groups && pe && pest->entry->group != pe->group)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1197 |         __argp_fmtstream_putc (pest->stream, '\n');[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:1215:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1215 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1216 |     __argp_fmtstream_puts (pest->stream, ", ");[0m
      | [0;1;32m                                               
[0m[1margp-help.c:1237:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1237 |   if (! odoc (real))[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1238 |     for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
 1239 |       if (opt->name && ovisible (opt))[0m
 1240 |         {[0m
 1241 |           have_long_opt = 1;[0m
 1242 |           break;[0m
 1243 |         }[0m
      | [0;1;32m         
[0m[1margp-help.c:1238:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1238 |     for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1239 |       if (opt->name && ovisible (opt))[0m
 1240 |         {[0m
 1241 |           have_long_opt = 1;[0m
 1242 |           break;[0m
 1243 |         }[0m
      | [0;1;32m         
[0m[1margp-help.c:1247:60: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1247 |   for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                           ^
[0m      | [0;32m                                                            {
[0m[1margp-help.c:1256:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1256 |             if (!have_long_opt || uparams.dup_args)[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1257 |               arg (real, " %s", "[%s]",[0m
 1258 |                    state == NULL ? NULL : state->root_argp->argp_domain,[0m
 1259 |                    stream);[0m
 1260 |             else if (real->arg)[0m
      | [0;32m            } 
[0m[1margp-help.c:1260:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1260 |             else if (real->arg)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1261 |               hhstate->suppressed_dup_arg = 1;[0m
      | [0;1;32m                                              
[0m[1margp-help.c:1271:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1271 |       for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1272 |         if (opt->name && ovisible (opt))[0m
 1273 |           {[0m
 1274 |             comma (uparams.doc_opt_col, &pest);[0m
 1275 |             /* Calling dgettext here isn't quite right, since sorting will[0m
 1276 |                have been done on the original; but documentation options[0m
 1277 |                should be pretty rare anyway...  */[0m
 1278 |             __argp_fmtstream_puts (stream,[0m
 1279 |                                    dgettext (state == NULL ? NULL[0m
 1280 |                                              : state->root_argp->argp_domain,[0m
 1281 |                                              opt->name));[0m
 1282 |           }[0m
      | [0;1;32m           
[0m[1margp-help.c:1288:64: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1288 |       for (opt = real, num = entry->num; num > 0; opt++, num--)[0m
      | [0;1;32m                                                               ^
[0m      | [0;32m                                                                {
[0m 1289 |         if (opt->name && ovisible (opt))[0m
 1290 |           {[0m
 1291 |             comma (uparams.long_opt_col, &pest);[0m
 1292 |             __argp_fmtstream_printf (stream, "--%s", opt->name);[0m
 1293 |             arg (real, "=%s", "[=%s]",[0m
 1294 |                  state == NULL ? NULL : state->root_argp->argp_domain, stream);[0m
 1295 |           }[0m
      | [0;1;32m           
[0m[1margp-help.c:1304:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1304 |       if (!oshort (real) && !real->name)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1305 |         /* This is a group header, print it nicely.  */[0m
 1306 |         print_header (real->doc, entry->argp, &pest);[0m
 1307 |       else[0m
      | [0;32m      } 
[0m[1margp-help.c:1307:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1307 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1308 |         /* Just a totally shadowed option or null header; print nothing.  */[0m
 1309 |         goto cleanup;           /* Just return, after cleaning up.  */[0m
      | [0;1;32m                                                                      
[0m[1margp-help.c:1324:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1324 |           if (col > (unsigned int) (uparams.opt_doc_col + 3))[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1325 |             __argp_fmtstream_putc (stream, '\n');[0m
 1326 |           else if (col >= (unsigned int) uparams.opt_doc_col)[0m
      | [0;32m          } 
[0m[1margp-help.c:1326:62: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1326 |           else if (col >= (unsigned int) uparams.opt_doc_col)[0m
      | [0;1;32m                                                             ^
[0m      | [0;32m                                                              {
[0m 1327 |             __argp_fmtstream_puts (stream, "   ");[0m
 1328 |           else[0m
      | [0;32m          } 
[0m[1margp-help.c:1328:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1328 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1329 |             indent_to (stream, uparams.opt_doc_col);[0m
      | [0;1;32m                                                    
[0m[1margp-help.c:1333:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1333 |       if (fstr && fstr != tstr)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1334 |         free ((char *) fstr);[0m
      | [0;1;32m                             
[0m[1margp-help.c:1357:78: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1357 |   for (entry = hol->entries, num = hol->num_entries; num > 0; entry++, num--)[0m
      | [0;1;32m                                                                             ^
[0m      | [0;32m                                                                              {
[0m 1358 |     hol_entry_help (entry, state, stream, &hhstate);[0m
      | [0;1;32m                                                    
[0m[1margp-help.c:1374:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1374 |       if (fstr && fstr != tstr)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1375 |         free ((char *) fstr);[0m
      | [0;1;32m                             
[0m[1margp-help.c:1390:58: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1390 |       && !((opt->flags | real->flags) & OPTION_NO_USAGE))[0m
      | [0;1;32m                                                         ^
[0m      | [0;32m                                                          {
[0m 1391 |     *(*snao_end)++ = opt->key;[0m
      | [0;1;32m                              
[0m[1margp-help.c:1406:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1406 |   if (! arg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1407 |     arg = real->arg;[0m
      | [0;1;32m                    
[0m[1margp-help.c:1413:39: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1413 |       if (flags & OPTION_ARG_OPTIONAL)[0m
      | [0;1;32m                                      ^
[0m      | [0;32m                                       {
[0m 1414 |         __argp_fmtstream_printf (stream, " [-%c[%s]]", opt->key, arg);[0m
 1415 |       else[0m
      | [0;32m      } 
[0m[1margp-help.c:1438:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1438 |   if (! arg)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1439 |     arg = real->arg;[0m
      | [0;1;32m                    
[0m[1margp-help.c:1446:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1446 |           if (flags & OPTION_ARG_OPTIONAL)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1447 |             __argp_fmtstream_printf (stream, " [--%s[=%s]]", opt->name, arg);[0m
 1448 |           else[0m
      | [0;32m          } 
[0m[1margp-help.c:1448:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1448 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1449 |             __argp_fmtstream_printf (stream, " [--%s=%s]", opt->name, arg);[0m
      | [0;1;32m                                                                           
[0m[1margp-help.c:1451:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1451 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1452 |         __argp_fmtstream_printf (stream, " [--%s]", opt->name);[0m
      | [0;1;32m                                                               
[0m[1margp-help.c:1462:7: [0m[0;1;35mwarning: [0m[1mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol') [clang-analyzer-core.NullDereference][0m
 1462 |   if (hol->num_entries > 0)[0m
      | [0;1;32m      ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1679:3: [0m[0;1;36mnote: [0m'hol' initialized to a null pointer value[0m
 1679 |   struct hol *hol = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1693:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1693 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1693 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1701:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1701:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1712:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1712 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1712:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1712 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1727:15: [0m[0;1;36mnote: [0m'first_pattern' is 1[0m
 1727 |           if (first_pattern)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1margp-help.c:1727:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1727 |           if (first_pattern)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1740:15: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1740 |           if (flags & ARGP_HELP_SHORT_USAGE)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1740:11: [0m[0;1;36mnote: [0mTaking false branch[0m
 1740 |           if (flags & ARGP_HELP_SHORT_USAGE)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1750:26: [0m[0;1;36mnote: [0mPassing null pointer value via 1st parameter 'hol'[0m
 1750 |               hol_usage (hol, fs);[0m
      | [0;1;32m                         ^~~
[0m[1margp-help.c:1750:15: [0m[0;1;36mnote: [0mCalling 'hol_usage'[0m
 1750 |               hol_usage (hol, fs);[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1462:7: [0m[0;1;36mnote: [0mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol')[0m
 1462 |   if (hol->num_entries > 0)[0m
      | [0;1;32m      ^~~
[0m[1margp-help.c:1472:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1472 |            ; entry++, nentries--)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1473 |         hol_entry_short_iterate (entry, add_argless_short_opt,[0m
 1474 |                                  entry->argp->argp_domain, &snao_end);[0m
      | [0;1;32m                                                                      
[0m[1margp-help.c:1484:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1484 |            ; entry++, nentries--)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1485 |         hol_entry_short_iterate (entry, usage_argful_short_opt,[0m
 1486 |                                  entry->argp->argp_domain, stream);[0m
      | [0;1;32m                                                                   
[0m[1margp-help.c:1491:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1491 |            ; entry++, nentries--)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1492 |         hol_entry_long_iterate (entry, usage_long_opt,[0m
 1493 |                                 entry->argp->argp_domain, stream);[0m
      | [0;1;32m                                                                  
[0m[1margp-help.c:1505:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1505 |   if (argp->args_doc && strchr (argp->args_doc, '\n'))[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1506 |     levels++;[0m
      | [0;1;32m             
[0m[1margp-help.c:1508:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1508 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1509 |     while (child->argp)[0m
 1510 |       levels += argp_args_levels ((child++)->argp);[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:1509:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1509 |     while (child->argp)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1510 |       levels += argp_args_levels ((child++)->argp);[0m
      | [0;1;32m                                                   
[0m[1margp-help.c:1542:43: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1542 |           for (i = 0; i < *our_level; i++)[0m
      | [0;1;32m                                          ^
[0m      | [0;32m                                           {
[0m 1543 |             cp = nl + 1, nl = __strchrnul (cp, '\n');[0m
      | [0;1;32m                                                     
[0m[1margp-help.c:1553:28: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1553 |   if (fdoc && fdoc != tdoc)[0m
      | [0;1;32m                           ^
[0m      | [0;32m                            {
[0m 1554 |     free ((char *)fdoc);        /* Free user's modified doc string.  */[0m
      | [0;1;32m                                                                       
[0m[1margp-help.c:1556:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1556 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1557 |     while (child->argp)[0m
 1558 |       advance = !argp_args_usage ((child++)->argp, state, levels, advance, stream);[0m
      | [0;1;32m                                                                                   
[0m[1margp-help.c:1557:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1557 |     while (child->argp)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1558 |       advance = !argp_args_usage ((child++)->argp, state, levels, advance, stream);[0m
      | [0;1;32m                                                                                   
[0m[1margp-help.c:1569:31: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1569 |       else if (*our_level > 0)[0m
      | [0;1;32m                              ^
[0m      | [0;32m                               {
[0m 1570 |         /* We had multiple levels, but used them up; reset to zero.  */[0m
 1571 |         *our_level = 0;[0m
      | [0;1;32m                       
[0m[1margp-help.c:1603:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1603 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1604 |     inp_text = 0;[0m
      | [0;1;32m                 
[0m[1margp-help.c:1609:26: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1609 |       if (inp_text_limit)[0m
      | [0;1;32m                         ^
[0m      | [0;32m                          {
[0m 1610 |         /* Copy INP_TEXT so that it's nul-terminated.  */[0m
 1611 |         inp_text = __strndup (inp_text, inp_text_limit);[0m
      | [0;1;32m                                                        
[0m[1margp-help.c:1619:7: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1619 |   else[0m
      | [0;1;32m      ^
[0m      | [0;32m       {
[0m 1620 |     text = (const char *) inp_text;[0m
      | [0;1;32m                                   
[0m[1margp-help.c:1624:21: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1624 |       if (pre_blank)[0m
      | [0;1;32m                    ^
[0m      | [0;32m                     {
[0m 1625 |         __argp_fmtstream_putc (stream, '\n');[0m
      | [0;1;32m                                             
[0m[1margp-help.c:1627:46: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1627 |       if (text == inp_text && inp_text_limit)[0m
      | [0;1;32m                                             ^
[0m      | [0;32m                                              {
[0m 1628 |         __argp_fmtstream_write (stream, inp_text, inp_text_limit);[0m
 1629 |       else[0m
      | [0;32m      } 
[0m[1margp-help.c:1629:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1629 |       else[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1630 |         __argp_fmtstream_puts (stream, text);[0m
      | [0;1;32m                                             
[0m[1margp-help.c:1632:79: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1632 |       if (__argp_fmtstream_point (stream) > __argp_fmtstream_lmargin (stream))[0m
      | [0;1;32m                                                                              ^
[0m      | [0;32m                                                                               {
[0m 1633 |         __argp_fmtstream_putc (stream, '\n');[0m
      | [0;1;32m                                             
[0m[1margp-help.c:1638:32: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1638 |   if (text && text != inp_text)[0m
      | [0;1;32m                               ^
[0m      | [0;32m                                {
[0m 1639 |     free ((char *) text);       /* Free TEXT returned from the help filter.  */[0m
      | [0;1;32m                                                                               
[0m[1margp-help.c:1640:55: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1640 |   if (inp_text && inp_text_limit && argp->help_filter)[0m
      | [0;1;32m                                                      ^
[0m      | [0;32m                                                       {
[0m 1641 |     free ((char *) inp_text);   /* We copied INP_TEXT, so free it now.  */[0m
      | [0;1;32m                                                                          
[0m[1margp-help.c:1649:37: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1649 |           if (anything || pre_blank)[0m
      | [0;1;32m                                    ^
[0m      | [0;32m                                     {
[0m 1650 |             __argp_fmtstream_putc (stream, '\n');[0m
      | [0;1;32m                                                 
[0m[1margp-help.c:1654:51: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1654 |               > __argp_fmtstream_lmargin (stream))[0m
      | [0;1;32m                                                  ^
[0m      | [0;32m                                                   {
[0m 1655 |             __argp_fmtstream_putc (stream, '\n');[0m
      | [0;1;32m                                                 
[0m[1margp-help.c:1660:13: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1660 |   if (child)[0m
      | [0;1;32m            ^
[0m      | [0;32m             {
[0m 1661 |     while (child->argp && !(first_only && anything))[0m
 1662 |       anything |=[0m
 1663 |         argp_doc ((child++)->argp, state,[0m
 1664 |                   post, anything || pre_blank, first_only,[0m
 1665 |                   stream);[0m
      | [0;1;32m                          
[0m[1margp-help.c:1661:53: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1661 |     while (child->argp && !(first_only && anything))[0m
      | [0;1;32m                                                    ^
[0m      | [0;32m                                                     {
[0m 1662 |       anything |=[0m
 1663 |         argp_doc ((child++)->argp, state,[0m
 1664 |                   post, anything || pre_blank, first_only,[0m
 1665 |                   stream);[0m
      | [0;1;32m                          
[0m[1margp-help.c:1682:16: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1682 |   if (! stream)[0m
      | [0;1;32m               ^
[0m      | [0;32m                {
[0m 1683 |     return;[0m
      | [0;1;32m           
[0m[1margp-help.c:1689:23: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m                      ^
[0m      | [0;32m                       {
[0m 1690 |     fill_in_uparams (state);[0m
      | [0;1;32m                            
[0m[1margp-help.c:1717:30: [0m[0;1;35mwarning: [0m[1mCall to 'alloca' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI][0m
 1717 |       char *pattern_levels = alloca (num_pattern_levels);[0m
      | [0;1;32m                             ^
[0m[1m./alloca.h:47:18: [0m[0;1;36mnote: [0mexpanded from macro 'alloca'[0m
   47 | #  define alloca __builtin_alloca[0m
      | [0;1;32m                 ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1693:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1693 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1693 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1701:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1701:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1712:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1712 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1712:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1712 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1716:35: [0m[0;1;36mnote: [0mCalling 'argp_args_levels'[0m
 1716 |       size_t num_pattern_levels = argp_args_levels (argp);[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1502:3: [0m[0;1;36mnote: [0m'levels' initialized to 0[0m
 1502 |   size_t levels = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1margp-help.c:1505:7: [0m[0;1;36mnote: [0mAssuming field 'args_doc' is null[0m
 1505 |   if (argp->args_doc && strchr (argp->args_doc, '\n'))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~
[0m[1margp-help.c:1505:22: [0m[0;1;36mnote: [0mLeft side of '&&' is false[0m
 1505 |   if (argp->args_doc && strchr (argp->args_doc, '\n'))[0m
      | [0;1;32m                     ^
[0m[1margp-help.c:1508:7: [0m[0;1;36mnote: [0mAssuming 'child' is null[0m
 1508 |   if (child)[0m
      | [0;1;32m      ^~~~~
[0m[1margp-help.c:1508:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1508 |   if (child)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1512:3: [0m[0;1;36mnote: [0mReturning zero (loaded from 'levels')[0m
 1512 |   return levels;[0m
      | [0;1;32m  ^~~~~~~~~~~~~
[0m[1margp-help.c:1716:35: [0m[0;1;36mnote: [0mReturning from 'argp_args_levels'[0m
 1716 |       size_t num_pattern_levels = argp_args_levels (argp);[0m
      | [0;1;32m                                  ^~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1716:7: [0m[0;1;36mnote: [0m'num_pattern_levels' initialized to 0[0m
 1716 |       size_t num_pattern_levels = argp_args_levels (argp);[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1717:30: [0m[0;1;36mnote: [0mCall to 'alloca' has an allocation size of 0 bytes[0m
 1717 |       char *pattern_levels = alloca (num_pattern_levels);[0m
      | [0;1;32m                             ^       ~~~~~~~~~~~~~~~~~~
[0m[1m./alloca.h:47:18: [0m[0;1;36mnote: [0mexpanded from macro 'alloca'[0m
   47 | #  define alloca __builtin_alloca[0m
      | [0;1;32m                 ^
[0m[1margp-help.c:1719:7: [0m[0;1;35mwarning: [0m[1mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling][0m
 1719 |       memset (pattern_levels, 0, num_pattern_levels);[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-help.c:1719:7: [0m[0;1;36mnote: [0mCall to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11[0m
 1719 |       memset (pattern_levels, 0, num_pattern_levels);[0m
      | [0;1;32m      ^~~~~~
[0m[1margp-help.c:1727:29: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1727 |           if (first_pattern)[0m
      | [0;1;32m                            ^
[0m      | [0;32m                             {
[0m 1728 |             __argp_fmtstream_printf (fs, "%s %s",[0m
 1729 |                                      dgettext (argp->argp_domain, "Usage:"),[0m
 1730 |                                      name);[0m
 1731 |           else[0m
      | [0;32m          } 
[0m[1margp-help.c:1731:15: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1731 |           else[0m
      | [0;1;32m              ^
[0m      | [0;32m               {
[0m 1732 |             __argp_fmtstream_printf (fs, "%s %s",[0m
 1733 |                                      dgettext (argp->argp_domain, "  or: "),[0m
 1734 |                                      name);[0m
      | [0;1;32m                                           
[0m[1margp-help.c:1743:19: [0m[0;1;35mwarning: [0m[1mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol') [clang-analyzer-core.NullDereference][0m
 1743 |               if (hol->num_entries > 0)[0m
      | [0;1;32m                  ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1679:3: [0m[0;1;36mnote: [0m'hol' initialized to a null pointer value[0m
 1679 |   struct hol *hol = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1693:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1693 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1693 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1701:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1701:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1712:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1712 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1712:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1712 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1727:15: [0m[0;1;36mnote: [0m'first_pattern' is 1[0m
 1727 |           if (first_pattern)[0m
      | [0;1;32m              ^~~~~~~~~~~~~
[0m[1margp-help.c:1727:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1727 |           if (first_pattern)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1740:15: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1740 |           if (flags & ARGP_HELP_SHORT_USAGE)[0m
      | [0;1;32m              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1740:11: [0m[0;1;36mnote: [0mTaking true branch[0m
 1740 |           if (flags & ARGP_HELP_SHORT_USAGE)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1743:19: [0m[0;1;36mnote: [0mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol')[0m
 1743 |               if (hol->num_entries > 0)[0m
      | [0;1;32m                  ^~~
[0m[1margp-help.c:1743:40: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1743 |               if (hol->num_entries > 0)[0m
      | [0;1;32m                                       ^
[0m      | [0;32m                                        {
[0m 1744 |                 __argp_fmtstream_puts (fs, dgettext (argp->argp_domain,[0m
 1745 |                                                      " [OPTION...]"));[0m
      | [0;1;32m                                                                      
[0m[1margp-help.c:1767:33: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1767 |   if (flags & ARGP_HELP_PRE_DOC)[0m
      | [0;1;32m                                ^
[0m      | [0;32m                                 {
[0m 1768 |     anything |= argp_doc (argp, state, 0, 0, 1, fs);[0m
      | [0;1;32m                                                    
[0m[1margp-help.c:1782:11: [0m[0;1;35mwarning: [0m[1mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol') [clang-analyzer-core.NullDereference][0m
 1782 |       if (hol->num_entries > 0)[0m
      | [0;1;32m          ^
[0m[1margp-help.c:1820:3: [0m[0;1;36mnote: [0mCalling '_help'[0m
 1820 |   _help (argp, 0, stream, flags, name);[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1679:3: [0m[0;1;36mnote: [0m'hol' initialized to a null pointer value[0m
 1679 |   struct hol *hol = 0;[0m
      | [0;1;32m  ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1682:7: [0m[0;1;36mnote: [0mAssuming 'stream' is non-null[0m
 1682 |   if (! stream)[0m
      | [0;1;32m      ^~~~~~~~
[0m[1margp-help.c:1682:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1682 |   if (! stream)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1689:7: [0m[0;1;36mnote: [0mAssuming field 'valid' is not equal to 0[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~
[0m[1margp-help.c:1689:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1689 |   if (! uparams.valid)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1693:7: [0m[0;1;36mnote: [0mAssuming 'fs' is non-null[0m
 1693 |   if (! fs)[0m
      | [0;1;32m      ^~~~
[0m[1margp-help.c:1693:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1693 |   if (! fs)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1701:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1701:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1701 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1712:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1712 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1712:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1712 |   if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1767:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1767 |   if (flags & ARGP_HELP_PRE_DOC)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1767:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1767 |   if (flags & ARGP_HELP_PRE_DOC)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1770:7: [0m[0;1;36mnote: [0mAssuming the condition is false[0m
 1770 |   if (flags & ARGP_HELP_SEE)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1770:3: [0m[0;1;36mnote: [0mTaking false branch[0m
 1770 |   if (flags & ARGP_HELP_SEE)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1778:7: [0m[0;1;36mnote: [0mAssuming the condition is true[0m
 1778 |   if (flags & ARGP_HELP_LONG)[0m
      | [0;1;32m      ^~~~~~~~~~~~~~~~~~~~~~
[0m[1margp-help.c:1778:3: [0m[0;1;36mnote: [0mTaking true branch[0m
 1778 |   if (flags & ARGP_HELP_LONG)[0m
      | [0;1;32m  ^
[0m[1margp-help.c:1782:11: [0m[0;1;36mnote: [0mAccess to field 'num_entries' results in a dereference of a null pointer (loaded from variable 'hol')[0m
 1782 |       if (hol->num_entries > 0)[0m
      | [0;1;32m          ^~~
[0m[1margp-help.c:1784:24: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1784 |           if (anything)[0m
      | [0;1;32m                       ^
[0m      | [0;32m                        {
[0m 1785 |             __argp_fmtstream_putc (fs, '\n');[0m
      | [0;1;32m                                             
[0m[1margp-help.c:1791:34: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1791 |   if (flags & ARGP_HELP_POST_DOC)[0m
      | [0;1;32m                                 ^
[0m      | [0;32m                                  {
[0m 1792 |     /* Print any documentation strings at the end.  */[0m
 1793 |     anything |= argp_doc (argp, state, 1, anything, 0, fs);[0m
      | [0;1;32m                                                           
[0m[1margp-help.c:1797:20: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1797 |       if (anything)[0m
      | [0;1;32m                   ^
[0m      | [0;32m                    {
[0m 1798 |         __argp_fmtstream_putc (fs, '\n');[0m
      | [0;1;32m                                         
[0m[1margp-help.c:1802:7: [0m[0;1;35mwarning: [0m[1mValue stored to 'anything' is never read [clang-analyzer-deadcode.DeadStores][0m
 1802 |       anything = 1;[0m
      | [0;1;32m      ^          ~
[0m[1margp-help.c:1802:7: [0m[0;1;36mnote: [0mValue stored to 'anything' is never read[0m
 1802 |       anything = 1;[0m
      | [0;1;32m      ^          ~
[0m[1margp-help.c:1809:11: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1809 |   if (hol)[0m
      | [0;1;32m          ^
[0m      | [0;32m           {
[0m 1810 |     hol_free (hol);[0m
      | [0;1;32m                   
[0m[1margp-help.c:1852:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1852 |       if (state && (state->flags & ARGP_LONG_ONLY))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 1853 |         flags |= ARGP_HELP_LONG_ONLY;[0m
      | [0;1;32m                                     
[0m[1margp-help.c:1860:42: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1860 |           if (flags & ARGP_HELP_EXIT_ERR)[0m
      | [0;1;32m                                         ^
[0m      | [0;32m                                          {
[0m 1861 |             exit (argp_err_exit_status);[0m
      | [0;1;32m                                        
[0m[1margp-help.c:1862:41: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1862 |           if (flags & ARGP_HELP_EXIT_OK)[0m
      | [0;1;32m                                        ^
[0m      | [0;32m                                         {
[0m 1863 |             exit (0);[0m
      | [0;1;32m                     
[0m[1margp-help.c:1999:52: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 1999 |               if (! s && ! (s = strerror (errnum)))[0m
      | [0;1;32m                                                   ^
[0m      | [0;32m                                                    {
[0m 2000 |                 s = dgettext (state->root_argp->argp_domain,[0m
 2001 |                               "Unknown system error");[0m
      | [0;1;32m                                                      
[0m[1margp-help.c:2017:68: [0m[0;1;35mwarning: [0m[1mstatement should be inside braces [readability-braces-around-statements][0m
 2017 |           if (status && (!state || !(state->flags & ARGP_NO_EXIT)))[0m
      | [0;1;32m                                                                   ^
[0m      | [0;32m                                                                    {
[0m 2018 |             exit (status);[0m
      | [0;1;32m                          
[0m167 warnings generated.
Suppressed 24 warnings (24 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.



Process exited with return code 0
